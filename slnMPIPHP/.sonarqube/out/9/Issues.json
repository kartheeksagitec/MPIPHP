{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.13.0.0",
        "fileVersion": "4.13.0-3.25167.3 (73eff2b5)",
        "semanticVersion": "4.13.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS0108",
          "level": "warning",
          "message": "'clsPersonNonDeliverableAddressFoundException.iintPersonID' hides inherited member 'CommunicationException.iintPersonID'. Use the new keyword if hiding was intended.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/clsNonDeliverableAddressFound.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 20,
                  "endLine": 19,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS0108",
          "level": "warning",
          "message": "'clsOrgContactNonDeliverableAddressFoundException.iintOrgContactID' hides inherited member 'CommunicationException.iintOrgContactID'. Use the new keyword if hiding was intended.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/clsNonDeliverableAddressFound.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 20,
                  "endLine": 33,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/busEnumeration.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 17,
                  "endLine": 8,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/busEnumeration.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 17,
                  "endLine": 14,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/busEnumeration.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 17,
                  "endLine": 20,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/busEnumeration.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 17,
                  "endLine": 26,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/busEnumeration.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 17,
                  "endLine": 33,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'clsNonDeliverableAddressFoundException' to match pascal case naming rules, consider using 'ClsNonDeliverableAddressFoundException'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/clsNonDeliverableAddressFound.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 27,
                  "endLine": 9,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'clsPersonNonDeliverableAddressFoundException' to match pascal case naming rules, consider using 'ClsPersonNonDeliverableAddressFoundException'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/clsNonDeliverableAddressFound.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 18,
                  "endLine": 17,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/busEnumeration.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 17,
                  "endLine": 39,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'doActivityInstance' to match pascal case naming rules, consider using 'DoActivityInstance'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/doActivityInstance.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 18,
                  "endLine": 20,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'cdoActivityInstance' to match pascal case naming rules, consider using 'CdoActivityInstance'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 18,
                  "endLine": 18,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/busEnumeration.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 17,
                  "endLine": 45,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/busEnumeration.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 17,
                  "endLine": 51,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/doActivityInstance.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 34,
                  "endLine": 23,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/ActivityInstanceEventArgs.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 17,
                  "endLine": 18,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2223",
          "level": "warning",
          "message": "Change the visibility of 'ihstFields' or make it 'const' or 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/doActivityInstance.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 34,
                  "endLine": 23,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'clsAddressNotFoundException' to match pascal case naming rules, consider using 'ClsAddressNotFoundException'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/clsAddressNotFoundException.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 18,
                  "endLine": 8,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'clsCommunicationRecipientNotSetException' to match pascal case naming rules, consider using 'ClsCommunicationRecipientNotSetException'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/clsCommunicationRecipientNotSetException.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 18,
                  "endLine": 8,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?s$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/busEnumeration.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 17,
                  "endLine": 73,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern. Add a 'protected' constructor 'GenerateCommunicationException(SerializationInfo, StreamingContext)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/GenerateCommunicationException.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 18,
                  "endLine": 9,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/GenerateCommunicationException.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 12,
                  "endLine": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add a 'protected' constructor 'GenerateCommunicationException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'cdoActivityInstanceHistory' to match pascal case naming rules, consider using 'CdoActivityInstanceHistory'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/cdoActivityInstanceHistory.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 15,
                  "endLine": 15,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern. Add a 'protected' constructor 'InvalidCommunicationStatusException(SerializationInfo, StreamingContext)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/InvalidCommunicationStatusException.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 18,
                  "endLine": 9,
                  "endColumn": 53
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/InvalidCommunicationStatusException.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 12,
                  "endLine": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add a 'protected' constructor 'InvalidCommunicationStatusException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern. Add a 'protected' constructor 'InvalidCorTrackingIDException(SerializationInfo, StreamingContext)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/InvalidCorTrackingIDException.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 18,
                  "endLine": 9,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/InvalidCorTrackingIDException.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 12,
                  "endLine": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add a 'protected' constructor 'InvalidCorTrackingIDException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern. Add a 'protected' constructor 'SendCommunicationException(SerializationInfo, StreamingContext)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/SendCommunicationException.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 18,
                  "endLine": 9,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/SendCommunicationException.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 12,
                  "endLine": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add a 'protected' constructor 'SendCommunicationException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern. Add a 'protected' constructor 'CommunicationException(SerializationInfo, StreamingContext)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/CommunicationException.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 18,
                  "endLine": 9,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/CommunicationException.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 12,
                  "endLine": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add a 'protected' constructor 'CommunicationException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/CommunicationException.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 20,
                  "endLine": 32,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/CommunicationException.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 20,
                  "endLine": 26,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/CommunicationException.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 20,
                  "endLine": 37,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/CommunicationException.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 20,
                  "endLine": 55,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/CommunicationException.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 20,
                  "endLine": 43,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/busEnumeration.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 24,
                  "endLine": 121,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/busEnumeration.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 24,
                  "endLine": 122,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/busEnumeration.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 24,
                  "endLine": 123,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/busEnumeration.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 25,
                  "endLine": 124,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/busEnumeration.cs",
                "region": {
                  "startLine": 125,
                  "startColumn": 23,
                  "endLine": 125,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/CommunicationException.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 20,
                  "endLine": 49,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'MPIPHPException' to match pascal case naming rules, consider using 'MpiphpException'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/MPIPHPException.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 18,
                  "endLine": 10,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern. Add a 'protected' constructor 'MPIPHPException(SerializationInfo, StreamingContext)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/MPIPHPException.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 18,
                  "endLine": 10,
                  "endColumn": 33
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/MPIPHPException.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 12,
                  "endLine": 10,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add a 'protected' constructor 'MPIPHPException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/busEnumeration.cs",
                "region": {
                  "startLine": 129,
                  "startColumn": 17,
                  "endLine": 129,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2094",
          "level": "warning",
          "message": "Remove this empty class, write its code or make it an \"interface\".",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/BatchHelper.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 27,
                  "endLine": 8,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern. Make the serialization constructor 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/ApplicationSettings.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 18,
                  "endLine": 12,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/ApplicationSettings.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 16,
                  "endLine": 40,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Make the serialization constructor 'protected'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern. Make the serialization constructor 'protected'. Make 'GetObjectData' 'public' and 'virtual', or seal 'FileDownloadContainer'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/FileDownloadContainer.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 18,
                  "endLine": 11,
                  "endColumn": 39
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/FileDownloadContainer.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 16,
                  "endLine": 74,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/FileDownloadContainer.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 21,
                  "endLine": 82,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Make the serialization constructor 'protected'.",
              "1": "Make 'GetObjectData' 'public' and 'virtual', or seal 'FileDownloadContainer'."
            }
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/FileDownloadContainer.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S5766",
          "level": "warning",
          "message": "Make sure not performing data validation after deserialization is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/FileDownloadContainer.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 16,
                  "endLine": 44,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/doActivityInstance.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 17,
                  "endLine": 45,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'doActivityInstanceHistory' to match pascal case naming rules, consider using 'DoActivityInstanceHistory'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/doActivityInstanceHistory.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 18,
                  "endLine": 20,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/doActivityInstanceHistory.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 34,
                  "endLine": 23,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2223",
          "level": "warning",
          "message": "Change the visibility of 'ihstFields' or make it 'const' or 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/doActivityInstanceHistory.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 34,
                  "endLine": 23,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/WorkflowConstants.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 18,
                  "endLine": 8,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'IsDateBetween' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/BatchHelper.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 28,
                  "endLine": 83,
                  "endColumn": 41
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/BatchHelper.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 28,
                  "endLine": 94,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/doActivityInstanceHistory.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 17,
                  "endLine": 38,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'clsOrgContactNonDeliverableAddressFoundException' to match pascal case naming rules, consider using 'ClsOrgContactNonDeliverableAddressFoundException'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/clsNonDeliverableAddressFound.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 18,
                  "endLine": 31,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/Exceptions/Communication/clsNonDeliverableAddressFound.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 9,
                  "endLine": 11,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 17,
                  "endLine": 48,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 13,
                  "endLine": 46,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Merge this if statement with its nested one."
            }
          }
        },
        {
          "ruleId": "S1185",
          "level": "warning",
          "message": "Remove this method 'GetObjectData' to simply inherit its behavior.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/ApplicationSettings.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 9,
                  "endLine": 47,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6562",
          "level": "warning",
          "message": "Provide the \"DateTimeKind\" when creating this object.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/MPIBPM_DEV/slnMPIPHP/MPIPHPCommon/BatchHelper.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 18,
                  "endLine": 45,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CS0108": {
          "id": "CS0108",
          "shortDescription": "Member hides inherited member; missing new keyword",
          "fullDescription": "A variable was declared with the same name as a variable in a base type. However, the new keyword was not used. This warning informs you that you should use new; the variable is declared as if new had been used in the declaration.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0108)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S101": {
          "id": "S101",
          "shortDescription": "Types should be named in PascalCase",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-101",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1066": {
          "id": "S1066",
          "shortDescription": "Mergeable \"if\" statements should be combined",
          "fullDescription": "Nested code - blocks of code inside blocks of code - is eventually necessary, but increases complexity. This is why keeping the code as flat as possible, by avoiding unnecessary nesting, is considered a good practice.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1104": {
          "id": "S1104",
          "shortDescription": "Fields should not have public accessibility",
          "fullDescription": "Public fields in public classes do not respect the encapsulation principle and have three main disadvantages:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1104",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1118": {
          "id": "S1118",
          "shortDescription": "Utility classes should not have public constructors",
          "fullDescription": "Whenever there are portions of code that are duplicated and do not depend on the state of their container class, they can be centralized inside a \"utility class\". A utility class is a class that only has static members, hence it should not be instantiated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1118",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1185": {
          "id": "S1185",
          "shortDescription": "Overriding members should do more than simply call the same member in the base class",
          "fullDescription": "Overriding a method just to call the same method from the base class without performing any other actions is useless and misleading. The only time this is justified is in sealed overriding methods, where the effect is to lock in the parent class behavior. This rule ignores overrides of Equals and GetHashCode.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1185",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2094": {
          "id": "S2094",
          "shortDescription": "Classes should not be empty",
          "fullDescription": "There is no good excuse for an empty class. If it’s being used simply as a common extension point, it should be replaced with an interface. If it was stubbed in as a placeholder for future development it should be fleshed-out. In any other case, it should be eliminated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2094",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2223": {
          "id": "S2223",
          "shortDescription": "Non-constant static fields should not be visible",
          "fullDescription": "Unlike instance fields, which can only be accessed by code having a hold on the instance, static fields can be accessed by any code having visibility of the field and its type.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2223",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2292": {
          "id": "S2292",
          "shortDescription": "Trivial properties should be auto-implemented",
          "fullDescription": "Trivial properties, which include no logic but setting and getting a backing field should be converted to auto-implemented properties, yielding cleaner and more readable code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2292",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2342": {
          "id": "S2342",
          "shortDescription": "Enumeration types should comply with a naming convention",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently. This rule checks that all enum names match a provided regular expression.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2342",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3442": {
          "id": "S3442",
          "shortDescription": "\"abstract\" classes should not have \"public\" constructors",
          "fullDescription": "The abstract modifier in a class declaration is used to indicate that a class is intended only to be a base class of other classes, not instantiated on its own.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3442",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3925": {
          "id": "S3925",
          "shortDescription": "\"ISerializable\" should be implemented correctly",
          "fullDescription": "The ISerializable interface is the mechanism to control the type serialization process. If not implemented correctly this could result in an invalid serialization and hard-to-detect bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3925",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4136": {
          "id": "S4136",
          "shortDescription": "Method overloads should be grouped together",
          "fullDescription": "For clarity, all overloads of the same method should be grouped together. That lets both users and maintainers quickly understand all the current available options.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4136",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S5766": {
          "id": "S5766",
          "shortDescription": "Deserializing objects without performing data validation is security-sensitive",
          "fullDescription": "Deserialization process extracts data from the serialized representation of an object and reconstruct it directly, without calling constructors. Thus, data validation implemented in constructors can be bypassed if serialized objects are controlled by an attacker.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-5766",
          "properties": {
            "category": "Major Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6562": {
          "id": "S6562",
          "shortDescription": "Always set the \"DateTimeKind\" when creating new \"DateTime\" instances",
          "fullDescription": "Not knowing the Kind of the DateTime object that an application is using can lead to misunderstandings when displaying or comparing them. Explicitly setting the Kind property helps the application to stay consistent, and its maintainers understand what kind of date is being managed. To achieve this, when instantiating a new DateTime object you should always use a constructor overload that allows you to define the Kind property.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6562",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}