-- =============================================
-- Script Template
-- =============================================

--------------------------------------------------------------------------------------------------------------------------------
-- Name - Kunal Arora
-- Date - 12/05/2011
-- Purpose - added sgs_code_value cas8for code 6016,added plan, added batch scripts
----------------------------------------------------------------------------------------------------------------------------------

SET IDENTITY_INSERT [dbo].[SGT_PLAN] ON
GO
INSERT dbo.SGT_PLAN ([PLAN_ID],[PLAN_CODE],[PLAN_NAME],[BENEFIT_TYPE_ID],[BENEFIT_TYPE_VALUE],[CREATED_BY],[CREATED_DATE],[MODIFIED_BY],[MODIFIED_DATE],[UPDATE_SEQ],[BENEFIT_PROVISION_ID])VALUES(9,'LIFE','Life Plan',NULL,NULL,'JEEVAN','Dec  5 2011 12:00:00:000AM','JEEVAN','Dec  5 2011 12:00:00:000AM',0,NULL)
GO
SET IDENTITY_INSERT [dbo].[SGT_PLAN] OFF
GO

SET IDENTITY_INSERT [dbo].[SGS_JOB_SCHEDULE] ON
GO
INSERT dbo.SGS_JOB_SCHEDULE ([JOB_SCHEDULE_ID],[SCHEDULE_NAME],[ACTIVE_FLAG],[FREQUENCY_TYPE_ID],[FREQUENCY_TYPE_VALUE],[FREQUENCY_INTERVAL],[FREQ_SUBDAY_TYPE],[FREQ_SUBDAY_INTERVAL],[FREQ_RELATIVE_INTERVAL],[FREQ_RECURANCE_FACTOR],[START_DATE],[END_DATE],[START_TIME],[END_TIME],[STATUS_ID],[STATUS_VALUE],[CREATED_BY],[CREATED_DATE],[MODIFIED_BY],[MODIFIED_DATE],[UPDATE_SEQ],[PRIORITY_ID],[PRIORITY_VALUE],[CANCEL_PROCEDURE_NOTES],[RESTART_PROCEDURE_NOTES],[BATCH_STATUS_EMAIL_RECIPIENT_GROUPS],[BATCH_ERROR_EMAIL_RECIPIENT_GROUPS],[EXECUTE_ON_ORG_HOLIDAY_FLAG],[SCHEDULE_CODE],[CANCELLABLE_JOB_FLAG])VALUES(2,'DRO NOTIFICATION BATCH','Y',6017,'4',1,1,5,1,1,'Aug 22 2011 12:00:00:000AM','Aug 11 2020 12:00:00:000AM','Jan  1 1900 12:20:00:000PM','Jan  1 1900 11:00:00:000PM',6020,'VALD','radgaonkar','Aug 30 2011  4:05:13:557PM','jeevan.awatramani','Dec  5 2011 10:01:40:110AM',63,6019,'P1',NULL,NULL,NULL,NULL,'Y',NULL,'N')
INSERT dbo.SGS_JOB_SCHEDULE ([JOB_SCHEDULE_ID],[SCHEDULE_NAME],[ACTIVE_FLAG],[FREQUENCY_TYPE_ID],[FREQUENCY_TYPE_VALUE],[FREQUENCY_INTERVAL],[FREQ_SUBDAY_TYPE],[FREQ_SUBDAY_INTERVAL],[FREQ_RELATIVE_INTERVAL],[FREQ_RECURANCE_FACTOR],[START_DATE],[END_DATE],[START_TIME],[END_TIME],[STATUS_ID],[STATUS_VALUE],[CREATED_BY],[CREATED_DATE],[MODIFIED_BY],[MODIFIED_DATE],[UPDATE_SEQ],[PRIORITY_ID],[PRIORITY_VALUE],[CANCEL_PROCEDURE_NOTES],[RESTART_PROCEDURE_NOTES],[BATCH_STATUS_EMAIL_RECIPIENT_GROUPS],[BATCH_ERROR_EMAIL_RECIPIENT_GROUPS],[EXECUTE_ON_ORG_HOLIDAY_FLAG],[SCHEDULE_CODE],[CANCELLABLE_JOB_FLAG])VALUES(4,'Retirement Application Batch','Y',6017,'4',1,1,NULL,1,NULL,'Sep  6 2011 12:00:00:000AM',NULL,'Jan  1 1900 12:05:00:000AM','Jan  1 1900 12:10:00:000AM',6020,'VALD','karora','Sep  6 2011 12:43:06:020PM','akshy.bhat','Dec  2 2011  2:49:03:683PM',9,6019,'P3',NULL,NULL,NULL,NULL,'N',NULL,'N')
INSERT dbo.SGS_JOB_SCHEDULE ([JOB_SCHEDULE_ID],[SCHEDULE_NAME],[ACTIVE_FLAG],[FREQUENCY_TYPE_ID],[FREQUENCY_TYPE_VALUE],[FREQUENCY_INTERVAL],[FREQ_SUBDAY_TYPE],[FREQ_SUBDAY_INTERVAL],[FREQ_RELATIVE_INTERVAL],[FREQ_RECURANCE_FACTOR],[START_DATE],[END_DATE],[START_TIME],[END_TIME],[STATUS_ID],[STATUS_VALUE],[CREATED_BY],[CREATED_DATE],[MODIFIED_BY],[MODIFIED_DATE],[UPDATE_SEQ],[PRIORITY_ID],[PRIORITY_VALUE],[CANCEL_PROCEDURE_NOTES],[RESTART_PROCEDURE_NOTES],[BATCH_STATUS_EMAIL_RECIPIENT_GROUPS],[BATCH_ERROR_EMAIL_RECIPIENT_GROUPS],[EXECUTE_ON_ORG_HOLIDAY_FLAG],[SCHEDULE_CODE],[CANCELLABLE_JOB_FLAG])VALUES(5,'Withdrwal Application Batch','Y',6017,'4',1,1,NULL,1,NULL,'Sep  6 2011 12:00:00:000AM',NULL,'Jan  1 1900 12:05:00:000AM','Jan  1 1900 12:10:00:000AM',6020,'VALD','karora','Dec  5 2011 12:17:08:500PM','gagan.dhamija','Dec  5 2011 12:26:35:567PM',10,6019,'P3',NULL,NULL,NULL,NULL,'N',NULL,'N')
GO
SET IDENTITY_INSERT [dbo].[SGS_JOB_SCHEDULE] OFF
GO

 
SET IDENTITY_INSERT [dbo].[SGS_BATCH_SCHEDULE] ON
GO
INSERT dbo.SGS_BATCH_SCHEDULE ([BATCH_SCHEDULE_ID],[STEP_NO],[STEP_NAME],[STEP_DESCRIPTION],[FREQUENCY_IN_DAYS],[FREQUENCY_IN_MONTHS],[NEXT_RUN_DATE],[STEP_PARAMETERS],[ACTIVE_FLAG],[REQUIRES_TRANSACTION_FLAG],[EMAIL_NOTIFICATION],[ORDER_NO],[CUTOFF_START],[CUTOFF_END],[CREATED_BY],[CREATED_DATE],[MODIFIED_BY],[MODIFIED_DATE],[UPDATE_SEQ])VALUES(1,43,'Notification Batch','Notification Batch',NULL,NULL,NULL,NULL,'Y','N',NULL,NULL,NULL,NULL,'radgaonkar','Aug 26 2011  1:16:51:110PM','radgaonkar','Aug 26 2011  1:16:51:110PM',0)
INSERT dbo.SGS_BATCH_SCHEDULE ([BATCH_SCHEDULE_ID],[STEP_NO],[STEP_NAME],[STEP_DESCRIPTION],[FREQUENCY_IN_DAYS],[FREQUENCY_IN_MONTHS],[NEXT_RUN_DATE],[STEP_PARAMETERS],[ACTIVE_FLAG],[REQUIRES_TRANSACTION_FLAG],[EMAIL_NOTIFICATION],[ORDER_NO],[CUTOFF_START],[CUTOFF_END],[CREATED_BY],[CREATED_DATE],[MODIFIED_BY],[MODIFIED_DATE],[UPDATE_SEQ])VALUES(2,2,'Cancel Retirement Application','Benefit Application Batch',NULL,NULL,NULL,NULL,'Y','N',NULL,NULL,NULL,NULL,'ppunjabi','Sep  6 2011 12:39:43:217PM','ppunjabi','Sep  6 2011 12:39:43:217PM',0)
INSERT dbo.SGS_BATCH_SCHEDULE ([BATCH_SCHEDULE_ID],[STEP_NO],[STEP_NAME],[STEP_DESCRIPTION],[FREQUENCY_IN_DAYS],[FREQUENCY_IN_MONTHS],[NEXT_RUN_DATE],[STEP_PARAMETERS],[ACTIVE_FLAG],[REQUIRES_TRANSACTION_FLAG],[EMAIL_NOTIFICATION],[ORDER_NO],[CUTOFF_START],[CUTOFF_END],[CREATED_BY],[CREATED_DATE],[MODIFIED_BY],[MODIFIED_DATE],[UPDATE_SEQ])VALUES(3,3,'Cancel Withdrawal Application','Cancel Withdrawal Application',NULL,NULL,NULL,NULL,'Y','N',NULL,NULL,NULL,NULL,'karora','Dec  5 2011 12:13:30:880PM','karora','Dec  5 2011 12:13:30:880PM',0)
GO
SET IDENTITY_INSERT [dbo].[SGS_BATCH_SCHEDULE] OFF
GO

 
SET IDENTITY_INSERT [dbo].[SGS_JOB_SCHEDULE_DETAIL] ON
GO
INSERT dbo.SGS_JOB_SCHEDULE_DETAIL ([JOB_SCHEDULE_DETAIL_ID],[JOB_SCHEDULE_ID],[STEP_NO],[STATUS_ID],[STATUS_VALUE],[ORDER_NUMBER],[DEPENDENT_STEP_NO],[DEPENDENT_STEP_RETURN_VALUE],[OPERATOR_ID],[OPERATOR_VALUE],[CREATED_BY],[CREATED_DATE],[MODIFIED_BY],[MODIFIED_DATE],[UPDATE_SEQ])VALUES(2,2,43,6018,'VALD',1,NULL,NULL,6021,NULL,'radgaonkar','Aug 30 2011  4:05:18:783PM','jeevan.awatramani','Dec  5 2011 10:01:40:077AM',21)
INSERT dbo.SGS_JOB_SCHEDULE_DETAIL ([JOB_SCHEDULE_DETAIL_ID],[JOB_SCHEDULE_ID],[STEP_NO],[STATUS_ID],[STATUS_VALUE],[ORDER_NUMBER],[DEPENDENT_STEP_NO],[DEPENDENT_STEP_RETURN_VALUE],[OPERATOR_ID],[OPERATOR_VALUE],[CREATED_BY],[CREATED_DATE],[MODIFIED_BY],[MODIFIED_DATE],[UPDATE_SEQ])VALUES(4,4,2,6018,'VALD',1,NULL,NULL,6021,NULL,'karora','Sep  6 2011 12:43:21:000PM','akshy.bhat','Dec  2 2011  2:49:03:653PM',3)
INSERT dbo.SGS_JOB_SCHEDULE_DETAIL ([JOB_SCHEDULE_DETAIL_ID],[JOB_SCHEDULE_ID],[STEP_NO],[STATUS_ID],[STATUS_VALUE],[ORDER_NUMBER],[DEPENDENT_STEP_NO],[DEPENDENT_STEP_RETURN_VALUE],[OPERATOR_ID],[OPERATOR_VALUE],[CREATED_BY],[CREATED_DATE],[MODIFIED_BY],[MODIFIED_DATE],[UPDATE_SEQ])VALUES(5,5,3,6018,'VALD',1,NULL,NULL,6021,NULL,'gagan.dhamija','Dec  5 2011 12:26:35:530PM','gagan.dhamija','Dec  5 2011 12:26:35:557PM',1)
GO
SET IDENTITY_INSERT [dbo].[SGS_JOB_SCHEDULE_DETAIL] OFF
GO

declare  @currentdatetime datetime
declare @defaultcodevalueorder int
set @currentdatetime = getdate()
set @defaultcodevalueorder = (select coalesce((select max(code_value_order) from sgs_code_value where code_id=6016),0)+1)

IF EXISTS (SELECT CODE_ID FROM SGS_CODE_VALUE WHERE CODE_ID = 6016 AND CODE_VALUE = 'CAS8')
PRINT 'CODE_ID = 6016 already exits in SGS_CODE_VALUE tables '
ELSE
INSERT INTO dbo.SGS_CODE_VALUE(CODE_ID,CODE_VALUE,DESCRIPTION, START_DATE,CODE_VALUE_ORDER, CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ) 
VALUES (6016,'CAS8','Test Case 008 - Death Benefits', @currentdatetime,@defaultcodevalueorder, N'dvelick', @currentdatetime, N'dvelick', @currentdatetime,0)
GO


----------------------------------------------------------------------------------------------------------------------------------
-- Name - Rashmi Sheri
-- Date - 12/05/2011
-- Purpose - Added message_id- 5120,5121,5122,5125,5126,5127,5128,5129 in to the SGS_MESSAGES table.
----------------------------------------------------------------------------------------------------------------------------------

declare @currentdatetime datetime
set @currentdatetime = getdate()
IF EXISTS (SELECT MESSAGE_ID FROM SGS_MESSAGES WHERE MESSAGE_ID = 5120)
PRINT 'MESSAGE_ID = 5120 already exits in SGS_MESSAGES tables'
ELSE
INSERT into dbo.SGS_MESSAGES (MESSAGE_ID, DISPLAY_MESSAGE, SEVERITY_ID, SEVERITY_VALUE, INTERNAL_INSTRUCTIONS, EMPLOYER_INSTRUCTIONS, RESPONSIBILITY_ID, RESPONSIBILITY_VALUE, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ) 
VALUES (5120, 'Retirement Application Received Date is required', 16 , 'E', Null, Null, 16, null, 'rashmi.sheri', @currentdatetime, 'rashmi.sheri', @currentdatetime, 0)
GO

declare @currentdatetime datetime
set @currentdatetime = getdate()
IF EXISTS (SELECT MESSAGE_ID FROM SGS_MESSAGES WHERE MESSAGE_ID = 5121)
PRINT 'MESSAGE_ID = 5121 already exits in SGS_MESSAGES tables'
ELSE
INSERT into dbo.SGS_MESSAGES (MESSAGE_ID, DISPLAY_MESSAGE, SEVERITY_ID, SEVERITY_VALUE, INTERNAL_INSTRUCTIONS, EMPLOYER_INSTRUCTIONS, RESPONSIBILITY_ID, RESPONSIBILITY_VALUE, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ) 
VALUES (5121, 'Entitlement Date is required', 16 , 'E', Null, Null, 16, null, 'rashmi.sheri', @currentdatetime, 'rashmi.sheri', @currentdatetime, 0)
GO

declare @currentdatetime datetime
set @currentdatetime = getdate()
IF EXISTS (SELECT MESSAGE_ID FROM SGS_MESSAGES WHERE MESSAGE_ID = 5122)
PRINT 'MESSAGE_ID = 5122 already exits in SGS_MESSAGES tables'
ELSE
INSERT into dbo.SGS_MESSAGES (MESSAGE_ID, DISPLAY_MESSAGE, SEVERITY_ID, SEVERITY_VALUE, INTERNAL_INSTRUCTIONS, EMPLOYER_INSTRUCTIONS, RESPONSIBILITY_ID, RESPONSIBILITY_VALUE, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ) 
VALUES (5122, 'SSA Application Date is required', 16 , 'E', Null, Null, 16, null, 'rashmi.sheri', @currentdatetime, 'rashmi.sheri', @currentdatetime, 0)
GO

declare @currentdatetime datetime
set @currentdatetime = getdate()
IF EXISTS (SELECT MESSAGE_ID FROM SGS_MESSAGES WHERE MESSAGE_ID = 5123)
PRINT 'MESSAGE_ID = 5123 already exits in SGS_MESSAGES tables'
ELSE
INSERT into dbo.SGS_MESSAGES (MESSAGE_ID, DISPLAY_MESSAGE, SEVERITY_ID, SEVERITY_VALUE, INTERNAL_INSTRUCTIONS, EMPLOYER_INSTRUCTIONS, RESPONSIBILITY_ID, RESPONSIBILITY_VALUE, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ) 
VALUES (5123, 'An Approved Retirement /Pre Death Retirement/Post Death Retirement Application for this Person already exists.', 16 , 'E', Null, Null, 16, null, 'rashmi.sheri', @currentdatetime, 'rashmi.sheri', @currentdatetime, 0)
GO

declare @currentdatetime datetime
set @currentdatetime = getdate()
IF EXISTS (SELECT MESSAGE_ID FROM SGS_MESSAGES WHERE MESSAGE_ID = 5124)
PRINT 'MESSAGE_ID = 5124 already exits in SGS_MESSAGES tables'
ELSE
INSERT into dbo.SGS_MESSAGES (MESSAGE_ID, DISPLAY_MESSAGE, SEVERITY_ID, SEVERITY_VALUE, INTERNAL_INSTRUCTIONS, EMPLOYER_INSTRUCTIONS, RESPONSIBILITY_ID, RESPONSIBILITY_VALUE, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ) 
VALUES (5124, 'SSD application date is not within 2 years of the participants Early Retirement Date.So Pension Plan cannot be added', 16 , 'E', Null, Null, 16, null, 'rashmi.sheri', @currentdatetime, 'rashmi.sheri', @currentdatetime, 0)
GO

declare @currentdatetime datetime
set @currentdatetime = getdate()
IF EXISTS (SELECT MESSAGE_ID FROM SGS_MESSAGES WHERE MESSAGE_ID = 5125)
PRINT 'MESSAGE_ID = 5125 already exits in SGS_MESSAGES tables'
ELSE
INSERT into dbo.SGS_MESSAGES (MESSAGE_ID, DISPLAY_MESSAGE, SEVERITY_ID, SEVERITY_VALUE, INTERNAL_INSTRUCTIONS, EMPLOYER_INSTRUCTIONS, RESPONSIBILITY_ID, RESPONSIBILITY_VALUE, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ) 
VALUES (5125, 'Retiremnet date sould be equal for all plans.', 16 , 'E', Null, Null, 16, null, 'rashmi.sheri', @currentdatetime, 'rashmi.sheri', @currentdatetime, 0)
GO

declare @currentdatetime datetime
set @currentdatetime = getdate()
IF EXISTS (SELECT MESSAGE_ID FROM SGS_MESSAGES WHERE MESSAGE_ID = 5126)
PRINT 'MESSAGE_ID = 5126 already exits in SGS_MESSAGES tables'
ELSE
INSERT into dbo.SGS_MESSAGES (MESSAGE_ID, DISPLAY_MESSAGE, SEVERITY_ID, SEVERITY_VALUE, INTERNAL_INSTRUCTIONS, EMPLOYER_INSTRUCTIONS, RESPONSIBILITY_ID, RESPONSIBILITY_VALUE, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ) 
VALUES (5126, 'Awarded on date should be greater than Disability Onset date..', 16 , 'E', Null, Null, 16, null, 'rashmi.sheri', @currentdatetime, 'rashmi.sheri', @currentdatetime, 0)
GO

declare @currentdatetime datetime
set @currentdatetime = getdate()
IF EXISTS (SELECT MESSAGE_ID FROM SGS_MESSAGES WHERE MESSAGE_ID = 5127)
PRINT 'MESSAGE_ID = 5127 already exits in SGS_MESSAGES tables'
ELSE
INSERT into dbo.SGS_MESSAGES (MESSAGE_ID, DISPLAY_MESSAGE, SEVERITY_ID, SEVERITY_VALUE, INTERNAL_INSTRUCTIONS, EMPLOYER_INSTRUCTIONS, RESPONSIBILITY_ID, RESPONSIBILITY_VALUE, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ) 
VALUES (5127, 'Awarded on date should be greater than SSA Application date.', 16 , 'E', Null, Null, 16, null, 'rashmi.sheri', @currentdatetime, 'rashmi.sheri', @currentdatetime, 0)
GO

declare @currentdatetime datetime
set @currentdatetime = getdate()
IF EXISTS (SELECT MESSAGE_ID FROM SGS_MESSAGES WHERE MESSAGE_ID = 5128)
PRINT 'MESSAGE_ID = 5128 already exits in SGS_MESSAGES tables'
ELSE
INSERT into dbo.SGS_MESSAGES (MESSAGE_ID, DISPLAY_MESSAGE, SEVERITY_ID, SEVERITY_VALUE, INTERNAL_INSTRUCTIONS, EMPLOYER_INSTRUCTIONS, RESPONSIBILITY_ID, RESPONSIBILITY_VALUE, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ) 
VALUES (5128, 'Retiremnet Application Received date sould be equal for all plans.', 16 , 'E', Null, Null, 16, null, 'rashmi.sheri', @currentdatetime, 'rashmi.sheri', @currentdatetime, 0)
GO

declare @currentdatetime datetime
set @currentdatetime = getdate()
IF EXISTS (SELECT MESSAGE_ID FROM SGS_MESSAGES WHERE MESSAGE_ID = 5129)
PRINT 'MESSAGE_ID = 5129 already exits in SGS_MESSAGES tables'
ELSE
INSERT into dbo.SGS_MESSAGES (MESSAGE_ID, DISPLAY_MESSAGE, SEVERITY_ID, SEVERITY_VALUE, INTERNAL_INSTRUCTIONS, EMPLOYER_INSTRUCTIONS, RESPONSIBILITY_ID, RESPONSIBILITY_VALUE, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ) 
VALUES (5129, 'Retiremnet Application Received date cannot be future date.', 16 , 'E', Null, Null, 16, null, 'rashmi.sheri', @currentdatetime, 'rashmi.sheri', @currentdatetime, 0)
GO

----------------------------------------------------------------------------------------------------------------------------------
-- Name - Rashmi Sheri
-- Date - 12/05/2011
-- Purpose - Changed text of message_id- 5104,5046 in to the SGS_MESSAGES table.
----------------------------------------------------------------------------------------------------------------------------------

update SGS_MESSAGES set DISPLAY_MESSAGE = 'Awarded On Date is required' where MESSAGE_ID=5104

update SGS_MESSAGES set DISPLAY_MESSAGE='SSA Application Date should be greater than Disability Onset Date.' where MESSAGE_ID=5046