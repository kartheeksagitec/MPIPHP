<entity ID="entPersonAccountRetirementContribution" sfwMainCDO="icdoPersonAccountRetirementContribution" sfwType="BusinessRule" sfwActive="True" sfwStatus="Review" sfwObjectID="busPersonAccountRetirementContribution" sfwTableName="sgt_person_account_retirement_contribution" sfwView="False" sfwDataObjectID="doPersonAccountRetirementContribution">
  <queries>
    <query ID="GetRetirementContributionbyAccountId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION where PERSON_ACCOUNT_ID=@PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetRetirementContributionsofPerson" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;select * from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PRC&#xD;&#xA;inner join SGT_PERSON_ACCOUNT pa on pa.PERSON_ACCOUNT_ID=prc.PERSON_ACCOUNT_ID&#xD;&#xA;inner join SGT_PERSON p on p.PERSON_ID=pa.PERSON_ID&#xD;&#xA;where p.PERSON_ID=@PERSON_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetFactorBasedonMemberandSpouseAge" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT TOP (1) BENEFIT_OPTION_FACTOR FROM SGT_BENEFIT_PROVISION_BENEFIT_OPTION_FACTOR BFL&#xD;&#xA;INNER JOIN SGT_PLAN P ON P.PLAN_ID = BFL.BENEFIT_PROVISION_ID&#xD;&#xA;INNER JOIN SGT_PLAN_BENEFIT_XR XR ON BFL.PLAN_BENEFIT_ID=XR.PLAN_BENEFIT_ID&#xD;&#xA;WHERE P.PLAN_CODE=@PLAN_CODE AND BFL.BENEFIT_ACCOUNT_TYPE_VALUE= @BENEFIT_ACCOUNT_TYPE_VALUE &#xD;&#xA;AND XR.BENEFIT_OPTION_VALUE=@BENEFIT_OPTION_VALUE&#xD;&#xA;AND BFL.PARTICIPANT_AGE &lt;= @PARTICIPANT_AGE AND BFL.SPOUSE_AGE &lt;= @SPOUSE_AGE&#xD;&#xA;Order by BFL.BENEFIT_PROVISION_BENEFIT_OPTION_FACTOR_ID Desc">
      <parameters>
        <parameter ID="@PLAN_CODE" sfwDataType="string" />
        <parameter ID="@BENEFIT_OPTION_VALUE" sfwDataType="string" />
        <parameter ID="@BENEFIT_ACCOUNT_TYPE_VALUE" sfwDataType="string" />
        <parameter ID="@SPOUSE_AGE" sfwDataType="decimal" />
        <parameter ID="@PARTICIPANT_AGE" sfwDataType="decimal" />
      </parameters>
    </query>
    <query ID="GetFactorBasedonMemberAge" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT BENEFIT_OPTION_FACTOR FROM SGT_BENEFIT_PROVISION_BENEFIT_OPTION_FACTOR BFL&#xD;&#xA;INNER JOIN SGT_PLAN P ON P.PLAN_ID = BFL.BENEFIT_PROVISION_ID&#xD;&#xA;INNER JOIN SGT_PLAN_BENEFIT_XR XR ON BFL.PLAN_BENEFIT_ID=XR.PLAN_BENEFIT_ID&#xD;&#xA;WHERE P.PLAN_CODE=@PLAN_CODE AND BFL.BENEFIT_ACCOUNT_TYPE_VALUE=@BENEFIT_ACCOUNT_TYPE_VALUE &#xD;&#xA;AND XR.BENEFIT_OPTION_VALUE=@BENEFIT_OPTION_VALUE&#xD;&#xA;AND BFL.PARTICIPANT_AGE&lt;=CAST(@PARTICIPANT_AGE as Numeric) AND BFL.SPOUSE_AGE IS NULL&#xD;&#xA;Order by BFL.PARTICIPANT_AGE Desc">
      <parameters>
        <parameter ID="@PLAN_CODE" sfwDataType="string" />
        <parameter ID="@BENEFIT_OPTION_VALUE" sfwDataType="string" />
        <parameter ID="@BENEFIT_ACCOUNT_TYPE_VALUE" sfwDataType="string" />
        <parameter ID="@PARTICIPANT_AGE" sfwDataType="Decimal" />
      </parameters>
    </query>
    <query ID="GetIAPBalance" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(SPARC.IAP_BALANCE_AMOUNT),SUM(SPARC.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT),&#xD;&#xA;SUM(SPARC.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT), MAX(SPARC.TRANSACTION_DATE) &#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC &#xD;&#xA;WHERE SPARC.PERSON_ACCOUNT_ID=@PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetEEContributionForPlanYear" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(SPARC.EE_CONTRIBUTION_AMOUNT), SUM(EE_INT_AMOUNT), MAX(SPARC.TRANSACTION_DATE)&#xD;&#xA;FROM (SELECT RC.PERSON_ACCOUNT_ID, RC.EE_CONTRIBUTION_AMOUNT, RC.EE_INT_AMOUNT, RC.TRANSACTION_DATE&#xD;&#xA;  FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION RC WITH(NOLOCK)&#xD;&#xA;  WHERE RC.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID &#xD;&#xA;  AND RC.COMPUTATIONAL_YEAR &lt; @COMPUTATIONAL_YEAR ) SPARC&#xD;&#xA;GROUP BY SPARC.PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@COMPUTATIONAL_YEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetTotalUVHPContribution" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(SPARC.UVHP_AMOUNT), SUM(SPARC.UVHP_INT_AMOUNT), MAX(SPARC.TRANSACTION_DATE),MAX(SPARC.EFFECTIVE_DATE) EFFECTIVE_DATE,MAX(SPARC.COMPUTATIONAL_YEAR) COMPUTATIONAL_YEAR&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK)&#xD;&#xA;WHERE SPARC.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID &#xD;&#xA;and SPARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONAL_YEAR&#xD;&#xA;and SPARC.CONTRIBUTION_TYPE_VALUE = 'UVHP'&#xD;&#xA;GROUP BY SPARC.PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@COMPUTATIONAL_YEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetSpecialAccountBalance" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(SPARC.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT), MAX(SPARC.TRANSACTION_DATE)&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT SPA WITH(NOLOCK) ON SPA.PERSON_ACCOUNT_ID = SPARC.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE SPA.PERSON_ID = @PERSON_ID AND SPA.PLAN_ID = @PLAN_ID&#xD;&#xA;GROUP BY SPARC.PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPAllocationsForPersonAccount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  PARC.PERSON_ACCOUNT_ID,PARC.COMPUTATIONAL_YEAR,SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC2,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC2_INVT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC2_FRFT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC3' THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC3,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC4,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC4_INVT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC4_FRFT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'AFFL' THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC5_AFFL,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'NAFF' THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC5_NONAFFL,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'NAAF' THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC5_BOTH,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC5,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN ISNULL(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0.00) ELSE 0.00 END) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN ISNULL(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0.00) ELSE 0.00 END) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT&#xD;&#xA;&#xD;&#xA;FROM &#xD;&#xA;(select distinct computational_year, person_account_id from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION &#xD;&#xA;&#xD;&#xA;where PERSON_ACCOUNT_ID =@PERSONACCOUNTID) PARC&#xD;&#xA;left outer join &#xD;&#xA;(select distinct computational_year, person_account_id,CONTRIBUTION_TYPE_VALUE,CONTRIBUTION_SUBTYPE_VALUE,IAP_BALANCE_AMOUNT,LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,LOCAL52_SPECIAL_ACCT_BAL_AMOUNT from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION  &#xD;&#xA;WHERE  PERSON_ACCOUNT_ID = @PERSONACCOUNTID  AND  COMPUTATIONAL_YEAR &gt;=  @COMPUTATIONYEAR AND TRANSACTION_TYPE_VALUE &lt;&gt; 'PMNT') PARC1 on PARC.PERSON_ACCOUNT_ID = PARC1.PERSON_ACCOUNT_ID and PARC.COMPUTATIONAL_YEAR = PARC1.COMPUTATIONAL_YEAR&#xD;&#xA; &#xD;&#xA;GROUP BY  parc.PERSON_ACCOUNT_ID, parc.COMPUTATIONAL_YEAR">
      <parameters>
        <parameter ID="@PERSONACCOUNTID" sfwDataType="int" />
        <parameter ID="@COMPUTATIONYEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPAccountBalanceAsOfYear" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT ISNULL(SUM(ISNULL(SPARC.IAP_BALANCE_AMOUNT,0.00)),0.00)&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK)&#xD;&#xA;WHERE SPARC.PERSON_ACCOUNT_ID = @PERSONACCOUNTID&#xD;&#xA;AND SPARC.COMPUTATIONAL_YEAR &lt; @COMPUTATIONYEAR AND&#xD;&#xA;SPARC.TRANSACTION_TYPE_VALUE &lt;&gt; 'PMNT' ">
      <parameters>
        <parameter ID="@PERSONACCOUNTID" sfwDataType="int" />
        <parameter ID="@COMPUTATIONYEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPSnapShotForPersonAccount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--GetIAPSnapShotForPersonAccount&#xD;&#xA;&#xD;&#xA;DECLARE @COMPUTATIONYEAR INT&#xD;&#xA;DECLARE @PREVCUTOFFDATEPLUSONEDAY DATE&#xD;&#xA;DECLARE @CURRCUTOFFDATE DATE&#xD;&#xA;DECLARE @CURRCUTOFFDATEADJS DATE&#xD;&#xA;DECLARE @PREVCUTOFFDATEADJS DATE&#xD;&#xA;DECLARE @PREVCUTOFFDATEADJSPLUSONEDAY DATE&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT TOP 1 @COMPUTATIONYEAR = COMPUTATION_YEAR FROM SGT_IAP_ALLOCATION_SUMMARY WITH(NOLOCK) ORDER BY COMPUTATION_YEAR DESC&#xD;&#xA;&#xD;&#xA;select @CURRCUTOFFDATE = pe.cutoffdate from PILLARS.dbo.Period pe&#xD;&#xA;inner join PILLARS.dbo.Pensionyear py on py.enddate = pe.qualifyingenddate&#xD;&#xA;where py.pensionyear = @COMPUTATIONYEAR + 1 &#xD;&#xA;&#xD;&#xA;select @PREVCUTOFFDATEPLUSONEDAY = &#xD;&#xA;DATEADD(DAY,1,pe.cutoffdate) from PILLARS.dbo.Period pe&#xD;&#xA;inner join PILLARS.dbo.Pensionyear py on py.enddate = pe.qualifyingenddate&#xD;&#xA;where py.pensionyear = @COMPUTATIONYEAR &#xD;&#xA;&#xD;&#xA;SELECT  @PREVCUTOFFDATEADJS = ADJ_CUTOFF_DATE_TO from SGT_IAP_ALLOCATION_CUTOFF_DATES where COMPUTATIONAL_YEAR = @COMPUTATIONYEAR --'04/30/2014'&#xD;&#xA;SELECT @PREVCUTOFFDATEADJSPLUSONEDAY = DATEADD(DAY,1,@PREVCUTOFFDATEADJS)&#xD;&#xA;&#xD;&#xA;SELECT @CURRCUTOFFDATEADJS = ADJ_CUTOFF_DATE_TO from SGT_IAP_ALLOCATION_CUTOFF_DATES where COMPUTATIONAL_YEAR = @COMPUTATIONYEAR +1 --DATEADD(DAY,-1,GETDATE())--'20150531'&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;IF @COMPUTATIONYEAR IS NOT NULL&#xD;&#xA;BEGIN&#xD;&#xA;&#xD;&#xA;-------------------------------------- IAP SECTION STARTS ---------------------------------------------------------------------------------&#xD;&#xA; SELECT PARC.PERSON_ACCOUNT_ID,DBO.fn_GET_DECRYPTED_TEXT(P.SSN) AS SSN,&#xD;&#xA; (@COMPUTATIONYEAR+1) AS COMPUTATION_YEAR, ELG.VESTED_DATE, FLG.BIS_FLAG,PA.STATUS_VALUE,&#xD;&#xA; SUM(CASE WHEN ((PARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt;= @PREVCUTOFFDATEADJS AND ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('PMNT','LALC')) OR&#xD;&#xA; (PARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt; @PREVCUTOFFDATEADJSPLUSONEDAY AND ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') = ('LALC')) --PIR 630&#xD;&#xA;   OR  (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') = 'PMNT' AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt;= CAST(CAST(@COMPUTATIONYEAR AS VARCHAR(4))+'1231' AS DATETIME))) THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS SYSTEM_BEGINNING_BALANCE,&#xD;&#xA; (0.00) AS L52_SPECIAL_ACCOUNT_AMOUNT,&#xD;&#xA; (0.00) AS L161_SPECIAL_ACCOUNT_AMOUNT,&#xD;&#xA; SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('FORF','BRDG') AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS FORFEITED_BALANCE,&#xD;&#xA; &#xD;&#xA; SUM(CASE WHEN (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,CONVERT(DATE,PARC.TRANSACTION_DATE)) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS)&#xD;&#xA; OR (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS) THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS LATE_ALLOC1_AMOUNT,&#xD;&#xA; &#xD;&#xA; SUM(CASE WHEN (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS) &#xD;&#xA;  OR (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS) THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS LATE_ALLOC2_AMOUNT,&#xD;&#xA; &#xD;&#xA; SUM(CASE WHEN (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS)&#xD;&#xA; OR (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS) THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS LATE_ALLOC3_AMOUNT,&#xD;&#xA; &#xD;&#xA; SUM(CASE WHEN &#xD;&#xA; (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS) &#xD;&#xA;  OR (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS) THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS LATE_ALLOC4_AMOUNT,&#xD;&#xA; &#xD;&#xA; SUM(CASE WHEN &#xD;&#xA; (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS)&#xD;&#xA;  OR (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS) THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS LATE_ALLOC5_AMOUNT,&#xD;&#xA; &#xD;&#xA; SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS QUATERLY_ALLOCATIONS_AMOUNT, &#xD;&#xA; SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS RETIREMENT_YEAR_ALLOCATION2_AMOUNT,&#xD;&#xA; SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS RETIREMENT_YEAR_ALLOCATION4_AMOUNT,&#xD;&#xA; (0.00) AS PAYOUTS,&#xD;&#xA; (0.00) AS UNALLOCABLE_AMOUNT,&#xD;&#xA; (0.0)  AS LATE_INELIGIBLE_HOURS,&#xD;&#xA; (0.00) AS LATE_INELIGIBLE_HOURLY_CONTRIBUTION_AMOUNT,&#xD;&#xA; (0.0)  AS CURRENT_YEAR_INELIGIBLE_HOURS,&#xD;&#xA; (0.00) AS CURRENT_YEAR_INELIGIBLE_CONTRIBUTION_AMOUNT,&#xD;&#xA; (0.0)  AS ELIGIBLE_HOURS,&#xD;&#xA; (0.00) AS HOURLY_CONTRIBUTION_AMOUNT,&#xD;&#xA; (0.00) AS LATE_INELGIBILE_COMPENSATION_AMOUNT,&#xD;&#xA; (0.00) AS CURRENT_YEAR_INELGIBILE_COMPENSATION_AMOUNT,&#xD;&#xA; (0.00) AS OVERLIMIT_CONTRIBUTIONS_AMOUNT,&#xD;&#xA; (0.00) AS PERCENTAGE_OF_COMPENSATION_AMOUNT,&#xD;&#xA; (1002) AS IAP_ALLOCATION_CATEGORY_ID,&#xD;&#xA; (NULL) AS IAP_ALLOCATION_CATEGORY_VALUE,&#xD;&#xA; (0.0) AS TOTAL_INELIGIBLE_IAP_LATE_HOURS,&#xD;&#xA; (0.0) AS TOTAL_IAP_HOURS,&#xD;&#xA; 'IAP' AS FUND_TYPE,&#xD;&#xA; SUM(CASE WHEN PARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONYEAR THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS BEGINNING_BALANCE &#xD;&#xA; FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK) &#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PA.PERSON_ACCOUNT_ID=PARC.PERSON_ACCOUNT_ID AND PA.PLAN_ID=1&#xD;&#xA; INNER JOIN SGT_PERSON P WITH(NOLOCK) ON P.PERSON_ID=PA.PERSON_ID&#xD;&#xA; LEFT JOIN SGT_PERSON_ACCOUNT_ELIGIBILITY ELG WITH(NOLOCK) ON ELG.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA; LEFT JOIN SGT_PERSON_BATCH_FLAGS FLG WITH(NOLOCK) ON FLG.PERSON_ID = P.PERSON_ID&#xD;&#xA; where ((@TempTable = 1 and P.MPI_PERSON_ID IN (SELECT MPI_PERSON_ID FROM TEMP_TABLE_FOR_ANNUAL_BATCHES)) OR  @TempTable = 0)&#xD;&#xA; GROUP BY PARC.PERSON_ACCOUNT_ID,P.SSN, ELG.VESTED_DATE, FLG.BIS_FLAG,PA.STATUS_VALUE&#xD;&#xA; HAVING (&#xD;&#xA;   SUM(CASE WHEN ((PARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt;= @PREVCUTOFFDATEADJS AND ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('PMNT','LALC')) OR&#xD;&#xA; (PARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt; @PREVCUTOFFDATEADJSPLUSONEDAY AND ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') = ('LALC')) --PIR 630&#xD;&#xA;   OR  (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') = 'PMNT' AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt;= CAST(CAST(@COMPUTATIONYEAR AS VARCHAR(4))+'1231' AS DATETIME))) THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('FORF','BRDG') AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS  THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  )&#xD;&#xA;  OR EXISTS (SELECT 1 FROM SGT_ALL_IAP_WORKHISTORY_4_SNAPSHOT X WHERE X.SSN = P.SSN)&#xD;&#xA;  &#xD;&#xA; UNION&#xD;&#xA;&#xD;&#xA;    SELECT PA.PERSON_ACCOUNT_ID,DBO.fn_GET_DECRYPTED_TEXT(P.SSN) AS SSN,&#xD;&#xA;      (@COMPUTATIONYEAR+1) AS COMPUTATION_YEAR, ELG.VESTED_DATE, FLG.BIS_FLAG,PA.STATUS_VALUE,&#xD;&#xA;      (0.00) AS SYSTEM_BEGINNING_BALANCE,&#xD;&#xA;      (0.00) AS L52_SPECIAL_ACCOUNT_AMOUNT,&#xD;&#xA;      (0.00) AS L161_SPECIAL_ACCOUNT_AMOUNT,&#xD;&#xA;      (0.00) AS FORFEITED_BALANCE,&#xD;&#xA;      (0.00) AS LATE_ALLOC1_AMOUNT,&#xD;&#xA;      (0.00) AS LATE_ALLOC2_AMOUNT,&#xD;&#xA;      (0.00) AS LATE_ALLOC3_AMOUNT,&#xD;&#xA;      (0.00) AS LATE_ALLOC4_AMOUNT,&#xD;&#xA;      (0.00) AS LATE_ALLOC5_AMOUNT,&#xD;&#xA;      (0.00) AS QUATERLY_ALLOCATIONS_AMOUNT, &#xD;&#xA;      (0.00) AS RETIREMENT_YEAR_ALLOCATION2_AMOUNT,&#xD;&#xA;      (0.00) AS RETIREMENT_YEAR_ALLOCATION4_AMOUNT,&#xD;&#xA;      (0.00) AS PAYOUTS,&#xD;&#xA;      (0.00) AS UNALLOCABLE_AMOUNT,&#xD;&#xA;      (0.0)  AS LATE_INELIGIBLE_HOURS,&#xD;&#xA;      (0.00) AS LATE_INELIGIBLE_HOURLY_CONTRIBUTION_AMOUNT,&#xD;&#xA;      (0.0)  AS CURRENT_YEAR_INELIGIBLE_HOURS,&#xD;&#xA;      (0.00) AS CURRENT_YEAR_INELIGIBLE_CONTRIBUTION_AMOUNT,&#xD;&#xA;      (0.0)  AS ELIGIBLE_HOURS,&#xD;&#xA;      (0.00) AS HOURLY_CONTRIBUTION_AMOUNT,&#xD;&#xA;      (0.00) AS LATE_INELGIBILE_COMPENSATION_AMOUNT,&#xD;&#xA;      (0.00) AS CURRENT_YEAR_INELGIBILE_COMPENSATION_AMOUNT,&#xD;&#xA;      (0.00) AS OVERLIMIT_CONTRIBUTIONS_AMOUNT,&#xD;&#xA;      (0.00) AS PERCENTAGE_OF_COMPENSATION_AMOUNT,&#xD;&#xA;      (1002) AS IAP_ALLOCATION_CATEGORY_ID,&#xD;&#xA;      (NULL) AS IAP_ALLOCATION_CATEGORY_VALUE,&#xD;&#xA;      (0.0) AS TOTAL_INELIGIBLE_IAP_LATE_HOURS,&#xD;&#xA;      (0.0) AS TOTAL_IAP_HOURS,&#xD;&#xA;      'IAP' AS FUND_TYPE,&#xD;&#xA;   (0.00) AS BEGINNING_BALANCE&#xD;&#xA;   FROM SGT_PERSON_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;      INNER JOIN SGT_PERSON P WITH(NOLOCK) ON P.PERSON_ID=PA.PERSON_ID  AND PA.PLAN_ID=1 --AND PA.STATUS_VALUE IN ('ACTV','INAC','DCSD')&#xD;&#xA;      LEFT JOIN SGT_PERSON_ACCOUNT_ELIGIBILITY ELG WITH(NOLOCK) ON ELG.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA;      LEFT JOIN SGT_PERSON_BATCH_FLAGS FLG WITH(NOLOCK) ON FLG.PERSON_ID = P.PERSON_ID&#xD;&#xA;      WHERE NOT EXISTS (SELECT PARC.PERSON_ACCOUNT_ID FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK) WHERE PARC.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID)&#xD;&#xA;      AND EXISTS (SELECT 1 FROM SGT_ALL_IAP_WORKHISTORY_4_SNAPSHOT X WHERE X.SSN = P.SSN)&#xD;&#xA;      --where &#xD;&#xA;      AND ((@TempTable = 1 and P.MPI_PERSON_ID IN (SELECT MPI_PERSON_ID FROM TEMP_TABLE_FOR_ANNUAL_BATCHES)) OR  @TempTable = 0)&#xD;&#xA;      GROUP BY PA.PERSON_ACCOUNT_ID,P.SSN, ELG.VESTED_DATE, FLG.BIS_FLAG,PA.STATUS_VALUE&#xD;&#xA; -------------------------------------- IAP SECTION ENDS ---------------------------------------------------------------------------------     &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    UNION&#xD;&#xA; &#xD;&#xA; -------------------------------------- L52 SPL ACCT SECTION STARTS ---------------------------------------------------------------------------------    &#xD;&#xA;      &#xD;&#xA;     SELECT PARC.PERSON_ACCOUNT_ID,DBO.fn_GET_DECRYPTED_TEXT(P.SSN) AS SSN,&#xD;&#xA; (@COMPUTATIONYEAR+1) AS COMPUTATION_YEAR, ELG.VESTED_DATE, FLG.BIS_FLAG,PA.STATUS_VALUE,&#xD;&#xA; (0.0) AS SYSTEM_BEGINNING_BALANCE,&#xD;&#xA; SUM(CASE WHEN ((PARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt;= @PREVCUTOFFDATEADJS AND ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('PMNT','LALC')) OR&#xD;&#xA; (PARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt; @PREVCUTOFFDATEADJSPLUSONEDAY AND ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') = ('LALC')) --PIR 630&#xD;&#xA; OR    (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') = 'PMNT' AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt;= CAST(CAST(@COMPUTATIONYEAR AS VARCHAR(4))+'1231' AS DATETIME))) THEN ISNULL(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0.00) ELSE 0.00 END) AS L52_SPECIAL_ACCOUNT_AMOUNT,&#xD;&#xA; (0.00) AS L161_SPECIAL_ACCOUNT_AMOUNT,&#xD;&#xA; SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('FORF','BRDG') AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS FORFEITED_BALANCE,&#xD;&#xA; &#xD;&#xA; SUM(CASE WHEN (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS)&#xD;&#xA; OR (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS) THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LATE_ALLOC1_AMOUNT,&#xD;&#xA; &#xD;&#xA; SUM(CASE WHEN (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS) &#xD;&#xA;  OR (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS) THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LATE_ALLOC2_AMOUNT,&#xD;&#xA; &#xD;&#xA; SUM(CASE WHEN (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS)&#xD;&#xA; OR (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS) THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LATE_ALLOC3_AMOUNT,&#xD;&#xA; &#xD;&#xA; SUM(CASE WHEN &#xD;&#xA; (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS) &#xD;&#xA;  OR (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS) THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LATE_ALLOC4_AMOUNT,&#xD;&#xA; &#xD;&#xA; SUM(CASE WHEN &#xD;&#xA; (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS)&#xD;&#xA;  OR (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS) THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LATE_ALLOC5_AMOUNT,&#xD;&#xA; &#xD;&#xA; --SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LATE_ALLOC1_AMOUNT,&#xD;&#xA; --SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LATE_ALLOC2_AMOUNT,&#xD;&#xA; --SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LATE_ALLOC3_AMOUNT,&#xD;&#xA; --SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LATE_ALLOC4_AMOUNT,&#xD;&#xA; --SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LATE_ALLOC5_AMOUNT,&#xD;&#xA; SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS QUATERLY_ALLOCATIONS_AMOUNT, &#xD;&#xA; SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS RETIREMENT_YEAR_ALLOCATION2_AMOUNT,&#xD;&#xA; SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS RETIREMENT_YEAR_ALLOCATION4_AMOUNT,&#xD;&#xA; (0.00) AS PAYOUTS,&#xD;&#xA; (0.00) AS UNALLOCABLE_AMOUNT,&#xD;&#xA; (0.0)  AS LATE_INELIGIBLE_HOURS,&#xD;&#xA; (0.00) AS LATE_INELIGIBLE_HOURLY_CONTRIBUTION_AMOUNT,&#xD;&#xA; (0.0)  AS CURRENT_YEAR_INELIGIBLE_HOURS,&#xD;&#xA; (0.00) AS CURRENT_YEAR_INELIGIBLE_CONTRIBUTION_AMOUNT,&#xD;&#xA; (0.0)  AS ELIGIBLE_HOURS,&#xD;&#xA; (0.00) AS HOURLY_CONTRIBUTION_AMOUNT,&#xD;&#xA; (0.00) AS LATE_INELGIBILE_COMPENSATION_AMOUNT,&#xD;&#xA; (0.00) AS CURRENT_YEAR_INELGIBILE_COMPENSATION_AMOUNT,&#xD;&#xA; (0.00) AS OVERLIMIT_CONTRIBUTIONS_AMOUNT,&#xD;&#xA; (0.00) AS PERCENTAGE_OF_COMPENSATION_AMOUNT,&#xD;&#xA; (1002) AS IAP_ALLOCATION_CATEGORY_ID,&#xD;&#xA; (NULL) AS IAP_ALLOCATION_CATEGORY_VALUE,&#xD;&#xA; (0.0) AS TOTAL_INELIGIBLE_IAP_LATE_HOURS,&#xD;&#xA; (0.0) AS TOTAL_IAP_HOURS,&#xD;&#xA; 'L052' AS FUND_TYPE,&#xD;&#xA; SUM(CASE WHEN PARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONYEAR THEN ISNULL(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0.00) ELSE 0.00 END) AS BEGINNING_BALANCE&#xD;&#xA; FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK) &#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PA.PERSON_ACCOUNT_ID=PARC.PERSON_ACCOUNT_ID AND PA.PLAN_ID=1&#xD;&#xA; INNER JOIN SGT_PERSON P WITH(NOLOCK) ON P.PERSON_ID=PA.PERSON_ID&#xD;&#xA; LEFT JOIN SGT_PERSON_ACCOUNT_ELIGIBILITY ELG WITH(NOLOCK) ON ELG.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA; LEFT JOIN SGT_PERSON_BATCH_FLAGS FLG WITH(NOLOCK) ON FLG.PERSON_ID = P.PERSON_ID&#xD;&#xA; WHERE EXISTS (SELECT 1 FROM SGT_PERSON_ACCOUNT PA052 WHERE PA052.PLAN_ID = 7 AND PA052.PERSON_ID = P.PERSON_ID AND PA052.SPECIAL_ACCOUNT='Y')   &#xD;&#xA; --where&#xD;&#xA; AND ((@TempTable = 1 and P.MPI_PERSON_ID IN (SELECT MPI_PERSON_ID FROM TEMP_TABLE_FOR_ANNUAL_BATCHES)) OR  @TempTable = 0)&#xD;&#xA;    GROUP BY PARC.PERSON_ACCOUNT_ID,P.SSN, ELG.VESTED_DATE, FLG.BIS_FLAG,PA.STATUS_VALUE&#xD;&#xA; HAVING(&#xD;&#xA;    SUM(CASE WHEN ((PARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt;= @PREVCUTOFFDATEADJS AND ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('PMNT','LALC')) OR&#xD;&#xA; (PARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt; @PREVCUTOFFDATEADJSPLUSONEDAY AND ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') = ('LALC')) --PIR 630&#xD;&#xA;  OR    (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') = 'PMNT' AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt;= CAST(CAST(@COMPUTATIONYEAR AS VARCHAR(4))+'1231' AS DATETIME))) THEN ISNULL(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0.00) ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('FORF','BRDG') AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  --OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  --OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  --OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  --OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  --OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  )&#xD;&#xA;       OR EXISTS (SELECT 1 FROM SGT_ALL_IAP_WORKHISTORY_4_SNAPSHOT X WHERE X.SSN = P.SSN)&#xD;&#xA;&#xD;&#xA; &#xD;&#xA;-------------------------------------- L52 SPL ACCT SECTION ENDS ---------------------------------------------------------------------------------    &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    UNION&#xD;&#xA; &#xD;&#xA; -------------------------------------- L161 SPL ACCT SECTION STARTS ---------------------------------------------------------------------------------    &#xD;&#xA;      &#xD;&#xA;     SELECT PARC.PERSON_ACCOUNT_ID,DBO.fn_GET_DECRYPTED_TEXT(P.SSN) AS SSN,&#xD;&#xA; (@COMPUTATIONYEAR+1) AS COMPUTATION_YEAR, ELG.VESTED_DATE, FLG.BIS_FLAG,PA.STATUS_VALUE,&#xD;&#xA; (0.0) AS SYSTEM_BEGINNING_BALANCE,&#xD;&#xA; (0.0) AS L52_SPECIAL_ACCOUNT_AMOUNT,&#xD;&#xA; SUM(CASE WHEN ((PARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt;= @PREVCUTOFFDATEADJS AND ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('PMNT','LALC')) OR&#xD;&#xA; (PARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt; @PREVCUTOFFDATEADJSPLUSONEDAY AND ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') = ('LALC')) --PIR 630&#xD;&#xA; OR    (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') = 'PMNT' AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt;= CAST(CAST(@COMPUTATIONYEAR AS VARCHAR(4))+'1231' AS DATETIME))) THEN ISNULL(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0.00) ELSE 0.00 END) AS L161_SPECIAL_ACCOUNT_AMOUNT,&#xD;&#xA; SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('FORF','BRDG') AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS FORFEITED_BALANCE,&#xD;&#xA; &#xD;&#xA; SUM(CASE WHEN (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS)&#xD;&#xA; OR (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS) THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LATE_ALLOC1_AMOUNT,&#xD;&#xA; &#xD;&#xA; SUM(CASE WHEN (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS) &#xD;&#xA;  OR (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS) THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LATE_ALLOC2_AMOUNT,&#xD;&#xA; &#xD;&#xA; SUM(CASE WHEN (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS)&#xD;&#xA; OR (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS) THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LATE_ALLOC3_AMOUNT,&#xD;&#xA; &#xD;&#xA; SUM(CASE WHEN &#xD;&#xA; (&#xD;&#xA;ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS) &#xD;&#xA;  OR (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS) THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LATE_ALLOC4_AMOUNT,&#xD;&#xA; &#xD;&#xA; SUM(CASE WHEN &#xD;&#xA; (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS)&#xD;&#xA;  OR (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS) THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LATE_ALLOC5_AMOUNT,&#xD;&#xA; &#xD;&#xA; --SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LATE_ALLOC1_AMOUNT,&#xD;&#xA; --SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LATE_ALLOC2_AMOUNT,&#xD;&#xA; --SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LATE_ALLOC3_AMOUNT,&#xD;&#xA; --SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LATE_ALLOC4_AMOUNT,&#xD;&#xA; --SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LATE_ALLOC5_AMOUNT,&#xD;&#xA; SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS QUATERLY_ALLOCATIONS_AMOUNT, &#xD;&#xA; SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS RETIREMENT_YEAR_ALLOCATION2_AMOUNT,&#xD;&#xA; SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS RETIREMENT_YEAR_ALLOCATION4_AMOUNT,&#xD;&#xA; (0.00) AS PAYOUTS,&#xD;&#xA; (0.00) AS UNALLOCABLE_AMOUNT,&#xD;&#xA; (0.0)  AS LATE_INELIGIBLE_HOURS,&#xD;&#xA; (0.00) AS LATE_INELIGIBLE_HOURLY_CONTRIBUTION_AMOUNT,&#xD;&#xA; (0.0)  AS CURRENT_YEAR_INELIGIBLE_HOURS,&#xD;&#xA; (0.00) AS CURRENT_YEAR_INELIGIBLE_CONTRIBUTION_AMOUNT,&#xD;&#xA; (0.0)  AS ELIGIBLE_HOURS,&#xD;&#xA; (0.00) AS HOURLY_CONTRIBUTION_AMOUNT,&#xD;&#xA; (0.00) AS LATE_INELGIBILE_COMPENSATION_AMOUNT,&#xD;&#xA; (0.00) AS CURRENT_YEAR_INELGIBILE_COMPENSATION_AMOUNT,&#xD;&#xA; (0.00) AS OVERLIMIT_CONTRIBUTIONS_AMOUNT,&#xD;&#xA; (0.00) AS PERCENTAGE_OF_COMPENSATION_AMOUNT,&#xD;&#xA; (1002) AS IAP_ALLOCATION_CATEGORY_ID,&#xD;&#xA; (NULL) AS IAP_ALLOCATION_CATEGORY_VALUE,&#xD;&#xA; (0.0) AS TOTAL_INELIGIBLE_IAP_LATE_HOURS,&#xD;&#xA; (0.0) AS TOTAL_IAP_HOURS,&#xD;&#xA; 'L161' AS FUND_TYPE,&#xD;&#xA; SUM(CASE WHEN PARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONYEAR THEN ISNULL(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0.00) ELSE 0.00 END) AS BEGINNING_BALANCE&#xD;&#xA; FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK) &#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PA.PERSON_ACCOUNT_ID=PARC.PERSON_ACCOUNT_ID AND PA.PLAN_ID=1&#xD;&#xA; INNER JOIN SGT_PERSON P WITH(NOLOCK) ON P.PERSON_ID=PA.PERSON_ID&#xD;&#xA; LEFT JOIN SGT_PERSON_ACCOUNT_ELIGIBILITY ELG WITH(NOLOCK) ON ELG.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA; LEFT JOIN SGT_PERSON_BATCH_FLAGS FLG WITH(NOLOCK) ON FLG.PERSON_ID = P.PERSON_ID&#xD;&#xA; where EXISTS (SELECT 1 FROM SGT_PERSON_ACCOUNT PA161 WHERE PA161.PLAN_ID = 8 AND PA161.PERSON_ID = P.PERSON_ID AND PA161.SPECIAL_ACCOUNT='Y') &#xD;&#xA; --where &#xD;&#xA; AND ((@TempTable = 1 and P.MPI_PERSON_ID IN (SELECT MPI_PERSON_ID FROM TEMP_TABLE_FOR_ANNUAL_BATCHES)) OR  @TempTable = 0)&#xD;&#xA; GROUP BY PARC.PERSON_ACCOUNT_ID,P.SSN, ELG.VESTED_DATE, FLG.BIS_FLAG,PA.STATUS_VALUE&#xD;&#xA; HAVING&#xD;&#xA;    ( &#xD;&#xA;    SUM(CASE WHEN ((PARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt;= @PREVCUTOFFDATEADJS AND ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('PMNT','LALC')) OR&#xD;&#xA; (PARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt; @PREVCUTOFFDATEADJSPLUSONEDAY AND ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') = ('LALC')) --PIR 630&#xD;&#xA; OR    (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') = 'PMNT' AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt;= CAST(CAST(@COMPUTATIONYEAR AS VARCHAR(4))+'1231' AS DATETIME))) THEN ISNULL(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0.00) ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  &#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('FORF','BRDG') AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  &#xD;&#xA;  --OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('FORF','BRDG') AND PARC.COMPUTATIONAL_YEAR=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  --OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  --OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  --OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  --OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  --OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  )&#xD;&#xA;  OR EXISTS (SELECT 1 FROM SGT_ALL_IAP_WORKHISTORY_4_SNAPSHOT X WHERE X.SSN = P.SSN)&#xD;&#xA;&#xD;&#xA;-------------------------------------- L161 SPL ACCT SECTION ENDS ---------------------------------------------------------------------------------    &#xD;&#xA;&#xD;&#xA;END&#xD;&#xA;ELSE&#xD;&#xA;&#xD;&#xA;BEGIN&#xD;&#xA; SELECT '',0 FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK) WHERE 1=2&#xD;&#xA;END&#xD;&#xA;&#xD;&#xA;">
      <parameters>
        <parameter ID="@TempTable" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPAllocationsDetailsForPersonOverview" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM(&#xD;&#xA;SELECT       COMPUTATIONAL_YEAR,MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_INVT,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_FRFT,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC3' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC3,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_INVT,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_FRFT,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'AFFL' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_AFFL,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'NAFF' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_NONAFFL,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'NAAF' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_BOTH,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5&#xD;&#xA;FROM        SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;WHERE        PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND TRANSACTION_TYPE_VALUE &lt;&gt; 'PMNT'  &#xD;&#xA;GROUP BY    COMPUTATIONAL_YEAR&#xD;&#xA;)x where not ((x.ALLOC1 =0 and x.ALLOC2=0 and x.ALLOC2_INVT=0 and x.ALLOC2_FRFT=0 and x.ALLOC4=0 and x.ALLOC4_INVT=0 and x.ALLOC4_FRFT=0 and x.ALLOC5=0) and x.COMPUTATIONAL_YEAR =( select max(computational_year) from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION where PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND TRANSACTION_TYPE_VALUE &lt;&gt; 'PMNT'  ))">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPAllocationYearlyDetail" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PA.PERSON_ACCOUNT_ID=PARC.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE PARC.PERSON_ACCOUNT_ID=@PERSON_ACCOUNT_ID&#xD;&#xA;AND ((ISNULL(@IS_PAYMENT,'N')='N' AND PARC.TRANSACTION_TYPE_VALUE &lt;&gt; 'PMNT' AND PARC.COMPUTATIONAL_YEAR=@COMPUTATIONAL_YEAR) &#xD;&#xA;OR  (@IS_PAYMENT = 'Y' AND PARC.TRANSACTION_TYPE_VALUE = 'PMNT' AND YEAR(PARC.TRANSACTION_DATE)=@COMPUTATIONAL_YEAR))&#xD;&#xA;ORDER BY PARC.COMPUTATIONAL_YEAR DESC,TRANSACTION_DATE,TRANSACTION_TYPE_VALUE, CONTRIBUTION_TYPE_VALUE,CONTRIBUTION_SUBTYPE_VALUE&#xD;&#xA;">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@COMPUTATIONAL_YEAR" sfwDataType="int" />
        <parameter ID="@IS_PAYMENT" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetLocal52SpecialAccountDetailsForPersonOverview" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT L52.COMPUTATIONAL_YEAR,MAX(L52.EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;SUM(L52.ALLOC1) AS ALLOC1 ,&#xD;&#xA;SUM(L52.ALLOC4) AS ALLOC4,&#xD;&#xA;SUM(L52.TOTAL_PAYMENT) AS TOTAL_PAYMENT&#xD;&#xA;FROM &#xD;&#xA;( &#xD;&#xA;&#xD;&#xA; SELECT  COMPUTATIONAL_YEAR,MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;    SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1'  THEN ISNULL(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0) ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;    SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4'  AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN ISNULL(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0) ELSE 0.00 END) AS ALLOC4,&#xD;&#xA;    TOTAL_PAYMENT = 0.00&#xD;&#xA; FROM  SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA; WHERE  PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND ISNULL(TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT'&#xD;&#xA; GROUP BY COMPUTATIONAL_YEAR&#xD;&#xA; HAVING  SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN ISNULL(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0) ELSE 0.00 END) &lt;&gt; 0 OR&#xD;&#xA;    SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN ISNULL(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0) ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA; UNION&#xD;&#xA; SELECT  YEAR(TRANSACTION_DATE) AS COMPUTATIONAL_YEAR,MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;    0.00 AS ALLOC1,&#xD;&#xA;    0.00 AS ALLOC4,&#xD;&#xA;    TOTAL_PAYMENT = SUM(ISNULL(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0))&#xD;&#xA; FROM  SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA; WHERE  PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND ISNULL(TRANSACTION_TYPE_VALUE,'ADJS') = 'PMNT'&#xD;&#xA; GROUP BY YEAR(TRANSACTION_DATE)&#xD;&#xA; HAVING  SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN ISNULL(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0) ELSE 0.00 END) &lt;&gt; 0 OR&#xD;&#xA;    SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN ISNULL(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0) ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;)L52&#xD;&#xA;GROUP BY L52.COMPUTATIONAL_YEAR&#xD;&#xA;ORDER BY L52.COMPUTATIONAL_YEAR">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetLocal161SpecialAccountDetailsForPersonOverview" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT L161.COMPUTATIONAL_YEAR,MAX(L161.EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;SUM(L161.ALLOC1) AS ALLOC1 ,&#xD;&#xA;SUM(L161.ALLOC4) AS ALLOC4,&#xD;&#xA;SUM(L161.TOTAL_PAYMENT) AS TOTAL_PAYMENT&#xD;&#xA;FROM &#xD;&#xA;( &#xD;&#xA;&#xD;&#xA; SELECT  COMPUTATIONAL_YEAR,MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;    SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1'  THEN ISNULL(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0) ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;    SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4'  AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN ISNULL(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0) ELSE 0.00 END) AS ALLOC4,&#xD;&#xA;    TOTAL_PAYMENT = 0.00&#xD;&#xA; FROM        SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA; WHERE       PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND ISNULL(TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT'&#xD;&#xA; GROUP BY COMPUTATIONAL_YEAR&#xD;&#xA; HAVING  SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN ISNULL(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0) ELSE 0.00 END) &lt;&gt; 0 OR&#xD;&#xA;    SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN ISNULL(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0) ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA; UNION&#xD;&#xA; SELECT  YEAR(TRANSACTION_DATE) AS COMPUTATIONAL_YEAR,MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;    0.00 AS ALLOC1,&#xD;&#xA;    0.00 AS ALLOC4,&#xD;&#xA;    TOTAL_PAYMENT = SUM(ISNULL(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0))&#xD;&#xA; FROM        SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA; WHERE       PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND ISNULL(TRANSACTION_TYPE_VALUE,'ADJS') = 'PMNT'&#xD;&#xA; GROUP BY YEAR(TRANSACTION_DATE)&#xD;&#xA; HAVING  SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN ISNULL(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0) ELSE 0.00 END) &lt;&gt; 0 OR&#xD;&#xA;    SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN ISNULL(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0) ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;)L161&#xD;&#xA;GROUP BY L161.COMPUTATIONAL_YEAR&#xD;&#xA;ORDER BY L161.COMPUTATIONAL_YEAR">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPRetriementContribution" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  PA.PERSON_ACCOUNT_ID,SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC2' AND PARC.CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC2' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_INVT,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC2' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_FRFT,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC3' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC3,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC4' AND PARC.CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC4' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_INVT,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC4' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_FRFT,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC5' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'AFFL' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_AFFL,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC5' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'NAFF' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_NONAFFL,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC5' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'NAAF' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_BOTH,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN PARC.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS L52ALLOC1,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN PARC.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS L161ALLOC1,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5&#xD;&#xA;FROM  SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT PA ON PA.PERSON_ACCOUNT_ID=PARC.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PLAN PL ON PL.PLAN_ID=PA.PLAN_ID&#xD;&#xA;INNER JOIN SGT_PERSON P ON PA.PERSON_ID=P.PERSON_ID&#xD;&#xA;WHERE  P.PERSON_ID=@PERSON_ID AND PL.PLAN_CODE='IAP'&#xD;&#xA;GROUP BY PA.PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPRetirementContributionForNegatingForfeiture" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  PARC.PERSON_ACCOUNT_ID,PARC.COMPUTATIONAL_YEAR,SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC2' AND PARC.CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC2' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_INVT,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC2' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_FRFT,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC3' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC3,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC4' AND PARC.CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC4' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_INVT,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC4' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_FRFT,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC5' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'AFFL' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_AFFL,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC5' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'NAFF' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_NONAFFL,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC5' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'NAAF' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_BOTH,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN PARC.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS L52ALLOC1,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN PARC.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS L161ALLOC1,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC5' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5&#xD;&#xA;FROM  SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK)&#xD;&#xA;WHERE  PARC.PERSON_ACCOUNT_ID = @PERSONACCOUNTID&#xD;&#xA; AND  PARC.TRANSACTION_TYPE_VALUE IN ('FORF','BRDG')&#xD;&#xA;GROUP BY PARC.PERSON_ACCOUNT_ID,PARC.COMPUTATIONAL_YEAR">
      <parameters>
        <parameter ID="@PERSONACCOUNTID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPBalanceAsofYear" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--68700&#xD;&#xA;&#xD;&#xA;SELECT SUM(ISNULL(SPARC.IAP_BALANCE_AMOUNT,0)) AS IAP_BALANCE_AMOUNT,SUM(ISNULL(SPARC.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0.00)) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,&#xD;&#xA;    SUM(ISNULL(SPARC.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0.00)) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT, &#xD;&#xA;       MAX(CASE WHEN ISNULL(TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' THEN SPARC.EFFECTIVE_DATE ELSE NULL END) AS EFFECTIVE_DATE,&#xD;&#xA;       SUM(CASE WHEN ISNULL(SPARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' THEN &#xD;&#xA;       ISNULL(SPARC.IAP_BALANCE_AMOUNT,0.00) END) AS IAP_BALANCE_AMOUNT_PRE_RTMT_DEATH,&#xD;&#xA;    SUM(CASE WHEN ISNULL(SPARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' THEN &#xD;&#xA;        ISNULL(SPARC.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0.00) END) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT_PRE_RTMT_DEATH,&#xD;&#xA;    SUM(CASE WHEN ISNULL(SPARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' THEN &#xD;&#xA;        ISNULL(SPARC.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0.00) END) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT_PRE_RTMT_DEATH &#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK) &#xD;&#xA;WHERE SPARC.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;AND ((ISNULL(TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND SPARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONAL_YEAR)&#xD;&#xA;OR TRANSACTION_TYPE_VALUE = 'PMNT')">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@COMPUTATIONAL_YEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPRetirementContributionToNegateBridging" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  PARC.PERSON_ACCOUNT_ID,PARC.COMPUTATIONAL_YEAR,SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC2' AND PARC.CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC2' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_INVT,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC2' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_FRFT,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC3' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC3,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC4' AND PARC.CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC4' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_INVT,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC4' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_FRFT,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC5' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'AFFL' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_AFFL,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC5' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'NAFF' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_NONAFFL,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC5' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'NAAF' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_BOTH,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN PARC.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS L52ALLOC1,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN PARC.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS L161ALLOC1,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC5' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5&#xD;&#xA;FROM  SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK)&#xD;&#xA;WHERE  PARC.PERSON_ACCOUNT_ID = @PERSONACCOUNTID&#xD;&#xA; AND  PARC.TRANSACTION_TYPE_VALUE = 'BRDG'&#xD;&#xA; AND   PARC.COMPUTATIONAL_YEAR = @COMPUTATIONYEAR&#xD;&#xA;GROUP BY PARC.PERSON_ACCOUNT_ID,PARC.COMPUTATIONAL_YEAR">
      <parameters>
        <parameter ID="@PERSONACCOUNTID" sfwDataType="int" />
        <parameter ID="@COMPUTATIONYEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPRetirementContributionToNegateQYAndRY" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  PARC.PERSON_ACCOUNT_ID,PARC.COMPUTATIONAL_YEAR,PARC.TRANSACTION_TYPE_VALUE,PARC.EFFECTIVE_DATE,(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC2' AND PARC.CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC2' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_INVT,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC2' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_FRFT,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC3' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC3,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC4' AND PARC.CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC4' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_INVT,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC4' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_FRFT,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC5' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'AFFL' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_AFFL,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC5' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'NAFF' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_NONAFFL,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC5' AND PARC.CONTRIBUTION_SUBTYPE_VALUE = 'NAAF' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_BOTH,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN PARC.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS L52ALLOC1,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN PARC.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS L161ALLOC1,&#xD;&#xA;   SUM(CASE WHEN PARC.CONTRIBUTION_TYPE_VALUE = 'ALC5' THEN PARC.IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5&#xD;&#xA;FROM  SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK)&#xD;&#xA;WHERE  PARC.TRANSACTION_TYPE_VALUE IN ('QALC','RETR')&#xD;&#xA; AND   PARC.REFERENCE_ID = @CALCULATIONID&#xD;&#xA;GROUP BY PARC.PERSON_ACCOUNT_ID,PARC.COMPUTATIONAL_YEAR,PARC.TRANSACTION_TYPE_VALUE,PARC.EFFECTIVE_DATE,PARC.IAP_BALANCE_AMOUNT,PARC.CONTRIBUTION_TYPE_VALUE,&#xD;&#xA;PARC.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,PARC.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT">
      <parameters>
        <parameter ID="@CALCULATIONID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckIfUVHPAmountPresent" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WHERE PERSON_ACCOUNT_ID=@PERSON_ACCOUNT_ID HAVING( SUM(UVHP_AMOUNT) &gt; 0 )">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckIfEEAmountPresent" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WHERE PERSON_ACCOUNT_ID=@PERSON_ACCOUNT_ID HAVING( SUM(EE_CONTRIBUTION_AMOUNT) &gt; 0 )">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckEE_UVHP_AmpuntForWithdrawal" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT CASE WHEN SUM(SPARC.EE_CONTRIBUTION_AMOUNT) IS NULL THEN 0.0 ELSE SUM(SPARC.EE_CONTRIBUTION_AMOUNT) END,&#xD;&#xA;CASE WHEN SUM(SPARC.UVHP_AMOUNT) IS NULL THEN 0.0 ELSE SUM(SPARC.UVHP_AMOUNT) END&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC&#xD;&#xA;INNER JOIN SGT_PERSON SP WITH(NOLOCK) ON SP.MPI_PERSON_ID = @MPI_PERSON_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT SPA WITH(NOLOCK) ON SPA.PERSON_ID = SP.PERSON_ID&#xD;&#xA;WHERE SPARC.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID AND SPA.PLAN_ID = @PLAN_ID&#xD;&#xA;">
      <parameters>
        <parameter ID="@MPI_PERSON_ID" sfwDataType="string" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckIAP_Special_AmountForWithdrawal" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  PARC.PERSON_ACCOUNT_ID,PARC.COMPUTATIONAL_YEAR,SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC2,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC2_INVT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC2_FRFT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC3' THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC3,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC4,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC4_INVT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC4_FRFT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'AFFL' THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC5_AFFL,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'NAFF' THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC5_NONAFFL,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'NAAF' THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC5_BOTH,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) AS ALLOC5,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN ISNULL(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0.00) ELSE 0.00 END) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN ISNULL(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0.00) ELSE 0.00 END) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT&#xD;&#xA;&#xD;&#xA;FROM &#xD;&#xA;(select distinct computational_year, person_account_id from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION &#xD;&#xA;&#xD;&#xA;where PERSON_ACCOUNT_ID =@PERSONACCOUNTID) PARC&#xD;&#xA;left outer join &#xD;&#xA;(select distinct computational_year, person_account_id,CONTRIBUTION_TYPE_VALUE,CONTRIBUTION_SUBTYPE_VALUE,IAP_BALANCE_AMOUNT,LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,LOCAL52_SPECIAL_ACCT_BAL_AMOUNT from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION  &#xD;&#xA;WHERE  PERSON_ACCOUNT_ID = @PERSONACCOUNTID  AND  COMPUTATIONAL_YEAR &gt;=  @COMPUTATIONYEAR AND TRANSACTION_TYPE_VALUE &lt;&gt; 'PMNT') PARC1 on PARC.PERSON_ACCOUNT_ID = PARC1.PERSON_ACCOUNT_ID and PARC.COMPUTATIONAL_YEAR = PARC1.COMPUTATIONAL_YEAR&#xD;&#xA; &#xD;&#xA;GROUP BY  parc.PERSON_ACCOUNT_ID, parc.COMPUTATIONAL_YEAR">
      <parameters>
        <parameter ID="@MPI_PERSON_ID" sfwDataType="string" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetEarliestComputationYear" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT MIN(COMPUTATIONAL_YEAR) FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;WHERE CONTRIBUTION_TYPE_VALUE IN ('EE', 'UVHP')">
      <parameters />
    </query>
    <query ID="GetAllEE&amp;UVHPContributionAmountsUptoCompYr" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT SPARC.PERSON_ACCOUNT_ID,ISNULL(T.EE_CONTR_AMT,0),ISNULL(T.EE_INT_AMT,0),ISNULL(T.UVHP_AMT,0),ISNULL(T.UVHP_INT_AMT,0),ISNULL(T1.CURR_YEAR_EE_CONTR_AMT,0),&#xD;&#xA;ISNULL(T1.CURR_YEAR_EE_INT_AMT,0),ISNULL(T1.CURR_YEAR_UVHP_AMT,0),ISNULL(T1.CURR_YEAR_UVHP_INT_AMT,0),ISNULL(T2.EE_CONTR_AMT_WDRL,0),ISNULL(T2.EE_INT_AMT_WDRL,0),&#xD;&#xA;ISNULL(T2.UVHP_AMT_WDRL,0),ISNULL(T2.UVHP_INT_AMT_WDRL,0),ISNULL(T3.CURR_YEAR_EE_CONTR_AMT_WDRL,0),ISNULL(T3.CURR_YEAR_EE_INT_AMT_WDRL,0),ISNULL(T3.CURR_YEAR_UVHP_AMT_WDRL,0),&#xD;&#xA;ISNULL(T3.CURR_YEAR_UVHP_INT_AMT_WDRL,0),SPARC.CONTRIBUTION_SUBTYPE_VALUE,SPARC.CONTRIBUTION_TYPE_VALUE,T5.LATE_TRANSACTION_DATE,T5.LATE_EFFECTIVE_DATE,T5.WDRL_TRANSACTION_DATE,&#xD;&#xA;MAX(SBA.RETIREMENT_DATE) RETIREMENT_DATE ,year(OPD.FORFEITURE_DATE) AS FORFEITURE_YEAR&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK)    &#xD;&#xA;JOIN SGT_PERSON_ACCOUNT SPA WITH(NOLOCK) ON SPA.PERSON_ACCOUNT_ID = SPARC.PERSON_ACCOUNT_ID AND SPA.PLAN_ID = 2 &#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT_ELIGIBILITY OPD ON OPD.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION SBA WITH(NOLOCK) ON SBA.PERSON_ID = SPA.PERSON_ID AND (SBA.BENEFIT_TYPE_VALUE = 'RTMT' or SBA.BENEFIT_TYPE_VALUE = 'DSBL') AND SBA.APPLICATION_STATUS_VALUE = 'APPR'   &#xD;&#xA;LEFT OUTER JOIN (SELECT C.PERSON_ACCOUNT_ID,C.CONTRIBUTION_TYPE_VALUE,C.CONTRIBUTION_SUBTYPE_VALUE,SUM(C.EE_CONTRIBUTION_AMOUNT)EE_CONTR_AMT,SUM(C.EE_INT_AMOUNT)EE_INT_AMT,&#xD;&#xA;                        SUM(C.UVHP_AMOUNT)UVHP_AMT,SUM(C.UVHP_INT_AMOUNT)UVHP_INT_AMT&#xD;&#xA;                        FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION C WITH(NOLOCK) WHERE C.COMPUTATIONAL_YEAR &lt; =   @COMPUTATIONAL_YEAR AND&#xD;&#xA;                        C.CONTRIBUTION_TYPE_VALUE IN ('EE','UVHP') AND C.CONTRIBUTION_SUBTYPE_VALUE IN ('VEST','NVES') AND (C.TRANSACTION_TYPE_VALUE is null or C.TRANSACTION_TYPE_VALUE &lt;&gt; 'PMNT') &#xD;&#xA;                         GROUP BY C.PERSON_ACCOUNT_ID, C.CONTRIBUTION_TYPE_VALUE,C.CONTRIBUTION_SUBTYPE_VALUE  &#xD;&#xA;                         ) T ON T.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID AND T.CONTRIBUTION_TYPE_VALUE = SPARC.CONTRIBUTION_TYPE_VALUE  AND T.CONTRIBUTION_SUBTYPE_VALUE = SPARC.CONTRIBUTION_SUBTYPE_VALUE   &#xD;&#xA;LEFT OUTER JOIN (SELECT C1.PERSON_ACCOUNT_ID,C1.CONTRIBUTION_TYPE_VALUE,C1.CONTRIBUTION_SUBTYPE_VALUE,SUM(C1.EE_CONTRIBUTION_AMOUNT)CURR_YEAR_EE_CONTR_AMT,SUM(C1.EE_INT_AMOUNT)CURR_YEAR_EE_INT_AMT,&#xD;&#xA;                        SUM(C1.UVHP_AMOUNT)CURR_YEAR_UVHP_AMT,SUM(C1.UVHP_INT_AMOUNT) CURR_YEAR_UVHP_INT_AMT &#xD;&#xA;                         FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION C1 WITH(NOLOCK) WHERE C1.COMPUTATIONAL_YEAR = @COMPUTATIONAL_YEAR + 1 AND C1.CONTRIBUTION_TYPE_VALUE IN ('EE','UVHP') AND&#xD;&#xA;                        C1.CONTRIBUTION_SUBTYPE_VALUE IN ('VEST','NVES') AND (C1.TRANSACTION_TYPE_VALUE is null or C1.TRANSACTION_TYPE_VALUE &lt;&gt; 'PMNT') &#xD;&#xA;                         GROUP BY C1.PERSON_ACCOUNT_ID,C1.CONTRIBUTION_TYPE_VALUE,C1.CONTRIBUTION_SUBTYPE_VALUE  &#xD;&#xA;                         ) T1 ON T1.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID AND T1.CONTRIBUTION_TYPE_VALUE = SPARC.CONTRIBUTION_TYPE_VALUE  AND T1.CONTRIBUTION_SUBTYPE_VALUE = SPARC.CONTRIBUTION_SUBTYPE_VALUE   &#xD;&#xA;LEFT OUTER JOIN  (SELECT C2.PERSON_ACCOUNT_ID,C2.CONTRIBUTION_TYPE_VALUE,C2.CONTRIBUTION_SUBTYPE_VALUE,SUM(C2.EE_CONTRIBUTION_AMOUNT)EE_CONTR_AMT_WDRL,SUM(C2.EE_INT_AMOUNT)EE_INT_AMT_WDRL,&#xD;&#xA;                          SUM(C2.UVHP_AMOUNT)UVHP_AMT_WDRL,SUM(C2.UVHP_INT_AMOUNT)UVHP_INT_AMT_WDRL &#xD;&#xA;                          FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION C2 WITH(NOLOCK) WHERE C2.COMPUTATIONAL_YEAR &lt; =  @COMPUTATIONAL_YEAR AND C2.CONTRIBUTION_TYPE_VALUE IN ('EE','UVHP') AND&#xD;&#xA;                          C2.CONTRIBUTION_SUBTYPE_VALUE IN ('VEST','NVES') AND C2.TRANSACTION_TYPE_VALUE = 'PMNT'  &#xD;&#xA;                          GROUP BY C2.PERSON_ACCOUNT_ID,C2.CONTRIBUTION_TYPE_VALUE,C2.CONTRIBUTION_SUBTYPE_VALUE  &#xD;&#xA;                          ) T2 ON T2.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID AND T2.CONTRIBUTION_TYPE_VALUE = SPARC.CONTRIBUTION_TYPE_VALUE AND T2.CONTRIBUTION_SUBTYPE_VALUE = SPARC.CONTRIBUTION_SUBTYPE_VALUE  &#xD;&#xA;LEFT OUTER JOIN (SELECT C3.PERSON_ACCOUNT_ID,C3.CONTRIBUTION_TYPE_VALUE,C3.CONTRIBUTION_SUBTYPE_VALUE,SUM(C3.EE_CONTRIBUTION_AMOUNT)CURR_YEAR_EE_CONTR_AMT_WDRL,SUM(C3.EE_INT_AMOUNT)CURR_YEAR_EE_INT_AMT_WDRL,&#xD;&#xA;                        SUM(C3.UVHP_AMOUNT)CURR_YEAR_UVHP_AMT_WDRL,SUM(C3.UVHP_INT_AMOUNT)CURR_YEAR_UVHP_INT_AMT_WDRL &#xD;&#xA;                         FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION C3 WITH(NOLOCK) WHERE C3.COMPUTATIONAL_YEAR = @COMPUTATIONAL_YEAR + 1 AND C3.CONTRIBUTION_TYPE_VALUE IN ('EE','UVHP') AND&#xD;&#xA;                        C3.CONTRIBUTION_SUBTYPE_VALUE IN ('VEST','NVES') AND C3.TRANSACTION_TYPE_VALUE = 'PMNT'  &#xD;&#xA;                         GROUP BY   C3.PERSON_ACCOUNT_ID,C3.CONTRIBUTION_TYPE_VALUE,C3.CONTRIBUTION_SUBTYPE_VALUE  &#xD;&#xA;                         ) T3 ON T3.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID AND T3.CONTRIBUTION_TYPE_VALUE = SPARC.CONTRIBUTION_TYPE_VALUE AND T3.CONTRIBUTION_SUBTYPE_VALUE = SPARC.CONTRIBUTION_SUBTYPE_VALUE  &#xD;&#xA;LEFT OUTER JOIN   (     SELECT C4.PERSON_ACCOUNT_ID,C4.CONTRIBUTION_TYPE_VALUE,C4.CONTRIBUTION_SUBTYPE_VALUE,T4.TRANSACTION_DATE LATE_TRANSACTION_DATE,T4.EFFECTIVE_DATE LATE_EFFECTIVE_DATE,MAX(C4.TRANSACTION_DATE)WDRL_TRANSACTION_DATE&#xD;&#xA;                              from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION C4&#xD;&#xA;                              inner join SGT_PERSON_ACCOUNT a on a.PERSON_ACCOUNT_ID = C4.PERSON_ACCOUNT_ID&#xD;&#xA;                              inner join (select distinct C5.PERSON_ACCOUNT_ID,C5.CONTRIBUTION_TYPE_VALUE,C5.CONTRIBUTION_SUBTYPE_VALUE,MIN(C5.EFFECTIVE_DATE)EFFECTIVE_DATE,MAX(C5.TRANSACTION_DATE)TRANSACTION_DATE &#xD;&#xA;                                                from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION C5 &#xD;&#xA;                                                where C5.CONTRIBUTION_TYPE_VALUE IN ('EE', 'UVHP') AND C5.TRANSACTION_TYPE_VALUE = 'PMNT' --AND YEAR(C5.TRANSACTION_DATE) &gt; YEAR(C5.EFFECTIVE_DATE)&#xD;&#xA;                                                group by C5.PERSON_ACCOUNT_ID, C5.CONTRIBUTION_TYPE_VALUE, C5.CONTRIBUTION_SUBTYPE_VALUE&#xD;&#xA;                                                )T4 on T4.PERSON_ACCOUNT_ID = C4.PERSON_ACCOUNT_ID AND T4.CONTRIBUTION_TYPE_VALUE = C4.CONTRIBUTION_TYPE_VALUE AND T4.CONTRIBUTION_SUBTYPE_VALUE = C4.CONTRIBUTION_SUBTYPE_VALUE&#xD;&#xA;                              where C4.CONTRIBUTION_TYPE_VALUE IN ('EE', 'UVHP') AND C4.TRANSACTION_TYPE_VALUE = 'PMNT' --AND C4.TRANSACTION_DATE BETWEEN T4.EFFECTIVE_DATE AND T4.TRANSACTION_DATE&#xD;&#xA;                              GROUP BY C4.PERSON_ACCOUNT_ID, C4.CONTRIBUTION_TYPE_VALUE, C4.CONTRIBUTION_SUBTYPE_VALUE, T4.TRANSACTION_DATE, T4.EFFECTIVE_DATE&#xD;&#xA;                          )T5 ON T5.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID AND T5.CONTRIBUTION_TYPE_VALUE = SPARC.CONTRIBUTION_TYPE_VALUE AND T5.CONTRIBUTION_SUBTYPE_VALUE = SPARC.CONTRIBUTION_SUBTYPE_VALUE  &#xD;&#xA;WHERE SPARC.CONTRIBUTION_TYPE_VALUE IN ('EE','UVHP') AND SPARC.CONTRIBUTION_SUBTYPE_VALUE IN ('VEST','NVES')&#xD;&#xA;GROUP BY SPARC.PERSON_ACCOUNT_ID,SPARC.CONTRIBUTION_TYPE_VALUE,SPARC.CONTRIBUTION_SUBTYPE_VALUE,T.EE_CONTR_AMT,T.EE_INT_AMT,T.UVHP_AMT,T.UVHP_INT_AMT,T1.CURR_YEAR_EE_CONTR_AMT,&#xD;&#xA;T1.CURR_YEAR_EE_INT_AMT,T1.CURR_YEAR_UVHP_AMT,T1.CURR_YEAR_UVHP_INT_AMT,T2.EE_CONTR_AMT_WDRL,T2.EE_INT_AMT_WDRL,T2.UVHP_AMT_WDRL,T2.UVHP_INT_AMT_WDRL,T3.CURR_YEAR_EE_CONTR_AMT_WDRL,&#xD;&#xA;T3.CURR_YEAR_EE_INT_AMT_WDRL,T3.CURR_YEAR_UVHP_AMT_WDRL,T3.CURR_YEAR_UVHP_INT_AMT_WDRL,T5.LATE_TRANSACTION_DATE,T5.LATE_EFFECTIVE_DATE,T5.WDRL_TRANSACTION_DATE,year(OPD.FORFEITURE_DATE)">
      <parameters>
        <parameter ID="@COMPUTATIONAL_YEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetTotalEEContribution" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(SPARC.EE_CONTRIBUTION_AMOUNT), SUM(SPARC.EE_INT_AMOUNT), MAX(SPARC.TRANSACTION_DATE)&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK)&#xD;&#xA;WHERE SPARC.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID &#xD;&#xA;GROUP BY SPARC.PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetEE&amp;UVHPPartialInterest" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT CASE WHEN CONTRIBUTION_TYPE_VALUE = 'EE' THEN EE_INT_AMOUNT&#xD;&#xA;WHEN CONTRIBUTION_TYPE_VALUE = 'UVHP' THEN UVHP_INT_AMOUNT ELSE 0.0 END,TRANSACTION_TYPE_VALUE&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION &#xD;&#xA;WHERE TRANSACTION_TYPE_VALUE='INTR' AND REFERENCE_ID = @REFERENCE_ID&#xD;&#xA;AND CONTRIBUTION_TYPE_VALUE = @CONTRIBUTION_TYPE_VALUE">
      <parameters>
        <parameter ID="@REFERENCE_ID" sfwDataType="int" />
        <parameter ID="@CONTRIBUTION_TYPE_VALUE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetEEContributionUptoEffectiveDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(SPARC.EE_CONTRIBUTION_AMOUNT), SUM(EE_INT_AMOUNT)&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK)&#xD;&#xA;WHERE SPARC.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID &#xD;&#xA;AND SPARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONAL_YEAR &#xD;&#xA;AND SPARC.EFFECTIVE_DATE &lt;= @EFFECTIVE_DATE &#xD;&#xA;GROUP BY SPARC.PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@COMPUTATIONAL_YEAR" sfwDataType="int" />
        <parameter ID="@EFFECTIVE_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetTotalEEandUVHPContributionForMPIPlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(SPARC.EE_CONTRIBUTION_AMOUNT), SUM(SPARC.EE_INT_AMOUNT),SUM(SPARC.UVHP_AMOUNT),SUM(SPARC.UVHP_INT_AMOUNT),MAX(SPARC.TRANSACTION_DATE)&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK)&#xD;&#xA;WHERE SPARC.PERSON_ACCOUNT_ID =  @PERSON_ACCOUNT_ID&#xD;&#xA;GROUP BY SPARC.PERSON_ACCOUNT_ID&#xD;&#xA;">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadEEContributions" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * &#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA;SELECT SPARC.COMPUTATIONAL_YEAR, &#xD;&#xA;SUM(CASE WHEN SPARC.TRANSACTION_TYPE_VALUE&lt;&gt;'PMNT' OR SPARC.TRANSACTION_TYPE_VALUE Is NULL  THEN SPARC.EE_CONTRIBUTION_AMOUNT ELSE 0 END  ) AS EE_CONTRIBUTION_AMOUNT, &#xD;&#xA;SUM(CASE WHEN SPARC.TRANSACTION_TYPE_VALUE&lt;&gt;'PMNT' OR SPARC.TRANSACTION_TYPE_VALUE Is NULL  THEN SPARC.EE_INT_AMOUNT ELSE 0 END) AS EE_INT_AMOUNT,&#xD;&#xA;'Contributions' AS TRANSACTION_TYPE_VALUE,&#xD;&#xA;SPARC.EFFECTIVE_DATE&#xD;&#xA; FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC&#xD;&#xA;JOIN SGT_PERSON_ACCOUNT SPA ON&#xD;&#xA;SPARC.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE SPA.PERSON_ID = @PERSON_ID AND SPA.PLAN_ID = @PLAN_ID &#xD;&#xA;GROUP BY SPARC.COMPUTATIONAL_YEAR,SPARC.EFFECTIVE_DATE&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT SPARC.COMPUTATIONAL_YEAR, &#xD;&#xA;SUM(CASE WHEN SPARC.TRANSACTION_TYPE_VALUE='PMNT'  THEN SPARC.EE_CONTRIBUTION_AMOUNT ELSE 0 END  ) AS EE_CONTRIBUTION_AMOUNT, &#xD;&#xA;SUM(CASE WHEN SPARC.TRANSACTION_TYPE_VALUE='PMNT'    THEN SPARC.EE_INT_AMOUNT ELSE 0 END) AS EE_INT_AMOUNT,&#xD;&#xA;'Withdrawal' AS TRANSACTION_TYPE_VALUE,&#xD;&#xA;SPARC.EFFECTIVE_DATE&#xD;&#xA; FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC&#xD;&#xA;JOIN SGT_PERSON_ACCOUNT SPA ON&#xD;&#xA;SPARC.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE SPA.PERSON_ID = @PERSON_ID AND SPA.PLAN_ID = @PLAN_ID &#xD;&#xA;&#xD;&#xA;GROUP BY SPARC.COMPUTATIONAL_YEAR,SPARC.EFFECTIVE_DATE&#xD;&#xA;)&#xD;&#xA;RET &#xD;&#xA;where  (EE_CONTRIBUTION_AMOUNT IS NOT NULL AND EE_CONTRIBUTION_AMOUNT &lt;&gt; 0) OR (EE_INT_AMOUNT IS NOT NULL AND EE_INT_AMOUNT &lt;&gt; 0)&#xD;&#xA;ORDER BY COMPUTATIONAL_YEAR, EFFECTIVE_DATE, TRANSACTION_TYPE_VALUE">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckIfNonVestedEEIsPresent" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;  COUNT(*) &#xA;FROM&#xA;  SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK) &#xA;WHERE&#xA;  PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND&#xA;   COMPUTATIONAL_YEAR &lt; =  @COMPUTATIONAL_YEAR HAVING( SUM(EE_CONTRIBUTION_AMOUNT) &gt; 0 )">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@COMPUTATIONAL_YEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetParticipantInfo4CategoryDetermination" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="---GetParticipantInfo4CategoryDetermination&#xD;&#xA;DECLARE @COMPUTATIONYEAR INT&#xD;&#xA;DECLARE @PREVCUTOFFDATEPLUSONEDAY DATE&#xD;&#xA;DECLARE @CURRCUTOFFDATE DATE&#xD;&#xA;DECLARE @CURRCUTOFFDATEADJS DATE&#xD;&#xA;DECLARE @PREVCUTOFFDATEADJS DATE&#xD;&#xA;DECLARE @PREVCUTOFFDATEADJSPLUSONEDAY DATE&#xD;&#xA;&#xD;&#xA;SELECT TOP 1 @COMPUTATIONYEAR = COMPUTATION_YEAR FROM SGT_IAP_ALLOCATION_SUMMARY WITH(NOLOCK) ORDER BY COMPUTATION_YEAR DESC&#xD;&#xA;&#xD;&#xA;select @CURRCUTOFFDATE = pe.cutoffdate from PILLARS.dbo.Period pe&#xD;&#xA;inner join PILLARS.dbo.Pensionyear py on py.enddate = pe.qualifyingenddate&#xD;&#xA;where py.pensionyear = @COMPUTATIONYEAR + 1 &#xD;&#xA;&#xD;&#xA;select @PREVCUTOFFDATEPLUSONEDAY = &#xD;&#xA;DATEADD(DAY,1,pe.cutoffdate) from PILLARS.dbo.Period pe&#xD;&#xA;inner join PILLARS.dbo.Pensionyear py on py.enddate = pe.qualifyingenddate&#xD;&#xA;where py.pensionyear = @COMPUTATIONYEAR &#xD;&#xA;&#xD;&#xA;SELECT  @PREVCUTOFFDATEADJS = ADJ_CUTOFF_DATE_TO from SGT_IAP_ALLOCATION_CUTOFF_DATES where COMPUTATIONAL_YEAR = @COMPUTATIONYEAR --'04/30/2014'&#xD;&#xA;SELECT @PREVCUTOFFDATEADJSPLUSONEDAY = DATEADD(DAY,1,@PREVCUTOFFDATEADJS)&#xD;&#xA;&#xD;&#xA;SELECT @CURRCUTOFFDATEADJS = ADJ_CUTOFF_DATE_TO from SGT_IAP_ALLOCATION_CUTOFF_DATES where COMPUTATIONAL_YEAR = @COMPUTATIONYEAR +1 --DATEADD(DAY,-1,GETDATE())--'20150531'&#xD;&#xA;&#xD;&#xA;IF @COMPUTATIONYEAR IS NOT NULL&#xD;&#xA;BEGIN&#xD;&#xA;    &#xD;&#xA; SELECT DISTINCT PARC.PERSON_ACCOUNT_ID,P.SSN AS SSN,P.DATE_OF_BIRTH AS DOB,&#xD;&#xA; (@COMPUTATIONYEAR+1) AS COMPUTATION_YEAR, ELG.VESTED_DATE,PA.STATUS_VALUE,P.DATE_OF_DEATH AS DATE_OF_DEATH,&#xD;&#xA;    CASE WHEN BA.CHILD_SUPPORT_FLAG = 'Y' THEN NULL ELSE PYACC.PAYEE_ACCOUNT_ID END AS PAYEE_ACCOUNT_ID,&#xD;&#xA;    CASE WHEN BA.CHILD_SUPPORT_FLAG = 'Y' THEN NULL ELSE PYACC.BENEFIT_ACCOUNT_TYPE_VALUE END AS BENEFIT_TYPE,&#xD;&#xA;    CASE WHEN BA.CHILD_SUPPORT_FLAG = 'Y' THEN NULL ELSE PYACC.RETIREMENT_TYPE_VALUE END AS RETIREMENT_TYPE,&#xD;&#xA;    'IAP' AS FUND_TYPE,&#xD;&#xA;    CASE WHEN BA.CHILD_SUPPORT_FLAG = 'Y' THEN NULL ELSE CASE WHEN PYACC.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' THEN DRO.DRO_COMMENCEMENT_DATE ELSE ISNULL(BA.RETIREMENT_DATE,BA.WITHDRAWAL_DATE) END END AS RETIREMENT_DATE, &#xD;&#xA;    CASE WHEN BA.CHILD_SUPPORT_FLAG = 'Y' THEN NULL ELSE CASE WHEN P.DATE_OF_DEATH IS NOT NULL AND PYACC.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DDPR','WDRL','QDRO') THEN PHH.PAYMENT_DATE ELSE NULL END END FIRST_PAYMENT_DATE, --PIR 630&#xD;&#xA;    PYACC.ACCOUNT_RELATION_VALUE&#xD;&#xA;    FROM SGT_PERSON P WITH(NOLOCK) &#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PA.PERSON_ID= P.PERSON_ID AND PA.PLAN_ID=1&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK) ON PARC.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA; LEFT JOIN SGT_PERSON_ACCOUNT_ELIGIBILITY ELG WITH(NOLOCK) ON ELG.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN (SELECT PA1.*, PBA1.PERSON_ACCOUNT_ID FROM SGT_PAYEE_ACCOUNT PA1 &#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS1 ON PA1.PAYEE_ACCOUNT_ID = PAS1.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN OPUS.DBO.SGT_PAYEE_BENEFIT_ACCOUNT PBA1  ON PA1.PAYEE_BENEFIT_ACCOUNT_ID = PBA1.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PLAN_BENEFIT_XR PB1 ON PA1.PLAN_BENEFIT_ID = PB1.PLAN_BENEFIT_ID AND PB1.PLAN_ID = 1&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_BENEFIT_APPLICATION_DETAIL BAD1 ON PA1.BENEFIT_APPLICATION_DETAIL_ID = BAD1.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_BENEFIT_APPLICATION BA1 ON BAD1.BENEFIT_APPLICATION_ID = BA1.BENEFIT_APPLICATION_ID AND BA1.COVID_OPTION_VALUE IS NULL AND ISNULL(BA1.CHILD_SUPPORT_FLAG,'N') = 'N'&#xD;&#xA;&#x9;&#x9;WHERE PAS1.PAYEE_ACCOUNT_STATUS_ID = (SELECT MAX(PAYEE_ACCOUNT_STATUS_ID) FROM SGT_PAYEE_ACCOUNT_STATUS WHERE PAYEE_ACCOUNT_ID = PA1.PAYEE_ACCOUNT_ID)&#xD;&#xA;&#x9;&#x9; AND PBA1.FUNDS_TYPE_VALUE IS NULL AND PAS1.STATUS_VALUE &lt;&gt; 'CNCL'&#xD;&#xA;     AND ((((PA1.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT' AND PA1.RETIREMENT_TYPE_VALUE = 'MIND') OR PA1.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RTMT') AND YEAR(PA1.BENEFIT_BEGIN_DATE) &lt;= @COMPUTATIONYEAR + 1) OR &#xD;&#xA;    (PA1.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT' AND (PA1.RETIREMENT_TYPE_VALUE IS NULL OR PA1.RETIREMENT_TYPE_VALUE &lt;&gt; 'MIND') AND YEAR(DATEADD(month, -2, PA1.BENEFIT_BEGIN_DATE)) &lt;= @COMPUTATIONYEAR + 1))&#xD;&#xA;) PYACC ON PA.PERSON_ACCOUNT_ID = PYACC.PERSON_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PAYMENT_HISTORY_HEADER PHH ON PYACC.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID AND PYACC.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DDPR','WDRL','QDRO') --PIR 630&#xD;&#xA;  AND PHH.PAYMENT_HISTORY_HEADER_ID = (SELECT TOP(1)Q.PAYMENT_HISTORY_HEADER_ID FROM SGT_PAYMENT_HISTORY_HEADER Q WHERE Q.PAYEE_ACCOUNT_ID = PYACC.PAYEE_ACCOUNT_ID ORDER BY Q.PAYMENT_DATE) --PIR 630&#xD;&#xA; LEFT JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) ON BA.BENEFIT_APPLICATION_ID = (SELECT BAD.BENEFIT_APPLICATION_ID FROM SGT_BENEFIT_APPLICATION_DETAIL BAD WITH(NOLOCK) WHERE BAD.BENEFIT_APPLICATION_DETAIL_ID=PYACC.BENEFIT_APPLICATION_DETAIL_ID) &#xD;&#xA; LEFT JOIN SGT_DRO_APPLICATION DRO WITH(NOLOCK) ON DRO.DRO_APPLICATION_ID = (SELECT DROBEN.DRO_APPLICATION_ID FROM SGT_DRO_BENEFIT_DETAILS DROBEN WITH(NOLOCK) WHERE DROBEN.DRO_BENEFIT_ID = PYACC.DRO_APPLICATION_DETAIL_ID) &#xD;&#xA; WHERE (PYACC.RETIREMENT_TYPE_VALUE IS NULL OR ISNULL(PYACC.RETIREMENT_TYPE_VALUE,'') != 'MIND')&#xD;&#xA; and ((@TempTable = 1 and PA.PERSON_ACCOUNT_ID IN (SELECT PERSON_ACCOUNT_ID FROM TEMP_TABLE_FOR_ANNUAL_BATCHES)) OR  @TempTable = 0)  &#xD;&#xA;    GROUP BY PARC.PERSON_ACCOUNT_ID,P.SSN, ELG.VESTED_DATE,PA.STATUS_VALUE,P.DATE_OF_DEATH,PYACC.PAYEE_ACCOUNT_ID,PYACC.BENEFIT_ACCOUNT_TYPE_VALUE,PYACC.RETIREMENT_TYPE_VALUE,BA.RETIREMENT_DATE,BA.CHILD_SUPPORT_FLAG,P.DATE_OF_BIRTH,BA.WITHDRAWAL_DATE,DRO.DRO_COMMENCEMENT_DATE,PYACC.ACCOUNT_RELATION_VALUE,PHH.PAYMENT_DATE --PIR 630&#xD;&#xA; HAVING &#xD;&#xA;  (&#xD;&#xA;  SUM(CASE WHEN ((PARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt;= @PREVCUTOFFDATEADJS AND ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('PMNT','LALC')) OR&#xD;&#xA;   (PARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt; @PREVCUTOFFDATEADJSPLUSONEDAY AND ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') = ('LALC')) --PIR 630&#xD;&#xA;   OR  (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') = 'PMNT' AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt;= CAST(CAST(@COMPUTATIONYEAR AS VARCHAR(4))+'1231' AS DATETIME))) THEN ISNULL(IAP_BALANCE_AMOUNT,0.00) ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('FORF','BRDG') AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS  THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  ) &#xD;&#xA;  OR EXISTS (SELECT 1 FROM SGT_ALL_IAP_WORKHISTORY_4_SNAPSHOT X WHERE X.SSN = P.SSN)&#xD;&#xA; &#xD;&#xA; UNION ALL&#xD;&#xA; &#xD;&#xA;    SELECT DISTINCT PARC.PERSON_ACCOUNT_ID,P.SSN AS SSN,P.DATE_OF_BIRTH AS DOB,&#xD;&#xA; (@COMPUTATIONYEAR+1) AS COMPUTATION_YEAR, ELG.VESTED_DATE,PA.STATUS_VALUE,P.DATE_OF_DEATH AS DATE_OF_DEATH,&#xD;&#xA;     CASE WHEN BA.CHILD_SUPPORT_FLAG = 'Y' THEN NULL ELSE PYACC.PAYEE_ACCOUNT_ID END AS PAYEE_ACCOUNT_ID,&#xD;&#xA;     CASE WHEN BA.CHILD_SUPPORT_FLAG = 'Y' THEN NULL ELSE PYACC.BENEFIT_ACCOUNT_TYPE_VALUE END AS BENEFIT_TYPE,&#xD;&#xA;     CASE WHEN BA.CHILD_SUPPORT_FLAG = 'Y' THEN NULL ELSE PYACC.RETIREMENT_TYPE_VALUE END AS RETIREMENT_TYPE,&#xD;&#xA;    'IAP' AS FUND_TYPE,&#xD;&#xA;     CASE WHEN BA.CHILD_SUPPORT_FLAG = 'Y' THEN NULL ELSE CASE WHEN PYACC.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' THEN DRO.DRO_COMMENCEMENT_DATE ELSE ISNULL(BA.RETIREMENT_DATE,BA.WITHDRAWAL_DATE) END END AS RETIREMENT_DATE,&#xD;&#xA;     CASE WHEN BA.CHILD_SUPPORT_FLAG = 'Y' THEN NULL ELSE CASE WHEN  P.DATE_OF_DEATH IS NOT NULL AND PYACC.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DDPR','WDRL','QDRO') THEN PHH.PAYMENT_DATE ELSE NULL END END FIRST_PAYMENT_DATE, --PIR 630&#xD;&#xA;    NULL AS ACCOUNT_RELATION_VALUE&#xD;&#xA;    FROM SGT_PERSON P WITH(NOLOCK) &#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PA.PERSON_ID= P.PERSON_ID AND PA.PLAN_ID=1&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK) ON PARC.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBAC WITH(NOLOCK) ON PBAC.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID AND PBAC.FUNDS_TYPE_VALUE IS NULL&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT PYACC WITH(NOLOCK) ON PYACC.PAYEE_BENEFIT_ACCOUNT_ID = PBAC.PAYEE_BENEFIT_ACCOUNT_ID &#xD;&#xA; AND ((((PYACC.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT' AND PYACC.RETIREMENT_TYPE_VALUE = 'MIND') OR PYACC.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RTMT') AND YEAR(PYACC.BENEFIT_BEGIN_DATE) &lt;= @COMPUTATIONYEAR + 1) OR &#xD;&#xA;  (PYACC.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT' AND (PYACC.RETIREMENT_TYPE_VALUE IS NULL OR PYACC.RETIREMENT_TYPE_VALUE &lt;&gt; 'MIND') AND YEAR(DATEADD(month, -2, PYACC.BENEFIT_BEGIN_DATE)) &lt;= @COMPUTATIONYEAR + 1))&#xD;&#xA; AND NOT EXISTS(SELECT * from SGT_BENEFIT_APPLICATION_DETAIL P &#xD;&#xA;     INNER JOIN SGT_BENEFIT_APPLICATION S ON S.BENEFIT_APPLICATION_ID = P.BENEFIT_APPLICATION_ID AND S.CHILD_SUPPORT_FLAG ='Y' and p.BENEFIT_APPLICATION_DETAIL_ID = PYACC.BENEFIT_APPLICATION_DETAIL_ID)&#xD;&#xA; LEFT OUTER JOIN SGT_PAYMENT_HISTORY_HEADER PHH ON PYACC.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID AND PYACC.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DDPR','WDRL','QDRO') --PIR 630&#xD;&#xA;   AND PHH.PAYMENT_HISTORY_HEADER_ID = (SELECT TOP(1)Q.PAYMENT_HISTORY_HEADER_ID FROM SGT_PAYMENT_HISTORY_HEADER Q WHERE Q.PAYEE_ACCOUNT_ID = PYACC.PAYEE_ACCOUNT_ID ORDER BY Q.PAYMENT_DATE) --PIR 630&#xD;&#xA; LEFT JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) ON BA.BENEFIT_APPLICATION_ID = (SELECT BAD.BENEFIT_APPLICATION_ID FROM SGT_BENEFIT_APPLICATION_DETAIL BAD WITH(NOLOCK) WHERE BAD.BENEFIT_APPLICATION_DETAIL_ID=PYACC.BENEFIT_APPLICATION_DETAIL_ID) &#xD;&#xA; --AND ISNULL(BA.CHILD_SUPPORT_FLAG,'N') = 'N' --PIR 630&#xD;&#xA; LEFT JOIN SGT_DRO_APPLICATION DRO WITH(NOLOCK) ON DRO.DRO_APPLICATION_ID = (SELECT DROBEN.DRO_APPLICATION_ID FROM SGT_DRO_BENEFIT_DETAILS DROBEN WITH(NOLOCK) WHERE DROBEN.DRO_BENEFIT_ID = PYACC.DRO_APPLICATION_DETAIL_ID) &#xD;&#xA; LEFT JOIN SGT_PERSON_ACCOUNT_ELIGIBILITY ELG WITH(NOLOCK) ON ELG.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE (PYACC.PAYEE_ACCOUNT_ID IS NULL OR (PYACC.PAYEE_ACCOUNT_ID IS NOT NULL AND&#xD;&#xA; (SELECT TOP 1 PYACCST.STATUS_VALUE FROM SGT_PAYEE_ACCOUNT_STATUS PYACCST WITH(nolock) WHERE PYACCST.PAYEE_ACCOUNT_ID = PYACC.PAYEE_ACCOUNT_ID &#xD;&#xA;                ORDER BY PYACCST.STATUS_EFFECTIVE_DATE DESC,PYACCST.PAYEE_ACCOUNT_STATUS_ID DESC)!= 'CNCL'))                &#xD;&#xA; AND ISNULL(PYACC.RETIREMENT_TYPE_VALUE,'') = 'MIND' &#xD;&#xA; and ((@TempTable = 1 and PA.PERSON_ACCOUNT_ID IN (SELECT PERSON_ACCOUNT_ID FROM TEMP_TABLE_FOR_ANNUAL_BATCHES)) OR  @TempTable = 0)  &#xD;&#xA;    GROUP BY PARC.PERSON_ACCOUNT_ID,P.SSN, ELG.VESTED_DATE,PA.STATUS_VALUE,P.DATE_OF_DEATH,PYACC.PAYEE_ACCOUNT_ID,PYACC.BENEFIT_ACCOUNT_TYPE_VALUE,PYACC.RETIREMENT_TYPE_VALUE,BA.RETIREMENT_DATE,P.DATE_OF_BIRTH,BA.WITHDRAWAL_DATE,DRO.DRO_COMMENCEMENT_DATE,PBAC.FUNDS_TYPE_VALUE,PHH.PAYMENT_DATE,BA.CHILD_SUPPORT_FLAG&#xD;&#xA;&#xD;&#xA; UNION ALL&#xD;&#xA;      &#xD;&#xA;    SELECT DISTINCT PA.PERSON_ACCOUNT_ID,P.SSN AS SSN,P.DATE_OF_BIRTH AS DOB,&#xD;&#xA;    (@COMPUTATIONYEAR+1) AS COMPUTATION_YEAR, ELG.VESTED_DATE,PA.STATUS_VALUE,P.DATE_OF_DEATH AS DATE_OF_DEATH,&#xD;&#xA;    NULL AS PAYEE_ACCOUNT_ID,&#xD;&#xA;    NULL AS BENEFIT_orTYPE,&#xD;&#xA;    NULL AS RETIREMENT_TYPE,&#xD;&#xA;    'IAP' AS FUND_TYPE,&#xD;&#xA;    NULL AS RETIREMENT_DATE,&#xD;&#xA;    NULL AS FIRST_PAYMENT_DATE, --PIR 630&#xD;&#xA;    NULL AS ACCOUNT_RELATION_VALUE&#xD;&#xA;    FROM SGT_PERSON P WITH(NOLOCK) &#xD;&#xA;      INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PA.PERSON_ID= P.PERSON_ID AND PA.PLAN_ID=1 AND PA.STATUS_VALUE IN ('ACTV','INAC','DCSD')&#xD;&#xA;      --INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK) ON PARC.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA;      LEFT JOIN SGT_PERSON_ACCOUNT_ELIGIBILITY ELG WITH(NOLOCK) ON ELG.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA;      WHERE &#xD;&#xA;      NOT EXISTS (SELECT PARC.PERSON_ACCOUNT_ID FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK) WHERE PARC.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID)&#xD;&#xA;      AND EXISTS (SELECT 1 FROM SGT_ALL_IAP_WORKHISTORY_4_SNAPSHOT X WHERE X.SSN = P.SSN)&#xD;&#xA; AND ((@TempTable = 1 and PA.PERSON_ACCOUNT_ID IN (SELECT PERSON_ACCOUNT_ID FROM TEMP_TABLE_FOR_ANNUAL_BATCHES)) OR  @TempTable = 0)  &#xD;&#xA;    GROUP BY PA.PERSON_ACCOUNT_ID,P.SSN, ELG.VESTED_DATE,PA.STATUS_VALUE,P.DATE_OF_DEATH,P.DATE_OF_BIRTH&#xD;&#xA;&#xD;&#xA;    UNION ALL&#xD;&#xA;    &#xD;&#xA;--- L52 Special Account Section &#xD;&#xA; SELECT DISTINCT PARC.PERSON_ACCOUNT_ID,P.SSN AS SSN,P.DATE_OF_BIRTH AS DOB,&#xD;&#xA; (@COMPUTATIONYEAR+1) AS COMPUTATION_YEAR, ELG.VESTED_DATE,PA.STATUS_VALUE,P.DATE_OF_DEATH AS DATE_OF_DEATH,&#xD;&#xA;    PYACC.PAYEE_ACCOUNT_ID AS PAYEE_ACCOUNT_ID,&#xD;&#xA;    PYACC.BENEFIT_ACCOUNT_TYPE_VALUE AS BENEFIT_TYPE,&#xD;&#xA;    PYACC.RETIREMENT_TYPE_VALUE AS RETIREMENT_TYPE,&#xD;&#xA;    'L052' AS FUND_TYPE,&#xD;&#xA;    CASE WHEN PYACC.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' THEN DRO.DRO_COMMENCEMENT_DATE ELSE ISNULL(BA.RETIREMENT_DATE,BA.WITHDRAWAL_DATE) END AS RETIREMENT_DATE,&#xD;&#xA;    CASE WHEN  P.DATE_OF_DEATH IS NOT NULL AND PYACC.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DDPR','WDRL','QDRO') THEN PHH.PAYMENT_DATE ELSE NULL END FIRST_PAYMENT_DATE, --PIR 630 &#xD;&#xA;    PYACC.ACCOUNT_RELATION_VALUE&#xD;&#xA;    FROM SGT_PERSON P WITH(NOLOCK) &#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PA.PERSON_ID= P.PERSON_ID AND PA.PLAN_ID=1&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK) ON PARC.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA; LEFT JOIN SGT_PERSON_ACCOUNT_ELIGIBILITY ELG WITH(NOLOCK) ON ELG.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN (SELECT PA1.*, PBA1.PERSON_ACCOUNT_ID FROM SGT_PAYEE_ACCOUNT PA1 &#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS1 ON PA1.PAYEE_ACCOUNT_ID = PAS1.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN OPUS.DBO.SGT_PAYEE_BENEFIT_ACCOUNT PBA1  ON PA1.PAYEE_BENEFIT_ACCOUNT_ID = PBA1.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PLAN_BENEFIT_XR PB1 ON PA1.PLAN_BENEFIT_ID = PB1.PLAN_BENEFIT_ID AND PB1.PLAN_ID = 1&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_BENEFIT_APPLICATION_DETAIL BAD1 ON PA1.BENEFIT_APPLICATION_DETAIL_ID = BAD1.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_BENEFIT_APPLICATION BA1 ON BAD1.BENEFIT_APPLICATION_ID = BA1.BENEFIT_APPLICATION_ID AND BA1.COVID_OPTION_VALUE IS NULL AND ISNULL(BA1.CHILD_SUPPORT_FLAG,'N') = 'N'&#xD;&#xA;&#x9;&#x9;WHERE PAS1.PAYEE_ACCOUNT_STATUS_ID = (SELECT MAX(PAYEE_ACCOUNT_STATUS_ID) FROM SGT_PAYEE_ACCOUNT_STATUS WHERE PAYEE_ACCOUNT_ID = PA1.PAYEE_ACCOUNT_ID)&#xD;&#xA;&#x9;&#x9; AND ISNULL(PBA1.FUNDS_TYPE_VALUE,'') = ('L052') AND PAS1.STATUS_VALUE &lt;&gt; 'CNCL'&#xD;&#xA;     AND ((((PA1.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT' AND PA1.RETIREMENT_TYPE_VALUE = 'MIND') OR PA1.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RTMT') AND YEAR(PA1.BENEFIT_BEGIN_DATE) &lt;= @COMPUTATIONYEAR + 1) OR &#xD;&#xA;    (PA1.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT' AND (PA1.RETIREMENT_TYPE_VALUE IS NULL OR PA1.RETIREMENT_TYPE_VALUE &lt;&gt; 'MIND') AND YEAR(DATEADD(month, -2, PA1.BENEFIT_BEGIN_DATE)) &lt;= @COMPUTATIONYEAR + 1))&#xD;&#xA;) PYACC ON PA.PERSON_ACCOUNT_ID = PYACC.PERSON_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PAYMENT_HISTORY_HEADER PHH ON PYACC.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID AND PYACC.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DDPR','WDRL','QDRO') &#xD;&#xA; AND PHH.PAYMENT_HISTORY_HEADER_ID = (SELECT TOP(1)Q.PAYMENT_HISTORY_HEADER_ID FROM SGT_PAYMENT_HISTORY_HEADER Q WHERE Q.PAYEE_ACCOUNT_ID = PYACC.PAYEE_ACCOUNT_ID ORDER BY Q.PAYMENT_DATE) --PIR 630&#xD;&#xA; LEFT JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) ON BA.BENEFIT_APPLICATION_ID = (SELECT BAD.BENEFIT_APPLICATION_ID FROM SGT_BENEFIT_APPLICATION_DETAIL BAD WITH(NOLOCK) WHERE BAD.BENEFIT_APPLICATION_DETAIL_ID=PYACC.BENEFIT_APPLICATION_DETAIL_ID) &#xD;&#xA; LEFT JOIN SGT_DRO_APPLICATION DRO WITH(NOLOCK) ON DRO.DRO_APPLICATION_ID = (SELECT DROBEN.DRO_APPLICATION_ID FROM SGT_DRO_BENEFIT_DETAILS DROBEN WITH(NOLOCK) WHERE DROBEN.DRO_BENEFIT_ID = PYACC.DRO_APPLICATION_DETAIL_ID) &#xD;&#xA; WHERE (PYACC.RETIREMENT_TYPE_VALUE IS NULL OR ISNULL(PYACC.RETIREMENT_TYPE_VALUE,'') != 'MIND')&#xD;&#xA; and ((@TempTable = 1 and PA.PERSON_ACCOUNT_ID IN (SELECT PERSON_ACCOUNT_ID FROM TEMP_TABLE_FOR_ANNUAL_BATCHES)) OR  @TempTable = 0)  &#xD;&#xA; AND EXISTS (SELECT 1 FROM SGT_PERSON_ACCOUNT PA052 WHERE PA052.PLAN_ID = 7 AND PA052.PERSON_ID = P.PERSON_ID AND PA052.SPECIAL_ACCOUNT='Y')&#xD;&#xA;    GROUP BY PARC.PERSON_ACCOUNT_ID,P.SSN, ELG.VESTED_DATE,PA.STATUS_VALUE,P.DATE_OF_DEATH,PYACC.PAYEE_ACCOUNT_ID,PYACC.BENEFIT_ACCOUNT_TYPE_VALUE,PYACC.RETIREMENT_TYPE_VALUE,BA.RETIREMENT_DATE,P.DATE_OF_BIRTH,BA.WITHDRAWAL_DATE,DRO.DRO_COMMENCEMENT_DATE,PHH.PAYMENT_DATE,PYACC.ACCOUNT_RELATION_VALUE&#xD;&#xA; HAVING &#xD;&#xA;  (&#xD;&#xA;   SUM(CASE WHEN ((PARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt;= @PREVCUTOFFDATEADJS AND ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('PMNT','LALC')) OR&#xD;&#xA; (PARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt; @PREVCUTOFFDATEADJSPLUSONEDAY AND ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') = ('LALC')) --PIR 630&#xD;&#xA;  OR    (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') = 'PMNT' AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt;= CAST(CAST(@COMPUTATIONYEAR AS VARCHAR(4))+'1231' AS DATETIME))) THEN ISNULL(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0.00) ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('FORF','BRDG') AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  --OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  --OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  --OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  --OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  --OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  )&#xD;&#xA;  OR EXISTS (SELECT 1 FROM SGT_ALL_IAP_WORKHISTORY_4_SNAPSHOT X WHERE X.SSN = P.SSN)&#xD;&#xA;  &#xD;&#xA;    UNION ALL&#xD;&#xA;    &#xD;&#xA;--- L161 Special Account Section &#xD;&#xA; SELECT DISTINCT PARC.PERSON_ACCOUNT_ID,P.SSN AS SSN,P.DATE_OF_BIRTH AS DOB,&#xD;&#xA; (@COMPUTATIONYEAR+1) AS COMPUTATION_YEAR, ELG.VESTED_DATE,PA.STATUS_VALUE,P.DATE_OF_DEATH AS DATE_OF_DEATH,&#xD;&#xA;    PYACC.PAYEE_ACCOUNT_ID AS PAYEE_ACCOUNT_ID,&#xD;&#xA;    PYACC.BENEFIT_ACCOUNT_TYPE_VALUE AS BENEFIT_TYPE,&#xD;&#xA;    PYACC.RETIREMENT_TYPE_VALUE AS RETIREMENT_TYPE,&#xD;&#xA;    'L161' AS FUND_TYPE,&#xD;&#xA;    CASE WHEN PYACC.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' THEN DRO.DRO_COMMENCEMENT_DATE ELSE ISNULL(BA.RETIREMENT_DATE,BA.WITHDRAWAL_DATE) END AS RETIREMENT_DATE,&#xD;&#xA;    CASE WHEN  P.DATE_OF_DEATH IS NOT NULL AND PYACC.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DDPR','WDRL','QDRO') THEN PHH.PAYMENT_DATE ELSE NULL END FIRST_PAYMENT_DATE, --PIR 630&#xD;&#xA;    PYACC.ACCOUNT_RELATION_VALUE&#xD;&#xA;    FROM SGT_PERSON P WITH(NOLOCK) &#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PA.PERSON_ID= P.PERSON_ID AND PA.PLAN_ID=1&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK) ON PARC.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA; LEFT JOIN SGT_PERSON_ACCOUNT_ELIGIBILITY ELG WITH(NOLOCK) ON ELG.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN (SELECT PA1.*, PBA1.PERSON_ACCOUNT_ID FROM SGT_PAYEE_ACCOUNT PA1 &#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS1 ON PA1.PAYEE_ACCOUNT_ID = PAS1.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN OPUS.DBO.SGT_PAYEE_BENEFIT_ACCOUNT PBA1  ON PA1.PAYEE_BENEFIT_ACCOUNT_ID = PBA1.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PLAN_BENEFIT_XR PB1 ON PA1.PLAN_BENEFIT_ID = PB1.PLAN_BENEFIT_ID AND PB1.PLAN_ID = 1&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_BENEFIT_APPLICATION_DETAIL BAD1 ON PA1.BENEFIT_APPLICATION_DETAIL_ID = BAD1.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_BENEFIT_APPLICATION BA1 ON BAD1.BENEFIT_APPLICATION_ID = BA1.BENEFIT_APPLICATION_ID AND BA1.COVID_OPTION_VALUE IS NULL AND ISNULL(BA1.CHILD_SUPPORT_FLAG,'N') = 'N'&#xD;&#xA;&#x9;&#x9;WHERE PAS1.PAYEE_ACCOUNT_STATUS_ID = (SELECT MAX(PAYEE_ACCOUNT_STATUS_ID) FROM SGT_PAYEE_ACCOUNT_STATUS WHERE PAYEE_ACCOUNT_ID = PA1.PAYEE_ACCOUNT_ID)&#xD;&#xA;&#x9;&#x9; AND ISNULL(PBA1.FUNDS_TYPE_VALUE,'') = ('L161') AND PAS1.STATUS_VALUE &lt;&gt; 'CNCL'&#xD;&#xA;     AND ((((PA1.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT' AND PA1.RETIREMENT_TYPE_VALUE = 'MIND') OR PA1.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RTMT') AND YEAR(PA1.BENEFIT_BEGIN_DATE) &lt;= @COMPUTATIONYEAR + 1) OR &#xD;&#xA;    (PA1.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT' AND (PA1.RETIREMENT_TYPE_VALUE IS NULL OR PA1.RETIREMENT_TYPE_VALUE &lt;&gt; 'MIND') AND YEAR(DATEADD(month, -2, PA1.BENEFIT_BEGIN_DATE)) &lt;= @COMPUTATIONYEAR + 1))&#xD;&#xA;) PYACC ON PA.PERSON_ACCOUNT_ID = PYACC.PERSON_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PAYMENT_HISTORY_HEADER PHH ON PYACC.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID AND PYACC.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DDPR','WDRL','QDRO') --PIR 630&#xD;&#xA;  AND PHH.PAYMENT_HISTORY_HEADER_ID = (SELECT TOP(1)Q.PAYMENT_HISTORY_HEADER_ID FROM SGT_PAYMENT_HISTORY_HEADER Q WHERE Q.PAYEE_ACCOUNT_ID = PYACC.PAYEE_ACCOUNT_ID ORDER BY Q.PAYMENT_DATE) --PIR 630&#xD;&#xA; LEFT JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) ON BA.BENEFIT_APPLICATION_ID = (SELECT BAD.BENEFIT_APPLICATION_ID FROM SGT_BENEFIT_APPLICATION_DETAIL BAD WITH(NOLOCK) WHERE BAD.BENEFIT_APPLICATION_DETAIL_ID=PYACC.BENEFIT_APPLICATION_DETAIL_ID) &#xD;&#xA; LEFT JOIN SGT_DRO_APPLICATION DRO WITH(NOLOCK) ON DRO.DRO_APPLICATION_ID = (SELECT DROBEN.DRO_APPLICATION_ID FROM SGT_DRO_BENEFIT_DETAILS DROBEN WITH(NOLOCK) WHERE DROBEN.DRO_BENEFIT_ID = PYACC.DRO_APPLICATION_DETAIL_ID) &#xD;&#xA; WHERE (PYACC.RETIREMENT_TYPE_VALUE IS NULL OR ISNULL(PYACC.RETIREMENT_TYPE_VALUE,'') != 'MIND')&#xD;&#xA;  and ((@TempTable = 1 and PA.PERSON_ACCOUNT_ID IN (SELECT PERSON_ACCOUNT_ID FROM TEMP_TABLE_FOR_ANNUAL_BATCHES)) OR  @TempTable = 0)  &#xD;&#xA; AND EXISTS (SELECT 1 FROM SGT_PERSON_ACCOUNT PA161 WHERE PA161.PLAN_ID = 8 AND PA161.PERSON_ID = P.PERSON_ID AND PA161.SPECIAL_ACCOUNT='Y')&#xD;&#xA;    GROUP BY PARC.PERSON_ACCOUNT_ID,P.SSN, ELG.VESTED_DATE,PA.STATUS_VALUE,P.DATE_OF_DEATH,PYACC.PAYEE_ACCOUNT_ID,PYACC.BENEFIT_ACCOUNT_TYPE_VALUE,PYACC.RETIREMENT_TYPE_VALUE,BA.RETIREMENT_DATE,P.DATE_OF_BIRTH,BA.WITHDRAWAL_DATE,DRO.DRO_COMMENCEMENT_DATE,PHH.PAYMENT_DATE,PYACC.ACCOUNT_RELATION_VALUE&#xD;&#xA; HAVING &#xD;&#xA;  (&#xD;&#xA;   SUM(CASE WHEN ((PARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt;= @PREVCUTOFFDATEADJS AND ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('PMNT','LALC')) OR&#xD;&#xA; (PARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt; @PREVCUTOFFDATEADJSPLUSONEDAY AND ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') = ('LALC')) --PIR 630&#xD;&#xA; OR    (ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') = 'PMNT' AND CONVERT(DATE,PARC.TRANSACTION_DATE) &lt;= CAST(CAST(@COMPUTATIONYEAR AS VARCHAR(4))+'1231' AS DATETIME))) THEN ISNULL(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0.00) ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  &#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('FORF','BRDG') AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') NOT IN ('LALC','PMNT','FORF','BRDG') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  &#xD;&#xA;  --OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('FORF','BRDG') AND PARC.COMPUTATIONAL_YEAR=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  --OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  --OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  --OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC3' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  --OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  --OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') IN ('LALC','ADJS') AND PARC.CONTRIBUTION_TYPE_VALUE='ALC5' AND PARC.COMPUTATIONAL_YEAR&lt;=@COMPUTATIONYEAR AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEPLUSONEDAY AND @CURRCUTOFFDATE THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC1' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC2' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  OR SUM(CASE WHEN ISNULL(PARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' AND PARC.CONTRIBUTION_TYPE_VALUE='ALC4' AND PARC.COMPUTATIONAL_YEAR=(@COMPUTATIONYEAR+1) AND CONVERT(DATE,PARC.TRANSACTION_DATE) BETWEEN @PREVCUTOFFDATEADJSPLUSONEDAY AND @CURRCUTOFFDATEADJS THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;  )&#xD;&#xA;  OR EXISTS (SELECT 1 FROM SGT_ALL_IAP_WORKHISTORY_4_SNAPSHOT X WHERE X.SSN = P.SSN)&#xD;&#xA;END&#xD;&#xA;">
      <parameters>
        <parameter ID="@TempTable" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPreviousMonthUVHPContribution" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;  SUM(UVHP_AMOUNT)as UVHP_AMOUNT , COMPUTATIONAL_YEAR&#xA;FROM&#xA;  SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION &#xA;WHERE&#xA;  MONTH(TRANSACTION_DATE) = MONTH(getdate()) - 1 AND&#xA;    PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND&#xA;        year(TRANSACTION_DATE) = year(GETDATE())&#xA;        group by COMPUTATIONAL_YEAR having SUM(UVHP_AMOUNT)!= 0">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadLateUVHPContribution" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xD;&#xA;  max( COMPUTATIONAL_YEAR)  AS COMPUTATIONAL_YEAR,&#xD;&#xA;  CONTRIBUTION_TYPE_VALUE,&#xD;&#xA;  CONTRIBUTION_SUBTYPE_VALUE,&#xD;&#xA;  sum(EE_INT_AMOUNT)  AS EE_INT_AMOUNT,&#xD;&#xA;  SUM(UVHP_INT_AMOUNT)  AS UVHP_INT_AMOUNT,&#xD;&#xA;  SPARC.PERSON_ACCOUNT_ID,&#xD;&#xA;  SUM(EE_CONTRIBUTION_AMOUNT)  AS EE_CONTRIBUTION_AMOUNT,&#xD;&#xA;  SUM(UVHP_AMOUNT)  AS UVHP_AMOUNT&#xD;&#xA;FROM&#xD;&#xA;  SGT_PERSON_ACCOUNT SPA   &#xD;&#xA;  JOIN SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC ON SPA.PERSON_ACCOUNT_ID = SPARC.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE&#xD;&#xA;  SPA.STATUS_VALUE = 'ACTV'  AND&#xD;&#xA;   SPARC.CONTRIBUTION_TYPE_VALUE in ('UVHP') and spa.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;   and SPARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONAL_YEAR&#xD;&#xA;GROUP  BY  CONTRIBUTION_TYPE_VALUE,&#xD;&#xA;  CONTRIBUTION_SUBTYPE_VALUE,&#xD;&#xA;  SPARC.PERSON_ACCOUNT_ID having SUM(UVHP_INT_AMOUNT) ! =  0 or SUM(UVHP_AMOUNT) ! =  0">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@COMPUTATIONAL_YEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadAllPreviousMonthUVHPContribution" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xD;&#xA;   spa.PERSON_ID, SUM(UVHP_AMOUNT)as UVHP_AMOUNT, COMPUTATIONAL_YEAR, PAYEE_ACCOUNT_ID, 0 as REPORT_STATUS&#xD;&#xA;FROM&#xD;&#xA;  SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC&#xD;&#xA;  join SGT_PERSON_ACCOUNT SPA ON SPA.PERSON_ACCOUNT_ID = SPARC.PERSON_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PAYEE_ACCOUNT SPAE ON SPAE.PERSON_ID = SPA.PERSON_ID&#xD;&#xA;WHERE&#xD;&#xA;  MONTH(TRANSACTION_DATE) = @MONTH AND&#xD;&#xA;        year(TRANSACTION_DATE) = @YEAR AND SPAE.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL'&#xD;&#xA;        group by COMPUTATIONAL_YEAR, PAYEE_ACCOUNT_ID, SPA.PERSON_ID having SUM(UVHP_AMOUNT)!= 0">
      <parameters>
        <parameter ID="@MONTH" sfwDataType="int" />
        <parameter ID="@YEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdatePersonAccountRetirementContributionForIAP" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION(PERSON_ACCOUNT_ID&#xD;&#xA;           ,TRANSACTION_DATE&#xD;&#xA;           ,EFFECTIVE_DATE&#xD;&#xA;           ,COMPUTATIONAL_YEAR&#xD;&#xA;           ,IAP_BALANCE_AMOUNT&#xD;&#xA;           ,TRANSACTION_TYPE_ID&#xD;&#xA;           ,TRANSACTION_TYPE_VALUE&#xD;&#xA;           ,EE_CONTRIBUTION_AMOUNT&#xD;&#xA;           ,UVHP_AMOUNT&#xD;&#xA;           ,EE_INT_AMOUNT&#xD;&#xA;           ,UVHP_INT_AMOUNT&#xD;&#xA;           ,LOCAL_FROZEN_BENEFIT_AMOUNT           &#xD;&#xA;           ,CONTRIBUTION_TYPE_VALUE&#xD;&#xA;           ,CONTRIBUTION_TYPE_ID&#xD;&#xA;           ,CONTRIBUTION_SUBTYPE_ID&#xD;&#xA;           ,CONTRIBUTION_SUBTYPE_VALUE&#xD;&#xA;           ,LOCAL_PRE_BIS_AMOUNT&#xD;&#xA;           ,LOCAL_POST_BIS_AMOUNT&#xD;&#xA;           ,LOCAL52_SPECIAL_ACCT_BAL_AMOUNT&#xD;&#xA;           ,LOCAL161_SPECIAL_ACCT_BAL_AMOUNT&#xD;&#xA;           ,REFERENCE_ID&#xD;&#xA;           ,LEGACY_CONTRIBUTION_SUBTYPE&#xD;&#xA;           ,CREATED_BY&#xD;&#xA;           ,CREATED_DATE&#xD;&#xA;           ,MODIFIED_BY&#xD;&#xA;           ,MODIFIED_DATE&#xD;&#xA;           ,UPDATE_SEQ&#xD;&#xA;           ,RECORD_FREEZE_FLAG)&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;      PERSON_ACCOUNT_ID&#xD;&#xA;           ,TRANSACTION_DATE&#xD;&#xA;           ,EFFECTIVE_DATE&#xD;&#xA;           ,YEAR(EFFECTIVE_DATE) AS COMPUTATIONAL_YEAR&#xD;&#xA;           ,CASE WHEN FUNDS_TYPE_VALUE IS NULL THEN Gross_Amount ELSE 0 END AS IAP_BALANCE_AMOUNT&#xD;&#xA;           ,1003 AS TRANSACTION_TYPE_ID&#xD;&#xA;           ,'PMNT' AS TRANSACTION_TYPE_VALUE&#xD;&#xA;           ,NULL AS EE_CONTRIBUTION_AMOUNT&#xD;&#xA;           ,NULL AS UVHP_AMOUNT&#xD;&#xA;           ,NULL AS EE_INT_AMOUNT&#xD;&#xA;           ,NULL AS UVHP_INT_AMOUNT&#xD;&#xA;           ,NULL AS LOCAL_FROZEN_BENEFIT_AMOUNT           &#xD;&#xA;           ,'ALC1' AS CONTRIBUTION_TYPE_VALUE&#xD;&#xA;           ,1000 AS CONTRIBUTION_TYPE_ID&#xD;&#xA;           ,1004 AS CONTRIBUTION_SUBTYPE_ID&#xD;&#xA;           ,NULL AS CONTRIBUTION_SUBTYPE_VALUE&#xD;&#xA;           ,NULL AS LOCAL_PRE_BIS_AMOUNT&#xD;&#xA;           ,NULL AS LOCAL_POST_BIS_AMOUNT&#xD;&#xA;           ,LOCAL52_SPECIAL_ACCT_BAL_AMOUNT&#xD;&#xA;           ,LOCAL161_SPECIAL_ACCT_BAL_AMOUNT&#xD;&#xA;           ,NULL AS REFERENCE_ID&#xD;&#xA;           ,NULL AS LEGACY_CONTRIBUTION_SUBTYPE,&#xD;&#xA;     'OPUS Batch' AS CREATED_BY,GETDATE() AS CREATED_DATE,&#xD;&#xA;     'OPUS Batch' AS MODIFIED_BY,GETDATE() AS MODIFIED_DATE,&#xD;&#xA;     0 AS UPDATE_SEQ ,&#xD;&#xA;     NULL AS RECORD_FREEZE_FLAG     &#xD;&#xA; FROM&#xD;&#xA;(&#xD;&#xA;SELECT BACCT.PERSON_ACCOUNT_ID,&#xD;&#xA;  BACCT.FUNDS_TYPE_VALUE,&#xD;&#xA;  --CASE WHEN BCDTL.BENEFIT_CALCULATION_DETAIL_ID IS NULL AND QDTL.QDRO_CALCULATION_DETAIL_ID IS NULL  &#xD;&#xA;  --     THEN &#xD;&#xA;  --     PAYMENT.AMOUNT*-1&#xD;&#xA;  --     ELSE&#xD;&#xA;  --          CASE WHEN BCDTL.BENEFIT_CALCULATION_DETAIL_ID IS NOT NULL &#xD;&#xA;  --          THEN &#xD;&#xA;  --       CASE WHEN ISNULL(BCDTL.ADJUSMENT_PAYMENT,0.00) &gt; 0 THEN BCDTL.ADJUSMENT_PAYMENT*-1 ELSE BCDTL.IAP_BALANCE_AMOUNT*-1 END /*NEED TO CHECK WHETHER WE ARE PAYING THE FIRST AMOUNT OR THE ADJUSMENT AMOUNT AND NEGATE ACCORDINGLY*/&#xD;&#xA;  --          ELSE CASE WHEN ISNULL(QDTL.ADJUSMENT_PAYMENT,0.00) &gt; 0 THEN QDTL.ADJUSMENT_PAYMENT*-1 ELSE QDTL.ALT_PAYEE_AMT_BEFORE_CONVERSION*-1 END &#xD;&#xA;  --          END&#xD;&#xA;  --     END&#xD;&#xA;   PAYMENT.AMOUNT * -1 AS Gross_Amount,&#xD;&#xA;   CASE WHEN BACCT.FUNDS_TYPE_VALUE='L052' THEN&#xD;&#xA;   PAYMENT.AMOUNT * -1    --PIR 855&#xD;&#xA;     --CASE WHEN BCDTL.BENEFIT_CALCULATION_DETAIL_ID IS NULL AND QDTL.QDRO_CALCULATION_DETAIL_ID IS NULL  &#xD;&#xA;     --  THEN &#xD;&#xA;     --  0&#xD;&#xA;     --  ELSE&#xD;&#xA;     --       CASE WHEN BCDTL.BENEFIT_CALCULATION_DETAIL_ID IS NOT NULL &#xD;&#xA;     --       THEN &#xD;&#xA;     --    CASE WHEN ISNULL(BCDTL.ADJUSMENT_PAYMENT,0.00) &gt; 0 THEN BCDTL.ADJUSMENT_PAYMENT*-1 ELSE ISNULL(BCDTL.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0.00)*-1 END /*NEED TO CHECK WHETHER WE ARE PAYING THE FIRST AMOUNT OR THE ADJUSMENT AMOUNT AND NEGATE ACCORDINGLY*/&#xD;&#xA;     --       ELSE CASE WHEN ISNULL(QDTL.ADJUSMENT_PAYMENT,0.00) &gt; 0 THEN QDTL.ADJUSMENT_PAYMENT*-1 ELSE ISNULL(QDTL.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0.00)*-1 END &#xD;&#xA;     --       END&#xD;&#xA;     -- END&#xD;&#xA;      ELSE 0 END&#xD;&#xA;   AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,&#xD;&#xA;   CASE WHEN BACCT.FUNDS_TYPE_VALUE='L161' THEN&#xD;&#xA;   PAYMENT.AMOUNT * -1    --PIR 855&#xD;&#xA;     --CASE WHEN BCDTL.BENEFIT_CALCULATION_DETAIL_ID IS NULL AND QDTL.QDRO_CALCULATION_DETAIL_ID IS NULL  &#xD;&#xA;     --  THEN &#xD;&#xA;     --  0&#xD;&#xA;     --  ELSE&#xD;&#xA;     --       CASE WHEN BCDTL.BENEFIT_CALCULATION_DETAIL_ID IS NOT NULL &#xD;&#xA;     --       THEN &#xD;&#xA;     --    CASE WHEN ISNULL(BCDTL.ADJUSMENT_PAYMENT,0.00) &gt; 0 THEN BCDTL.ADJUSMENT_PAYMENT*-1 ELSE ISNULL(BCDTL.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0.00)*-1 END /*NEED TO CHECK WHETHER WE ARE PAYING THE FIRST AMOUNT OR THE ADJUSMENT AMOUNT AND NEGATE ACCORDINGLY*/&#xD;&#xA;     --       ELSE CASE WHEN ISNULL(QDTL.ADJUSMENT_PAYMENT,0.00) &gt; 0 THEN QDTL.ADJUSMENT_PAYMENT*-1 ELSE ISNULL(QDTL.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0.00)*-1 END &#xD;&#xA;     --       END&#xD;&#xA;     -- END&#xD;&#xA;      ELSE 0 END&#xD;&#xA;   AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,&#xD;&#xA;--CONVERT(DATETIME,CONVERT(VARCHAR,getdate(),109) ,110) AS TRANSACTION_DATE,&#xD;&#xA;--PIR 999&#xD;&#xA;CONVERT(DATETIME,CONVERT(VARCHAR,PHH.PAYMENT_DATE,109) ,110) AS TRANSACTION_DATE,&#xD;&#xA;CASE WHEN PA.BENEFIT_APPLICATION_DETAIL_ID IS NOT NULL &#xD;&#xA;            THEN &#xD;&#xA;         CASE WHEN APP.RETIREMENT_DATE IS NOT NULL THEN APP.RETIREMENT_DATE ELSE APP.WITHDRAWAL_DATE END /*NEED TO CHECK WHETHER WE ARE PAYING THE FIRST AMOUNT OR THE ADJUSMENT AMOUNT AND NEGATE ACCORDINGLY*/&#xD;&#xA;            ELSE DROAPP.DRO_COMMENCEMENT_DATE &#xD;&#xA;            END&#xD;&#xA;             AS EFFECTIVE_DATE&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;INNER JOIN TEMP_TABLE_FOR_PAYMENT PA&#xD;&#xA;           ON PA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID &#xD;&#xA;           AND (PA.PERSON_ID=PHH.PERSON_ID OR PA.TRANSFER_ORG_ID=PHH.ORG_ID OR PA.ORG_ID=PHH.ORG_ID)&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT BACCT&#xD;&#xA;           ON PA.PAYEE_BENEFIT_ACCOUNT_ID=BACCT.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;INNER JOIN &#xD;&#xA;          (&#xD;&#xA;            SELECT &#xD;&#xA;                   PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;                   SUM(PHD.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT&#xD;&#xA;          FROM SGT_PAYMENT_HISTORY_DETAIL  PHD&#xD;&#xA;                   INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH  &#xD;&#xA;                              ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;                INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;                              ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;                              WHERE PIT.ITEM_TYPE_DIRECTION=1 AND PIT.ITEM_TYPE_CODE &lt;&gt; 'ITEM54' -- 637&#xD;&#xA;                              GROUP BY PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#xD;&#xA;      ) AS PAYMENT&#xD;&#xA;      ON PAYMENT.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_SCHEDULE PS&#xD;&#xA;           ON PS.PAYMENT_SCHEDULE_ID=PHH.PAYMENT_SCHEDULE_ID&#xD;&#xA;--PIR 855&#xD;&#xA;--LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_DETAIL BCDTL WITH(NOLOCK) &#xD;&#xA;--           ON BCDTL.BENEFIT_CALCULATION_DETAIL_ID = PA.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA;--LEFT OUTER JOIN SGT_QDRO_CALCULATION_DETAIL QDTL WITH(NOLOCK) &#xD;&#xA;--         ON QDTL.QDRO_CALCULATION_DETAIL_ID = PA.DRO_CALCULATION_DETAIL_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_DETAIL APPDTL(NOLOCK)&#xD;&#xA;         ON PA.BENEFIT_APPLICATION_DETAIL_ID = APPDTL.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;LEFT OUTER JOIN SGT_DRO_BENEFIT_DETAILS DROAPPDTL(NOLOCK)&#xD;&#xA;   ON PA.DRO_APPLICATION_DETAIL_ID = DROAPPDTL.DRO_BENEFIT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION APP(NOLOCK)&#xD;&#xA;         ON APPDTL.BENEFIT_APPLICATION_ID = APP.BENEFIT_APPLICATION_ID&#xD;&#xA;LEFT OUTER JOIN SGT_DRO_APPLICATION DROAPP(NOLOCK)&#xD;&#xA;         ON DROAPPDTL.DRO_APPLICATION_ID = DROAPP.DRO_APPLICATION_ID&#xD;&#xA;WHERE PS.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;) AS TEMP">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdatePersonAccountRetirementContributionMONTHLY" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="INSERT INTO SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION(PERSON_ACCOUNT_ID&#xD;&#xA;           ,TRANSACTION_DATE&#xD;&#xA;           ,EFFECTIVE_DATE&#xD;&#xA;           ,COMPUTATIONAL_YEAR&#xD;&#xA;           ,IAP_BALANCE_AMOUNT&#xD;&#xA;           ,TRANSACTION_TYPE_ID&#xD;&#xA;           ,TRANSACTION_TYPE_VALUE&#xD;&#xA;           ,EE_CONTRIBUTION_AMOUNT&#xD;&#xA;           ,UVHP_AMOUNT&#xD;&#xA;           ,EE_INT_AMOUNT&#xD;&#xA;           ,UVHP_INT_AMOUNT &#xD;&#xA;           ,LOCAL_FROZEN_BENEFIT_AMOUNT           &#xD;&#xA;           ,CONTRIBUTION_TYPE_VALUE&#xD;&#xA;           ,CONTRIBUTION_TYPE_ID&#xD;&#xA;           ,CONTRIBUTION_SUBTYPE_ID&#xD;&#xA;           ,CONTRIBUTION_SUBTYPE_VALUE&#xD;&#xA;           ,LOCAL_PRE_BIS_AMOUNT&#xD;&#xA;           ,LOCAL_POST_BIS_AMOUNT&#xD;&#xA;           ,LOCAL52_SPECIAL_ACCT_BAL_AMOUNT&#xD;&#xA;           ,LOCAL161_SPECIAL_ACCT_BAL_AMOUNT&#xD;&#xA;           ,REFERENCE_ID&#xD;&#xA;           ,LEGACY_CONTRIBUTION_SUBTYPE&#xD;&#xA;           ,CREATED_BY&#xD;&#xA;           ,CREATED_DATE&#xD;&#xA;           ,MODIFIED_BY&#xD;&#xA;           ,MODIFIED_DATE&#xD;&#xA;           ,UPDATE_SEQ,&#xD;&#xA;           RECORD_FREEZE_FLAG)&#xD;&#xA;SELECT &#xD;&#xA;      PERSON_ACCOUNT_ID&#xD;&#xA;           ,TRANSACTION_DATE&#xD;&#xA;           ,EFFECTIVE_DATE&#xD;&#xA;           ,COMPUTATIONAL_YEAR&#xD;&#xA;           ,NULL AS IAP_BALANCE_AMOUNT&#xD;&#xA;           ,1003 AS TRANSACTION_TYPE_ID&#xD;&#xA;           ,'PMNT' AS TRANSACTION_TYPE_VALUE&#xD;&#xA;           ,EE_CONTRIBUTION_AMOUNT*-1 AS EE_CONTRIBUTION_AMOUNT&#xD;&#xA;           ,UVHP_AMOUNT*-1 AS UVHP_AMOUNT&#xD;&#xA;           ,EE_INTEREST_AMOUNT*-1 AS EE_INT_AMOUNT&#xD;&#xA;           ,UVHP_INTEREST_AMOUNT*-1 AS UVHP_INT_AMOUNT&#xD;&#xA;           ,NULL AS LOCAL_FROZEN_BENEFIT_AMOUNT           &#xD;&#xA;           ,CONTRIBUTION_TYPE AS CONTRIBUTION_TYPE_VALUE&#xD;&#xA;           ,1000 AS CONTRIBUTION_TYPE_ID&#xD;&#xA;           ,1004 AS CONTRIBUTION_SUBTYPE_ID&#xD;&#xA;           ,CONTRIBUTION_SUB_TYPE AS CONTRIBUTION_SUBTYPE_VALUE&#xD;&#xA;           ,NULL AS LOCAL_PRE_BIS_AMOUNT&#xD;&#xA;           ,NULL AS LOCAL_POST_BIS_AMOUNT&#xD;&#xA;           ,NULL AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT&#xD;&#xA;           ,NULL AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT&#xD;&#xA;           ,NULL AS REFERENCE_ID&#xD;&#xA;           ,NULL AS LEGACY_CONTRIBUTION_SUBTYPE,&#xD;&#xA;      'OPUS Batch' AS CREATED_BY,GETDATE() AS CREATED_DATE,'OPUS Batch' AS MODIFIED_BY,GETDATE() AS MODIFIED_DATE,0 AS UPDATE_SEQ ,&#xD;&#xA;       NULL AS RECORD_FREEZE_FLAG      &#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA;SELECT &#xD;&#xA;  BACCT.PERSON_ACCOUNT_ID,&#xD;&#xA;  BACCT.FUNDS_TYPE_VALUE,&#xD;&#xA;  YEAR(PHH.PAYMENT_DATE) AS COMPUTATIONAL_YEAR,&#xD;&#xA;  --PIR 1054 CALCULATING AMOUNT AND INTEREST DEPENDING ON QDRO OFFSET IF EXISTS&#xD;&#xA;  CASE WHEN BCDTL.BENEFIT_CALCULATION_DETAIL_ID IS NOT NULL AND BCDTL.UVHP_FLAG='Y' AND ISNULL(BCDTL.QDRO_OFFSET,0) &gt; 0 &#xD;&#xA;  THEN ISNULL(BCDTL.TOTAL_UVHP_CONTRIBUTION_AMOUNT,0) - ISNULL(QDTL.ALT_PAYEE_UVHP,0)&#xD;&#xA; WHEN BCDTL.BENEFIT_CALCULATION_DETAIL_ID IS NOT NULL AND BCDTL.UVHP_FLAG='Y' AND ISNULL(BCDTL.QDRO_OFFSET,0) = 0 &#xD;&#xA;  THEN ISNULL(BCDTL.TOTAL_UVHP_CONTRIBUTION_AMOUNT,0)&#xD;&#xA;    ELSE NULL END  AS UVHP_AMOUNT,&#xD;&#xA;  CASE WHEN BCDTL.BENEFIT_CALCULATION_DETAIL_ID IS NOT NULL AND BCDTL.UVHP_FLAG='Y' AND ISNULL(BCDTL.QDRO_OFFSET,0) &gt; 0 &#xD;&#xA;  THEN ISNULL(BCDTL.TOTAL_UVHP_INTEREST_AMOUNT,0) - ISNULL(QDTL.ALT_PAYEE_UVHP_INTEREST,0)&#xD;&#xA; WHEN BCDTL.BENEFIT_CALCULATION_DETAIL_ID IS NOT NULL AND BCDTL.UVHP_FLAG='Y' AND ISNULL(BCDTL.QDRO_OFFSET,0) = 0 &#xD;&#xA;  THEN ISNULL(BCDTL.TOTAL_UVHP_INTEREST_AMOUNT,0)&#xD;&#xA;    ELSE NULL END  AS UVHP_INTEREST_AMOUNT,&#xD;&#xA;  NULL AS EE_CONTRIBUTION_AMOUNT,&#xD;&#xA;  NULL AS EE_INTEREST_AMOUNT,&#xD;&#xA;  PS.PAYMENT_DATE AS TRANSACTION_DATE,&#xD;&#xA;  CASE WHEN BCH.DRO_APPLICATION_ID IS NOT NULL THEN BCH.RETIREMENT_DATE ELSE PHH.PAYMENT_DATE END AS EFFECTIVE_DATE,&#xD;&#xA;  'UVHP' AS CONTRIBUTION_TYPE,&#xD;&#xA;  'NVES' AS CONTRIBUTION_SUB_TYPE&#xD;&#xA;FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA ON PA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID AND PA.PERSON_ID=PHH.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT BACCT ON PA.PAYEE_BENEFIT_ACCOUNT_ID=BACCT.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_SCHEDULE PS ON PS.PAYMENT_SCHEDULE_ID=PHH.PAYMENT_SCHEDULE_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_DETAIL BCDTL WITH(NOLOCK) ON PA.BENEFIT_CALCULATION_DETAIL_ID = BCDTL.BENEFIT_CALCULATION_DETAIL_ID &#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_HEADER BCH WITH (NOLOCK) ON BCDTL.BENEFIT_CALCULATION_HEADER_ID = BCH.BENEFIT_CALCULATION_HEADER_ID&#xD;&#xA;--PIR 1054 JOINING FINAL QDRO ESTIMATE CALC&#xD;&#xA;LEFT OUTER JOIN SGT_QDRO_CALCULATION_HEADER SQCH WITH(NOLOCK) ON PA.PERSON_ID = SQCH.PERSON_ID AND (SQCH.CALCULATION_TYPE_VALUE='ESTI' AND SQCH.IS_FINAL_ESTIMATE='Y' AND SQCH.STATUS_VALUE='APPR')&#xD;&#xA;LEFT OUTER JOIN SGT_QDRO_CALCULATION_DETAIL QDTL WITH(NOLOCK) ON SQCH.QDRO_CALCULATION_HEADER_ID = QDTL.QDRO_CALCULATION_HEADER_ID AND BCDTL.PLAN_ID = QDTL.PLAN_ID AND QDTL.UVHP_FLAG='Y'&#xD;&#xA;WHERE PS.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID &#xD;&#xA;--PIR 999&#xD;&#xA;AND NOT EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_DETAIL Q &#xD;&#xA;    INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON Q.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;    WHERE Q.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID AND PIT.ITEM_TYPE_CODE = 'ITEM54')&#xD;&#xA;--AND  PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('WDRL')   --PIR 1054 COMMENTED&#xD;&#xA;AND BCDTL.UVHP_FLAG='Y' AND ( ISNULL(BCDTL.TOTAL_UVHP_CONTRIBUTION_AMOUNT,0) + ISNULL(BCDTL.TOTAL_UVHP_INTEREST_AMOUNT,0)) &lt;&gt; 0  -- PIR 1054 ADDED&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UNION &#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;  BACCT.PERSON_ACCOUNT_ID,&#xD;&#xA;  BACCT.FUNDS_TYPE_VALUE,&#xD;&#xA;  --YEAR(PHH.PAYMENT_DATE) &#xD;&#xA;  (CASE WHEN SBA.EFFECTIVE_DATE IS NOT NULL THEN YEAR(SBA.EFFECTIVE_DATE) ELSE YEAR(PHH.PAYMENT_DATE) END) AS COMPUTATIONAL_YEAR, --PIR 999&#xD;&#xA;  NULL AS UVHP_AMOUNT,&#xD;&#xA;  NULL AS UVHP_INTEREST_AMOUNT,&#xD;&#xA;  --PIR 1054 CALCULATING AMOUNT AND INTEREST DEPENDING ON QDRO OFFSET IF EXISTS&#xD;&#xA;  CASE WHEN BCDTL.BENEFIT_CALCULATION_DETAIL_ID IS NOT NULL AND BCDTL.EE_FLAG='Y' AND ISNULL(BCDTL.QDRO_OFFSET,0) &gt; 0 &#xD;&#xA;  THEN ISNULL(BCDTL.NON_VESTED_EE_AMOUNT,0) - ISNULL(QDTL.ALT_PAYEE_EE_CONTRIBUTION,0)&#xD;&#xA; WHEN BCDTL.BENEFIT_CALCULATION_DETAIL_ID IS NOT NULL AND BCDTL.EE_FLAG='Y' AND ISNULL(BCDTL.QDRO_OFFSET,0) = 0 &#xD;&#xA;  THEN ROUND(ISNULL(BCDTL.NON_VESTED_EE_AMOUNT,0),2)&#xD;&#xA;    ELSE NULL END  AS EE_CONTRIBUTION_AMOUNT,&#xD;&#xA;  CASE WHEN BCDTL.BENEFIT_CALCULATION_DETAIL_ID IS NOT NULL AND BCDTL.EE_FLAG='Y' AND ISNULL(BCDTL.QDRO_OFFSET,0) &gt; 0 &#xD;&#xA;  THEN ISNULL(BCDTL.NON_VESTED_EE_INTEREST,0) - ISNULL(QDTL.ALT_PAYEE_INTEREST_AMOUNT,0)&#xD;&#xA; WHEN BCDTL.BENEFIT_CALCULATION_DETAIL_ID IS NOT NULL AND BCDTL.EE_FLAG='Y' AND ISNULL(BCDTL.QDRO_OFFSET,0) = 0 &#xD;&#xA;  THEN ROUND(ISNULL(BCDTL.NON_VESTED_EE_INTEREST,0),2)&#xD;&#xA;    ELSE NULL END  AS EE_INTEREST_AMOUNT,&#xD;&#xA;  PS.PAYMENT_DATE AS TRANSACTION_DATE,&#xD;&#xA;  CASE WHEN SBA.EFFECTIVE_DATE IS NOT NULL THEN SBA.EFFECTIVE_DATE ELSE PHH.PAYMENT_DATE END AS EFFECTIVE_DATE,  --PIR 999&#xD;&#xA;  'EE' AS CONTRIBUTION_TYPE,&#xD;&#xA;  'NVES' AS CONTRIBUTION_SUB_TYPE&#xD;&#xA;FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA ON PA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID AND PA.PERSON_ID=PHH.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT BACCT ON PA.PAYEE_BENEFIT_ACCOUNT_ID=BACCT.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_SCHEDULE PS ON PS.PAYMENT_SCHEDULE_ID=PHH.PAYMENT_SCHEDULE_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_DETAIL BCDTL WITH(NOLOCK) ON BCDTL.BENEFIT_CALCULATION_DETAIL_ID = PA.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA;--PIR 1054 JOINING FINAL QDRO ESTIMATE CALC&#xD;&#xA;LEFT OUTER JOIN SGT_QDRO_CALCULATION_HEADER SQCH WITH(NOLOCK) ON PA.PERSON_ID = SQCH.PERSON_ID AND (SQCH.CALCULATION_TYPE_VALUE='ESTI' AND SQCH.IS_FINAL_ESTIMATE='Y' AND SQCH.STATUS_VALUE='APPR')&#xD;&#xA;LEFT OUTER JOIN SGT_QDRO_CALCULATION_DETAIL QDTL WITH(NOLOCK) ON SQCH.QDRO_CALCULATION_HEADER_ID = QDTL.QDRO_CALCULATION_HEADER_ID AND BCDTL.PLAN_ID = QDTL.PLAN_ID AND QDTL.EE_FLAG='Y'&#xD;&#xA;--PIR 999           &#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_DETAIL SBAD ON PA.BENEFIT_APPLICATION_DETAIL_ID = SBAD.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION SBA ON SBAD.BENEFIT_APPLICATION_ID = SBA.BENEFIT_APPLICATION_ID         &#xD;&#xA;WHERE PS.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;--PIR 999&#xD;&#xA;AND NOT EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_DETAIL Q &#xD;&#xA;    INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON Q.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;    WHERE Q.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID AND PIT.ITEM_TYPE_CODE = 'ITEM54')&#xD;&#xA;--AND  PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('WDRL')  --PIR 1054 COMMENTED&#xD;&#xA;AND BCDTL.EE_FLAG='Y' AND (ISNULL(BCDTL.NON_VESTED_EE_AMOUNT,0) + ISNULL(BCDTL.NON_VESTED_EE_INTEREST,0)) &lt;&gt; 0  --PIR 1054  ADDED&#xD;&#xA;&#xD;&#xA;) TEMP&#xD;&#xA;">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPBalanceBetweenYears" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(SPARC.IAP_BALANCE_AMOUNT) AS IAP_BALANCE_AMOUNT,SUM(SPARC.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT, &#xD;&#xA;SUM(SPARC.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT, MAX(SPARC.EFFECTIVE_DATE) AS EFFECTIVE_DATE &#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK) &#xD;&#xA;WHERE SPARC.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID &#xD;&#xA;AND SPARC.COMPUTATIONAL_YEAR &lt; @COMPUATIONYEAR &#xD;&#xA;AND (TRANSACTION_TYPE_VALUE&lt;&gt;'PMNT' OR (TRANSACTION_TYPE_VALUE = 'PMNT' and TRANSACTION_DATE &lt; @GIVENDATE))&#xD;&#xA;">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@COMPUATIONYEAR" sfwDataType="int" />
        <parameter ID="@GIVENDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetPersonAccountRetirementContributionForIAP" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;      PERSON_ACCOUNT_ID&#xD;&#xA;           ,TRANSACTION_DATE&#xD;&#xA;           ,EFFECTIVE_DATE&#xD;&#xA;           ,COMPUTATIONAL_YEAR&#xD;&#xA;           ,CASE WHEN FUNDS_TYPE_VALUE IS NULL THEN Gross_Amount ELSE 0 END AS IAP_BALANCE_AMOUNT&#xD;&#xA;           ,1003 AS TRANSACTION_TYPE_ID&#xD;&#xA;           ,'PMNT' AS TRANSACTION_TYPE_VALUE&#xD;&#xA;           ,NULL AS EE_CONTRIBUTION_AMOUNT&#xD;&#xA;           ,NULL AS UVHP_AMOUNT&#xD;&#xA;           ,NULL AS EE_INT_AMOUNT&#xD;&#xA;           ,NULL AS UVHP_INT_AMOUNT&#xD;&#xA;           ,NULL AS LOCAL_FROZEN_BENEFIT_AMOUNT           &#xD;&#xA;           ,'ALC1' AS CONTRIBUTION_TYPE_VALUE&#xD;&#xA;           ,1000 AS CONTRIBUTION_TYPE_ID&#xD;&#xA;           ,1004 AS CONTRIBUTION_SUBTYPE_ID&#xD;&#xA;           ,NULL AS CONTRIBUTION_SUBTYPE_VALUE&#xD;&#xA;           ,NULL AS LOCAL_PRE_BIS_AMOUNT&#xD;&#xA;           ,NULL AS LOCAL_POST_BIS_AMOUNT&#xD;&#xA;           ,CASE WHEN FUNDS_TYPE_VALUE='L052' THEN Gross_Amount ELSE 0 END AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT&#xD;&#xA;           ,CASE WHEN FUNDS_TYPE_VALUE='L161' THEN Gross_Amount ELSE 0 END AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT&#xD;&#xA;           ,NULL AS REFERENCE_ID&#xD;&#xA;           ,NULL AS LEGACY_CONTRIBUTION_SUBTYPE,&#xD;&#xA;     'OPUS Batch' AS CREATED_BY,GETDATE() AS CREATED_DATE,&#xD;&#xA;     'OPUS Batch' AS MODIFIED_BY,GETDATE() AS MODIFIED_DATE,&#xD;&#xA;     0 AS UPDATE_SEQ  &#xD;&#xA; FROM&#xD;&#xA;(&#xD;&#xA;SELECT BACCT.PERSON_ACCOUNT_ID, BACCT.FUNDS_TYPE_VALUE,&#xD;&#xA;            CASE WHEN SBA.RETIREMENT_DATE IS NOT NULL THEN  CAST(YEAR(SBA.RETIREMENT_DATE) AS NUMERIC)&#xD;&#xA;            WHEN SDA.DRO_COMMENCEMENT_DATE IS NOT NULL THEN CAST(YEAR(SDA.DRO_COMMENCEMENT_DATE) AS NUMERIC)&#xD;&#xA;            ELSE CAST(YEAR(PHH.PAYMENT_DATE) AS NUMERIC) END AS COMPUTATIONAL_YEAR,&#xD;&#xA;            (SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 THEN AMOUNT ELSE 0 END) - SUM(CASE WHEN PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED' THEN AMOUNT --PIR 1071&#xD;&#xA;            ELSE 0 END)) AS GROSS_AMOUNT,&#xD;&#xA;            GETDATE() AS TRANSACTION_DATE,&#xD;&#xA;            CASE WHEN SBA.RETIREMENT_DATE IS NOT NULL THEN SBA.RETIREMENT_DATE&#xD;&#xA;                  WHEN SDA.DRO_COMMENCEMENT_DATE IS NOT NULL THEN SDA.DRO_COMMENCEMENT_DATE&#xD;&#xA;            ELSE PHH.PAYMENT_DATE END AS EFFECTIVE_DATE&#xD;&#xA;FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA ON PA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT BACCT ON PA.PAYEE_BENEFIT_ACCOUNT_ID=BACCT.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_DETAIL SPHD WITH(NOLOCK) ON PHH.PAYMENT_HISTORY_HEADER_ID = SPHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PIT.PAYMENT_ITEM_TYPE_ID = SPHD.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;LEFT JOIN SGT_WITHHOLDING_INFORMATION SWI ON SWI.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_DETAIL SBAD ON SBAD.BENEFIT_APPLICATION_DETAIL_ID = PA.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION SBA ON SBA.BENEFIT_APPLICATION_ID = SBAD.BENEFIT_APPLICATION_ID&#xD;&#xA;LEFT OUTER JOIN SGT_DRO_BENEFIT_DETAILS SDAD ON SDAD.DRO_BENEFIT_ID = PA.DRO_APPLICATION_DETAIL_ID&#xD;&#xA;LEFT OUTER JOIN SGT_DRO_APPLICATION SDA ON SDA.DRO_APPLICATION_ID = SDAD.DRO_APPLICATION_ID&#xD;&#xA;&#xD;&#xA;WHERE PHH.PAYMENT_HISTORY_HEADER_ID = @PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;GROUP BY BACCT.PERSON_ACCOUNT_ID, BACCT.FUNDS_TYPE_VALUE, PHH.PAYMENT_DATE,SBA.RETIREMENT_DATE,SDA.DRO_COMMENCEMENT_DATE&#xD;&#xA;) AS TEMP">
      <parameters>
        <parameter ID="@PAYMENT_HISTORY_HEADER_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadRetContributionByPersonIdAndTransactionDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION &#xD;&#xA;where PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID and TRANSACTION_DATE = @TRANSACTION_DATE">
      <parameters>
        <parameter ID="@TRANSACTION_DATE" sfwDataType="DateTime" />
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetEEContributionAndInterest" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(EE_CONTRIBUTION_AMOUNT) AS EE_CONTRIBUTION_AMOUNT,SUM(EE_INT_AMOUNT) AS EE_INT_AMOUNT&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WHERE TRANSACTION_TYPE_VALUE = 'PMNT'&#xD;&#xA;AND PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadRetContributionByPersonAcntIdAndDateTilLastYear" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION &#xD;&#xA;where PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID and TRANSACTION_DATE &lt;= @TRANSACTION_DATE">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@TRANSACTION_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetTotalUVHPEEandIAPContribns" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;SELECT SUM(SPARC.EE_CONTRIBUTION_AMOUNT) AS EE_CONTRIBUTION_AMOUNT, &#xD;&#xA;SUM(SPARC.EE_INT_AMOUNT) AS EE_INT_AMOUNT,SUM(SPARC.UVHP_AMOUNT) AS UVHP_AMOUNT,&#xD;&#xA;SUM(SPARC.UVHP_INT_AMOUNT) AS UVHP_INT_AMOUNT,SUM(SPARC.IAP_BALANCE_AMOUNT) AS IAP_BALANCE_AMOUNT  FROM &#xD;&#xA;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC&#xD;&#xA;JOIN SGT_PERSON_ACCOUNT SPA ON &#xD;&#xA;SPARC.PERSON_ACCOUNT_ID=SPA.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE PERSON_ID=@PERSON_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetVestedEEContribution" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(EE_CONTRIBUTION_AMOUNT) AS EE_CONTRIBUTION_AMOUNT,SUM(EE_INT_AMOUNT) AS EE_INT_AMOUNT&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION sparc &#xD;&#xA;WHERE PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID and sparc.COMPUTATIONAL_YEAR &gt; &#xD;&#xA;(select datepart(year,FORFEITURE_DATE) from SGT_PERSON_ACCOUNT_ELIGIBILITY &#xD;&#xA;where PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID)">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadIAPAllocationForPersonByContributionTypeAndSubType" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select sum(SPRC.IAP_BALANCE_AMOUNT) as IAP_BALANCE_AMOUNT ,max(SPRC.COMPUTATIONAL_YEAR)as COMPUTATIONAL_YEAR,&#xD;&#xA; max(SPRC.EFFECTIVE_DATE) as EFFECTIVE_DATE, CONTRIBUTION_TYPE_VALUE, CONTRIBUTION_SUBTYPE_VALUE, SPRC.PERSON_ACCOUNT_ID&#xD;&#xA;from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPRC &#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT SPA ON SPRC.PERSON_ACCOUNT_ID=SPA.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON SP ON SPA.PERSON_ID=SP.PERSON_ID &#xD;&#xA;WHERE SP.PERSON_ID = @PERSON_ID and SPA.PLAN_ID = @PLAN_ID &#xD;&#xA;group by CONTRIBUTION_SUBTYPE_VALUE, CONTRIBUTION_TYPE_VALUE, SPRC.PERSON_ACCOUNT_ID&#xD;&#xA;having sum(SPRC.IAP_BALANCE_AMOUNT) &lt;&gt; 0&#xD;&#xA;order by SPRC.PERSON_ACCOUNT_ID desc">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPContributionStartYear" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select COMPUTATIONAL_YEAR, SUM(ISNULL(IAP_BALANCE_AMOUNT, 0)) as IAP_BALANCE_AMOUNT, &#xD;&#xA;SUM(ISNULL(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT, 0)) as LOCAL161_SPECIAL_ACCT_BAL_AMOUNT, &#xD;&#xA;sum(ISNULL(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT, 0)) as LOCAL52_SPECIAL_ACCT_BAL_AMOUNT&#xD;&#xA;from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPRC &#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT SPA ON SPRC.PERSON_ACCOUNT_ID=SPA.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON SP ON SPA.PERSON_ID=SP.PERSON_ID &#xD;&#xA;WHERE SP.PERSON_ID = @PERSON_ID and SPA.PLAN_ID = @PLAN_ID &#xD;&#xA;group by COMPUTATIONAL_YEAR&#xD;&#xA;order by COMPUTATIONAL_YEAR asc">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadIAPContributionforsinglePerson" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select IAP_BALANCE_AMOUNT , LOCAL161_SPECIAL_ACCT_BAL_AMOUNT, LOCAL52_SPECIAL_ACCT_BAL_AMOUNT, COMPUTATIONAL_YEAR, &#xD;&#xA;EFFECTIVE_DATE, CONTRIBUTION_TYPE_VALUE, CONTRIBUTION_SUBTYPE_VALUE, TRANSACTION_DATE&#xD;&#xA;from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPRC &#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT SPA ON SPRC.PERSON_ACCOUNT_ID=SPA.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON SP ON SPA.PERSON_ID=SP.PERSON_ID &#xD;&#xA;WHERE SPRC.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;order by SPRC.PERSON_ACCOUNT_ID desc">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetUVHPSumWithNonVestedEESumContribun" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT isnull(SUM(UVHP_AMOUNT),0.0) + isnull(SUM(UVHP_INT_AMOUNT),0.0) + isnull(SUM(EE_CONTRIBUTION_AMOUNT),0.0) + isnull(SUM(EE_INT_AMOUNT),0.0) FROM dbo.SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION  with(nolock)&#xD;&#xA;WHERE ((CONTRIBUTION_TYPE_VALUE = 'EE' and CONTRIBUTION_SUBTYPE_VALUE ='NVES') or(CONTRIBUTION_TYPE_VALUE = 'uvhp'))&#xD;&#xA;AND PERSON_ACCOUNT_ID=@PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetAllEE&amp;UVHPPaymentsUptoCompYr" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;  SPARC.PERSON_ACCOUNT_ID,&#xA; ISNULL(SUM(SPARC.EE_CONTRIBUTION_AMOUNT),&#xA; 0.00) EE_CONTRIBUTION_AMOUNT,&#xA; ISNULL(SUM(SPARC.EE_INT_AMOUNT),&#xA; 0.00)  AS EE_INT_AMOUNT,&#xA; ISNULL(SUM(SPARC.UVHP_AMOUNT),&#xA; 0.00) UVHP_AMOUNT,&#xA; ISNULL(SUM(SPARC.UVHP_INT_AMOUNT),&#xA; 0.00)  AS UVHP_INT_AMOUNT,&#xA; SPARC.CONTRIBUTION_SUBTYPE_VALUE,&#xA; SPARC.CONTRIBUTION_TYPE_VALUE,&#xA; max(sparc.computational_year)  AS computational_year &#xA;FROM&#xA;  ..SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK) &#xA; INNER &#xA;  JOIN SGT_PERSON_ACCOUNT SPA WITH(NOLOCK)&#xA;  ON SPA.PERSON_ACCOUNT_ID = SPARC.PERSON_ACCOUNT_ID &#xA;WHERE&#xA;  SPARC.CONTRIBUTION_TYPE_VALUE IN ('EE',&#xA; 'UVHP') AND&#xA;   SPARC.CONTRIBUTION_SUBTYPE_VALUE IN ('VEST',&#xA; 'NVES')AND&#xA;  SPARC.COMPUTATIONAL_YEAR &lt; =  @COMPUTATIONAL_YEAR AND&#xA;  TRANSACTION_TYPE_VALUE = 'PMNT' &#xA;GROUP  BY   SPARC.PERSON_ACCOUNT_ID,&#xA; SPARC.CONTRIBUTION_TYPE_VALUE,&#xA; SPARC.CONTRIBUTION_SUBTYPE_VALUE">
      <parameters>
        <parameter ID="@COMPUTATIONAL_YEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPBalanceForYear" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--68700&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT SUM(SPARC.IAP_BALANCE_AMOUNT) AS IAP_BALANCE_AMOUNT,&#xD;&#xA;       SUM(SPARC.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,&#xD;&#xA;       SUM(SPARC.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT, &#xD;&#xA;    MAX(SPARC.EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;    SUM(CASE WHEN ISNULL(SPARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' THEN &#xD;&#xA;       ISNULL(SPARC.IAP_BALANCE_AMOUNT,0.00) END) AS IAP_BALANCE_AMOUNT_PRE_RTMT_DEATH,&#xD;&#xA;    SUM(CASE WHEN ISNULL(SPARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' THEN &#xD;&#xA;        ISNULL(SPARC.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0.00) END) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT_PRE_RTMT_DEATH,&#xD;&#xA;    SUM(CASE WHEN ISNULL(SPARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' THEN &#xD;&#xA;        ISNULL(SPARC.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0.00) END) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT_PRE_RTMT_DEATH&#xD;&#xA;     &#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK) &#xD;&#xA;WHERE SPARC.PERSON_ACCOUNT_ID =@PERSON_ACCOUNT_ID&#xD;&#xA;">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPBalanceForYearConversion" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(SPARC.IAP_BALANCE_AMOUNT) AS IAP_BALANCE_AMOUNT,SUM(SPARC.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,&#xD;&#xA;SUM(SPARC.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT, MAX(SPARC.EFFECTIVE_DATE) AS EFFECTIVE_DATE &#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK) &#xD;&#xA;WHERE SPARC.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPBalancebyPersonAccount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select SUM(IAP_BALANCE_AMOUNT) AS IAP_BALANCE from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION where PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPaidIAPBalanceBetweenYears" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(SPARC.IAP_BALANCE_AMOUNT) AS IAP_BALANCE_AMOUNT,SUM(SPARC.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT, &#xD;&#xA;SUM(SPARC.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT, MAX(SPARC.EFFECTIVE_DATE) AS EFFECTIVE_DATE &#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK) &#xD;&#xA;WHERE SPARC.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID &#xD;&#xA;AND TRANSACTION_TYPE_VALUE = 'PMNT'">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetAllEE&amp;UVHPContributionAmountsForCurrentCompYr" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;  SPARC.PERSON_ACCOUNT_ID,&#xA; ISNULL(SUM(SPARC.EE_CONTRIBUTION_AMOUNT),&#xA; 0.00) EE_CONTRIBUTION_AMOUNT,&#xA; ISNULL(SUM(SPARC.EE_INT_AMOUNT),&#xA; 0.00)  AS EE_INT_AMOUNT,&#xA; ISNULL(SUM(SPARC.UVHP_AMOUNT),&#xA; 0.00) UVHP_AMOUNT,&#xA; ISNULL(SUM(SPARC.UVHP_INT_AMOUNT),&#xA; 0.00)  AS UVHP_INT_AMOUNT,&#xA;  SPARC.CONTRIBUTION_SUBTYPE_VALUE,&#xA; SPARC.CONTRIBUTION_TYPE_VALUE,&#xA; mAX(SBA.RETIREMENT_DATE)  AS RETIREMENT_DATE &#xA;FROM&#xA;  SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK)  &#xA;  JOIN SGT_PERSON_ACCOUNT SPA WITH(NOLOCK) &#xA;  ON SPA.PERSON_ACCOUNT_ID = SPARC.PERSON_ACCOUNT_ID AND&#xA;  SPA.PLAN_ID = 2 &#xA;  LEFT OUTER JOIN  SGT_BENEFIT_APPLICATION SBA WITH(NOLOCK) &#xA;  ON SBA.PERSON_ID = SPA.PERSON_ID AND&#xA;  (SBA.BENEFIT_TYPE_VALUE = 'RTMT' or SBA.BENEFIT_TYPE_VALUE = 'DSBL') AND&#xA;  SBA.APPLICATION_STATUS_VALUE = 'APPR' &#xA;WHERE&#xA;     SPARC.CONTRIBUTION_TYPE_VALUE IN ('EE',&#xA; 'UVHP') AND&#xA;   SPARC.CONTRIBUTION_SUBTYPE_VALUE IN ('VEST',&#xA; 'NVES')AND&#xA;  SPARC.COMPUTATIONAL_YEAR = @COMPUTATIONAL_YEAR AND&#xA;   (TRANSACTION_TYPE_VALUE is null or TRANSACTION_TYPE_VALUE &lt;&gt; 'PMNT') &#xA;GROUP  BY   SPARC.PERSON_ACCOUNT_ID,&#xA; SPARC.CONTRIBUTION_TYPE_VALUE,&#xA; SPARC.CONTRIBUTION_SUBTYPE_VALUE">
      <parameters>
        <parameter ID="@COMPUTATIONAL_YEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPAllocationsForPersonAccountTillRetirementDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  PERSON_ACCOUNT_ID,COMPUTATIONAL_YEAR,SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_INVT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_FRFT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC3' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC3,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_INVT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_FRFT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'AFFL' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_AFFL,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'NAFF' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_NONAFFL,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'NAAF' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_BOTH,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT&#xD;&#xA;FROM  SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;WHERE  PERSON_ACCOUNT_ID = @PERSONACCOUNTID&#xD;&#xA; AND  COMPUTATIONAL_YEAR &gt;= @COMPUTATIONYEAR AND EFFECTIVE_DATE &lt;= @RETIREMENT_DATE AND TRANSACTION_TYPE_VALUE &lt;&gt; 'PMNT'&#xD;&#xA;&#xD;&#xA;GROUP BY PERSON_ACCOUNT_ID,COMPUTATIONAL_YEAR">
      <parameters>
        <parameter ID="@PERSONACCOUNTID" sfwDataType="int" />
        <parameter ID="@COMPUTATIONYEAR" sfwDataType="int" />
        <parameter ID="@RETIREMENT_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetIAPBalanceAsOfYearTillRetirementDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT ISNULL(SUM(ISNULL(SPARC.IAP_BALANCE_AMOUNT,0.00)),0.00)&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK)&#xD;&#xA;WHERE SPARC.PERSON_ACCOUNT_ID = @PERSONACCOUNTID&#xD;&#xA;AND SPARC.COMPUTATIONAL_YEAR &lt; @COMPUTATIONYEAR AND &#xD;&#xA;SPARC.EFFECTIVE_DATE &lt;= @RETIREMENT_DATE AND SPARC.TRANSACTION_TYPE_VALUE &lt;&gt; 'PMNT' ">
      <parameters>
        <parameter ID="@PERSONACCOUNTID" sfwDataType="int" />
        <parameter ID="@COMPUTATIONYEAR" sfwDataType="int" />
        <parameter ID="@RETIREMENT_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetPaidIAPAllocationsDetailsForPersonOverview" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT CONVERT(DECIMAL,YEAR(TRANSACTION_DATE))AS COMPUTATIONAL_YEAR,MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_INVT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_FRFT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC3' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC3,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_INVT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_FRFT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'AFFL' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_AFFL,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'NAFF' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_NONAFFL,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'NAAF' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_BOTH,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5,&#xD;&#xA;   RECORD_FREEZE_FLAG&#xD;&#xA;FROM  SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;WHERE PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND (TRANSACTION_TYPE_VALUE = 'PMNT' OR RECORD_FREEZE_FLAG ='Y') &#xD;&#xA;GROUP BY CONVERT(DECIMAL,YEAR(TRANSACTION_DATE)),RECORD_FREEZE_FLAG">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPaidIAPAllocationsDetailsAfterRetirement" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  PERSON_ACCOUNT_ID,COMPUTATIONAL_YEAR,SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_INVT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_FRFT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC3' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC3,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_INVT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_FRFT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'AFFL' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_AFFL,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'NAFF' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_NONAFFL,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'NAAF' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_BOTH,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT&#xD;&#xA;FROM  SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;WHERE  PERSON_ACCOUNT_ID = @PERSONACCOUNTID&#xD;&#xA; AND  COMPUTATIONAL_YEAR &gt;= @COMPUTATIONYEAR AND EFFECTIVE_DATE &gt; @RETIREMENT_DATE AND TRANSACTION_TYPE_VALUE &lt;&gt; 'PMNT'&#xD;&#xA;&#xD;&#xA;GROUP BY PERSON_ACCOUNT_ID,COMPUTATIONAL_YEAR">
      <parameters>
        <parameter ID="@PERSONACCOUNTID" sfwDataType="int" />
        <parameter ID="@COMPUTATIONYEAR" sfwDataType="int" />
        <parameter ID="@RETIREMENT_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetIAPBalanceAsOfYearAfterRetirementDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT ISNULL(SUM(ISNULL(SPARC.IAP_BALANCE_AMOUNT,0.00)),0.00)&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK)&#xD;&#xA;WHERE SPARC.PERSON_ACCOUNT_ID = @PERSONACCOUNTID&#xD;&#xA;AND SPARC.COMPUTATIONAL_YEAR &lt; @COMPUTATIONYEAR AND &#xD;&#xA;SPARC.EFFECTIVE_DATE &gt; @RETIREMENT_DATE AND SPARC.TRANSACTION_TYPE_VALUE &lt;&gt; 'PMNT' ">
      <parameters>
        <parameter ID="@PERSONACCOUNTID" sfwDataType="int" />
        <parameter ID="@COMPUTATIONYEAR" sfwDataType="int" />
        <parameter ID="@RETIREMENT_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetTotalIAPAccountBalanceForIap" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--68700&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT SUM(SPARC.IAP_BALANCE_AMOUNT) AS IAP_BALANCE_AMOUNT,&#xD;&#xA;       SUM(SPARC.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,&#xD;&#xA;       SUM(SPARC.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT, &#xD;&#xA;    MAX(SPARC.EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;    SUM(CASE WHEN ISNULL(SPARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' THEN &#xD;&#xA;       ISNULL(SPARC.IAP_BALANCE_AMOUNT,0.00) END) AS IAP_BALANCE_AMOUNT_PRE_RTMT_DEATH,&#xD;&#xA;    SUM(CASE WHEN ISNULL(SPARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' THEN &#xD;&#xA;        ISNULL(SPARC.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0.00) END) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT_PRE_RTMT_DEATH,&#xD;&#xA;    SUM(CASE WHEN ISNULL(SPARC.TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt; 'PMNT' THEN &#xD;&#xA;        ISNULL(SPARC.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0.00) END) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT_PRE_RTMT_DEATH&#xD;&#xA;     &#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK) &#xD;&#xA;WHERE SPARC.PERSON_ACCOUNT_ID =@PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetLateContributionInterestforPersonAccountContributionYear" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT SPARC.PERSON_ACCOUNT_ID,SPARC.CONTRIBUTION_SUBTYPE_VALUE,SPARC.CONTRIBUTION_TYPE_VALUE,ISNULL(T1.LATE_EE_CONTR_AMT,0.0)LATE_EE_CONTR_AMT,ISNULL(T1.LATE_UVHP_AMT,0.0)LATE_UVHP_AMT,&#xD;&#xA;ISNULL(T3.REG_EE_CONTR_AMT,0.0)REG_EE_CONTR_AMT,ISNULL(T3.REG_UVHP_AMT,0.0)REG_UVHP_AMT,ISNULL(T2.LATE_EE_INT_AMT,0.0)LATE_EE_INT_AMT,ISNULL(T2.LATE_UVHP_INT_AMT,0.0)LATE_UVHP_INT_AMT,&#xD;&#xA;ISNULL(T4.REG_EE_INT_AMT,0.0)REG_EE_INT_AMT,ISNULL(T4.REG_UVHP_INT_AMT,0.0)REG_UVHP_INT_AMT&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK)     &#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT SPA WITH(NOLOCK) ON SPA.PERSON_ACCOUNT_ID = SPARC.PERSON_ACCOUNT_ID AND SPA.PLAN_ID = 2  &#xD;&#xA;LEFT OUTER JOIN ( SELECT C.PERSON_ACCOUNT_ID,C.CONTRIBUTION_TYPE_VALUE,C.CONTRIBUTION_SUBTYPE_VALUE,SUM(C.EE_CONTRIBUTION_AMOUNT)LATE_EE_CONTR_AMT,SUM(C.UVHP_AMOUNT)LATE_UVHP_AMT &#xD;&#xA;     FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION C WITH(NOLOCK) WHERE C.COMPUTATIONAL_YEAR &lt; = @COMPUTATIONAL_YEAR AND YEAR(C.TRANSACTION_DATE) &gt; YEAR(C.EFFECTIVE_DATE) AND&#xD;&#xA;     C.CONTRIBUTION_TYPE_VALUE IN ('EE','UVHP') AND C.CONTRIBUTION_SUBTYPE_VALUE IN ('VEST','NVES') AND C.TRANSACTION_TYPE_VALUE is null AND C.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID &#xD;&#xA;     GROUP BY C.PERSON_ACCOUNT_ID,C.CONTRIBUTION_TYPE_VALUE,C.CONTRIBUTION_SUBTYPE_VALUE&#xD;&#xA;    )T1 ON T1.PERSON_ACCOUNT_ID = SPARC.PERSON_ACCOUNT_ID AND T1.CONTRIBUTION_TYPE_VALUE = SPARC.CONTRIBUTION_TYPE_VALUE AND &#xD;&#xA;    T1.CONTRIBUTION_SUBTYPE_VALUE = SPARC.CONTRIBUTION_SUBTYPE_VALUE&#xD;&#xA;LEFT OUTER JOIN ( SELECT C1.PERSON_ACCOUNT_ID,C1.CONTRIBUTION_TYPE_VALUE,C1.CONTRIBUTION_SUBTYPE_VALUE,SUM(C1.EE_INT_AMOUNT)LATE_EE_INT_AMT,SUM(C1.UVHP_INT_AMOUNT) LATE_UVHP_INT_AMT &#xD;&#xA;     FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION C1 WITH(NOLOCK) WHERE C1.COMPUTATIONAL_YEAR &lt; = @COMPUTATIONAL_YEAR AND C1.CONTRIBUTION_TYPE_VALUE IN ('EE','UVHP') AND&#xD;&#xA;     C1.CONTRIBUTION_SUBTYPE_VALUE IN ('VEST','NVES') AND C1.TRANSACTION_TYPE_VALUE IN ('INTR','ADJS') AND C1.LATE_INTEREST_FLAG = 'Y' AND C1.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID &#xD;&#xA;     GROUP BY C1.PERSON_ACCOUNT_ID,C1.CONTRIBUTION_TYPE_VALUE,C1.CONTRIBUTION_SUBTYPE_VALUE &#xD;&#xA;    )T2 ON T2.PERSON_ACCOUNT_ID = SPARC.PERSON_ACCOUNT_ID AND T2.CONTRIBUTION_TYPE_VALUE = SPARC.CONTRIBUTION_TYPE_VALUE  AND T2.CONTRIBUTION_SUBTYPE_VALUE = SPARC.CONTRIBUTION_SUBTYPE_VALUE&#xD;&#xA;LEFT OUTER JOIN ( SELECT C2.PERSON_ACCOUNT_ID,C2.CONTRIBUTION_TYPE_VALUE,C2.CONTRIBUTION_SUBTYPE_VALUE,SUM(C2.EE_CONTRIBUTION_AMOUNT) REG_EE_CONTR_AMT,SUM(C2.UVHP_AMOUNT) REG_UVHP_AMT &#xD;&#xA;     FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION C2 WITH(NOLOCK)WHERE C2.COMPUTATIONAL_YEAR &lt; = @COMPUTATIONAL_YEAR AND YEAR(C2.TRANSACTION_DATE) = YEAR(C2.EFFECTIVE_DATE) AND&#xD;&#xA;     C2.CONTRIBUTION_TYPE_VALUE IN ('EE','UVHP') AND C2.CONTRIBUTION_SUBTYPE_VALUE IN ('VEST','NVES') AND C2.TRANSACTION_TYPE_VALUE is null  AND C2.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID &#xD;&#xA;     GROUP BY C2.PERSON_ACCOUNT_ID,C2.CONTRIBUTION_TYPE_VALUE,C2.CONTRIBUTION_SUBTYPE_VALUE&#xD;&#xA;    )T3 ON T3.PERSON_ACCOUNT_ID = SPARC.PERSON_ACCOUNT_ID AND T3.CONTRIBUTION_TYPE_VALUE = SPARC.CONTRIBUTION_TYPE_VALUE AND T3.CONTRIBUTION_SUBTYPE_VALUE = SPARC.CONTRIBUTION_SUBTYPE_VALUE &#xD;&#xA;LEFT OUTER JOIN ( SELECT C3.PERSON_ACCOUNT_ID,C3.CONTRIBUTION_TYPE_VALUE,C3.CONTRIBUTION_SUBTYPE_VALUE,SUM(C3.EE_INT_AMOUNT)REG_EE_INT_AMT,SUM(C3.UVHP_INT_AMOUNT)REG_UVHP_INT_AMT &#xD;&#xA;     FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION C3 WITH(NOLOCK)WHERE C3.COMPUTATIONAL_YEAR &lt; = @COMPUTATIONAL_YEAR AND C3.CONTRIBUTION_TYPE_VALUE IN ('EE','UVHP') AND&#xD;&#xA;     C3.CONTRIBUTION_SUBTYPE_VALUE IN ('VEST','NVES') AND C3.TRANSACTION_TYPE_VALUE IN ('INTR','ADJS') AND (C3.LATE_INTEREST_FLAG = 'N' OR C3.LATE_INTEREST_FLAG IS NULL) AND&#xD;&#xA;     C3.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID GROUP BY C3.PERSON_ACCOUNT_ID,C3.CONTRIBUTION_TYPE_VALUE,C3.CONTRIBUTION_SUBTYPE_VALUE&#xD;&#xA;    )T4 ON T4.PERSON_ACCOUNT_ID = SPARC.PERSON_ACCOUNT_ID AND T4.CONTRIBUTION_TYPE_VALUE = SPARC.CONTRIBUTION_TYPE_VALUE AND T4.CONTRIBUTION_SUBTYPE_VALUE = SPARC.CONTRIBUTION_SUBTYPE_VALUE &#xD;&#xA;LEFT OUTER JOIN ( SELECT C4.PERSON_ACCOUNT_ID,C4.CONTRIBUTION_TYPE_VALUE,C4.CONTRIBUTION_SUBTYPE_VALUE,T4.TRANSACTION_DATE LATE_TRANSACTION_DATE,T4.EFFECTIVE_DATE LATE_EFFECTIVE_DATE,&#xD;&#xA;     MAX(C4.TRANSACTION_DATE) WDRL_TRANSACTION_DATE &#xD;&#xA;     FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION C4 WITH(NOLOCK) INNER JOIN SGT_PERSON_ACCOUNT a WITH(NOLOCK)ON a.PERSON_ACCOUNT_ID = C4.PERSON_ACCOUNT_ID &#xD;&#xA;     INNER JOIN (SELECT distinct C5.PERSON_ACCOUNT_ID,C5.CONTRIBUTION_TYPE_VALUE,C5.CONTRIBUTION_SUBTYPE_VALUE,MIN(C5.EFFECTIVE_DATE)EFFECTIVE_DATE,MAX(C5.TRANSACTION_DATE) TRANSACTION_DATE &#xD;&#xA;        FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION C5 WITH(NOLOCK) WHERE C5.CONTRIBUTION_TYPE_VALUE IN ('EE','UVHP') AND C5.TRANSACTION_TYPE_VALUE IS NULL AND&#xD;&#xA;        YEAR(C5.TRANSACTION_DATE) &gt; YEAR(C5.EFFECTIVE_DATE)  GROUP BY C5.PERSON_ACCOUNT_ID,C5.CONTRIBUTION_TYPE_VALUE,C5.CONTRIBUTION_SUBTYPE_VALUE &#xD;&#xA;        )T4 ON T4.PERSON_ACCOUNT_ID = C4.PERSON_ACCOUNT_ID AND T4.CONTRIBUTION_TYPE_VALUE = C4.CONTRIBUTION_TYPE_VALUE AND T4.CONTRIBUTION_SUBTYPE_VALUE = C4.CONTRIBUTION_SUBTYPE_VALUE &#xD;&#xA;     WHERE C4.CONTRIBUTION_TYPE_VALUE IN ('EE','UVHP') AND C4.TRANSACTION_TYPE_VALUE = 'PMNT' AND C4.TRANSACTION_DATE BETWEEN T4.EFFECTIVE_DATE AND T4.TRANSACTION_DATE &#xD;&#xA;     GROUP BY C4.PERSON_ACCOUNT_ID,C4.CONTRIBUTION_TYPE_VALUE,C4.CONTRIBUTION_SUBTYPE_VALUE,T4.TRANSACTION_DATE,T4.EFFECTIVE_DATE&#xD;&#xA;    )T5 ON T5.PERSON_ACCOUNT_ID = SPARC.PERSON_ACCOUNT_ID AND T5.CONTRIBUTION_TYPE_VALUE = SPARC.CONTRIBUTION_TYPE_VALUE  AND T5.CONTRIBUTION_SUBTYPE_VALUE = SPARC.CONTRIBUTION_SUBTYPE_VALUE &#xD;&#xA;WHERE SPARC.CONTRIBUTION_TYPE_VALUE IN ('EE','UVHP') AND SPARC.CONTRIBUTION_SUBTYPE_VALUE IN ('VEST','NVES') AND SPARC.COMPUTATIONAL_YEAR &lt; =  @COMPUTATIONAL_YEAR AND&#xD;&#xA;SPARC.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND @COMPUTATIONAL_YEAR BETWEEN YEAR(T5.LATE_EFFECTIVE_DATE) AND YEAR(T5.WDRL_TRANSACTION_DATE)">
      <parameters>
        <parameter ID="@COMPUTATIONAL_YEAR" sfwDataType="int" />
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetTotalIAPPaid" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(SPARC.IAP_BALANCE_AMOUNT) AS IAP_BALANCE_AMOUNT,SUM(SPARC.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT, &#xD;&#xA;SUM(SPARC.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT, MAX(SPARC.EFFECTIVE_DATE) AS EFFECTIVE_DATE &#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK) &#xD;&#xA;WHERE SPARC.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID &#xD;&#xA;AND TRANSACTION_TYPE_VALUE = 'PMNT'">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPAllocationToBeShownOnPersonO" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT IAP.COMPUTATIONAL_YEAR,MAX(IAP.EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;SUM(IAP.ALLOC1) AS ALLOC1 ,&#xD;&#xA;SUM(IAP.ALLOC2) AS ALLOC2,&#xD;&#xA;SUM(IAP.ALLOC2_INVT) AS ALLOC2_INVT,&#xD;&#xA;SUM(IAP.ALLOC2_FRFT) AS ALLOC2_FRFT,&#xD;&#xA;SUM(IAP.ALLOC3) AS ALLOC3,&#xD;&#xA;SUM(IAP.ALLOC4) AS ALLOC4,&#xD;&#xA;SUM(IAP.ALLOC4_INVT) AS ALLOC4_INVT,&#xD;&#xA;SUM(IAP.ALLOC4_FRFT) AS ALLOC4_FRFT,&#xD;&#xA;SUM(IAP.ALLOC5_AFFL) AS ALLOC5_AFFL,&#xD;&#xA;SUM(IAP.ALLOC5_NONAFFL) AS ALLOC5_NONAFFL,&#xD;&#xA;SUM(IAP.ALLOC5_BOTH) AS ALLOC5_BOTH,&#xD;&#xA;SUM(IAP.ALLOC5) AS ALLOC5,&#xD;&#xA;SUM(IAP.TOTAL_PAYMENT) AS TOTAL_PAYMENT&#xD;&#xA;,MAX(ISNULL(RECORD_FREEZE_FLAG,''))RECORD_FREEZE_FLAG&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA; SELECT      COMPUTATIONAL_YEAR,MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;    SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN ISNULL(IAP_BALANCE_AMOUNT,0) ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;    SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN ISNULL(IAP_BALANCE_AMOUNT,0) ELSE 0.00 END) AS ALLOC2,&#xD;&#xA;    SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN ISNULL(IAP_BALANCE_AMOUNT,0) ELSE 0.00 END) AS ALLOC2_INVT,&#xD;&#xA;    SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN ISNULL(IAP_BALANCE_AMOUNT,0) ELSE 0.00 END) AS ALLOC2_FRFT,&#xD;&#xA;    SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC3' THEN ISNULL(IAP_BALANCE_AMOUNT,0) ELSE 0.00 END) AS ALLOC3,&#xD;&#xA;    SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN ISNULL(IAP_BALANCE_AMOUNT,0) ELSE 0.00 END) AS ALLOC4,&#xD;&#xA;    SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN ISNULL(IAP_BALANCE_AMOUNT,0) ELSE 0.00 END) AS ALLOC4_INVT,&#xD;&#xA;    SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN ISNULL(IAP_BALANCE_AMOUNT,0) ELSE 0.00 END) AS ALLOC4_FRFT,&#xD;&#xA;    SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'AFFL' THEN ISNULL(IAP_BALANCE_AMOUNT,0) ELSE 0.00 END) AS ALLOC5_AFFL,&#xD;&#xA;    SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'NAFF' THEN ISNULL(IAP_BALANCE_AMOUNT,0) ELSE 0.00 END) AS ALLOC5_NONAFFL,&#xD;&#xA;    SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'NAAF' THEN ISNULL(IAP_BALANCE_AMOUNT,0) ELSE 0.00 END) AS ALLOC5_BOTH,&#xD;&#xA;    SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' THEN ISNULL(IAP_BALANCE_AMOUNT,0) ELSE 0.00 END) AS ALLOC5&#xD;&#xA;    ,TOTAL_PAYMENT = 0&#xD;&#xA; ,MAX(ISNULL(RECORD_FREEZE_FLAG,''))RECORD_FREEZE_FLAG&#xD;&#xA; FROM        SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA; WHERE       PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND ISNULL(TRANSACTION_TYPE_VALUE,'ADJS') &lt;&gt;'PMNT'&#xD;&#xA; GROUP BY    COMPUTATIONAL_YEAR&#xD;&#xA; UNION&#xD;&#xA; SELECT      YEAR(TRANSACTION_DATE) AS COMPUTATIONAL_YEAR,MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;    0.00 AS ALLOC1,&#xD;&#xA;    0.00 AS ALLOC2,&#xD;&#xA;    0.00 AS ALLOC2_INVT,&#xD;&#xA;    0.00 AS ALLOC2_FRFT,&#xD;&#xA;    0.00 AS ALLOC3,&#xD;&#xA;    0.00 AS ALLOC4,&#xD;&#xA;    0.00 AS ALLOC4_INVT,&#xD;&#xA;    0.00 AS ALLOC4_FRFT,&#xD;&#xA;    0.00 AS ALLOC5_AFFL,&#xD;&#xA;    0.00 AS ALLOC5_NONAFFL,&#xD;&#xA;    0.00 AS ALLOC5_BOTH,&#xD;&#xA;    0.00 AS ALLOC5&#xD;&#xA;    ,TOTAL_PAYMENT = SUM(ISNULL(IAP_BALANCE_AMOUNT,0))&#xD;&#xA; ,MAX(ISNULL(RECORD_FREEZE_FLAG,''))RECORD_FREEZE_FLAG&#xD;&#xA; FROM        SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA; WHERE       PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND ISNULL(TRANSACTION_TYPE_VALUE,'ADJS') = 'PMNT'&#xD;&#xA; GROUP BY    YEAR(TRANSACTION_DATE)&#xD;&#xA;)IAP&#xD;&#xA;GROUP BY IAP.COMPUTATIONAL_YEAR&#xD;&#xA;ORDER BY IAP.COMPUTATIONAL_YEAR">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetContributionsBetweenfortritureAndWithdrawal" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WHERE PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND COMPUTATIONAL_YEAR = @Year&#xD;&#xA;AND CONTRIBUTION_TYPE_VALUE IN ('EE','UVHP') AND CONTRIBUTION_SUBTYPE_VALUE IN ('VEST')&#xD;&#xA;">
      <parameters>
        <parameter ID="@Year" sfwDataType="int" />
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPAllocationsDetailsForPersonOverviewBeforeRetirement" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT      COMPUTATIONAL_YEAR,MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_INVT,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_FRFT,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC3' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC3,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_INVT,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_FRFT,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'AFFL' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_AFFL,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'NAFF' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_NONAFFL,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'NAAF' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_BOTH,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5&#xD;&#xA;FROM        SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;WHERE        PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND TRANSACTION_TYPE_VALUE &lt;&gt; 'PMNT' and EFFECTIVE_DATE &lt;= @RETIREMENT_DATE&#xD;&#xA;GROUP BY    COMPUTATIONAL_YEAR&#xD;&#xA;">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@RETIREMENT_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetIAPAllocationsDetailsForPersonOverviewAfterRetirement" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;&#xD;&#xA;SELECT      COMPUTATIONAL_YEAR,MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_INVT,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_FRFT,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC3' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC3,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_INVT,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_FRFT,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'AFFL' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_AFFL,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'NAFF' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_NONAFFL,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'NAAF' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_BOTH,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5&#xD;&#xA;FROM        SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;WHERE        PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND TRANSACTION_TYPE_VALUE &lt;&gt; 'PMNT' and EFFECTIVE_DATE &gt; @RETIREMENT_DATE&#xD;&#xA;GROUP BY    COMPUTATIONAL_YEAR">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@RETIREMENT_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetIAPAllocationDetailsForForfietureYear" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT      COMPUTATIONAL_YEAR,MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_INVT,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_FRFT,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC3' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC3,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_INVT,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_FRFT,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'AFFL' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_AFFL,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'NAFF' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_NONAFFL,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'NAAF' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_BOTH,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5&#xD;&#xA;FROM        SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;WHERE        PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND TRANSACTION_TYPE_VALUE = 'FORF' and COMPUTATIONAL_YEAR = @COMPUTATIONAL_YEAR&#xD;&#xA;GROUP BY    COMPUTATIONAL_YEAR">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@COMPUTATIONAL_YEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPAllocationDetailsForForfietureYearOtherAllocations" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT      COMPUTATIONAL_YEAR,MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_INVT,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC2' AND CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC2_FRFT,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC3' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC3,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE = 'IALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_INVT,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE = 'FALC' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC4_FRFT,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'AFFL' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_AFFL,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'NAFF' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_NONAFFL,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' AND CONTRIBUTION_SUBTYPE_VALUE = 'NAAF' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5_BOTH,&#xD;&#xA;            SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC5' THEN IAP_BALANCE_AMOUNT ELSE 0.00 END) AS ALLOC5&#xD;&#xA;FROM        SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;WHERE        PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND TRANSACTION_TYPE_VALUE NOT IN ('FORF','PMNT') and COMPUTATIONAL_YEAR = @COMPUTATIONAL_YEAR&#xD;&#xA;GROUP BY    COMPUTATIONAL_YEAR&#xD;&#xA;">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@COMPUTATIONAL_YEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPAsOfDateFromCalculation" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT TOP(1) CASE WHEN ISNULL(SBCH.RETIREMENT_DATE,'17530101') &gt; ISNULL(SBCH.AWARDED_ON_DATE,'17530101')&#xD;&#xA;THEN ISNULL(SBCH.RETIREMENT_DATE,'17530101') ELSE ISNULL(SBCH.AWARDED_ON_DATE,'17530101') END FROM SGT_BENEFIT_CALCULATION_HEADER SBCH INNER JOIN &#xD;&#xA;SGT_BENEFIT_CALCULATION_DETAIL SBCD ON SBCH.BENEFIT_CALCULATION_HEADER_ID = SBCD.BENEFIT_CALCULATION_HEADER_ID&#xD;&#xA;WHERE SBCH.BENEFIT_TYPE_VALUE IN ('DSBL','RTMT') AND SBCH.STATUS_VALUE &lt;&gt; 'CANC' AND SBCD.PLAN_ID = 1 AND CALCULATION_TYPE_VALUE = 'FINL'&#xD;&#xA;AND PERSON_ID = @PERSON_ID  ORDER BY SBCH.MODIFIED_DATE DESC">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetMaxPaymentYearOnOrBefore1979" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  YEAR(MAX(EFFECTIVE_DATE))--PIR 836&#xD;&#xA;FROM  SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK) INNER JOIN SGT_PERSON_ACCOUNT SPA ON SPARC.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE  SPA.PERSON_ID = @PERSON_ID AND TRANSACTION_TYPE_VALUE = 'PMNT' AND SPA.PLAN_ID = 2 AND YEAR(TRANSACTION_DATE) &lt;= 1979 and YEAR(EFFECTIVE_DATE) &lt;= 1979&#xD;&#xA;">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetEEContibutionAndEEInterestForYear" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(ISNULL(SPARC.EE_CONTRIBUTION_AMOUNT,0)), SUM(ISNULL(EE_INT_AMOUNT,0)), MAX(SPARC.TRANSACTION_DATE)&#xD;&#xA;FROM (SELECT RC.PERSON_ACCOUNT_ID, RC.EE_CONTRIBUTION_AMOUNT, RC.EE_INT_AMOUNT, RC.TRANSACTION_DATE&#xD;&#xA;  FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION RC WITH(NOLOCK)&#xD;&#xA;  WHERE RC.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID &#xD;&#xA;  AND RC.COMPUTATIONAL_YEAR = @COMPUTATIONAL_YEAR ) SPARC&#xD;&#xA;GROUP BY SPARC.PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" />
        <parameter ID="@COMPUTATIONAL_YEAR" />
      </parameters>
    </query>
    <query ID="GetPaymentCount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;  COUNT(*)  AS PAYMENT_COUNT &#xA;FROM&#xA;  SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)  &#xA;  INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xA;  INNER JOIN SGT_PAYEE_ACCOUNT SPA WITH(NOLOCK) ON SPA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xA;  INNER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) ON PBXR.PLAN_BENEFIT_ID = SPA.PLAN_BENEFIT_ID&#xA;  LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_DETAIL SBCD WITH(NOLOCK) ON SBCD.BENEFIT_CALCULATION_DETAIL_ID = SPA.BENEFIT_CALCULATION_DETAIL_ID&#xA;  LEFT OUTER JOIN SGT_QDRO_CALCULATION_DETAIL SQCD WITH(NOLOCK) ON SQCD.QDRO_CALCULATION_DETAIL_ID = SPA.DRO_CALCULATION_DETAIL_ID&#xA;WHERE&#xA;  PHH.PERSON_ID = @person_id AND&#xA;  PHD.DISTRIBUTION_STATUS_VALUE &lt;&gt; 'CNLD' AND&#xA;  PBXR.PLAN_ID = @plan_id AND (SBCD.BENEFIT_CALCULATION_DETAIL_ID = @CALC_DETAIL_ID OR SQCD.QDRO_CALCULATION_DETAIL_ID = @CALC_DETAIL_ID)">
      <parameters>
        <parameter ID="@person_id" sfwDataType="int" />
        <parameter ID="@plan_id" sfwDataType="int" />
        <parameter ID="@CALC_DETAIL_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPaymentCountForApplication" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql=" SELECT COUNT(Distinct SPHH.PAYMENT_HISTORY_HEADER_ID)  AS PAYMENT_COUNT  FROM  SGT_PAYMENT_HISTORY_DISTRIBUTION SPHD&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER SPHH&#xD;&#xA;ON SPHH.PAYMENT_HISTORY_HEADER_ID=SPHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN  SGT_PAYEE_ACCOUNT SPA  ON SPHH.PAYEE_ACCOUNT_ID=SPA.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_BENEFIT_APPLICATION_DETAIL SBAD ON  SBAD.BENEFIT_APPLICATION_DETAIL_ID=SPA.BENEFIT_APPLICATION_DETAIL_ID &#xD;&#xA;INNER JOIN SGT_BENEFIT_APPLICATION SBCH ON SBCH.BENEFIT_APPLICATION_ID=SBAD.BENEFIT_APPLICATION_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_DETAIL SPED ON SPED.PAYMENT_HISTORY_HEADER_ID=SPHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID = SPED.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;WHERE SPHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','RCMD') AND SBCH.BENEFIT_APPLICATION_ID = @benefit_application_id&#xD;&#xA;HAVING SUM(ISNULL(SPED.AMOUNT,0) * PIT.ITEM_TYPE_DIRECTION) &gt; 0">
      <parameters>
        <parameter ID="@benefit_application_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPBalanceForQDROAsofYear" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(SPARC.IAP_BALANCE_AMOUNT) AS IAP_BALANCE_AMOUNT,SUM(SPARC.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,&#xD;&#xA;SUM(SPARC.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT, MAX(SPARC.EFFECTIVE_DATE) AS EFFECTIVE_DATE &#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK) &#xD;&#xA;WHERE SPARC.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;AND SPARC.COMPUTATIONAL_YEAR &lt;= @COMPUATIONYEAR">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@COMPUATIONYEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPersonAccountRetirementContributionEEUVHP" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;      PERSON_ACCOUNT_ID&#xD;&#xA;           ,TRANSACTION_DATE&#xD;&#xA;           ,EFFECTIVE_DATE&#xD;&#xA;           ,CONVERT(DECIMAL,ISNULL(COMPUTATIONAL_YEAR,0)) AS COMPUTATIONAL_YEAR&#xD;&#xA;           ,NULL AS IAP_BALANCE_AMOUNT&#xD;&#xA;           ,1003 AS TRANSACTION_TYPE_ID&#xD;&#xA;           ,'PMNT' AS TRANSACTION_TYPE_VALUE&#xD;&#xA;           ,EE_CONTRIBUTION_AMOUNT&#xD;&#xA;           ,UVHP_AMOUNT AS UVHP_AMOUNT&#xD;&#xA;           ,EE_INTEREST_AMOUNT AS EE_INT_AMOUNT&#xD;&#xA;           ,UVHP_INTEREST_AMOUNT AS UVHP_INT_AMOUNT&#xD;&#xA;           ,NULL AS LOCAL_FROZEN_BENEFIT_AMOUNT           &#xD;&#xA;           ,CONTRIBUTION_TYPE AS CONTRIBUTION_TYPE_VALUE&#xD;&#xA;           ,1000 AS CONTRIBUTION_TYPE_ID&#xD;&#xA;           ,1004 AS CONTRIBUTION_SUBTYPE_ID&#xD;&#xA;           ,CONTRIBUTION_SUB_TYPE AS CONTRIBUTION_SUBTYPE_VALUE&#xD;&#xA;           ,NULL AS LOCAL_PRE_BIS_AMOUNT&#xD;&#xA;           ,NULL AS LOCAL_POST_BIS_AMOUNT&#xD;&#xA;           ,NULL AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT&#xD;&#xA;           ,NULL AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT&#xD;&#xA;           ,NULL AS REFERENCE_ID&#xD;&#xA;           ,NULL AS LEGACY_CONTRIBUTION_SUBTYPE,&#xD;&#xA;      'OPUS Batch' AS CREATED_BY,GETDATE() AS CREATED_DATE,'OPUS Batch' AS MODIFIED_BY,GETDATE() AS MODIFIED_DATE,0 AS UPDATE_SEQ  &#xD;&#xA;      FROM&#xD;&#xA;(&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;  BACCT.PERSON_ACCOUNT_ID,&#xD;&#xA;  BACCT.FUNDS_TYPE_VALUE,&#xD;&#xA;  YEAR(PHH.PAYMENT_DATE) AS COMPUTATIONAL_YEAR,&#xD;&#xA;  CASE WHEN BCDTL.BENEFIT_CALCULATION_DETAIL_ID IS NOT NULL AND BCDTL.UVHP_FLAG='Y' THEN ISNULL(BCDTL.TOTAL_UVHP_CONTRIBUTION_AMOUNT,0)&#xD;&#xA;                 ELSE &#xD;&#xA;                    CASE WHEN  QDTL.UVHP_FLAG='Y' THEN ISNULL(BCDTL.TOTAL_UVHP_CONTRIBUTION_AMOUNT,0) END &#xD;&#xA;                    END   AS UVHP_AMOUNT,&#xD;&#xA;  CASE WHEN BCDTL.BENEFIT_CALCULATION_DETAIL_ID IS NOT NULL AND BCDTL.UVHP_FLAG='Y' THEN ISNULL(BCDTL.TOTAL_UVHP_INTEREST_AMOUNT,0)&#xD;&#xA;                 ELSE &#xD;&#xA;                    CASE WHEN  QDTL.UVHP_FLAG='Y' THEN ISNULL(BCDTL.TOTAL_UVHP_INTEREST_AMOUNT,0) END &#xD;&#xA;                    END   AS UVHP_INTEREST_AMOUNT,&#xD;&#xA;  NULL AS EE_CONTRIBUTION_AMOUNT,&#xD;&#xA;  NULL AS EE_INTEREST_AMOUNT,&#xD;&#xA;  GETDATE() AS TRANSACTION_DATE,PHH.PAYMENT_DATE AS EFFECTIVE_DATE,&#xD;&#xA;  'UVHP' AS CONTRIBUTION_TYPE,&#xD;&#xA;  NULL AS CONTRIBUTION_SUB_TYPE&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;           ON PA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID AND PA.PERSON_ID=PHH.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT BACCT&#xD;&#xA;           ON PA.PAYEE_BENEFIT_ACCOUNT_ID=BACCT.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_SCHEDULE PS&#xD;&#xA;           ON PS.PAYMENT_SCHEDULE_ID=PHH.PAYMENT_SCHEDULE_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_DETAIL BCDTL WITH(NOLOCK) &#xD;&#xA;           ON BCDTL.BENEFIT_CALCULATION_DETAIL_ID = PA.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA;LEFT OUTER JOIN SGT_QDRO_CALCULATION_DETAIL QDTL WITH(NOLOCK) &#xD;&#xA;         ON QDTL.QDRO_CALCULATION_DETAIL_ID = PA.DRO_CALCULATION_DETAIL_ID&#xD;&#xA;WHERE PHH.PAYMENT_HISTORY_HEADER_ID=@PAYMENTHISTORYHEADERID&#xD;&#xA;AND  PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('WDRL')&#xD;&#xA;&#xD;&#xA;UNION &#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;  BACCT.PERSON_ACCOUNT_ID,&#xD;&#xA;  BACCT.FUNDS_TYPE_VALUE,&#xD;&#xA;  CASE WHEN SBA.EFFECTIVE_DATE IS NOT NULL THEN YEAR(SBA.EFFECTIVE_DATE) ELSE YEAR(PHH.PAYMENT_DATE) END AS COMPUTATIONAL_YEAR,&#xD;&#xA;  NULL AS UVHP_AMOUNT,&#xD;&#xA;  NULL AS UVHP_INTEREST_AMOUNT,&#xD;&#xA;  CASE WHEN BCDTL.BENEFIT_CALCULATION_DETAIL_ID IS NOT NULL AND BCDTL.EE_FLAG='Y' THEN ISNULL(BCDTL.NON_VESTED_EE_AMOUNT,0)&#xD;&#xA;                 ELSE &#xD;&#xA;                     CASE WHEN  QDTL.EE_FLAG='Y' THEN ISNULL(QDTL.NON_VESTED_EE_AMOUNT,0) END &#xD;&#xA;                     END   AS EE_CONTRIBUTION_AMOUNT,&#xD;&#xA;  CASE WHEN BCDTL.BENEFIT_CALCULATION_DETAIL_ID IS NOT NULL AND BCDTL.EE_FLAG='Y' THEN ISNULL(BCDTL.NON_VESTED_EE_INTEREST,0)&#xD;&#xA;                 ELSE &#xD;&#xA;                     CASE WHEN  QDTL.EE_FLAG='Y' THEN ISNULL(QDTL.NON_VESTED_EE_INTEREST,0) END &#xD;&#xA;                     END   AS EE_INTEREST_AMOUNT,&#xD;&#xA;  GETDATE() AS TRANSACTION_DATE,&#xD;&#xA;  CASE WHEN SBA.EFFECTIVE_DATE IS NOT NULL THEN SBA.EFFECTIVE_DATE ELSE PHH.PAYMENT_DATE END AS EFFECTIVE_DATE,&#xD;&#xA;  'EE' AS CONTRIBUTION_TYPE,&#xD;&#xA;  'NVES' AS CONTRIBUTION_SUB_TYPE&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;           ON PA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID AND PA.PERSON_ID=PHH.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT BACCT&#xD;&#xA;           ON PA.PAYEE_BENEFIT_ACCOUNT_ID=BACCT.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_SCHEDULE PS&#xD;&#xA;           ON PS.PAYMENT_SCHEDULE_ID=PHH.PAYMENT_SCHEDULE_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_DETAIL BCDTL WITH(NOLOCK) &#xD;&#xA;           ON BCDTL.BENEFIT_CALCULATION_DETAIL_ID = PA.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA;LEFT OUTER JOIN SGT_QDRO_CALCULATION_DETAIL QDTL WITH(NOLOCK) &#xD;&#xA;           ON QDTL.QDRO_CALCULATION_DETAIL_ID = PA.DRO_CALCULATION_DETAIL_ID&#xD;&#xA;--PIR 999           &#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_DETAIL SBAD &#xD;&#xA;     ON PA.BENEFIT_APPLICATION_DETAIL_ID = SBAD.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION SBA&#xD;&#xA;     ON SBAD.BENEFIT_APPLICATION_ID = SBA.BENEFIT_APPLICATION_ID         &#xD;&#xA;WHERE PHH.PAYMENT_HISTORY_HEADER_ID=@PAYMENTHISTORYHEADERID&#xD;&#xA;AND  PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('WDRL')&#xD;&#xA;&#xD;&#xA;) TEMP">
      <parameters>
        <parameter ID="@PAYMENTHISTORYHEADERID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetL52AllocDetailsForRecalculationBeforeWithdrawal" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COMPUTATIONAL_YEAR,MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS ALLOC4&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;WHERE PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND TRANSACTION_TYPE_VALUE &lt;&gt; 'PMNT' and EFFECTIVE_DATE &lt;= @WITHDRAWAL_DATE&#xD;&#xA;AND ISNULL(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0) &lt;&gt; 0&#xD;&#xA;GROUP BY COMPUTATIONAL_YEAR">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@WITHDRAWAL_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetL161AllocDetailsForRecalculationBeforeWithdrawal" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COMPUTATIONAL_YEAR,MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS ALLOC4&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;WHERE PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND TRANSACTION_TYPE_VALUE &lt;&gt; 'PMNT' and EFFECTIVE_DATE &lt;= @WITHDRAWAL_DATE&#xD;&#xA;AND ISNULL(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0) &lt;&gt; 0&#xD;&#xA;GROUP BY COMPUTATIONAL_YEAR&#xD;&#xA;">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@WITHDRAWAL_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetL52AllocDetailsForRecalculation" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COMPUTATIONAL_YEAR,MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS ALLOC4&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;WHERE PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND TRANSACTION_TYPE_VALUE &lt;&gt; 'PMNT'&#xD;&#xA;AND ISNULL(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0) &lt;&gt; 0&#xD;&#xA;GROUP BY COMPUTATIONAL_YEAR">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetL161AllocDetailsForRecalculation" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COMPUTATIONAL_YEAR,MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS ALLOC4&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;WHERE PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND TRANSACTION_TYPE_VALUE &lt;&gt; 'PMNT'&#xD;&#xA;AND ISNULL(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0) &lt;&gt; 0&#xD;&#xA;GROUP BY COMPUTATIONAL_YEAR">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPaidL52AllocDetailsForRecalculation" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT CONVERT(DECIMAL,YEAR(TRANSACTION_DATE))AS COMPUTATIONAL_YEAR,MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS ALLOC4,&#xD;&#xA;   RECORD_FREEZE_FLAG&#xD;&#xA;FROM  SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;WHERE PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND (TRANSACTION_TYPE_VALUE = 'PMNT' OR RECORD_FREEZE_FLAG ='Y')  and ISNULL(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0) &lt;&gt; 0&#xD;&#xA;GROUP BY CONVERT(DECIMAL,YEAR(TRANSACTION_DATE)),RECORD_FREEZE_FLAG">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPaidL161AllocDetailsForRecalculation" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT CONVERT(DECIMAL,YEAR(TRANSACTION_DATE))AS COMPUTATIONAL_YEAR,MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;   SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS ALLOC4,&#xD;&#xA;   RECORD_FREEZE_FLAG&#xD;&#xA;FROM  SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;WHERE PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND (TRANSACTION_TYPE_VALUE = 'PMNT' OR RECORD_FREEZE_FLAG ='Y') and ISNULL(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0) &lt;&gt; 0&#xD;&#xA;GROUP BY CONVERT(DECIMAL,YEAR(TRANSACTION_DATE)),RECORD_FREEZE_FLAG ">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetLocal52SpecialAccountDetailsForReCalculation" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  COMPUTATIONAL_YEAR,MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' &#xD;&#xA;THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS ALLOC1,SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL&#xD;&#xA;THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS ALLOC4&#xD;&#xA;FROM                   SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;WHERE                 PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;GROUP BY           COMPUTATIONAL_YEAR&#xD;&#xA;HAVING SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0 OR&#xD;&#xA;SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL&#xD;&#xA;THEN LOCAL52_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetLocal161SpecialAccountDetailsForReCalculation" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql=" SELECT  COMPUTATIONAL_YEAR,MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' &#xD;&#xA;THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS ALLOC1,&#xD;&#xA;SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL&#xD;&#xA;THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) AS ALLOC4&#xD;&#xA;FROM                   SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;WHERE                 PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;GROUP BY           COMPUTATIONAL_YEAR&#xD;&#xA;HAVING SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC1' THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0 OR&#xD;&#xA;SUM(CASE WHEN CONTRIBUTION_TYPE_VALUE = 'ALC4' AND CONTRIBUTION_SUBTYPE_VALUE IS NULL&#xD;&#xA;THEN LOCAL161_SPECIAL_ACCT_BAL_AMOUNT ELSE 0.00 END) &lt;&gt; 0&#xD;&#xA;">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckQuaterlyAllocation" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql=" --PIR RID 66354  new query&#xD;&#xA; IF (ISNULL(@IAPBALANCEAMOUNT,0.00) &lt;&gt; 0.00)&#xD;&#xA; SELECT  COUNT(1) COUNTS&#xD;&#xA; FROM  SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK)&#xD;&#xA; WHERE PARC.CONTRIBUTION_TYPE_VALUE = 'ALC1' AND PARC.TRANSACTION_TYPE_VALUE IN ('QALC', 'ADJS')&#xD;&#xA;  AND PARC.PERSON_ACCOUNT_ID = @PERSONACCOUNTID&#xD;&#xA;  AND PARC.EFFECTIVE_DATE = @EFFECTIVEDATE&#xD;&#xA;  AND (IAP_BALANCE_AMOUNT = @IAPBALANCEAMOUNT)&#xD;&#xA;ELSE IF (ISNULL(@L52BALANCEAMOUNT,0.00) &lt;&gt; 0.00)&#xD;&#xA; SELECT  COUNT(1) COUNTS&#xD;&#xA; FROM  SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK)&#xD;&#xA; WHERE PARC.CONTRIBUTION_TYPE_VALUE = 'ALC1' AND PARC.TRANSACTION_TYPE_VALUE IN ('QALC', 'ADJS')&#xD;&#xA;  AND PARC.PERSON_ACCOUNT_ID = @PERSONACCOUNTID&#xD;&#xA;  AND PARC.EFFECTIVE_DATE = @EFFECTIVEDATE&#xD;&#xA;  AND PARC.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT = @L52BALANCEAMOUNT&#xD;&#xA;ELSE IF (ISNULL(@L161BALANCEAMOUNT,0.00) &lt;&gt; 0.00)&#xD;&#xA; SELECT  COUNT(1) COUNTS&#xD;&#xA; FROM  SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK)&#xD;&#xA; WHERE PARC.CONTRIBUTION_TYPE_VALUE = 'ALC1' AND PARC.TRANSACTION_TYPE_VALUE IN ('QALC', 'ADJS')&#xD;&#xA;  AND PARC.PERSON_ACCOUNT_ID = @PERSONACCOUNTID&#xD;&#xA;  AND PARC.EFFECTIVE_DATE = @EFFECTIVEDATE&#xD;&#xA;  AND PARC.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT = @L161BALANCEAMOUNT&#xD;&#xA;ELSE&#xD;&#xA; SELECT 0 COUNTS&#xD;&#xA;">
      <parameters>
        <parameter ID="@PERSONACCOUNTID" sfwDataType="int" />
        <parameter ID="@EFFECTIVEDATE" sfwDataType="DateTime" />
        <parameter ID="@IAPBALANCEAMOUNT" sfwDataType="Decimal" />
        <parameter ID="@L52BALANCEAMOUNT" sfwDataType="Decimal" />
        <parameter ID="@L161BALANCEAMOUNT" sfwDataType="Decimal" />
      </parameters>
    </query>
    <query ID="GetIAPNSRecords" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT RC.IAP_BALANCE_AMOUNT AS alloc4,RC.* FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION RC&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT SPA ON RC.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE SPA.PLAN_ID = 1 AND LEGACY_CONTRIBUTION_SUBTYPE = 'NS' AND SPA.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetBalanceforOverpaymentAjustment" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql=" SELECT PERSON_ACCOUNT_ID, ISNULL(SUM(IAP_BALANCE_AMOUNT),0.00)IAP_BALANCE_AMOUNT,&#xD;&#xA;       ISNULL(SUM(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT),0.00)LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,&#xD;&#xA;       ISNULL(SUM(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT),0.00)LOCAL161_SPECIAL_ACCT_BAL_AMOUNT &#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION&#xD;&#xA;WHERE PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;GROUP BY PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPRetirementContributionbyPerson" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql=" select a.* &#xD;&#xA; from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION a &#xD;&#xA; inner join SGT_PERSON_ACCOUNT b on a.PERSON_ACCOUNT_ID = b.PERSON_ACCOUNT_ID and b.PLAN_ID = 1&#xD;&#xA; inner join SGT_PERSON c on b.PERSON_ID = c.PERSON_ID&#xD;&#xA; where c.PERSON_ID = @PERSON_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPBalanceAndPreRetirementDeathBalanceAsofYear" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(IAP_BALANCE_AMOUNT) AS IAP_BALANCE_AMOUNT,&#xD;&#xA;       SUM(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,&#xD;&#xA;       SUM(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT, &#xD;&#xA;             MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;             SUM(IAP_AMOUNT) AS IAP_BALANCE_AMOUNT_PRE_RTMT_DEATH,&#xD;&#xA;       SUM(L052_AMOUNT) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT_PRE_RTMT_DEATH,&#xD;&#xA;       SUM(L161_AMOUNT) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT_PRE_RTMT_DEATH&#xD;&#xA;&#x9;   &#xD;&#xA;&#x9;   &#xD;&#xA;FROM (&#xD;&#xA;SELECT IAP_BALANCE_AMOUNT, LOCAL52_SPECIAL_ACCT_BAL_AMOUNT, LOCAL161_SPECIAL_ACCT_BAL_AMOUNT, EFFECTIVE_DATE&#xD;&#xA;, IAP_BALANCE_AMOUNT AS IAP_AMOUNT, LOCAL52_SPECIAL_ACCT_BAL_AMOUNT AS L052_AMOUNT, LOCAL161_SPECIAL_ACCT_BAL_AMOUNT AS L161_AMOUNT&#xD;&#xA;&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK) &#xD;&#xA;WHERE TRANSACTION_TYPE_VALUE &lt;&gt; 'PMNT' AND SPARC.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND SPARC.COMPUTATIONAL_YEAR &lt;= @COMPUTATIONAL_YEAR&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;CASE WHEN FUND_TYPE = 'IAP' THEN -AMOUNT_PAID ELSE 0 END AS IAP_PAYMENT, &#xD;&#xA;CASE WHEN FUND_TYPE = 'L052' THEN -AMOUNT_PAID ELSE 0 END AS L052_PAYMENT, &#xD;&#xA;CASE WHEN FUND_TYPE = 'L161' THEN -AMOUNT_PAID ELSE 0 END AS L161_PAYMENT, &#xD;&#xA;PAYMENT_DATE,&#xD;&#xA;CASE WHEN FUND_TYPE = 'IAP' AND BENEFIT_TYPE &lt;&gt; 'DDPR' THEN -AMOUNT_PAID ELSE 0 END AS IAP_PRE_DEATH_PAYMENT, &#xD;&#xA;CASE WHEN FUND_TYPE = 'L052' AND BENEFIT_TYPE &lt;&gt; 'DDPR' THEN -AMOUNT_PAID ELSE 0 END AS L052_PRE_DEATH_PAYMENT, &#xD;&#xA;CASE WHEN FUND_TYPE = 'L161' AND BENEFIT_TYPE &lt;&gt; 'DDPR' THEN -AMOUNT_PAID ELSE 0 END AS L161_PRE_DEATH_PAYMENT &#xD;&#xA;&#xD;&#xA;FROM (&#xD;&#xA;SELECT PBA.PERSON_ACCOUNT_ID, PHH.PLAN_ID, ISNULL(PBA.FUNDS_TYPE_VALUE,'IAP') AS FUND_TYPE, PHH.PAYEE_ACCOUNT_ID, PA.BENEFIT_ACCOUNT_TYPE_VALUE AS BENEFIT_TYPE, PHH.PAYMENT_DATE, PHD.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;   SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 OR ALLOW_ROLLOVER_CODE_VALUE='RRED' THEN ISNULL(PHD.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION ELSE 0 END)   AS AMOUNT_PAID&#xD;&#xA;  &#xD;&#xA;FROM OPUS..SGT_PAYMENT_HISTORY_DETAIL PHD                   &#xD;&#xA;INNER JOIN OPUS..SGT_PAYMENT_ITEM_TYPE PIT ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;INNER JOIN OPUS..SGT_PAYMENT_HISTORY_HEADER PHH ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHDN ON PHDN.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN OPUS..SGT_PAYEE_ACCOUNT PA ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN OPUS..SGT_PAYEE_BENEFIT_ACCOUNT PBA ON PA.PAYEE_BENEFIT_ACCOUNT_ID = PBA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;WHERE PHH.PLAN_ID = 1 AND PHDN.DISTRIBUTION_STATUS_VALUE NOT IN ('CDRE','CNLD','RCMD') &#xD;&#xA;AND PHDN.OLD_DISTRIBUTION_ID IS NULL&#xD;&#xA;AND PBA.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID --AND PAYMENT_DATE &lt;= ISNULL((SELECT ENDDATE FROM EADB.DBO.PENSIONYEAR WHERE PENSIONYEAR = 2019),GETDATE())&#xD;&#xA;GROUP BY PBA.PERSON_ACCOUNT_ID, PHH.PLAN_ID, ISNULL(PBA.FUNDS_TYPE_VALUE,'IAP'), PHH.PAYEE_ACCOUNT_ID, PA.BENEFIT_ACCOUNT_TYPE_VALUE, PHH.PAYMENT_DATE, PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#xD;&#xA;) IAP_PAYMENTS&#xD;&#xA;) IAP_BALANCES">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@COMPUTATIONAL_YEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPBalanceAndPreRetirementDeathBalance" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql=" SELECT SUM(IAP_BALANCE_AMOUNT) AS IAP_BALANCE_AMOUNT,&#xD;&#xA;       SUM(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,&#xD;&#xA;       SUM(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT, &#xD;&#xA;             MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;             SUM(IAP_AMOUNT) AS IAP_BALANCE_AMOUNT_PRE_RTMT_DEATH,&#xD;&#xA;       SUM(L052_AMOUNT) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT_PRE_RTMT_DEATH,&#xD;&#xA;       SUM(L161_AMOUNT) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT_PRE_RTMT_DEATH &#xD;&#xA;FROM (&#xD;&#xA;SELECT IAP_BALANCE_AMOUNT, LOCAL52_SPECIAL_ACCT_BAL_AMOUNT, LOCAL161_SPECIAL_ACCT_BAL_AMOUNT, EFFECTIVE_DATE&#xD;&#xA;, IAP_BALANCE_AMOUNT AS IAP_AMOUNT, LOCAL52_SPECIAL_ACCT_BAL_AMOUNT AS L052_AMOUNT, LOCAL161_SPECIAL_ACCT_BAL_AMOUNT AS L161_AMOUNT&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK) &#xD;&#xA;WHERE TRANSACTION_TYPE_VALUE &lt;&gt; 'PMNT' AND SPARC.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;UNION&#xD;&#xA;SELECT &#xD;&#xA;CASE WHEN FUND_TYPE = 'IAP' THEN -AMOUNT_PAID ELSE 0 END AS IAP_PAYMENT, &#xD;&#xA;CASE WHEN FUND_TYPE = 'L052' THEN -AMOUNT_PAID ELSE 0 END AS L052_PAYMENT, &#xD;&#xA;CASE WHEN FUND_TYPE = 'L161' THEN -AMOUNT_PAID ELSE 0 END AS L161_PAYMENT, &#xD;&#xA;PAYMENT_DATE,&#xD;&#xA;CASE WHEN FUND_TYPE = 'IAP' AND BENEFIT_TYPE &lt;&gt; 'DDPR' THEN -AMOUNT_PAID ELSE 0 END AS IAP_PRE_DEATH_PAYMENT, &#xD;&#xA;CASE WHEN FUND_TYPE = 'L052' AND BENEFIT_TYPE &lt;&gt; 'DDPR' THEN -AMOUNT_PAID ELSE 0 END AS L052_PRE_DEATH_PAYMENT, &#xD;&#xA;CASE WHEN FUND_TYPE = 'L161' AND BENEFIT_TYPE &lt;&gt; 'DDPR' THEN -AMOUNT_PAID ELSE 0 END AS L161_PRE_DEATH_PAYMENT &#xD;&#xA;FROM (&#xD;&#xA;SELECT PBA.PERSON_ACCOUNT_ID, PHH.PLAN_ID, ISNULL(PBA.FUNDS_TYPE_VALUE,'IAP') AS FUND_TYPE, PHH.PAYEE_ACCOUNT_ID, PA.BENEFIT_ACCOUNT_TYPE_VALUE AS BENEFIT_TYPE, PHH.PAYMENT_DATE, PHD.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;   SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 OR ALLOW_ROLLOVER_CODE_VALUE='RRED' THEN ISNULL(PHD.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION ELSE 0 END)   AS AMOUNT_PAID&#xD;&#xA;FROM OPUS..SGT_PAYMENT_HISTORY_DETAIL PHD                   &#xD;&#xA;INNER JOIN OPUS..SGT_PAYMENT_ITEM_TYPE PIT ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;INNER JOIN OPUS..SGT_PAYMENT_HISTORY_HEADER PHH ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHDN ON PHDN.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN OPUS..SGT_PAYEE_ACCOUNT PA ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN OPUS..SGT_PAYEE_BENEFIT_ACCOUNT PBA ON PA.PAYEE_BENEFIT_ACCOUNT_ID = PBA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;WHERE PHH.PLAN_ID = 1 AND PHDN.DISTRIBUTION_STATUS_VALUE NOT IN ('CDRE','CNLD','RCMD') &#xD;&#xA;AND PBA.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;GROUP BY PBA.PERSON_ACCOUNT_ID, PHH.PLAN_ID, ISNULL(PBA.FUNDS_TYPE_VALUE,'IAP'), PHH.PAYEE_ACCOUNT_ID, PA.BENEFIT_ACCOUNT_TYPE_VALUE, PHH.PAYMENT_DATE, PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;) IAP_PAYMENTS&#xD;&#xA;) IAP_BALANCES&#xD;&#xA;">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPBalanceForPreRetirementDeath" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(IAP_BALANCE_AMOUNT) AS IAP_BALANCE_AMOUNT,&#xD;&#xA;       SUM(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,&#xD;&#xA;       SUM(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT, &#xD;&#xA;             MAX(EFFECTIVE_DATE) AS EFFECTIVE_DATE,&#xD;&#xA;             SUM(IAP_AMOUNT) AS IAP_BALANCE_AMOUNT_PRE_RTMT_DEATH,&#xD;&#xA;       SUM(L052_AMOUNT) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT_PRE_RTMT_DEATH,&#xD;&#xA;       SUM(L161_AMOUNT) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT_PRE_RTMT_DEATH&#xD;&#xA;&#x9;   &#xD;&#xA;&#x9;   &#xD;&#xA;FROM (&#xD;&#xA;SELECT SPARC.IAP_BALANCE_AMOUNT, SPARC.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT, SPARC.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT, SPARC.EFFECTIVE_DATE&#xD;&#xA;, SPARC.IAP_BALANCE_AMOUNT AS IAP_AMOUNT, SPARC.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT AS L052_AMOUNT, SPARC.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT AS L161_AMOUNT,&#xD;&#xA;SPARC.person_account_retirement_contribution_id&#xD;&#xA;&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK) &#xD;&#xA;WHERE SPARC.TRANSACTION_TYPE_VALUE &lt;&gt; 'PMNT' AND SPARC.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;CASE WHEN FUND_TYPE = 'IAP' THEN -AMOUNT_PAID ELSE 0 END AS IAP_PAYMENT, &#xD;&#xA;CASE WHEN FUND_TYPE = 'L052' THEN -AMOUNT_PAID ELSE 0 END AS L052_PAYMENT, &#xD;&#xA;CASE WHEN FUND_TYPE = 'L161' THEN -AMOUNT_PAID ELSE 0 END AS L161_PAYMENT, &#xD;&#xA;PAYMENT_DATE,&#xD;&#xA;CASE WHEN FUND_TYPE = 'IAP' AND BENEFIT_TYPE &lt;&gt; 'DDPR' THEN -AMOUNT_PAID ELSE 0 END AS IAP_PRE_DEATH_PAYMENT, &#xD;&#xA;CASE WHEN FUND_TYPE = 'L052' AND BENEFIT_TYPE &lt;&gt; 'DDPR' THEN -AMOUNT_PAID ELSE 0 END AS L052_PRE_DEATH_PAYMENT, &#xD;&#xA;CASE WHEN FUND_TYPE = 'L161' AND BENEFIT_TYPE &lt;&gt; 'DDPR' THEN -AMOUNT_PAID ELSE 0 END AS L161_PRE_DEATH_PAYMENT,null &#xD;&#xA;&#xD;&#xA;FROM (&#xD;&#xA;SELECT PBA.PERSON_ACCOUNT_ID, PHH.PLAN_ID, ISNULL(PBA.FUNDS_TYPE_VALUE,'IAP') AS FUND_TYPE, PHH.PAYEE_ACCOUNT_ID, PA.BENEFIT_ACCOUNT_TYPE_VALUE AS BENEFIT_TYPE, PHH.PAYMENT_DATE, PHD.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;   SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 OR ALLOW_ROLLOVER_CODE_VALUE='RRED' THEN ISNULL(PHD.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION ELSE 0 END)   AS AMOUNT_PAID&#xD;&#xA;  &#xD;&#xA;FROM OPUS..SGT_PAYMENT_HISTORY_DETAIL PHD                   &#xD;&#xA;INNER JOIN OPUS..SGT_PAYMENT_ITEM_TYPE PIT ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;INNER JOIN OPUS..SGT_PAYMENT_HISTORY_HEADER PHH ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHDN ON PHDN.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN OPUS..SGT_PAYEE_ACCOUNT PA ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN OPUS..SGT_PAYEE_BENEFIT_ACCOUNT PBA ON PA.PAYEE_BENEFIT_ACCOUNT_ID = PBA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;WHERE PHH.PLAN_ID = 1 AND PHDN.DISTRIBUTION_STATUS_VALUE NOT IN ('CDRE','CNLD','RCMD') &#xD;&#xA;AND PHDN.OLD_DISTRIBUTION_ID IS NULL&#xD;&#xA;AND PBA.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID --AND PAYMENT_DATE &lt;= ISNULL((SELECT ENDDATE FROM EADB.DBO.PENSIONYEAR WHERE PENSIONYEAR = 2019),GETDATE())&#xD;&#xA;GROUP BY PBA.PERSON_ACCOUNT_ID, PHH.PLAN_ID, ISNULL(PBA.FUNDS_TYPE_VALUE,'IAP'), PHH.PAYEE_ACCOUNT_ID, PA.BENEFIT_ACCOUNT_TYPE_VALUE, PHH.PAYMENT_DATE, PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#xD;&#xA;) IAP_PAYMENTS&#xD;&#xA;) IAP_BALANCES">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
  </queries>
  <attributes>
    <attribute sfwValue="person_account_retirement_contribution_id" sfwType="Column" sfwKeyNo="1" sfwIsIdentity="True" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="PersonAccountRetirementContributionId" sfwIsSequence="False" sfwCaption="ID" />
    <attribute sfwValue="person_account_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="PersonAccountId" sfwIsSequence="False" sfwCaption="Person Account Id" />
    <attribute sfwValue="transaction_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="TransactionDate" sfwIsSequence="False" sfwCaption="Transaction Date" />
    <attribute sfwValue="effective_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="EffectiveDate" sfwIsSequence="False" sfwCaption="Effective Date" />
    <attribute sfwValue="computational_year" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="4,0" sfwIsNull="False" ID="ComputationalYear" sfwIsSequence="False" sfwCaption="Computational Year" />
    <attribute sfwValue="iap_balance_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="IapBalanceAmount" sfwIsSequence="False" sfwCaption="Iap Balance Amount" />
    <attribute sfwType="Description" ID="TransactionTypeDescription" sfwCaption="Transaction Type" sfwValue="transaction_type_description" />
    <attribute sfwValue="transaction_type_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="TransactionTypeId" sfwCodeID="1003" sfwIsSequence="False" sfwCaption="Transaction Type" />
    <attribute sfwValue="transaction_type_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="TransactionTypeValue" sfwIsSequence="False" sfwCaption="Transaction Type" />
    <attribute sfwValue="ee_contribution_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="EeContributionAmount" sfwIsSequence="False" sfwCaption="Ee Contribution Amount" />
    <attribute sfwValue="uvhp_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="UvhpAmount" sfwIsSequence="False" sfwCaption="Uvhp Amount" />
    <attribute sfwValue="ee_int_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="EeIntAmount" sfwIsSequence="False" sfwCaption="Ee Int Amount" />
    <attribute sfwValue="uvhp_int_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="UvhpIntAmount" sfwIsSequence="False" sfwCaption="Uvhp Int Amount" />
    <attribute sfwValue="local_frozen_benefit_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="LocalFrozenBenefitAmount" sfwIsSequence="False" sfwCaption="Local Frozen Benefit Amount" />
    <attribute sfwValue="created_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="CreatedBy" sfwIsSequence="False" sfwCaption="Created By" />
    <attribute sfwValue="created_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="CreatedDate" sfwIsSequence="False" sfwCaption="Created Date" />
    <attribute sfwValue="modified_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="ModifiedBy" sfwIsSequence="False" sfwCaption="Modified By" />
    <attribute sfwValue="modified_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="ModifiedDate" sfwIsSequence="False" sfwCaption="Modified Date" />
    <attribute sfwValue="update_seq" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="UpdateSeq" sfwIsSequence="False" sfwCaption="Update Seq" />
    <attribute sfwValue="contribution_type_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="ContributionTypeValue" sfwIsSequence="False" sfwCaption="Contribution Type" />
    <attribute sfwType="Description" ID="ContributionTypeDescription" sfwCaption="Contribution Type" sfwValue="contribution_type_description" />
    <attribute sfwValue="contribution_type_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="ContributionTypeId" sfwCodeID="1000" sfwIsSequence="False" sfwCaption="Contribution Type" />
    <attribute sfwType="Description" ID="ContributionSubtypeDescription" sfwCaption="Contribution Subtype" sfwValue="contribution_subtype_description" />
    <attribute sfwValue="contribution_subtype_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="ContributionSubtypeId" sfwCodeID="1004" sfwIsSequence="False" sfwCaption="Contribution Subtype" />
    <attribute sfwValue="contribution_subtype_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="ContributionSubtypeValue" sfwIsSequence="False" sfwCaption="Contribution Subtype" />
    <attribute sfwValue="local_pre_bis_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="LocalPreBisAmount" sfwIsSequence="False" sfwCaption="Local Pre Bis Amount" />
    <attribute sfwValue="local_post_bis_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="LocalPostBisAmount" sfwIsSequence="False" sfwCaption="Local Post Bis Amount" />
    <attribute sfwValue="local52_special_acct_bal_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="Local52SpecialAcctBalAmount" sfwIsSequence="False" sfwCaption="Local52 Special Acct Bal Amount" />
    <attribute sfwValue="local161_special_acct_bal_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="Local161SpecialAcctBalAmount" sfwIsSequence="False" sfwCaption="Local161 Special Acct Bal Amount" />
    <attribute sfwValue="reference_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="ReferenceId" sfwIsSequence="False" sfwCaption="Reference Id" />
    <attribute sfwValue="legacy_contribution_subtype" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="LegacyContributionSubtype" sfwIsSequence="False" sfwCaption="Legacy Contribution Subtype" />
    <attribute sfwValue="record_freeze_flag" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="1" sfwIsNull="True" ID="RecordFreezeFlag" sfwCaption="Record Freeze Flag" />
    <attribute ID="objPerson" sfwType="Object" sfwEntity="entPerson" sfwValue="ibusPerson" />
  </attributes>
  <constraint />
  <rules />
  <initialload />
  <softerror />
  <harderror />
  <validatedelete />
  <delete />
  <groupslist />
  <checklist />
  <methods />
  <lifecycle />
  <objectmethods />
  <ExtraFields />
</entity>