<?xml version="1.0" encoding="utf-8"?>
<entity ID="entPaymentHistoryDistributionStatusHistory" sfwMainCDO="icdoPaymentHistoryDistributionStatusHistory" sfwType="BusinessRule" sfwActive="True" sfwStatus="Review" sfwObjectID="busPaymentHistoryDistributionStatusHistory" sfwTableName="sgt_payment_history_distribution_status_history" sfwView="False" sfwDataObjectID="doPaymentHistoryDistributionStatusHistory">
  <queries>
    <query ID="Lookup" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select * from SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY">
      <parameters />
    </query>
    <query ID="GetLastPaymentDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT TOP 1  SPHH.PAYEE_ACCOUNT_ID,SPHH.PAYMENT_DATE,&#xD;&#xA;SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) as GROSS_BENEFIT_AMOUNT,&#xD;&#xA;SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS' AND PHD.PAYMENT_ITEM_TYPE_ID IN(1,2,21,22) THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS MONTHLY_BENEFIT_AMOUNT&#xD;&#xA;FROM SGT_PAYMENT_HISTORY_HEADER SPHH WITH(NOLOCK)&#xD;&#xA;LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION SPHD WITH(NOLOCK) ON SPHD.PAYMENT_HISTORY_HEADER_ID = SPHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;LEFT OUTER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHD&#xD;&#xA;                 ON SPHH.PAYMENT_HISTORY_HEADER_ID =PHD.PAYMENT_HISTORY_HEADER_ID               &#xD;&#xA;LEFT OUTER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;                ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID               &#xD;&#xA;WHERE SPHH.PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID AND SPHH.PERSON_ID = @PERSON_ID&#xD;&#xA;AND SPHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','RCMD','CDRE')&#xD;&#xA;GROUP BY SPHH.PAYEE_ACCOUNT_ID, SPHH.PAYMENT_DATE&#xD;&#xA;ORDER BY SPHH.PAYMENT_DATE DESC">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CreatePaymentStatusHistoryACHClear" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="INSERT INTO SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY&#xD;&#xA;(&#xD;&#xA;       PAYMENT_HISTORY_DISTRIBUTION_ID, PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;       DISTRIBUTION_STATUS_ID, DISTRIBUTION_STATUS_VALUE, TRANSACTION_DATE,&#xD;&#xA;       STATUS_CHANGED_BY, STATUS_CHANGE_REASON_ID, STATUS_CHANGE_REASON_VALUE, &#xD;&#xA;       CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;SELECT &#xD;&#xA;      PAYMENT_HISTORY_DISTRIBUTION_ID,&#xD;&#xA;      PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;      DISTRIBUTION_STATUS_ID,&#xD;&#xA;      'CLRD'   AS  DISTRIBUTION_STATUS_VALUE,&#xD;&#xA;      TRANSACTION_DATE,&#xD;&#xA;      'OPUS Batch' as STATUS_CHANGED_BY,&#xD;&#xA;      7038 as STATUS_CHANGE_REASON_ID,&#xD;&#xA;      NULL as STATUS_CHANGE_REASON_VALUE,&#xD;&#xA;      'OPUS Batch' as CREATED_BY,&#xD;&#xA;      GETDATE() as CREATED_DATE,&#xD;&#xA;      'OPUS Batch' as MODIFIED_BY,&#xD;&#xA;      GETDATE() as MODIFIED_DATE,&#xD;&#xA;      0 as UPDATE_SEQ from&#xD;&#xA;     (SELECT PHD.*,GETDATE() as TRANSACTION_DATE from SGT_PAYMENT_HISTORY_DISTRIBUTION PHD&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS SPAS ON SPAS.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;WHERE &#xD;&#xA;PHD.PAYMENT_METHOD_VALUE='ACH' &#xD;&#xA;AND PHD.DISTRIBUTION_STATUS_VALUE='OUTS'&#xD;&#xA;AND&#xD;&#xA;SPAS.PAYEE_ACCOUNT_STATUS_ID = (SELECT TOP 1 PAS1.PAYEE_ACCOUNT_STATUS_ID FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (NOLOCK) WHERE PAS1.PAYEE_ACCOUNT_ID = SPAS.PAYEE_ACCOUNT_ID ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC)&#xD;&#xA;AND SPAS.CREATED_BY NOT LIKE '%63%'&#xD;&#xA;)TEMP&#xD;&#xA;      &#xD;&#xA;">
      <parameters />
    </query>
    <query ID="UpdatePaymentHistoryDistributionACHClear" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE PHD &#xD;&#xA;SET DISTRIBUTION_STATUS_VALUE='CLRD',CREATED_BY='OPUS Batch',&#xD;&#xA;MODIFIED_DATE = GETDATE(),MODIFIED_BY = 'OPUS Batch',UPDATE_SEQ = PHD.UPDATE_SEQ+1&#xD;&#xA; FROM &#xD;&#xA; SGT_PAYMENT_HISTORY_DISTRIBUTION PHD&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS SPAS ON SPAS.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;WHERE PHD.PAYMENT_METHOD_VALUE='ACH' AND PHD.DISTRIBUTION_STATUS_VALUE='OUTS'&#xD;&#xA;AND&#xD;&#xA;SPAS.PAYEE_ACCOUNT_STATUS_ID = (SELECT TOP 1 PAS1.PAYEE_ACCOUNT_STATUS_ID FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (NOLOCK) WHERE PAS1.PAYEE_ACCOUNT_ID = SPAS.PAYEE_ACCOUNT_ID ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC)&#xD;&#xA;AND SPAS.CREATED_BY NOT LIKE '%63%'">
      <parameters />
    </query>
    <query ID="PaymentStatusHistoryStale&amp;3YearPlusStatus" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="-- PIR 1040 STLE Status update &#xD;&#xA;SELECT &#xD;&#xA;    PHD.PAYMENT_HISTORY_DISTRIBUTION_ID,&#xD;&#xA;    PH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;    PHDH.DISTRIBUTION_STATUS_ID,&#xD;&#xA;    PH.PAYMENT_DATE,&#xD;&#xA;    PHD.DISTRIBUTION_STATUS_VALUE,&#xD;&#xA;    PHD.UPDATE_SEQ&#xD;&#xA;   into #TempPayMent&#xD;&#xA; FROM&#xD;&#xA; &#xD;&#xA;  DBO.SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) &#xD;&#xA;   INNER JOIN DBO.SGT_PAYMENT_HISTORY_HEADER PH  WITH(NOLOCK) ON PA.PAYEE_ACCOUNT_ID = PH.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN DBO.SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID -- and PB.PERSON_ID = phd.PERSON_ID&#xD;&#xA;   INNER JOIN [dbo].[SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY] PHDH WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_DISTRIBUTION_ID = PHDH.PAYMENT_HISTORY_DISTRIBUTION_ID&#xD;&#xA; WHERE PHD.DISTRIBUTION_STATUS_VALUE in ('OUTS','STLE') AND (PHD.PAYMENT_METHOD_VALUE='CHK' OR PHD.PAYMENT_METHOD_VALUE='RCHK')&#xD;&#xA;&#xD;&#xA;-- Insert &quot;STLE&quot; status if payment greater than 180 and lesser than 3 yrs&#xD;&#xA;&#xD;&#xA; INSERT INTO SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY&#xD;&#xA;(&#xD;&#xA;       PAYMENT_HISTORY_DISTRIBUTION_ID, PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;       DISTRIBUTION_STATUS_ID, DISTRIBUTION_STATUS_VALUE, TRANSACTION_DATE,&#xD;&#xA;       STATUS_CHANGED_BY, STATUS_CHANGE_REASON_ID, STATUS_CHANGE_REASON_VALUE, &#xD;&#xA;       CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;  SELECT &#xD;&#xA;          PAYMENT_HISTORY_DISTRIBUTION_ID,&#xD;&#xA;    PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;    DISTRIBUTION_STATUS_ID,&#xD;&#xA;    'STLE'   AS  DISTRIBUTION_STATUS_VALUE,&#xD;&#xA;    GETDATE() as TRANSACTION_DATE,&#xD;&#xA;    @UserId as STATUS_CHANGED_BY,&#xD;&#xA;    7038 as STATUS_CHANGE_REASON_ID,&#xD;&#xA;    NULL as STATUS_CHANGE_REASON_VALUE,&#xD;&#xA;          @UserId as CREATED_BY,&#xD;&#xA;          GETDATE() as CREATED_DATE,&#xD;&#xA;         @UserId as MODIFIED_BY,&#xD;&#xA;          GETDATE() as MODIFIED_DATE,&#xD;&#xA;          0 as UPDATE_SEQ&#xD;&#xA;   FROM #TempPayMent&#xD;&#xA; WHERE DATEDIFF(DAY,PAYMENT_DATE,getdate())&gt;180&#xD;&#xA; AND DATEDIFF(MONTH,PAYMENT_DATE,getdate())&lt;= 36&#xD;&#xA; AND DISTRIBUTION_STATUS_VALUE='OUTS'&#xD;&#xA;&#xD;&#xA; &#xD;&#xA;-- Update &quot;STLE&quot; status if payment greater than 180 and lesser than 3 yrs&#xD;&#xA;&#xD;&#xA;UPDATE PHD &#xD;&#xA;SET   DISTRIBUTION_STATUS_VALUE='STLE',&#xD;&#xA;      MODIFIED_DATE = GETDATE(),&#xD;&#xA;      MODIFIED_BY = @UserId,&#xD;&#xA;      UPDATE_SEQ = PHD.UPDATE_SEQ+1&#xD;&#xA;&#xD;&#xA; FROM #TempPayMent P&#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON  P.PAYMENT_HISTORY_DISTRIBUTION_ID = PHD.PAYMENT_HISTORY_DISTRIBUTION_ID&#xD;&#xA; WHERE PHD.DISTRIBUTION_STATUS_VALUE='OUTS' AND (PHD.PAYMENT_METHOD_VALUE='CHK' OR PHD.PAYMENT_METHOD_VALUE='RCHK') &#xD;&#xA; AND DATEDIFF(DAY,P.PAYMENT_DATE,getdate())&gt;180&#xD;&#xA; AND DATEDIFF(MONTH,P.PAYMENT_DATE,getdate())&lt;= 36&#xD;&#xA; &#xD;&#xA; &#xD;&#xA; &#xD;&#xA; -- Insert &quot;3YRS&quot; status if payment greater than 3 yrs&#xD;&#xA; INSERT INTO SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY&#xD;&#xA;(&#xD;&#xA;       PAYMENT_HISTORY_DISTRIBUTION_ID, PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;       DISTRIBUTION_STATUS_ID, DISTRIBUTION_STATUS_VALUE, TRANSACTION_DATE,&#xD;&#xA;       STATUS_CHANGED_BY, STATUS_CHANGE_REASON_ID, STATUS_CHANGE_REASON_VALUE, &#xD;&#xA;       CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;  SELECT &#xD;&#xA;            PAYMENT_HISTORY_DISTRIBUTION_ID,&#xD;&#xA;      PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;      DISTRIBUTION_STATUS_ID,&#xD;&#xA;      '3YRS'   AS  DISTRIBUTION_STATUS_VALUE,&#xD;&#xA;      GETDATE() as TRANSACTION_DATE,&#xD;&#xA;      @UserId as STATUS_CHANGED_BY,&#xD;&#xA;      7038 as STATUS_CHANGE_REASON_ID,&#xD;&#xA;      NULL as STATUS_CHANGE_REASON_VALUE,&#xD;&#xA;      @UserId as CREATED_BY,&#xD;&#xA;      GETDATE() as CREATED_DATE,&#xD;&#xA;      @UserId as MODIFIED_BY,&#xD;&#xA;      GETDATE() as MODIFIED_DATE,&#xD;&#xA;           0 as UPDATE_SEQ&#xD;&#xA;   FROM #TempPayMent&#xD;&#xA;  WHERE DATEDIFF(MONTH,PAYMENT_DATE,getdate())&gt;36&#xD;&#xA;  AND DISTRIBUTION_STATUS_VALUE in ('OUTS','STLE')&#xD;&#xA;  &#xD;&#xA; &#xD;&#xA; -- Update &quot;3YRS&quot; status if payment greater than 3 yrs&#xD;&#xA;&#xD;&#xA;UPDATE PHD &#xD;&#xA;SET   DISTRIBUTION_STATUS_VALUE='3YRS',&#xD;&#xA;      MODIFIED_DATE = GETDATE(),&#xD;&#xA;      MODIFIED_BY = @UserId,&#xD;&#xA;      UPDATE_SEQ = PHD.UPDATE_SEQ+1&#xD;&#xA;&#xD;&#xA; FROM #TempPayMent P&#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON  P.PAYMENT_HISTORY_DISTRIBUTION_ID = PHD.PAYMENT_HISTORY_DISTRIBUTION_ID&#xD;&#xA; WHERE PHD.DISTRIBUTION_STATUS_VALUE IN ('OUTS','STLE') AND (PHD.PAYMENT_METHOD_VALUE='CHK' OR PHD.PAYMENT_METHOD_VALUE='RCHK')&#xD;&#xA; AND DATEDIFF(MONTH,P.PAYMENT_DATE,getdate()) &gt; 36&#xD;&#xA; &#xD;&#xA;&#xD;&#xA; &#xD;&#xA; &#xD;&#xA; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA; &#xD;&#xA; &#xD;&#xA; ">
      <parameters>
        <parameter ID="@UserId" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetLastPaymentDatebetween150&amp;180days" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--PIR 1040 Batch will generate correspondce on 150th day.&#xD;&#xA;&#xD;&#xA; &#xD;&#xA; SELECT&#xD;&#xA;  PB.PERSON_ID,&#xD;&#xA;  PB.MPI_PERSON_ID,&#xD;&#xA;  PB.EMAIL_ADDRESS_1,&#xD;&#xA;  PB.DATE_OF_BIRTH,&#xD;&#xA;  PB.DATE_OF_DEATH,&#xD;&#xA;  PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;  PHD.PAYMENT_HISTORY_DISTRIBUTION_ID,&#xD;&#xA;  PHD.PAYMENT_HISTORY_HEADER_ID,   &#xD;&#xA;  PHD.ACCOUNT_NUMBER,&#xD;&#xA;  PHD.PAYEE_ACCOUNT_ACH_DETAIL_ID,&#xD;&#xA;  PHD.RECIPIENT_NAME,&#xD;&#xA;  PHD.ADDR_LINE_1,&#xD;&#xA;  PHD.ADDR_LINE_2,&#xD;&#xA;  PHD.ADDR_LINE_3,&#xD;&#xA;  PHD.ADDR_CITY,&#xD;&#xA;  PHD.ADDR_STATE_VALUE,&#xD;&#xA;  PHD.ADDR_COUNTRY_VALUE,&#xD;&#xA;  PHD.ADDR_ZIP_4_CODE,&#xD;&#xA;  PHD.ADDR_ZIP_CODE,&#xD;&#xA;  PHD.CHECK_NUMBER,&#xD;&#xA;  PHD.CHECK_ACH_EFFECTIVE_DATE,&#xD;&#xA;  PHD.NET_AMOUNT,&#xD;&#xA;  PHD.REISSUE_TO_ROLLOVER_ORG_BY,&#xD;&#xA;  PHD.PAYMENT_METHOD_VALUE,&#xD;&#xA;  PHD.DISTRIBUTION_STATUS_VALUE,&#xD;&#xA;  PHD.DISTRIBUTION_STATUS_ID,&#xD;&#xA;  PHD.CORRES_GENERATED_FLAG,&#xD;&#xA;  PH.PAYMENT_DATE&#xD;&#xA; FROM&#xD;&#xA;    DBO.SGT_PAYMENT_HISTORY_HEADER PH&#xD;&#xA;    INNER JOIN DBO.SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;    AND PHD.DISTRIBUTION_STATUS_VALUE='OUTS' AND (PHD.PAYMENT_METHOD_VALUE='CHK' OR PHD.PAYMENT_METHOD_VALUE='RCHK') AND (PHD.CORRES_GENERATED_FLAG IS NULL OR PHD.CORRES_GENERATED_FLAG ='')&#xD;&#xA;    INNER JOIN DBO.SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) ON PH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    INNER JOIN DBO.SGT_PERSON PB WITH(NOLOCK) ON PA.PERSON_ID = PB.PERSON_ID&#xD;&#xA;WHERE DATEDIFF(DAY,ph.PAYMENT_DATE,getdate())&gt;=150&#xD;&#xA;AND DATEDIFF(DAY,ph.PAYMENT_DATE,getdate())&lt;=180&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;">
      <parameters />
    </query>
    <query ID="UpdatePaymentHistoryDistributionCorrespondenceFlag" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--PIR 1040 Batch will update the corres generated flag for generate correspondce on 150th day.&#xD;&#xA;UPDATE PHD&#xD;&#xA;SET&#xD;&#xA;   CORRES_GENERATED_FLAG =1,&#xD;&#xA;   MODIFIED_DATE = GETDATE(),&#xD;&#xA;   MODIFIED_BY = @UserId,&#xD;&#xA;   UPDATE_SEQ = PHD.UPDATE_SEQ+1&#xD;&#xA;   &#xD;&#xA; FROM&#xD;&#xA;   DBO.SGT_PAYMENT_HISTORY_HEADER PH&#xD;&#xA;    INNER JOIN DBO.SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;    &#x9;AND PHD.DISTRIBUTION_STATUS_VALUE='OUTS' AND (PHD.PAYMENT_METHOD_VALUE='CHK' OR PHD.PAYMENT_METHOD_VALUE='RCHK')&#xD;&#xA;    &#x9;AND (PHD.CORRES_GENERATED_FLAG IS NULL OR PHD.CORRES_GENERATED_FLAG ='')&#xD;&#xA;    INNER JOIN DBO.SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) ON PH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; WHERE DATEDIFF(DAY,ph.PAYMENT_DATE,getdate())&gt;=150&#xD;&#xA; AND DATEDIFF(DAY,ph.PAYMENT_DATE,getdate())&lt;=180&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;">
      <parameters>
        <parameter ID="@UserId" sfwDataType="string" />
      </parameters>
    </query>
  </queries>
  <attributes>
    <attribute sfwValue="distribution_status_history_id" sfwType="Column" sfwKeyNo="1" sfwIsIdentity="True" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="DistributionStatusHistoryId" sfwIsSequence="False" sfwCaption="ID" />
    <attribute sfwValue="payment_history_distribution_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="PaymentHistoryDistributionId" sfwIsSequence="False" sfwCaption="Payment History Distribution Id" />
    <attribute sfwValue="payment_history_header_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="PaymentHistoryHeaderId" sfwIsSequence="False" sfwCaption="Payment History Header Id" />
    <attribute sfwType="Description" ID="DistributionStatusDescription" sfwCaption="Distribution Status" sfwValue="distribution_status_description" />
    <attribute sfwValue="distribution_status_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="DistributionStatusId" sfwCodeID="7036" sfwIsSequence="False" sfwCaption="Distribution Status" />
    <attribute sfwValue="distribution_status_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="DistributionStatusValue" sfwIsSequence="False" sfwCaption="Distribution Status" />
    <attribute sfwValue="transaction_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="TransactionDate" sfwIsSequence="False" sfwCaption="Transaction Date" />
    <attribute sfwValue="status_changed_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="True" ID="StatusChangedBy" sfwIsSequence="False" sfwCaption="Status Changed By" />
    <attribute sfwType="Description" ID="StatusChangeReasonDescription" sfwCaption="Status Change Reason" sfwValue="status_change_reason_description" />
    <attribute sfwValue="status_change_reason_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="StatusChangeReasonId" sfwCodeID="7038" sfwIsSequence="False" sfwCaption="Status Change Reason" />
    <attribute sfwValue="status_change_reason_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="StatusChangeReasonValue" sfwIsSequence="False" sfwCaption="Status Change Reason" />
    <attribute sfwValue="created_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="CreatedBy" sfwIsSequence="False" sfwCaption="Created By" />
    <attribute sfwValue="created_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="CreatedDate" sfwIsSequence="False" sfwCaption="Created Date" />
    <attribute sfwValue="modified_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="ModifiedBy" sfwIsSequence="False" sfwCaption="Modified By" />
    <attribute sfwValue="modified_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="ModifiedDate" sfwIsSequence="False" sfwCaption="Modified Date" />
    <attribute sfwValue="update_seq" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="UpdateSeq" sfwIsSequence="False" sfwCaption="Update Seq" />
  </attributes>
</entity>