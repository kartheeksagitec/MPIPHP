<entity ID="entPaymentHistoryDetail" sfwMainCDO="icdoPaymentHistoryDetail" sfwType="BusinessRule" sfwActive="True" sfwStatus="Review" sfwObjectID="busPaymentHistoryDetail" sfwTableName="sgt_payment_history_detail" sfwView="False" sfwDataObjectID="doPaymentHistoryDetail">
  <queries>
    <query ID="CreatePaymentHistoryDetail" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="INSERT INTO &#xD;&#xA;            SGT_PAYMENT_HISTORY_DETAIL(PAYMENT_HISTORY_HEADER_ID,PAYMENT_ITEM_TYPE_ID,AMOUNT,VENDOR_ORG_ID,&#xD;&#xA;            CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ)&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;      PAYMENT_HISTORY_HEADER_ID,PAYMENT_ITEM_TYPE_ID,AMOUNT,VENDOR_ORG_ID,&#xD;&#xA;      'OPUS Batch' AS CREATED_BY,GETDATE() AS CREATED_DATE,'OPUS Batch' AS MODIFIED_BY,GETDATE() AS MODIFIED_DATE,0 AS UPDATE_SEQ  &#xD;&#xA;      FROM&#xD;&#xA;(&#xD;&#xA;--NORMAL DETAIL&#xD;&#xA;SELECT &#xD;&#xA;  DISTINCT PHH.PAYMENT_HISTORY_HEADER_ID, -- PROD PIR 240 - multiple reissue fix&#xD;&#xA;  SPAPIT.PAYEE_ACCOUNT_ID,&#xD;&#xA;  SPAPIT.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;  SPAPIT.AMOUNT, &#xD;&#xA;  SPAPIT.VENDOR_ORG_ID &#xD;&#xA;FROM TEMP_TABLE_FOR_PAYMENT AS PAYEE&#xD;&#xA;       &#xD;&#xA;    INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH ON PHH.PAYEE_ACCOUNT_ID=PAYEE.PAYEE_ACCOUNT_ID AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;      AND (ISNULL(PHH.ORG_ID,0) = ISNULL(PAYEE.ORG_ID,0) OR PHH.ORG_ID = PAYEE.TRANSFER_ORG_ID) AND --CHNG ABHI &#xD;&#xA;        (ISNULL(PHH.PERSON_ID,0) = ISNULL(PAYEE.PERSON_ID,0) OR PHH.ORG_ID = PAYEE.TRANSFER_ORG_ID)--CHNG ABHI&#xD;&#xA;       INNER JOIN  SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE SPAPIT ON  PAYEE.PAYEE_ACCOUNT_ID = SPAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;       INNER JOIN SGT_PAYMENT_ITEM_TYPE SPIT  ON SPAPIT.PAYMENT_ITEM_TYPE_ID = SPIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;       LEFT OUTER JOIN &#xD;&#xA;        (SELECT PARP.PAYEE_ACCOUNT_ID,PARP.PAYMENT_OPTION_VALUE,PARPD.* FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT PARP &#xD;&#xA;         INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT_DETAIL PARPD ON PARPD.PAYEE_ACCOUNT_RETRO_PAYMENT_ID = PARP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;                AND ISNULL(PARP.IS_OVERPAYMENT_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;                         AND PARP.START_DATE &lt;&gt; ISNULL(PARP.END_DATE,'99991231') &#xD;&#xA;         AND (PARP.END_DATE IS NULL OR PARP.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;         ) &#xD;&#xA;         AS PARPUP ON PARPUP.PAYEE_ACCOUNT_ID = PAYEE.PAYEE_ACCOUNT_ID AND PARPUP.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = SPAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;WHERE&#xD;&#xA;  (@CheckStartDate=1 OR SPAPIT.START_DATE &lt;= @PAYMENTDATE) &#xD;&#xA;  AND (SPAPIT.END_DATE IS NULL OR SPAPIT.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND (SPAPIT.START_DATE &lt;&gt; SPAPIT.END_DATE OR SPAPIT.END_DATE IS NULL)&#xD;&#xA;  AND &#xD;&#xA; (    &#xD;&#xA;  (PARPUP.PAYMENT_OPTION_VALUE IS NULL AND PAYEE.RETRO_PAYMENT_OPTION_VALUE = 'REGL') &#xD;&#xA;  OR &#xD;&#xA;  (PARPUP.PAYMENT_OPTION_VALUE = 'SPCK' AND PAYEE.RETRO_PAYMENT_OPTION_VALUE='SPCK')&#xD;&#xA;  OR &#xD;&#xA;  (PARPUP.PAYMENT_OPTION_VALUE != 'SPCK' AND PAYEE.RETRO_PAYMENT_OPTION_VALUE = 'REGL')&#xD;&#xA; )&#xD;&#xA;  AND (ISNULL(SPAPIT.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y' AND ISNULL(PAYEE.REISSUE_ITEM_FLAG,'N')&lt;&gt;'Y')&#xD;&#xA;&#xD;&#xA;--AND SPIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;--REISSUE DETAIL PROD PIR 373 Coommented&#xD;&#xA;--OR -- (ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') = 'Y' AND ISNULL(PAYEE.REISSUE_ITEM_FLAG,'N')='Y'))&#xD;&#xA;&#xD;&#xA;GROUP BY SPAPIT.PAYEE_ACCOUNT_ID, PHH.PAYMENT_HISTORY_HEADER_ID, SPAPIT.PAYMENT_ITEM_TYPE_ID, SPAPIT.AMOUNT,SPAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID, SPAPIT.VENDOR_ORG_ID &#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;--REISSUE DETAIL PROD PIR 373&#xD;&#xA;SELECT &#xD;&#xA;  PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;  SPAPIT.PAYEE_ACCOUNT_ID,&#xD;&#xA;  SPAPIT.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;  SPAPIT.AMOUNT, &#xD;&#xA;     SPAPIT.VENDOR_ORG_ID&#xD;&#xA;     &#xD;&#xA;FROM TEMP_TABLE_FOR_PAYMENT AS PAYEE&#xD;&#xA;-- PROD PIR 637&#xD;&#xA;  INNER JOIN  SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE SPAPIT ON  PAYEE.PAYEE_ACCOUNT_ID = SPAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE SPIT  ON SPAPIT.PAYMENT_ITEM_TYPE_ID = SPIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_REISSUE_DETAIL SPRD ON SPRD.PAYMENT_REISSUE_DETAIL_ID = PAYEE.PAYMENT_REISSUE_DETAIL_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_REISSUE_ITEM_DETAIL SPRID ON SPRID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = SPAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID AND SPRD.PAYMENT_REISSUE_DETAIL_ID = SPRID.PAYMENT_REISSUE_DETAIL_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH ON PHH.PAYEE_ACCOUNT_ID=PAYEE.PAYEE_ACCOUNT_ID AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;        AND (ISNULL(PHH.ORG_ID,0) = ISNULL(PAYEE.ORG_ID,0) OR PHH.ORG_ID = PAYEE.TRANSFER_ORG_ID) AND --PIR 637 &#xD;&#xA;       (ISNULL(PHH.PERSON_ID,0) = ISNULL(PAYEE.PERSON_ID,0) OR PHH.ORG_ID = PAYEE.TRANSFER_ORG_ID) --PIR 637&#xD;&#xA;WHERE&#xD;&#xA;  (@CheckStartDate=1 OR SPAPIT.START_DATE &lt;= @PAYMENTDATE) &#xD;&#xA;  AND SPAPIT.END_DATE IS NULL --OR SPAPIT.END_DATE &gt;= @PAYMENTDATE) --PROD PIR 637&#xD;&#xA;  AND (SPAPIT.START_DATE &lt;&gt; SPAPIT.END_DATE OR SPAPIT.END_DATE IS NULL)&#xD;&#xA;  AND SPIT.ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'RRED'&#xD;&#xA;  AND ((ISNULL(SPAPIT.REISSUE_ITEM_FLAG,'N') = 'Y' AND ISNULL(PAYEE.REISSUE_ITEM_FLAG,'N')='Y'))&#xD;&#xA;GROUP BY SPAPIT.PAYEE_ACCOUNT_ID, PHH.PAYMENT_HISTORY_HEADER_ID, SPAPIT.PAYMENT_ITEM_TYPE_ID, SPAPIT.AMOUNT,SPAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;SPAPIT.VENDOR_ORG_ID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;--ROLLOVER DETAIL&#xD;&#xA;SELECT &#xD;&#xA;  DISTINCT PHH.PAYMENT_HISTORY_HEADER_ID, --REISSUE DETAIL PROD PIR 373&#xD;&#xA;  PAPIT.PAYEE_ACCOUNT_ID,&#xD;&#xA;  PIT1.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;  --SUM(PAPIT.AMOUNT) AS AMOUNT, &#xD;&#xA;  PAPIT.AMOUNT AS AMOUNT, &#xD;&#xA;  NULL AS VENDOR_ORG_ID &#xD;&#xA;FROM TEMP_TABLE_FOR_PAYMENT AS PAYEE&#xD;&#xA;         &#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;      INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;      INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1 WITH(NOLOCK)ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK) ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK) ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;              AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH  ON PHH.PAYEE_ACCOUNT_ID=PAYEE.PAYEE_ACCOUNT_ID AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;                                                 AND PHH.ORG_ID = PARD.ROLLOVER_ORG_ID                 &#xD;&#xA;&#xD;&#xA;WHERE&#xD;&#xA;     (@CheckStartDate=1 OR PAPIT.START_DATE &lt;= @PAYMENTDATE) &#xD;&#xA;  AND (PAPIT.END_DATE IS NULL OR PAPIT.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND (PAPIT.START_DATE &lt;&gt; PAPIT.END_DATE OR PAPIT.END_DATE IS NULL) &#xD;&#xA;  AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;  AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;&#xD;&#xA;  AND ((ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y' AND ISNULL(PAYEE.REISSUE_ITEM_FLAG,'N')&lt;&gt;'Y')&#xD;&#xA;  OR &#xD;&#xA;       (ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') = 'Y' AND ISNULL(PAYEE.REISSUE_ITEM_FLAG,'N')='Y'))&#xD;&#xA;--DBO.fn_Check_Date_Overlapping(PAPIT.START_DATE,PAPIT.END_DATE,@PAYMENTDATE)=1&#xD;&#xA;--AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;--GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PIT1.PAYMENT_ITEM_TYPE_ID,PHH.PAYMENT_HISTORY_HEADER_ID,PARD.ROLLOVER_ORG_ID  &#xD;&#xA;)TEMP &#xD;&#xA;order by PAYMENT_HISTORY_HEADER_ID">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@CheckStartDate" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CreatePaymentHistoryDetailForDeduction" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;declare @ITEM45 INT&#xD;&#xA;SELECT  @ITEM45 = PAYMENT_ITEM_TYPE_ID   &#xD;&#xA; FROM SGT_PAYMENT_ITEM_TYPE WITH(NOLOCK) &#xD;&#xA; WHERE ITEM_TYPE_CODE  = 'ITEM45' &#xD;&#xA; declare @ITEM46 INT&#xD;&#xA;SELECT  @ITEM46 = PAYMENT_ITEM_TYPE_ID   &#xD;&#xA; FROM SGT_PAYMENT_ITEM_TYPE WITH(NOLOCK) &#xD;&#xA; WHERE ITEM_TYPE_CODE  = 'ITEM46' &#xD;&#xA; declare @ITEM47 INT&#xD;&#xA;SELECT  @ITEM47 = PAYMENT_ITEM_TYPE_ID   &#xD;&#xA; FROM SGT_PAYMENT_ITEM_TYPE WITH(NOLOCK) &#xD;&#xA; WHERE ITEM_TYPE_CODE  = 'ITEM47' &#xD;&#xA;  declare @ITEM56 INT&#xD;&#xA;SELECT  @ITEM56 = PAYMENT_ITEM_TYPE_ID   &#xD;&#xA; FROM SGT_PAYMENT_ITEM_TYPE WITH(NOLOCK) &#xD;&#xA; WHERE ITEM_TYPE_CODE  = 'ITEM56' &#xD;&#xA; &#xD;&#xA;INSERT INTO &#xD;&#xA;            SGT_PAYMENT_HISTORY_DETAIL(PAYMENT_HISTORY_HEADER_ID,PAYMENT_ITEM_TYPE_ID,AMOUNT,VENDOR_ORG_ID,&#xD;&#xA;            CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ)&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;      PAYMENT_HISTORY_HEADER_ID,PAYMENT_ITEM_TYPE_ID,AMOUNT,VENDOR_ORG_ID,&#xD;&#xA;      'OPUS Batch' AS CREATED_BY,GETDATE() AS CREATED_DATE,'OPUS Batch' AS MODIFIED_BY,GETDATE() AS MODIFIED_DATE,0 AS UPDATE_SEQ  &#xD;&#xA;      FROM&#xD;&#xA;(&#xD;&#xA;&#xD;&#xA;--DEDUCTION DETAIL&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;       PAPIT.PAYEE_ACCOUNT_ID,&#xD;&#xA;       PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;    CASE WHEN PIT.ITEM_TYPE_CODE='ITEM42' THEN @ITEM45 &#xD;&#xA;                                          ELSE &#xD;&#xA;                                             CASE WHEN PIT.ITEM_TYPE_CODE='ITEM43'  THEN @ITEM46 &#xD;&#xA;                                             ELSE &#xD;&#xA;                                                    CASE WHEN PIT.ITEM_TYPE_CODE='ITEM44'  THEN @ITEM47 &#xD;&#xA;                                                    ELSE &#xD;&#xA;                                                        CASE WHEN PIT.ITEM_TYPE_CODE='ITEM41'  THEN @ITEM56 &#xD;&#xA;                                                        ELSE NULL&#xD;&#xA;                                                        END&#xD;&#xA;                                                    END &#xD;&#xA;                                              END &#xD;&#xA;                                           END AS PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;    &#xD;&#xA;    SUM(PAPIT.AMOUNT) AS AMOUNT, &#xD;&#xA;       NULL AS VENDOR_ORG_ID &#xD;&#xA;       FROM TEMP_TABLE_FOR_PAYMENT AS PAYEE&#xD;&#xA;     &#xD;&#xA;      INNER JOIN  SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT&#xD;&#xA;               ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;               &#xD;&#xA;      INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;              ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;      &#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT_DEDUCTION PAD WITH(NOLOCK)&#xD;&#xA;              ON PAD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;                 AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAD.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;                 &#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH  &#xD;&#xA;              ON PHH.PAYEE_ACCOUNT_ID=PAYEE.PAYEE_ACCOUNT_ID AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;              AND (PAD.PERSON_ID=PHH.PERSON_ID OR PAD.ORG_ID=PHH.ORG_ID)&#xD;&#xA;              &#xD;&#xA;WHERE&#xD;&#xA;     --DBO.fn_Check_Date_Overlapping(PAPIT.START_DATE,PAPIT.END_DATE,@PAYMENTDATE)=1&#xD;&#xA;     (@CheckStartDate=1 OR PAPIT.START_DATE &lt;= @PAYMENTDATE) AND (PAPIT.END_DATE IS NULL OR PAPIT.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;     AND (PAPIT.START_DATE &lt;&gt; PAPIT.END_DATE or PAPIT.END_DATE IS NULL)&#xD;&#xA;  --AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;  AND PIT.DEDUCTION_VALUE = 'UPDT' &#xD;&#xA;  --AND PIT.VENDOR_FLAG='N'&#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;  --AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;  AND (ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y' AND ISNULL(PAYEE.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y')&#xD;&#xA;     GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PHH.PAYMENT_HISTORY_HEADER_ID,PIT.ITEM_TYPE_CODE &#xD;&#xA;     &#xD;&#xA;UNION ALL &#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;       PAPIT.PAYEE_ACCOUNT_ID,&#xD;&#xA;       PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;    CASE WHEN PIT.ITEM_TYPE_CODE='ITEM42' THEN @ITEM45 &#xD;&#xA;                                          ELSE &#xD;&#xA;                                             CASE WHEN PIT.ITEM_TYPE_CODE='ITEM43'  THEN @ITEM46 &#xD;&#xA;                                             ELSE &#xD;&#xA;                                                    CASE WHEN PIT.ITEM_TYPE_CODE='ITEM44'  THEN @ITEM47 &#xD;&#xA;                                                    ELSE &#xD;&#xA;                                                        CASE WHEN PIT.ITEM_TYPE_CODE='ITEM41'  THEN @ITEM56 &#xD;&#xA;                                                        ELSE NULL&#xD;&#xA;                                                        END&#xD;&#xA;                                                    END &#xD;&#xA;                                              END &#xD;&#xA;                                           END AS PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;    &#xD;&#xA;    SUM(PAPIT.AMOUNT) AS AMOUNT, &#xD;&#xA;       NULL AS VENDOR_ORG_ID &#xD;&#xA;       FROM  TEMP_TABLE_FOR_PAYMENT AS PAYEE&#xD;&#xA;       &#xD;&#xA;      INNER JOIN  SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT&#xD;&#xA;               ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;               &#xD;&#xA;      INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;              ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;      &#xD;&#xA;  &#xD;&#xA;    INNER JOIN SGT_PAYMENT_REISSUE_DETAIL  RD WITH(NOLOCK)ON RD.PAYMENT_REISSUE_DETAIL_ID = PAYEE.PAYMENT_REISSUE_DETAIL_ID&#xD;&#xA;    &#xD;&#xA;    INNER JOIN SGT_PAYMENT_REISSUE_ITEM_DETAIL RID WITH(NOLOCK) ON RID.PAYMENT_REISSUE_DETAIL_ID = RD.PAYMENT_REISSUE_DETAIL_ID&#xD;&#xA;                  AND RID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID &#xD;&#xA;                 &#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH  &#xD;&#xA;              ON PHH.PAYEE_ACCOUNT_ID=PAYEE.PAYEE_ACCOUNT_ID AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;              AND (RD.RECIPIENT_PERSON_ID=PHH.PERSON_ID OR RD.RECIPIENT_ROLLOVER_ORG_ID=PHH.ORG_ID)&#xD;&#xA;              &#xD;&#xA;WHERE&#xD;&#xA;     --DBO.fn_Check_Date_Overlapping(PAPIT.START_DATE,PAPIT.END_DATE,@PAYMENTDATE)=1&#xD;&#xA;     (@CheckStartDate=1 OR PAPIT.START_DATE &lt;= @PAYMENTDATE) AND (PAPIT.END_DATE IS NULL OR PAPIT.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;     AND (PAPIT.START_DATE &lt;&gt; PAPIT.END_DATE or PAPIT.END_DATE IS NULL)&#xD;&#xA;  --AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;  AND PIT.DEDUCTION_VALUE = 'UPDT' &#xD;&#xA;  --AND PIT.VENDOR_FLAG='N'&#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;  --AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;  AND (ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') = 'Y' AND ISNULL(PAYEE.REISSUE_ITEM_FLAG,'N')='Y')&#xD;&#xA;     GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PHH.PAYMENT_HISTORY_HEADER_ID,PIT.ITEM_TYPE_CODE &#xD;&#xA;      &#xD;&#xA;)TEMP &#xD;&#xA;order by PAYMENT_HISTORY_HEADER_ID">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@CheckStartDate" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CreateWithHolding" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;INSERT INTO SGT_WITHHOLDING_INFORMATION_HISTORY_DETAIL(WITHHOLDING_INFORMATION_ID,WITHHOLDING_PERCENTAGE,WITHHOLD_FLAT_AMOUNT,&#xD;&#xA;       PAYEE_ACCOUNT_ID,PAYMENT_HISTORY_DETAIL_ID,WITHHOLDING_DATE,&#xD;&#xA;          CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ)&#xD;&#xA; (&#xD;&#xA;SELECT &#xD;&#xA; PITY.WITHHOLDING_INFORMATION_ID,&#xD;&#xA; PITY.WITHHOLDING_PERCENTAGE,&#xD;&#xA; PHD.AMOUNT*(PITY.WITHHOLDING_PERCENTAGE/100),&#xD;&#xA; PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA; PHD.PAYMENT_HISTORY_DETAIL_ID,&#xD;&#xA; @PAYMENTDATE,&#xD;&#xA;  'OPUS Batch' as  CREATED_BY ,getdate() as CREATED_DATE,'OPUS Batch' as  MODIFIED_BY ,getdate() as MODIFIED_DATE,0 UPDATE_SEQ&#xD;&#xA;    FROM TEMP_TABLE_FOR_PAYMENT PA WITH(NOLOCK)  &#xD;&#xA; INNER JOIN SGT_WITHHOLDING_INFORMATION PITY WITH(NOLOCK) &#xD;&#xA;  ON PITY.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   AND PITY.WITHHOLDING_DATE_FROM &lt;= @PAYMENTDATE AND (PITY.WITHHOLDING_DATE_TO IS NULL OR PITY.WITHHOLDING_DATE_TO &gt;= @PAYMENTDATE)&#xD;&#xA;   AND (PITY.WITHHOLDING_DATE_FROM &lt;&gt; PITY.WITHHOLDING_DATE_TO OR PITY.WITHHOLDING_DATE_TO IS NULL)&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) &#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) &#xD;&#xA;   ON PHH.PAYMENT_HISTORY_HEADER_ID=PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) &#xD;&#xA;   ON PIT.PAYMENT_ITEM_TYPE_ID=PHD.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;     WHERE PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA; AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA; --RELATED TO REIMBURSEMENT&#xD;&#xA; AND PIT.ITEM_TYPE_CODE != 'ITEM54'&#xD;&#xA; AND ISNULL(PA.REISSUE_ITEM_FLAG,'N')&lt;&gt;'Y'--PIR 990&#xD;&#xA; )&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;UPDATE  PHD&#xD;&#xA; SET PHD.AMOUNT=ROUND(PHD.AMOUNT*((100-HOLDING.WITHHOLDING_PERCENTAGE)/100),2)--PIR 994&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_DETAIL PHD&#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) &#xD;&#xA;   ON PIT.PAYMENT_ITEM_TYPE_ID=PHD.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN &#xD;&#xA; (&#xD;&#xA; SELECT &#xD;&#xA; PHH.PAYMENT_HISTORY_HEADER_ID,PITY.WITHHOLDING_PERCENTAGE&#xD;&#xA;    FROM TEMP_TABLE_FOR_PAYMENT PA WITH(NOLOCK)  &#xD;&#xA; INNER JOIN SGT_WITHHOLDING_INFORMATION PITY WITH(NOLOCK) &#xD;&#xA;  ON PITY.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  AND PITY.WITHHOLDING_DATE_FROM &lt;= @PAYMENTDATE AND (PITY.WITHHOLDING_DATE_TO IS NULL OR PITY.WITHHOLDING_DATE_TO &gt;= @PAYMENTDATE)&#xD;&#xA;  AND (PITY.WITHHOLDING_DATE_FROM &lt;&gt; PITY.WITHHOLDING_DATE_TO OR PITY.WITHHOLDING_DATE_TO IS NULL)&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) &#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    WHERE PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;    &#xD;&#xA; AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA; AND ISNULL(PA.REISSUE_ITEM_FLAG,'N')&lt;&gt;'Y'--PIR 990&#xD;&#xA; ) AS HOLDING&#xD;&#xA; ON&#xD;&#xA; HOLDING.PAYMENT_HISTORY_HEADER_ID=PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; WHERE PIT.ITEM_TYPE_CODE!= 'ITEM54'">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CreateVendarPaymentFileRecords" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="INSERT INTO SGT_PROVIDER_REPORT_PAYMENT&#xD;&#xA;(&#xD;&#xA;SUBSYSTEM_ID, SUBSYSTEM_VALUE, SUBSYSTEM_REF_ID,PAYMENT_HISTORY_HEADER_ID, PERSON_ID, PROVIDER_ORG_ID, PAYEE_ACCOUNT_ID, EFFECTIVE_DATE, AMOUNT,PAYMENT_ITEM_TYPE_ID, PAYMENT_SCHEDULE_ID, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;SELECT 7043 AS SUBSYSTEM_ID,&#xD;&#xA; 'PMNT' AS SUBSYSTEM_VALUE,&#xD;&#xA; SUBSYSTEM_REF_ID,&#xD;&#xA; PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA; PERSON_ID,&#xD;&#xA; PROVIDER_ORG_ID,&#xD;&#xA; PAYEE_ACCOUNT_ID,&#xD;&#xA; EFFECTIVE_DATE,&#xD;&#xA; AMOUNT,&#xD;&#xA; PAYMENT_ITEM_TYPE_ID,&#xD;&#xA; NULL AS PAYMENT_SCHEDULE_ID,&#xD;&#xA; 'OPUS Batch' AS CREATED_BY,&#xD;&#xA; GETDATE() AS CREATED_DATE,&#xD;&#xA; 'OPUS Batch' AS MODIFIED_BY,&#xD;&#xA; GETDATE() AS MODIFIED_DATE,&#xD;&#xA; 0 AS UPDATE_SEQ&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA; &#xD;&#xA; SELECT &#xD;&#xA;  PHD.PAYMENT_HISTORY_DETAIL_ID AS SUBSYSTEM_REF_ID,&#xD;&#xA;  PHH.PAYMENT_HISTORY_HEADER_ID,PHH.PERSON_ID,&#xD;&#xA;  PHD.VENDOR_ORG_ID AS PROVIDER_ORG_ID,&#xD;&#xA;  PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;  PS.PAYMENT_DATE AS EFFECTIVE_DATE,&#xD;&#xA;  PIT.ITEM_TYPE_CODE,&#xD;&#xA;  SUM(PHD.AMOUNT * PIT.item_type_direction * -1) AS AMOUNT,PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_DETAIL  PHD WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)  &#xD;&#xA;  ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA; INNER JOIN TEMP_TABLE_FOR_PAYMENT PA WITH(NOLOCK) &#xD;&#xA;  ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;  AND isnull(PHH.ORG_ID,0) = isnull(PA.ORG_ID,0) and ISNULL(PHH.PERSON_ID,0) = ISNULL(PA.PERSON_ID,0)  &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK)&#xD;&#xA;  ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID  &#xD;&#xA;  INNER JOIN SGT_PAYMENT_SCHEDULE PS WITH(NOLOCK)&#xD;&#xA;  ON PHH.PAYMENT_SCHEDULE_ID = PS.PAYMENT_SCHEDULE_ID &#xD;&#xA; WHERE PHH.PAYMENT_SCHEDULE_ID =  @PAYMENTSCHEDULEID    &#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;  --AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT')&#xD;&#xA;  AND PHD.VENDOR_ORG_ID IS NOT NULL&#xD;&#xA;     AND PIT.PAYEE_DETAIL_GROUP_VALUE IN  ('FEDX','STTX')&#xD;&#xA; GROUP BY  &#xD;&#xA;  PHD.PAYMENT_HISTORY_DETAIL_ID,&#xD;&#xA;  PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;  PHH.PERSON_ID,&#xD;&#xA;  PHD.VENDOR_ORG_ID, &#xD;&#xA;  PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;  PIT.ITEM_TYPE_CODE,&#xD;&#xA;  PS.PAYMENT_DATE,PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; &#xD;&#xA;) AS TEMP">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID    " sfwDataType="int" />
      </parameters>
    </query>
    <query ID="FinalVendorPayment" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT ORG.ORG_NAME as Organization_Name, PLN.PLAN_NAME&#xD;&#xA;, SUM(CASE WHEN PHD.PAYMENT_METHOD_VALUE = 'CHK' THEN AMOUNT ELSE 0 END) AS CHECK_AMOUNT&#xD;&#xA;, SUM(CASE WHEN PHD.PAYMENT_METHOD_VALUE &lt;&gt; 'CHK' THEN AMOUNT ELSE 0 END) AS ACH_AMOUNT&#xD;&#xA;, SUM(AMOUNT) AS NET_AMOUNT, PHH.PAYMENT_DATE &#xD;&#xA;FROM SGT_PROVIDER_REPORT_PAYMENT PRP&#xD;&#xA;INNER JOIN  SGT_ORGANIZATION ORG ON ORG.ORG_ID=PRP.PROVIDER_ORG_ID&#xD;&#xA;INNER JOIN  SGT_PAYMENT_HISTORY_HEADER PHH ON PHH.PAYMENT_HISTORY_HEADER_ID =PRP.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN  SGT_PLAN PLN ON PHH.PLAN_ID=PLN.PLAN_ID&#xD;&#xA;WHERE ISNULL(PHH.PAYMENT_SCHEDULE_ID,0) = @PAYMENTSCHEDULEID&#xD;&#xA;GROUP BY ORG.ORG_ID,ORG.ORG_NAME,PHH.PLAN_ID,PLN.PLAN_NAME, PHH.PAYMENT_DATE&#xD;&#xA;ORDER BY  ORG.ORG_NAME, PHH.PLAN_ID DESC">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateVendorPayment" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE PRP&#xD;&#xA;SET PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;from&#xD;&#xA;SGT_PROVIDER_REPORT_PAYMENT PRP&#xD;&#xA;INNER JOIN  SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;ON PHH.PAYMENT_HISTORY_HEADER_ID =PRP.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#xD;&#xA;WHERE PRP.PAYMENT_SCHEDULE_ID IS NULL  &#xD;&#xA;AND&#xD;&#xA;((@Plan_ID = 1 AND PHH.PLAN_ID = 1) OR (@Plan_ID = 2 AND PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;AND EFFECTIVE_DATE&lt;=@PAYMENTDATE">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@Plan_ID" sfwDataType="int" />
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="FinalVendorPaymentSummary" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT ORG.ORG_NAME as Organization_Name,PLN.PLAN_NAME as PLAN_NAME,SUM(AMOUNT) AS Net_Amount &#xD;&#xA;, PHH.PAYMENT_DATE&#xD;&#xA;FROM SGT_PROVIDER_REPORT_PAYMENT PRP&#xD;&#xA;INNER JOIN  SGT_ORGANIZATION ORG&#xD;&#xA;ON ORG.ORG_ID=PRP.PROVIDER_ORG_ID&#xD;&#xA;INNER JOIN  SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;ON PHH.PAYMENT_HISTORY_HEADER_ID =PRP.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN  SGT_PLAN PLN&#xD;&#xA;ON PHH.PLAN_ID=PLN.PLAN_ID&#xD;&#xA;WHERE ISNULL(PRP.PAYMENT_SCHEDULE_ID,0) =@PAYMENTSCHEDULEID&#xD;&#xA;GROUP BY ORG.ORG_ID,ORG.ORG_NAME,PHH.PLAN_ID,PLN.PLAN_NAME, PHH.PAYMENT_DATE&#xD;&#xA;ORDER BY PHH.PLAN_ID DESC&#xD;&#xA;">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetRetireeDeathPaymentHistoryGrossAmt" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS GROSS_AMOUNT&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD(NOLOCK) ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT(NOLOCK) ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_SCHEDULE SPS ON SPS.PAYMENT_SCHEDULE_ID = PHH.PAYMENT_SCHEDULE_ID&#xD;&#xA; WHERE PHH.PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID &#xD;&#xA;  AND SPS.PAYMENT_DATE &gt;= @DOD">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@DOD" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadPayeeAccountHistoryDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT *,ISNULL(SPHD.UPDATE_SEQ,0) AS PAPIT_UPDATE_SEQ FROM SGT_PAYMENT_HISTORY_DETAIL SPHD WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE SPIT WITH(NOLOCK) ON SPIT.PAYMENT_ITEM_TYPE_ID=SPHD.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) ON PHH.PAYMENT_HISTORY_HEADER_ID = SPHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;LEFT JOIN SGT_ORGANIZATION ORG WITH(NOLOCK) ON ORG.ORG_ID = SPHD.VENDOR_ORG_ID&#xD;&#xA;WHERE PHH.PAYMENT_HISTORY_HEADER_ID = @PAYMENT_HISTORY_HEADER_ID">
      <parameters>
        <parameter ID="@PAYMENT_HISTORY_HEADER_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPaymentAfterParticipantDeath" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select sum(PHD.AMOUNT) as Amount from SGT_PAYMENT_HISTORY_DETAIL  PHD&#xD;&#xA;join SGT_PAYMENT_HISTORY_HEADER PHH on PHD.PAYMENT_HISTORY_HEADER_ID = phh.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;join SGT_PAYEE_ACCOUNT PA on PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID &#xD;&#xA;join SGT_PAYEE_BENEFIT_ACCOUNT PBA on PBA.PAYEE_BENEFIT_ACCOUNT_ID = PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;join SGT_PERSON P on P.PERSON_ID = PBA.PERSON_ID &#xD;&#xA;where PA.PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID and PHH.PAYMENT_DATE &gt; P.DATE_OF_DEATH&#xD;&#xA;">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="FindVendorPaymentSummaryStatus" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;SELECT &#xD;&#xA;@PAYMENTDATE AS EFFECTIVE_DATE,&#xD;&#xA;YEAR(PHH.PAYMENT_DATE) as PAYMENT_DATE,ORG.ORG_NAME as Organization_Name,PLN.PLAN_NAME as PLAN_NAME,SUM(AMOUNT) AS Net_Amount,SCV.DESCRIPTION AS SUBSYSTEM_VALUE FROM SGT_PROVIDER_REPORT_PAYMENT PRP&#xD;&#xA;INNER JOIN  SGT_ORGANIZATION ORG&#xD;&#xA;ON ORG.ORG_ID=PRP.PROVIDER_ORG_ID&#xD;&#xA;INNER JOIN  SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;ON PHH.PAYMENT_HISTORY_HEADER_ID =PRP.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN  SGT_PLAN PLN&#xD;&#xA;ON PHH.PLAN_ID=PLN.PLAN_ID&#xD;&#xA;JOIN SGS_CODE_VALUE SCV ON SCV.CODE_ID = PRP.SUBSYSTEM_ID AND SCV.CODE_VALUE = PRP.SUBSYSTEM_VALUE&#xD;&#xA;WHERE ISNULL(PRP.PAYMENT_SCHEDULE_ID,0) = @PAYMENT_SCHEDULE_ID&#xD;&#xA;&#xD;&#xA;GROUP BY ORG.ORG_ID,ORG.ORG_NAME,PHH.PLAN_ID,PLN.PLAN_NAME,YEAR(PHH.PAYMENT_DATE),PRP.SUBSYSTEM_VALUE,SCV.DESCRIPTION&#xD;&#xA;ORDER BY YEAR(PHH.PAYMENT_DATE),PHH.PLAN_ID DESC">
      <parameters>
        <parameter ID="@PAYMENT_SCHEDULE_ID" sfwDataType="int" />
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="FinalVendorPaymentOrgTotal" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT ORG.ORG_NAME as Organization_Name&#xD;&#xA;, SUM(CASE WHEN PHD.PAYMENT_METHOD_VALUE = 'CHK' THEN AMOUNT ELSE 0 END) AS CHECK_AMOUNT&#xD;&#xA;, SUM(CASE WHEN PHD.PAYMENT_METHOD_VALUE &lt;&gt; 'CHK' THEN AMOUNT ELSE 0 END) AS ACH_AMOUNT&#xD;&#xA;, SUM(AMOUNT) AS NET_AMOUNT, PHH.PAYMENT_DATE &#xD;&#xA;FROM SGT_PROVIDER_REPORT_PAYMENT PRP&#xD;&#xA;INNER JOIN  SGT_ORGANIZATION ORG ON ORG.ORG_ID=PRP.PROVIDER_ORG_ID&#xD;&#xA;INNER JOIN  SGT_PAYMENT_HISTORY_HEADER PHH ON PHH.PAYMENT_HISTORY_HEADER_ID =PRP.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN  SGT_PLAN PLN ON PHH.PLAN_ID=PLN.PLAN_ID&#xD;&#xA;WHERE ISNULL(PHH.PAYMENT_SCHEDULE_ID,0) = @PAYMENTSCHEDULEID&#xD;&#xA;GROUP BY ORG.ORG_ID,ORG.ORG_NAME, PHH.PAYMENT_DATE&#xD;&#xA;ORDER BY  ORG.ORG_NAME">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
  </queries>
  <attributes>
    <attribute sfwValue="payment_history_detail_id" sfwType="Column" sfwKeyNo="1" sfwIsIdentity="True" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="PaymentHistoryDetailId" sfwIsSequence="False" sfwCaption="ID" />
    <attribute sfwValue="payment_history_header_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="PaymentHistoryHeaderId" sfwIsSequence="False" sfwCaption="Payment History Header Id" />
    <attribute sfwValue="payment_item_type_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="PaymentItemTypeId" sfwIsSequence="False" sfwCaption="Payment Item Type Id" />
    <attribute sfwValue="amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="Amount" sfwIsSequence="False" sfwCaption="Amount" />
    <attribute sfwValue="rollover_org_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="RolloverOrgId" sfwIsSequence="False" sfwCaption="Rollover Org Id" />
    <attribute sfwValue="vendor_org_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="VendorOrgId" sfwIsSequence="False" sfwCaption="Vendor Org Id" />
    <attribute sfwValue="created_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="CreatedBy" sfwIsSequence="False" sfwCaption="Created By" />
    <attribute sfwValue="created_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="CreatedDate" sfwIsSequence="False" sfwCaption="Created Date" />
    <attribute sfwValue="modified_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="ModifiedBy" sfwIsSequence="False" sfwCaption="Modified By" />
    <attribute sfwValue="modified_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="ModifiedDate" sfwIsSequence="False" sfwCaption="Modified Date" />
    <attribute sfwValue="update_seq" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="UpdateSeq" sfwIsSequence="False" sfwCaption="Update Seq" />
    <attribute ID="objPaymentItemType" sfwType="Object" sfwEntity="entPaymentItemType" sfwValue="ibusPaymentItemType" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="SIGNEDAMOUNT" sfwValue="icdoPaymentHistoryDetail.SIGNED_AMOUNT" />
  </attributes>
  <constraint />
  <rules />
  <initialload />
  <softerror />
  <harderror />
  <validatedelete />
  <delete />
  <groupslist />
  <checklist />
  <methods />
  <lifecycle />
  <objectmethods />
  <ExtraFields />
</entity>