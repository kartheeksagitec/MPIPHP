<?xml version="1.0" encoding="utf-8"?>
<entity ID="entPayeeAccountStatus" sfwActive="True" sfwStatus="Review" sfwType="BusinessRule" sfwMainCDO="icdoPayeeAccountStatus" sfwObjectID="busPayeeAccountStatus" sfwTableName="sgt_payee_account_status" sfwView="False" sfwDataObjectID="doPayeeAccountStatus">
  <rules />
  <delete />
  <checklist />
  <initialload />
  <softerror />
  <harderror />
  <validatedelete />
  <groupslist />
  <updateablecdo />
  <commonproperties />
  <expressionfields />
  <queries>
    <query ID="UpdatePayeeAccountStatus" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="INSERT INTO SGT_PAYEE_ACCOUNT_STATUS&#xD;&#xA;(&#xD;&#xA;PAYEE_ACCOUNT_ID, STATUS_ID, STATUS_VALUE, STATUS_EFFECTIVE_DATE, SUSPENSION_STATUS_REASON_ID, SUSPENSION_STATUS_REASON_VALUE,&#xD;&#xA;TERMINATED_STATUS_REASON_ID, TERMINATED_STATUS_REASON_VALUE, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ)&#xD;&#xA;&#xD;&#xA;/*vinovin:- need to change the payee account status we have in MPI*/&#xD;&#xA;SELECT &#xD;&#xA; PA.PAYEE_ACCOUNT_ID,7027 as Status_id,&#xD;&#xA; &#xD;&#xA; 'RECV' AS STATUS_VALUE,&#xD;&#xA; case when pas_STATUS_EFFECTIVE_DATE &gt;= CONVERT(DATETIME,CONVERT(VARCHAR,getdate(),109) ,110) &#xD;&#xA;  then pas_STATUS_EFFECTIVE_DATE else  CONVERT(DATETIME,CONVERT(VARCHAR,getdate(),109) ,110) end as STATUS_EFFECTIVE_DATE,&#xD;&#xA; 7008 as SUSPENSION_STATUS_REASON_ID, &#xD;&#xA; null as SUSPENSION_STATUS_REASON_VALUE,&#xD;&#xA; 7009 as TERMINATED_STATUS_REASON_ID,&#xD;&#xA; null as TERMINATED_STATUS_REASON_VALUE ,&#xD;&#xA; 'OPUS Batch' as CREATED_BY,&#xD;&#xA; getdate() as CREATED_DATE,&#xD;&#xA; 'OPUS Batch' as MODIFIED_BY,&#xD;&#xA; getdate() as modified_date,&#xD;&#xA; 0 as UPDATE_SEQ&#xD;&#xA;FROM  &#xD;&#xA; ( Select Distinct pa.Payee_account_id ,&#xD;&#xA;  PA.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;  &#xD;&#xA;  PA.STATUS_EFFECTIVE_DATE as pas_STATUS_EFFECTIVE_DATE&#xD;&#xA;  &#xD;&#xA;  From&#xD;&#xA; TEMP_TABLE_FOR_PAYMENT PA WITH(NOLOCK)  &#xD;&#xA; &#xD;&#xA;    WHERE PA.STATUS_VALUE  IN ('APRD')  AND PA.BENEFIT_OPTION_VALUE NOT IN('LUMP')&#xD;&#xA; &#xD;&#xA; &#xD;&#xA; ) PA&#xD;&#xA;">
      <parameters />
    </query>
    <query ID="UpdatePayeeAccountStatusComplete" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;DECLARE @END_PAYMENTDATE DATETIME&#xD;&#xA;SET @END_PAYMENTDATE  = CASE WHEN @CheckStartDate=0  THEN DATEADD(M,1,@PAYMENTDATE)-1 ELSE @PAYMENTDATE END &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PAYEE_ACCOUNT_STATUS&#xD;&#xA;(&#xD;&#xA;PAYEE_ACCOUNT_ID, STATUS_ID, STATUS_VALUE, STATUS_EFFECTIVE_DATE, SUSPENSION_STATUS_REASON_ID, SUSPENSION_STATUS_REASON_VALUE, TERMINATED_STATUS_REASON_ID, TERMINATED_STATUS_REASON_VALUE, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA; PAYEE_ACCOUNT_ID,7027 as Status_id,&#xD;&#xA;    'CMPL' AS STATUS_VALUE,&#xD;&#xA; case when STATUS_EFFECTIVE_DATE &gt;= CONVERT(DATETIME,CONVERT(VARCHAR,getdate(),109) ,110) &#xD;&#xA;  then STATUS_EFFECTIVE_DATE else  CONVERT(DATETIME,CONVERT(VARCHAR,getdate(),109) ,110) end as STATUS_EFFECTIVE_DATE,&#xD;&#xA; 7008 as SUSPENSION_STATUS_REASON_ID, &#xD;&#xA; null as SUSPENSION_STATUS_REASON_VALUE,&#xD;&#xA; 7009 as TERMINATED_STATUS_REASON_ID,&#xD;&#xA; 'PMCP' as TERMINATED_STATUS_REASON_VALUE ,&#xD;&#xA; 'OPUS Batch' as CREATED_BY,&#xD;&#xA; getdate() as CREATED_DATE,&#xD;&#xA; 'OPUS Batch' as MODIFIED_BY,&#xD;&#xA; getdate() as modified_date,&#xD;&#xA; 0 as UPDATE_SEQ&#xD;&#xA;From&#xD;&#xA;(&#xD;&#xA;SELECT &#xD;&#xA;DISTINCT PA.PAYEE_ACCOUNT_ID, PA.BENEFIT_ACCOUNT_TYPE_VALUE ,PA.STATUS_EFFECTIVE_DATE as STATUS_EFFECTIVE_DATE&#xD;&#xA;FROM TEMP_TABLE_FOR_PAYMENT PA WITH(NOLOCK)  &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) &#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT SPA &#xD;&#xA;  ON PA.PAYEE_ACCOUNT_ID = SPA.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN &#xD;&#xA; ( SELECT DISTINCT PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;   FROM SGT_PAYMENT_HISTORY_DISTRIBUTION &#xD;&#xA;   --WHERE PAYMENT_METHOD_VALUE IN ('ACH','CHK')&#xD;&#xA; ) AS PHDN &#xD;&#xA;  ON PHDN.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; AND ((SPA.BENEFIT_END_DATE = dateadd(d,-1,dateadd(m,1,@PAYMENTDATE))) OR PA.BENEFIT_OPTION_VALUE IN('LUMP'))&#xD;&#xA; AND PA.RETRO_PAYMENT_OPTION_VALUE != 'SPCK' &#xD;&#xA; --AND PA.REISSUE_ITEM_FLAG!= 'Y'&#xD;&#xA;    AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;    --&#xD;&#xA; AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA; ) AS PAYEE&#xD;&#xA; &#xD;&#xA; &#xD;&#xA; --&#xD;&#xA; UPDATE SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE &#xD;&#xA; SET END_DATE=@END_PAYMENTDATE,&#xD;&#xA; START_DATE= CASE WHEN @CheckStartDate=0  THEN START_DATE ELSE @END_PAYMENTDATE END,&#xD;&#xA; MODIFIED_DATE = GETDATE(),MODIFIED_BY = 'OPUS Batch',UPDATE_SEQ = UPDATE_SEQ+1 &#xD;&#xA;&#xD;&#xA; WHERE PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID IN&#xD;&#xA; (&#xD;&#xA; SELECT &#xD;&#xA; PITY.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;    FROM TEMP_TABLE_FOR_PAYMENT PA WITH(NOLOCK)  &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PITY WITH(NOLOCK) &#xD;&#xA;  ON PITY.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT SPA &#xD;&#xA;  ON PA.PAYEE_ACCOUNT_ID = SPA.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) &#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA; --LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) ON &#xD;&#xA; -- PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA; INNER JOIN &#xD;&#xA; ( SELECT DISTINCT PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;   FROM SGT_PAYMENT_HISTORY_DISTRIBUTION &#xD;&#xA;   --WHERE PAYMENT_METHOD_VALUE IN ('ACH','CHK')&#xD;&#xA; ) AS PHDN &#xD;&#xA;  ON PHDN.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; AND ((SPA.BENEFIT_END_DATE = dateadd(d,-1,dateadd(m,1,@PAYMENTDATE))) OR PA.BENEFIT_OPTION_VALUE IN('LUMP'))&#xD;&#xA; AND PA.RETRO_PAYMENT_OPTION_VALUE != 'SPCK' &#xD;&#xA; --AND PA.REISSUE_ITEM_FLAG!= 'Y'&#xD;&#xA;    AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;    AND (@CheckStartDate=1 OR PITY.START_DATE &lt;= @PAYMENTDATE) AND (PITY.END_DATE IS NULL OR PITY.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA; ) &#xD;&#xA;">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@CheckStartDate" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdatePayeeAccountStatusCompleteIAP" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @END_PAYMENTDATE DATETIME&#xD;&#xA;SET @END_PAYMENTDATE  = @PAYMENTDATE&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PAYEE_ACCOUNT_STATUS&#xD;&#xA;(&#xD;&#xA;PAYEE_ACCOUNT_ID, STATUS_ID, STATUS_VALUE, STATUS_EFFECTIVE_DATE, SUSPENSION_STATUS_REASON_ID, SUSPENSION_STATUS_REASON_VALUE, TERMINATED_STATUS_REASON_ID, TERMINATED_STATUS_REASON_VALUE, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA; PAYEE_ACCOUNT_ID,7027 as Status_id,&#xD;&#xA;    'CMPL' AS STATUS_VALUE,&#xD;&#xA; case when STATUS_EFFECTIVE_DATE &gt;= CONVERT(DATETIME,CONVERT(VARCHAR,getdate(),109) ,110) &#xD;&#xA;  then STATUS_EFFECTIVE_DATE else  CONVERT(DATETIME,CONVERT(VARCHAR,getdate(),109) ,110) end as STATUS_EFFECTIVE_DATE,&#xD;&#xA; 7008 as SUSPENSION_STATUS_REASON_ID, &#xD;&#xA; null as SUSPENSION_STATUS_REASON_VALUE,&#xD;&#xA; 7009 as TERMINATED_STATUS_REASON_ID,&#xD;&#xA; 'PMCP' as TERMINATED_STATUS_REASON_VALUE ,&#xD;&#xA; 'OPUS Batch' as CREATED_BY,&#xD;&#xA; getdate() as CREATED_DATE,&#xD;&#xA; 'OPUS Batch' as MODIFIED_BY,&#xD;&#xA; getdate() as modified_date,&#xD;&#xA; 0 as UPDATE_SEQ&#xD;&#xA;From&#xD;&#xA;(&#xD;&#xA;SELECT &#xD;&#xA;DISTINCT PA.PAYEE_ACCOUNT_ID, PA.BENEFIT_ACCOUNT_TYPE_VALUE ,PA.STATUS_EFFECTIVE_DATE as STATUS_EFFECTIVE_DATE&#xD;&#xA;FROM TEMP_TABLE_FOR_PAYMENT PA WITH(NOLOCK)  &#xD;&#xA; --INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) &#xD;&#xA; -- ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) &#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA; --LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) ON &#xD;&#xA; -- PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA; INNER JOIN &#xD;&#xA; ( SELECT DISTINCT PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;   FROM SGT_PAYMENT_HISTORY_DISTRIBUTION &#xD;&#xA;   --WHERE PAYMENT_METHOD_VALUE IN ('ACH','CHK')&#xD;&#xA; ) AS PHDN &#xD;&#xA;  ON PHDN.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; --AND ((BENEFIT_END_DATE = dateadd(d,-1,dateadd(m,1,@PAYMENTDATE))) OR PA.BENEFIT_OPTION_VALUE IN('LUMP'))&#xD;&#xA;    AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;    --&#xD;&#xA; AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA; ) AS PAYEE&#xD;&#xA; &#xD;&#xA; &#xD;&#xA; --&#xD;&#xA; UPDATE SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE &#xD;&#xA; SET END_DATE=@END_PAYMENTDATE,&#xD;&#xA; START_DATE=@END_PAYMENTDATE,&#xD;&#xA; MODIFIED_DATE = GETDATE(),MODIFIED_BY = 'OPUS Batch',UPDATE_SEQ = UPDATE_SEQ+1 &#xD;&#xA; WHERE PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID IN&#xD;&#xA; (&#xD;&#xA; SELECT &#xD;&#xA; PITY.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;    FROM TEMP_TABLE_FOR_PAYMENT PA WITH(NOLOCK)  &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PITY WITH(NOLOCK) &#xD;&#xA;  ON PITY.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) &#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA; --LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) ON &#xD;&#xA; -- PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA; INNER JOIN &#xD;&#xA; ( SELECT DISTINCT PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;   FROM SGT_PAYMENT_HISTORY_DISTRIBUTION &#xD;&#xA;   --WHERE PAYMENT_METHOD_VALUE IN ('ACH','CHK')&#xD;&#xA; ) AS PHDN &#xD;&#xA;  ON PHDN.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; --AND ((BENEFIT_END_DATE = dateadd(d,-1,dateadd(m,1,@PAYMENTDATE))) OR PA.BENEFIT_OPTION_VALUE IN('LUMP'))&#xD;&#xA;    AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;     AND (PITY.END_DATE IS NULL OR PITY.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA; ) ">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetLatestStatusEffectiveDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select top 1 PAYEE_ACCOUNT_STATUS_ID, STATUS_EFFECTIVE_DATE,STATUS_VALUE&#xD;&#xA;from SGT_PAYEE_ACCOUNT_STATUS&#xD;&#xA;where PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID &#xD;&#xA;order by PAYEE_ACCOUNT_STATUS_ID desc">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckIfPayeeAccountIsActive" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) FROM SGT_PAYEE_ACCOUNT SPA&#xD;&#xA;WHERE PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID&#xD;&#xA;AND (SELECT TOP(1) STATUS_VALUE FROM SGT_PAYEE_ACCOUNT_STATUS Q WHERE Q.PAYEE_ACCOUNT_ID=SPA.PAYEE_ACCOUNT_ID&#xD;&#xA;ORDER BY MODIFIED_DATE DESC) NOT IN ('CMPL','CNLD')">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckDisabilityStatusHistory" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT TOP(1) SDBH.* FROM SGT_DISABILITY_BENEFIT_HISTORY SDBH&#xD;&#xA;INNER JOIN SGT_BENEFIT_APPLICATION SBA &#xD;&#xA;ON SDBH.BENEFIT_APPLICATION_ID = SBA.BENEFIT_APPLICATION_ID&#xD;&#xA;INNER JOIN SGT_BENEFIT_APPLICATION_DETAIL SBAD&#xD;&#xA;ON SBA.BENEFIT_APPLICATION_ID = SBAD.BENEFIT_APPLICATION_ID&#xD;&#xA;WHERE SBAD.BENEFIT_APPLICATION_DETAIL_ID =@BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;ORDER BY SDBH.DISABILITY_CONT_LETTER_DATE DESC">
      <parameters>
        <parameter ID="@BENEFIT_APPLICATION_DETAIL_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetreportDataIapAdjustment" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  &#xD;&#xA;&#x9;ISNULL(SP.MPI_PERSON_ID,'') + ISNULL(O.MPI_ORG_ID,'')  AS PAYEE_MPID,&#xD;&#xA;&#x9;CAST(PARTI.MPI_PERSON_ID AS VARCHAR(10)) AS PARTICIPANT_MPID, &#xD;&#xA;&#x9;UPPER(ISNULL(PARTI.LAST_NAME,'') + ', ' + ISNULL(PARTI.FIRST_NAME,'')) AS PARTICIPANT_NAME, &#xD;&#xA;&#x9;SBA.RETIREMENT_DATE AS RETIREMENT_DATE,&#xD;&#xA;&#x9;SBA.WITHDRAWAL_DATE AS WITHDRAWAL_DATE,&#xD;&#xA;&#x9;SBA.AWARDED_ON_DATE AS AWARDED_ON_DATE,&#xD;&#xA;&#x9;SDA.DRO_COMMENCEMENT_DATE AS DRO_COMMENCEMENT_DATE,&#xD;&#xA;&#x9;ABA.PAYMENT_DATE,&#xD;&#xA;&#x9;PA.ACCOUNT_RELATION_VALUE AS Account_Relationship,&#xD;&#xA;&#x9;PA.BENEFIT_ACCOUNT_TYPE_VALUE AS BENEFIT_TYPE,&#xD;&#xA;&#x9;UPPER(C.DESCRIPTION)  AS RETIREMENT_TYPE,&#xD;&#xA;&#x9;X.BENEFIT_OPTION_VALUE AS BENEFIT_OPTION,&#xD;&#xA;&#x9;SPBA.FUNDS_TYPE_VALUE AS FUND_TYPE,&#xD;&#xA;&#x9;PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;&#x9;PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID,&#xD;&#xA;&#x9;CASE WHEN PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID IS NOT NULL THEN 'Y'ELSE 'N' END AS RO,&#xD;&#xA;&#x9;SP.DATE_OF_DEATH&#xD;&#xA;&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS SPAS ON PA.PAYEE_ACCOUNT_ID = SPAS.PAYEE_ACCOUNT_ID AND SPAS.PAYEE_ACCOUNT_STATUS_ID = (SELECT MAX(PAYEE_ACCOUNT_STATUS_ID) FROM SGT_PAYEE_ACCOUNT_STATUS Q WHERE Q.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID)&#xD;&#xA;&#x9;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT SPBA ON SPBA.PAYEE_BENEFIT_ACCOUNT_ID = PA.PAYEE_BENEFIT_ACCOUNT_ID &#xD;&#xA;&#x9;INNER JOIN SGT_PLAN_BENEFIT_XR X ON PA.PLAN_BENEFIT_ID = X.PLAN_BENEFIT_ID AND PLAN_ID  = 1&#xD;&#xA;&#x9;INNER JOIN SGT_PERSON PARTI ON SPBA.PERSON_ID = PARTI.PERSON_ID &#xD;&#xA;&#x9;LEFT OUTER JOIN SGS_CODE_VALUE C ON PA.RETIREMENT_TYPE_ID = C.CODE_ID AND PA.RETIREMENT_TYPE_VALUE = C.CODE_VALUE&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_PERSON SP ON PA.PERSON_ID = SP.PERSON_ID&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_ORGANIZATION O ON PA.ORG_ID = O.ORG_ID                   &#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_DETAIL SBAD ON PA.BENEFIT_APPLICATION_DETAIL_ID = SBAD.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION SBA ON SBAD.BENEFIT_APPLICATION_ID = SBA.BENEFIT_APPLICATION_ID&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_DRO_BENEFIT_DETAILS SDBD ON PA.DRO_APPLICATION_DETAIL_ID = SDBD.DRO_BENEFIT_ID&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_DRO_APPLICATION SDA ON SDBD.DRO_APPLICATION_ID = SDA.DRO_APPLICATION_ID&#xD;&#xA;&#x9;LEFT OUTER JOIN (SELECT MAX(PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID)PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID,PAYEE_ACCOUNT_ID FROM [OPUS].[dbo].[SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL]&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; GROUP BY PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;) PARD ON PA.PAYEE_ACCOUNT_ID = PARD.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;LEFT OUTER JOIN&#x9;(&#xD;&#xA;&#x9; SELECT SBA.PERSON_ID,BENEFIT_TYPE_VALUE,MIN(CASE WHEN SPBX.BENEFIT_OPTION_VALUE &lt;&gt; 'LIFE' THEN PHH.PAYMENT_DATE ELSE NULL END) PAYMENT_DATE&#xD;&#xA;&#x9; FROM SGT_BENEFIT_APPLICATION SBA INNER JOIN SGT_BENEFIT_APPLICATION_DETAIL SBAD&#xD;&#xA;&#x9; ON SBA.BENEFIT_APPLICATION_ID = SBAD.BENEFIT_APPLICATION_ID&#xD;&#xA;&#x9; INNER JOIN SGT_PAYEE_ACCOUNT SPA ON SPA.BENEFIT_APPLICATION_DETAIL_ID = SBAD.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;&#x9; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH ON PHH.PAYEE_ACCOUNT_ID = SPA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9; INNER JOIN SGT_PLAN_BENEFIT_XR SPBX ON SPA.PLAN_BENEFIT_ID = SPBX.PLAN_BENEFIT_ID&#xD;&#xA;&#x9; WHERE SPBX.PLAN_ID = 1 AND &#xD;&#xA;&#x9; BENEFIT_TYPE_VALUE IN ('DDPR','QDRO')&#xD;&#xA;&#x9; GROUP BY  SBA.PERSON_ID,BENEFIT_TYPE_VALUE&#xD;&#xA;&#x9;)ABA ON PARTI.PERSON_ID = ABA.PERSON_ID&#xD;&#xA;WHERE PA.ADJUSTMENT_PAYMENT_ELIGIBLE_FLAG = 'Y' AND SPAS.STATUS_VALUE &lt;&gt; 'CNCL'&#xD;&#xA;ORDER BY PA.BENEFIT_ACCOUNT_TYPE_VALUE,PARTI.LAST_NAME,SBA.RETIREMENT_DATE DESC,SBA.WITHDRAWAL_DATE DESC,SDA.DRO_COMMENCEMENT_DATE DESC,ABA.PAYMENT_DATE DESC">
      <parameters />
    </query>
    <query ID="GetSecondLastStatusForRetroReactivation" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT TOP 1 TEMP.STATUS_EFFECTIVE_DATE,TEMP.SUSPENSION_STATUS_REASON_VALUE FROM &#xD;&#xA;(&#xD;&#xA;SELECT TOP 2 * FROM SGT_PAYEE_ACCOUNT_STATUS SPAS1 &#xD;&#xA;WHERE PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID&#xD;&#xA;ORDER BY STATUS_EFFECTIVE_DATE DESC&#xD;&#xA;) TEMP&#xD;&#xA;WHERE TEMP.STATUS_VALUE IN ('CMPL','SPND')&#xD;&#xA;ORDER BY TEMP.STATUS_EFFECTIVE_DATE  DESC ">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
  </queries>
  <attributes>
    <attribute sfwValue="payee_account_status_id" sfwType="Column" sfwKeyNo="1" sfwIsIdentity="True" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="PayeeAccountStatusId" sfwIsSequence="False" sfwCaption="ID" />
    <attribute sfwValue="payee_account_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="PayeeAccountId" sfwIsSequence="False" sfwCaption="Payee Account Id" />
    <attribute sfwType="Description" ID="StatusDescription" sfwCaption="Status" sfwValue="status_description" />
    <attribute sfwValue="status_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="StatusId" sfwCodeID="7027" sfwIsSequence="False" sfwCaption="Status" />
    <attribute sfwValue="status_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="StatusValue" sfwIsSequence="False" sfwCaption="Status" />
    <attribute sfwValue="status_effective_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="StatusEffectiveDate" sfwIsSequence="False" sfwCaption="Status Effective Date" />
    <attribute sfwType="Description" ID="SuspensionStatusReasonDescription" sfwCaption="Suspension Status Reason" sfwValue="suspension_status_reason_description" />
    <attribute sfwValue="suspension_status_reason_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="SuspensionStatusReasonId" sfwCodeID="7008" sfwIsSequence="False" sfwCaption="Suspension Status Reason" />
    <attribute sfwValue="suspension_status_reason_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="SuspensionStatusReasonValue" sfwIsSequence="False" sfwCaption="Suspension Status Reason" />
    <attribute sfwType="Description" ID="TerminatedStatusReasonDescription" sfwCaption="Terminated Status Reason" sfwValue="terminated_status_reason_description" />
    <attribute sfwValue="terminated_status_reason_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="TerminatedStatusReasonId" sfwCodeID="7009" sfwIsSequence="False" sfwCaption="Terminated Status Reason" />
    <attribute sfwValue="terminated_status_reason_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="TerminatedStatusReasonValue" sfwIsSequence="False" sfwCaption="Terminated Status Reason" />
    <attribute sfwValue="created_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="CreatedBy" sfwIsSequence="False" sfwCaption="Created By" />
    <attribute sfwValue="created_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="CreatedDate" sfwIsSequence="False" sfwCaption="Created Date" />
    <attribute sfwValue="modified_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="ModifiedBy" sfwIsSequence="False" sfwCaption="Modified By" />
    <attribute sfwValue="modified_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="ModifiedDate" sfwIsSequence="False" sfwCaption="Modified Date" />
    <attribute sfwValue="update_seq" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="UpdateSeq" sfwIsSequence="False" sfwCaption="Update Seq" />
    <attribute sfwValue="termination_reason_description" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="100" sfwIsNull="True" ID="TerminationReasonDescription" sfwIsSequence="False" sfwCaption="Termination Reason Description" />
    <attribute sfwValue="suspension_reason_description" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="100" sfwIsNull="True" ID="SuspensionReasonDescription" sfwIsSequence="False" sfwCaption="Suspension Reason Description" />
    <attribute sfwType="Description" ID="ReviewStatusReasonDescription" sfwCaption="Review Status Reason" sfwValue="review_status_reason_description" />
    <attribute sfwValue="review_status_reason_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="ReviewStatusReasonId" sfwCodeID="7093" sfwCaption="Review Status Reason" />
    <attribute sfwValue="review_status_reason_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="ReviewStatusReasonValue" sfwCaption="Review Status Reason" />
  </attributes>
  <constraint />
  <methods />
  <lifecycle />
  <objectmethods />
  <ExtraFields />
</entity>