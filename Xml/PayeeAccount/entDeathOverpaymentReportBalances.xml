<?xml version="1.0" encoding="utf-8"?>
<entity ID="entDeathOverpaymentReportBalances" sfwObjectID="busDeathOverpaymentReportBalances" sfwTableName="sgt_death_overpayment_report_balances" sfwView="False" sfwMainCDO="icdoDeathOverpaymentReportBalances" sfwDataObjectID="doDeathOverpaymentReportBalances">
  <queries>
    <query ID="LookUp" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from sgt_death_overayment_report_balances ">
      <parameters />
    </query>
    <query ID="GetLatestBalances" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="  SELECT TOP 1 * FROM SGT_DEATH_OVERPAYMENT_REPORT_BALANCES ORDER BY BALANCE_AS_OF_DATE DESC&#xD;&#xA;&#xD;&#xA;">
      <parameters />
    </query>
    <query ID="GetWriteOffBalance" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;DECLARE @LAST_DATE_OF_PREV_QTR DATETIME = DATEADD(dd, -1, DATEADD(qq, DATEDIFF(qq, 0, GETDATE()), 0))&#xD;&#xA;DECLARE @FIRST_DATE_OF_PREV_QTR DATETIME = DATEADD(qq, DATEDIFF(qq, 0, GETDATE()) - 1, 0)&#xD;&#xA;DECLARE @YEAR INT = YEAR(GETDATE()) - 6 &#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;@YEAR AS [YEAR],&#xD;&#xA;SUM(ISNULL(WRITE_OFF_BALANCE,0)) AS OS_BALANCE&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;SELECT DISTINCT PAR.SSN AS PARTICIPANT_SSN,&#xD;&#xA;SP.PERSON_ID,&#xD;&#xA;SP.SSN AS PAYEE_SSN,&#xD;&#xA;SP.DATE_OF_DEATH,&#xD;&#xA;ISNULL(RP.GROSS_PAYMENT_AMOUNT,0) - ISNULL(RD.GROSS_AMOUNT,0) AS WRITE_OFF_BALANCE&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT SPA&#xD;&#xA;INNER JOIN SGT_PERSON SP ON SPA.PERSON_ID = SP.PERSON_ID AND DATE_OF_DEATH IS NOT NULL&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT SPBA ON SPA.PAYEE_BENEFIT_ACCOUNT_ID = SPBA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON PAR ON SPBA.PERSON_ID = PAR.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE CS ON SPA.ACCOUNT_RELATION_ID = CS.CODE_ID AND SPA.ACCOUNT_RELATION_VALUE = CS.CODE_VALUE&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS SPAS ON SPA.PAYEE_ACCOUNT_ID = SPAS.PAYEE_ACCOUNT_ID &#xD;&#xA; AND SPAS.PAYEE_ACCOUNT_STATUS_ID = (SELECT TOP 1 Q.PAYEE_ACCOUNT_STATUS_ID FROM SGT_PAYEE_ACCOUNT_STATUS Q WHERE Q.PAYEE_ACCOUNT_ID = SPA.PAYEE_ACCOUNT_ID ORDER BY Q.STATUS_EFFECTIVE_DATE DESC)&#xD;&#xA;INNER JOIN &#xD;&#xA;(&#xD;&#xA;  SELECT PHH.PAYMENT_HISTORY_HEADER_ID,PHH.PAYEE_ACCOUNT_ID,MAX(PAYMENT_DATE) AS PAYMENT_DATE&#xD;&#xA;  FROM  SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHD ON PHH.PAYMENT_HISTORY_HEADER_ID  = PHD.PAYMENT_HISTORY_HEADER_ID AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('RCMD','CNLD')&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHDE ON PHH.PAYMENT_HISTORY_HEADER_ID =  PHDE.PAYMENT_HISTORY_HEADER_ID AND PHDE.PAYMENT_ITEM_TYPE_ID IN (1,2,21,22,48)&#xD;&#xA;  WHERE PHH.PAYMENT_DATE &lt;= @LAST_DATE_OF_PREV_QTR&#xD;&#xA;  GROUP BY PHH.PAYEE_ACCOUNT_ID,PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;)PAYMENT ON SPA.PAYEE_ACCOUNT_ID = PAYMENT.PAYEE_ACCOUNT_ID &#xD;&#xA;INNER JOIN &#xD;&#xA;(&#xD;&#xA;  SELECT PHH.PAYMENT_HISTORY_HEADER_ID,PHH.PAYEE_ACCOUNT_ID,SUM(ISNULL(AMOUNT,0)) AS AMOUNT&#xD;&#xA;  FROM  SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHD ON PHH.PAYMENT_HISTORY_HEADER_ID  = PHD.PAYMENT_HISTORY_HEADER_ID AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('RCMD','CNLD')&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHDE ON PHH.PAYMENT_HISTORY_HEADER_ID =  PHDE.PAYMENT_HISTORY_HEADER_ID AND PHDE.PAYMENT_ITEM_TYPE_ID IN (1,2,21,22,48)&#xD;&#xA;  GROUP BY PHH.PAYMENT_HISTORY_HEADER_ID,PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;)AMOUNT ON PAYMENT.PAYMENT_HISTORY_HEADER_ID = AMOUNT.PAYMENT_HISTORY_HEADER_ID AND SPA.PAYEE_ACCOUNT_ID = AMOUNT.PAYEE_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RP ON SPA.PAYEE_ACCOUNT_ID = RP.PAYEE_ACCOUNT_ID AND ISNULL(IS_OVERPAYMENT_FLAG,'N') = 'Y' AND RP.RETRO_PAYMENT_TYPE_VALUE = 'OVER'&#xD;&#xA;LEFT OUTER JOIN SGT_REPAYMENT_SCHEDULE R ON RP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID =  R.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;LEFT OUTER JOIN &#xD;&#xA;(&#xD;&#xA; SELECT REPAYMENT_SCHEDULE_ID,SUM(ISNULL(GROSS_AMOUNT,0)) AS GROSS_AMOUNT,SUM(ISNULL(AMOUNT_PAID,0)) AS AMOUNT_PAID FROM SGT_REIMBURSEMENT_DETAILS &#xD;&#xA; GROUP BY REPAYMENT_SCHEDULE_ID&#xD;&#xA;)RD ON R.REPAYMENT_SCHEDULE_ID = RD.REPAYMENT_SCHEDULE_ID&#xD;&#xA;LEFT OUTER JOIN&#xD;&#xA;(&#xD;&#xA; SELECT MAX(RS.REPAYMENT_SCHEDULE_ID) AS REPAYMENT_SCHEDULE_ID&#xD;&#xA; FROM SGT_REPAYMENT_SCHEDULE RS&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT P ON RS.PAYEE_ACCOUNT_ID = P.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT ON P.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID AND PAPIT.PAYMENT_ITEM_TYPE_ID = 53 AND END_DATE IS NULL &#xD;&#xA; INNER JOIN SGT_PERSON SP ON SP.PERSON_ID = P.PERSON_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS ON P.PAYEE_ACCOUNT_ID = PAS.PAYEE_ACCOUNT_ID &#xD;&#xA; AND PAS.PAYEE_ACCOUNT_STATUS_ID = (SELECT TOP 1 Q.PAYEE_ACCOUNT_STATUS_ID FROM SGT_PAYEE_ACCOUNT_STATUS Q WHERE Q.PAYEE_ACCOUNT_ID = P.PAYEE_ACCOUNT_ID ORDER BY Q.STATUS_EFFECTIVE_DATE DESC) &#xD;&#xA; WHERE PAS.STATUS_VALUE NOT IN ('CMPL','CNCL')&#xD;&#xA;)ACTV_REPAYMENT ON R.REPAYMENT_SCHEDULE_ID = ACTV_REPAYMENT.REPAYMENT_SCHEDULE_ID&#xD;&#xA;WHERE SPAS.STATUS_VALUE IN ('CMPL','SPND') AND (YEAR(SP.DATE_OF_DEATH) = @YEAR AND ACTV_REPAYMENT.REPAYMENT_SCHEDULE_ID IS NULL)&#xD;&#xA;AND SP.DATE_OF_DEATH &lt;= @LAST_DATE_OF_PREV_QTR&#xD;&#xA;GROUP BY SP.PERSON_ID,RP.GROSS_PAYMENT_AMOUNT,PAR.SSN,SP.SSN,R.REIMBURSEMENT_AMOUNT,RD.GROSS_AMOUNT,RD.AMOUNT_PAID,AMOUNT.AMOUNT ,SP.DATE_OF_DEATH&#xD;&#xA;HAVING ISNULL(RP.GROSS_PAYMENT_AMOUNT,0) - ISNULL(RD.GROSS_AMOUNT,0) &lt;&gt; 0 AND SP.DATE_OF_DEATH &lt;= MAX(PAYMENT.PAYMENT_DATE)&#xD;&#xA;)DEATH">
      <parameters />
    </query>
    <query ID="rptDeceasedRetireesOverpaymentReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @LAST_DATE_OF_PREV_QTR DATE = DATEADD(dd, -1, DATEADD(qq, DATEDIFF(qq, 0, GETDATE()), 0))&#xD;&#xA;DECLARE @FIRST_DATE_OF_PREV_QTR DATE = DATEADD(qq, DATEDIFF(qq, 0,  GETDATE()) - 1, 0)&#xD;&#xA;DECLARE @YEAR INT = YEAR(GETDATE()) - 5&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;DELETE FROM SGT_DEATH_OVERPAYMENT_REPORT_BALANCES WHERE CONVERT(DATE,BALANCE_AS_OF_DATE) = @LAST_DATE_OF_PREV_QTR&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT &#xD;&#xA;PARTICIPANT_SSN,&#xD;&#xA;PAYEE_SSN,&#xD;&#xA;NAME,&#xD;&#xA;ACCOUNT_RELATION,&#xD;&#xA;DEATH.DATE_OF_DEATH,&#xD;&#xA;DEATH.NEW AS NEW,&#xD;&#xA;MAX(LAST_PAID) AS LAST_PAID,&#xD;&#xA;ROUND(DATEDIFF(mm,DEATH.DATE_OF_DEATH, MAX(LAST_PAID)),1) AS MONTH_DIFF,&#xD;&#xA;SUM(ISNULL(MONTHLY_GROSS,0)) AS  MONTHLY_GROSS,&#xD;&#xA;SUM(ISNULL(TOTAL_OVERPAID_AMT,0)) AS TOTAL_OVERPAID_AMT,&#xD;&#xA;SUM(ISNULL(AMT_RECOUPED,0)) AS TOTAL_AMT_RECOUPED,&#xD;&#xA;SUM(ISNULL(AMT_RECOUPED_IN_CURR_PERIOD,0)) AS AMT_RECOUPED_IN_CURR_PERIOD,&#xD;&#xA;SUM(ISNULL(OS_BALANCE,0)) AS OS_BALANCE,&#xD;&#xA;MAX(ISNULL(AGING,0)) AS AGING,&#xD;&#xA;@LAST_DATE_OF_PREV_QTR AS REPORT_AS_OF_DATE&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;SELECT DISTINCT PAR.SSN AS PARTICIPANT_SSN,&#xD;&#xA;SP.PERSON_ID,&#xD;&#xA;SP.SSN AS PAYEE_SSN,&#xD;&#xA;SP.FIRST_NAME + ' ' + SP.LAST_NAME AS NAME,&#xD;&#xA;CS.DESCRIPTION AS ACCOUNT_RELATION,&#xD;&#xA;SP.DATE_OF_DEATH,&#xD;&#xA;CASE WHEN MIN(RP.CREATED_DATE) BETWEEN @FIRST_DATE_OF_PREV_QTR AND @LAST_DATE_OF_PREV_QTR THEN 'Yes' ELSE 'No' END AS NEW,&#xD;&#xA;MAX(PAYMENT.PAYMENT_DATE) AS LAST_PAID,&#xD;&#xA;CASE WHEN ISNULL(RETIREE_INCR_FLAG,'N') = 'N' THEN ISNULL(AMOUNT.AMOUNT,0) ELSE NULL END AS MONTHLY_GROSS &#xD;&#xA;,ISNULL(RP.GROSS_PAYMENT_AMOUNT,0) AS TOTAL_OVERPAID_AMT,&#xD;&#xA;ISNULL(SPRD.GROSS_AMOUNT,0) AS AMT_RECOUPED,&#xD;&#xA;ISNULL(SPRD.AMOUNT_PAID_CURR,0) AS AMT_RECOUPED_IN_CURR_PERIOD,&#xD;&#xA;ISNULL(RP.GROSS_PAYMENT_AMOUNT,0) - ISNULL(SPRD.GROSS_AMOUNT,0) AS OS_BALANCE,&#xD;&#xA;ROUND(DATEDIFF(dd,MAX(PAYMENT.PAYMENT_DATE), @LAST_DATE_OF_PREV_QTR)/365.0,4) AS AGING&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT SPA&#xD;&#xA;INNER JOIN SGT_PERSON SP ON SPA.PERSON_ID = SP.PERSON_ID AND DATE_OF_DEATH IS NOT NULL&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT SPBA ON SPA.PAYEE_BENEFIT_ACCOUNT_ID = SPBA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON PAR ON SPBA.PERSON_ID = PAR.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE CS ON SPA.ACCOUNT_RELATION_ID = CS.CODE_ID AND SPA.ACCOUNT_RELATION_VALUE = CS.CODE_VALUE&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS SPAS ON SPA.PAYEE_ACCOUNT_ID = SPAS.PAYEE_ACCOUNT_ID &#xD;&#xA; AND SPAS.PAYEE_ACCOUNT_STATUS_ID = (SELECT TOP 1 Q.PAYEE_ACCOUNT_STATUS_ID FROM SGT_PAYEE_ACCOUNT_STATUS Q WHERE Q.PAYEE_ACCOUNT_ID = SPA.PAYEE_ACCOUNT_ID ORDER BY Q.STATUS_EFFECTIVE_DATE DESC)&#xD;&#xA;INNER JOIN &#xD;&#xA;(&#xD;&#xA;  SELECT PHH.PAYMENT_HISTORY_HEADER_ID,PHH.PAYEE_ACCOUNT_ID,MAX(PAYMENT_DATE) AS PAYMENT_DATE&#xD;&#xA;  FROM  SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHD ON PHH.PAYMENT_HISTORY_HEADER_ID  = PHD.PAYMENT_HISTORY_HEADER_ID AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('RCMD','CNLD')&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHDE ON PHH.PAYMENT_HISTORY_HEADER_ID =  PHDE.PAYMENT_HISTORY_HEADER_ID AND PHDE.PAYMENT_ITEM_TYPE_ID IN (1,2,21,22,48)&#xD;&#xA;  WHERE PHH.PAYMENT_DATE &lt;= @LAST_DATE_OF_PREV_QTR&#xD;&#xA;  GROUP BY PHH.PAYEE_ACCOUNT_ID,PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;)PAYMENT ON SPA.PAYEE_ACCOUNT_ID = PAYMENT.PAYEE_ACCOUNT_ID &#xD;&#xA;INNER JOIN &#xD;&#xA;(&#xD;&#xA;  SELECT PHH.PAYMENT_HISTORY_HEADER_ID,PHH.PAYEE_ACCOUNT_ID,SUM(ISNULL(AMOUNT,0)) AS AMOUNT&#xD;&#xA;  FROM  SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHD ON PHH.PAYMENT_HISTORY_HEADER_ID  = PHD.PAYMENT_HISTORY_HEADER_ID AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('RCMD','CNLD')&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHDE ON PHH.PAYMENT_HISTORY_HEADER_ID =  PHDE.PAYMENT_HISTORY_HEADER_ID AND PHDE.PAYMENT_ITEM_TYPE_ID IN (1,2,21,22,48)&#xD;&#xA;  GROUP BY PHH.PAYMENT_HISTORY_HEADER_ID,PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;)AMOUNT ON PAYMENT.PAYMENT_HISTORY_HEADER_ID = AMOUNT.PAYMENT_HISTORY_HEADER_ID AND SPA.PAYEE_ACCOUNT_ID = AMOUNT.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN&#xD;&#xA;(&#xD;&#xA;&#x9;SELECT RP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID,RP.GROSS_PAYMENT_AMOUNT,RP.CREATED_DATE,RP.PAYEE_ACCOUNT_ID,&#xD;&#xA;&#x9;SUM(ISNULL(GROSS_AMOUNT,0)) AS GROSS_AMOUNT,SUM(ISNULL(AMOUNT_PAID,0)) AS AMOUNT_PAID,&#xD;&#xA;&#x9;SUM(CASE WHEN POSTED_DATE BETWEEN @FIRST_DATE_OF_PREV_QTR AND @LAST_DATE_OF_PREV_QTR THEN ISNULL(AMOUNT_PAID,0) ELSE 0 END) AS AMOUNT_PAID_CURR&#xD;&#xA;&#x9;FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RP &#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_REPAYMENT_SCHEDULE R ON RP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID =  R.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_REIMBURSEMENT_DETAILS RD ON R.REPAYMENT_SCHEDULE_ID = RD.REPAYMENT_SCHEDULE_ID AND POSTED_DATE &lt;= @LAST_DATE_OF_PREV_QTR&#xD;&#xA;&#x9;WHERE ISNULL(IS_OVERPAYMENT_FLAG,'N') = 'Y' AND RP.RETRO_PAYMENT_TYPE_VALUE = 'OVER'&#xD;&#xA;&#x9;GROUP BY RP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID,RP.PAYEE_ACCOUNT_ID,RP.GROSS_PAYMENT_AMOUNT,RP.CREATED_DATE&#xD;&#xA;)SPRD ON SPA.PAYEE_ACCOUNT_ID = SPRD.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RP ON SPA.PAYEE_ACCOUNT_ID = RP.PAYEE_ACCOUNT_ID AND ISNULL(IS_OVERPAYMENT_FLAG,'N') = 'Y' AND RP.RETRO_PAYMENT_TYPE_VALUE = 'OVER'&#xD;&#xA;LEFT OUTER JOIN SGT_REPAYMENT_SCHEDULE R ON RP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID =  R.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;LEFT OUTER JOIN&#xD;&#xA;(&#xD;&#xA; SELECT SP.PERSON_ID,MAX(RS.REPAYMENT_SCHEDULE_ID) AS REPAYMENT_SCHEDULE_ID&#xD;&#xA; FROM SGT_REPAYMENT_SCHEDULE RS&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT P ON RS.PAYEE_ACCOUNT_ID = P.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PLAN_BENEFIT_XR XR ON XR.PLAN_BENEFIT_ID = P.PLAN_BENEFIT_ID AND XR.PLAN_ID &lt;&gt; 1&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT ON P.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID AND PAPIT.PAYMENT_ITEM_TYPE_ID = 53 AND END_DATE IS NULL &#xD;&#xA; INNER JOIN SGT_PERSON SP ON SP.PERSON_ID = P.PERSON_ID AND DATE_OF_DEATH IS NULL&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS ON P.PAYEE_ACCOUNT_ID = PAS.PAYEE_ACCOUNT_ID &#xD;&#xA; AND PAS.PAYEE_ACCOUNT_STATUS_ID = (SELECT TOP 1 Q.PAYEE_ACCOUNT_STATUS_ID FROM SGT_PAYEE_ACCOUNT_STATUS Q WHERE Q.PAYEE_ACCOUNT_ID = P.PAYEE_ACCOUNT_ID ORDER BY Q.STATUS_EFFECTIVE_DATE DESC) &#xD;&#xA; WHERE PAS.STATUS_VALUE NOT IN ('CMPL','CNCL')&#xD;&#xA; GROUP BY SP.PERSON_ID&#xD;&#xA;)ACTV_REPAYMENT ON R.REPAYMENT_SCHEDULE_ID = ACTV_REPAYMENT.REPAYMENT_SCHEDULE_ID&#xD;&#xA;WHERE SPAS.STATUS_VALUE IN ('CMPL','SPND') AND (YEAR(SP.DATE_OF_DEATH) &gt;= @YEAR OR (YEAR(SP.DATE_OF_DEATH) &lt; @YEAR AND ACTV_REPAYMENT.REPAYMENT_SCHEDULE_ID IS NOT NULL))&#xD;&#xA;AND SP.DATE_OF_DEATH &lt;= @LAST_DATE_OF_PREV_QTR AND RP.CREATED_DATE &lt;= @LAST_DATE_OF_PREV_QTR &#xD;&#xA;GROUP BY  SPRD.AMOUNT_PAID_CURR,SP.PERSON_ID,RP.GROSS_PAYMENT_AMOUNT,PAR.SSN,SP.SSN,SP.FIRST_NAME ,SP.LAST_NAME,CS.DESCRIPTION,SP.DATE_OF_DEATH,R.REIMBURSEMENT_AMOUNT,SPRD.GROSS_AMOUNT,SPRD.AMOUNT_PAID,AMOUNT.AMOUNT,RETIREE_INCR_FLAG &#xD;&#xA;HAVING ISNULL(RP.GROSS_PAYMENT_AMOUNT,0) - ISNULL(SPRD.GROSS_AMOUNT,0) &lt;&gt; 0 AND SP.DATE_OF_DEATH &lt;= MAX(PAYMENT.PAYMENT_DATE)&#xD;&#xA;)DEATH&#xD;&#xA;GROUP BY PARTICIPANT_SSN,PAYEE_SSN,NAME,ACCOUNT_RELATION,DEATH.DATE_OF_DEATH,DEATH.NEW&#xD;&#xA;">
      <parameters />
    </query>
  </queries>
  <attributes>
    <attribute sfwValue="death_overpayment_report_balances_id" sfwType="Column" sfwKeyNo="1" sfwIsIdentity="True" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="DeathOverpaymentReportBalancesId" sfwCaption="ID" />
    <attribute sfwValue="balance_as_of_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="BalanceAsOfDate" sfwCaption="Balance As Of Date" />
    <attribute sfwValue="balance_as_of_prev_period" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="BalanceAsOfPrevPeriod" sfwCaption="Balance As Of Prev Period" />
    <attribute sfwValue="additional_op_curr_period" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="AdditionalOpCurrPeriod" sfwCaption="Additional Op Curr Period" />
    <attribute sfwValue="amount_reimbursed_curr_period" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="AmountReimbursedCurrPeriod" sfwCaption="Amount Reimbursed Curr Period" />
    <attribute sfwValue="outstanding_balance" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="OutstandingBalance" sfwCaption="Outstanding Balance" />
    <attribute sfwValue="write_off_balance_as_of_prev_period" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="WriteOffBalanceAsOfPrevPeriod" sfwCaption="Write Off Balance As Of Prev Period" />
    <attribute sfwValue="write_off_balance_as_of_year" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="WriteOffBalanceAsOfYear" sfwCaption="Write Off Balance As Of Year" />
    <attribute sfwValue="write_off_balance_curr_period" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="WriteOffBalanceCurrPeriod" sfwCaption="Write Off Balance Curr Period" />
    <attribute sfwValue="write_off_balance" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="WriteOffBalance" sfwCaption="Write Off Balance" />
    <attribute sfwValue="adjustment_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="AdjustmentAmount" sfwCaption="Adjustment Amount" />
    <attribute sfwValue="created_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="CreatedBy" sfwCaption="Created By" />
    <attribute sfwValue="created_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="CreatedDate" sfwCaption="Created Date" />
    <attribute sfwValue="modified_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="ModifiedBy" sfwCaption="Modified By" />
    <attribute sfwValue="modified_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="ModifiedDate" sfwCaption="Modified Date" />
    <attribute sfwValue="update_seq" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="UpdateSeq" sfwCaption="Update Seq" />
  </attributes>
</entity>