<?xml version="1.0" encoding="utf-8"?>
<entity ID="entPaymentHistoryHeader" sfwActive="True" sfwStatus="Review" sfwType="BusinessRule" sfwMainCDO="icdoPaymentHistoryHeader" sfwObjectID="busPaymentHistoryHeader" sfwTableName="sgt_payment_history_header" sfwView="False" sfwDataObjectID="doPaymentHistoryHeader">
  <rules>
    <rule ID="VisibleRule-ShowCancelPaymentButton" sfwExpression="(this.ShowCancelPaymentButton() == True)" sfwObjectBased="True" />
    <rule ID="VisibleRule-ShowCreateOverpaymentButton" sfwExpression="(this.ShowCreateOverpaymentButton() == True)" sfwObjectBased="True" />
    <rule ID="VisibleRule-ShowOutstandingButton" sfwExpression="(this.ShowOutstandingButton() == True)" sfwObjectBased="True" />
    <rule ID="VisibleRule-ShowReclamationButtton" sfwExpression="(this.ShowReclamationButtton() == True)" sfwObjectBased="True" />
    <rule ID="VisibleRule-ShowReissuePaymentButton" sfwExpression="(this.ShowReissuePaymentButton() == True)" sfwObjectBased="True" />
    <rule ID="VisibleRule-ShowStopPaymentButton" sfwExpression="(this.ShowStopPaymentButton() == True)" sfwObjectBased="True" />
    <rule ID="VisibleRule-CheckLumpsum" sfwExpression="(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPayeeAccount.icdoPayeeAccount.istrBenefitOption&quot;) == &quot;Lump Sum&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRule-ShowBuyBackButton" sfwExpression="(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPayeeAccount.icdoPayeeAccount.benefit_account_type_value&quot;) == &quot;WDRL&quot;) &amp;&amp; &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPayeeAccount.icdoPayeeAccount.istrBenefitOption&quot;) == &quot;Lump Sum&quot;)" sfwObjectBased="True" />
  </rules>
  <delete />
  <checklist />
  <initialload>
    <item ID="VisibleRule-ShowCreateOverpaymentButton" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRule-ShowCancelPaymentButton" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRule-ShowReissuePaymentButton" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRule-ShowStopPaymentButton" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRule-ShowOutstandingButton" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRule-ShowReclamationButtton" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRule-CheckLumpsum" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRule-ShowBuyBackButton" sfwMode="All" sfwStatus="Active" />
  </initialload>
  <softerror />
  <harderror />
  <validatedelete />
  <groupslist />
  <aliaslist />
  <updateablecdo />
  <commonproperties />
  <logicalrulelist />
  <expressionfields />
  <queries>
    <query ID="Lookup" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;SELECT DISTINCT PHH.PAYMENT_HISTORY_HEADER_ID, PA.PAYEE_ACCOUNT_ID, PHH.PLAN_ID,P.PLAN_CODE,&#xD;&#xA; PHH.PAYMENT_DATE, PHH.PAYMENT_DATE AS PAYMENT_DATE1,&#xD;&#xA; PER.MPI_PERSON_ID,(PER.FIRST_NAME + ' ' + PER.LAST_NAME) AS PAYEENAME,&#xD;&#xA;    O.MPI_ORG_ID, O.ORG_NAME,&#xD;&#xA; SPHD.PAYMENT_METHOD_ID, SPHD.PAYMENT_METHOD_VALUE,&#xD;&#xA; SPHD.CHECK_NUMBER, &#xD;&#xA;    AA.CHECK_NUMBER AS istrOriginalCheckNumber,--PIR 888,&#xD;&#xA;    AA.PAYMENT_HISTORY_HEADER_ID AS iintOriginalHeaderId,--PIR 888,    &#xD;&#xA; PHD.GROSS_AMOUNT,&#xD;&#xA; PHD.NET_AMOUNT,&#xD;&#xA; PHD.DEDUCTION_AMOUNT,&#xD;&#xA; PHD.STATE_TAX,&#xD;&#xA; PHD.FEDERAL_TAX AS FEDRAL_TAX,&#xD;&#xA; PHH.PAYMENT_SCHEDULE_ID,&#xD;&#xA; SPHD.CHECK_ACH_EFFECTIVE_DATE,SPHD.CHECK_ACH_EFFECTIVE_DATE AS CHECK_ACH_EFFECTIVE_DATE1,&#xD;&#xA; SPHD.DISTRIBUTION_STATUS_ID, SPHD.DISTRIBUTION_STATUS_VALUE,&#xD;&#xA; PHD.PAYMENT_TYPE,&#xD;&#xA; CASE WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DSBL' OR (BADSBL.BENEFIT_APPLICATION_ID IS NOT NULL AND BADSBL.DISABILITY_CONVERSION_DATE IS NOT NULL AND BADSBL.RETIREMENT_DATE&lt;=PHH.PAYMENT_DATE)&#xD;&#xA;         OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' AND DAPP.IS_PARTICIPANT_DISABLED_FLAG='Y') OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL AND DRO.IS_PARTICIPANT_DISABLED_FLAG='Y')))&#xD;&#xA;          THEN '3' -- IAP CASE PENDING HERE&#xD;&#xA;          &#xD;&#xA;          &#xD;&#xA;    WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DDPR' OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DDPT') &#xD;&#xA;          THEN '4' + CASE WHEN (PBXR.BENEFIT_OPTION_VALUE = 'LUMP' AND dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH) &lt;= '01/01/1936')   &#xD;&#xA;                          THEN 'A'&#xD;&#xA;                          WHEN PHD.ROLLOVER_FLAG ='Y'&#xD;&#xA;                          THEN 'G'&#xD;&#xA;                          ELSE ''&#xD;&#xA;                          END&#xD;&#xA;     &#xD;&#xA;       WHEN (((((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' AND BA.DRO_APPLICATION_ID IS NULL ) OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT') AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &gt;= 59.5)&#xD;&#xA;                    OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL)) AND DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE)/365.25 &gt;= 59.5))&#xD;&#xA;              AND PHD.ROLLOVER_FLAG ='N') &#xD;&#xA;        THEN '7' +  CASE WHEN (PBXR.BENEFIT_OPTION_VALUE = 'LUMP' AND  ((((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' AND BA.DRO_APPLICATION_ID IS NULL) OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT') AND dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH) &lt;= '01/01/1936') &#xD;&#xA;                              OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL)) AND dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH) &lt;= '01/01/1936')))&#xD;&#xA;                   THEN 'A'&#xD;&#xA;                   ELSE ''&#xD;&#xA;                   END                    &#xD;&#xA;          &#xD;&#xA;    WHEN (((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NULL AND PBXR.BENEFIT_OPTION_VALUE!='LUMP') AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &lt; 59.5)  &#xD;&#xA;     OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL AND PBXR.BENEFIT_OPTION_VALUE!='LUMP')) AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &lt; 59.5)&#xD;&#xA;           OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND (SELECT COUNT(*)  FROM SGT_PAYEE_ACCOUNT B INNER JOIN SGT_PLAN_BENEFIT_XR A ON A.PLAN_BENEFIT_ID=B.PLAN_BENEFIT_ID&#xD;&#xA;                                                               WHERE B.PERSON_ID=PA.PERSON_ID AND B.PAYEE_ACCOUNT_ID!=PA.PAYEE_ACCOUNT_ID AND A.PLAN_ID = PBXR.PLAN_ID AND B.BENEFIT_ACCOUNT_TYPE_VALUE!=PA.BENEFIT_ACCOUNT_TYPE_VALUE) &gt; 0)) &#xD;&#xA;           AND PHD.ROLLOVER_FLAG='N')&#xD;&#xA;          THEN '2'&#xD;&#xA;         &#xD;&#xA;    WHEN PHD.ROLLOVER_FLAG='Y'      &#xD;&#xA;         THEN 'G'&#xD;&#xA;     &#xD;&#xA;    WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND PBXR.BENEFIT_OPTION_VALUE='LUMP' AND PHD.ROLLOVER_FLAG='N' AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &lt; 59.5)     &#xD;&#xA;          THEN '1'      &#xD;&#xA;                   &#xD;&#xA;    ELSE 'ZZ'                                                     &#xD;&#xA;    END &#xD;&#xA; AS istrDistributionCode,&#xD;&#xA; istrRelativeVipFlag = ( SELECT CASE WHEN (COUNT(*) &gt; 0 OR PER.VIP_FLAG='Y') THEN 'Y' ELSE 'N' END FROM SGT_RELATIONSHIP SR&#xD;&#xA;                            INNER JOIN SGT_PERSON SPP ON SPP.PERSON_ID = SR.PERSON_ID WHERE (SR.BENEFICIARY_PERSON_ID = PER.PERSON_ID OR SR.DEPENDENT_PERSON_ID = PER.PERSON_ID) &#xD;&#xA;                            AND SPP.VIP_FLAG = 'Y')&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA; INNER JOIN &#xD;&#xA; (&#xD;&#xA;  SELECT PHD.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;  &#xD;&#xA;   SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 OR ALLOW_ROLLOVER_CODE_VALUE='RRED'   &#xD;&#xA;      THEN &#xD;&#xA;      ISNULL(PHD.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;      ELSE 0 &#xD;&#xA;      END&#xD;&#xA;    )  AS GROSS_AMOUNT,&#xD;&#xA;    &#xD;&#xA;      SUM(ISNULL(PHD.AMOUNT,0.0) * PIT.ITEM_TYPE_DIRECTION)  AS NET_AMOUNT,&#xD;&#xA;   &#xD;&#xA;      SUM(CASE WHEN PIT.CHECK_GROUP_CODE_VALUE = 'DEDT' AND PIT.ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'RRED' AND PIT.PAYEE_DETAIL_GROUP_VALUE &lt;&gt; 'FEDX' AND PIT.PAYEE_DETAIL_GROUP_VALUE &lt;&gt; 'STTX' &#xD;&#xA;              THEN (PIT.ITEM_TYPE_DIRECTION * PHD.AMOUNT) &#xD;&#xA;              ELSE 0 &#xD;&#xA;              END&#xD;&#xA;         ) AS DEDUCTION_AMOUNT,&#xD;&#xA;    &#xD;&#xA;   SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'FEDX'&#xD;&#xA;      THEN &#xD;&#xA;      ISNULL(PHD.AMOUNT,0.0) &#xD;&#xA;      ELSE 0 &#xD;&#xA;      END&#xD;&#xA;    )  AS FEDERAL_TAX,&#xD;&#xA;    &#xD;&#xA;   SUM(CASE WHEN &#xD;&#xA;      PIT.ACH_CHECK_GROUP_VALUE = 'STTX'&#xD;&#xA;      THEN &#xD;&#xA;      ISNULL(PHD.AMOUNT,0.0) &#xD;&#xA;      ELSE 0 &#xD;&#xA;      END&#xD;&#xA;    )  AS STATE_TAX,&#xD;&#xA;    &#xD;&#xA;   CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET' &#xD;&#xA;     THEN 'Y' &#xD;&#xA;     ELSE 'N' &#xD;&#xA;     END &#xD;&#xA;     AS ROLLOVER_FLAG,&#xD;&#xA;     &#xD;&#xA;      CASE WHEN PIT.ITEM_USAGE_VALUE = 'MNTP' THEN 'Monthly' WHEN PIT.ITEM_USAGE_VALUE = 'ONTP' AND PA.RETIREE_INCR_FLAG = 'Y' THEN 'Retiree Increase' ELSE 'One Time' END AS PAYMENT_TYPE        &#xD;&#xA;  &#xD;&#xA;  FROM SGT_PAYMENT_HISTORY_DETAIL PHD    &#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT PA ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PLAN_BENEFIT_XR PBXR ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA;  GROUP BY PHD.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;  CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET' THEN 'Y' ELSE 'N' END,&#xD;&#xA;  CASE WHEN PIT.ITEM_USAGE_VALUE = 'MNTP' THEN 'Monthly' WHEN PIT.ITEM_USAGE_VALUE = 'ONTP' AND PA.RETIREE_INCR_FLAG = 'Y' THEN 'Retiree Increase' ELSE 'One Time' END&#xD;&#xA; )AS PHD ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA; &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBACC WITH(NOLOCK) ON PBACC.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PERSON PARTI_PER WITH(NOLOCK) ON PARTI_PER.PERSON_ID = PBACC.PERSON_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION SPHD WITH(NOLOCK) ON  SPHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; --PIR 888&#xD;&#xA; LEFT OUTER JOIN&#xD;&#xA; (&#xD;&#xA;   --PIR 899&#xD;&#xA;      --SELECT TOP 100 PERCENT PH.PAYEE_ACCOUNT_ID,PHD.PAYMENT_HISTORY_DISTRIBUTION_ID,PH.PAYMENT_HISTORY_HEADER_ID ,PH.PERSON_ID,PH.PAYMENT_DATE,PHD.CHECK_NUMBER&#xD;&#xA;      --FROM SGT_PAYMENT_HISTORY_HEADER PH &#xD;&#xA;      --INNER JOIN SGT_PAYMENT_HISTORY_DETAIL HD ON PH.PAYMENT_HISTORY_HEADER_ID = HD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      --INNER JOIN SGT_PAYMENT_ITEM_TYPE IT WITH(NOLOCK) ON IT.PAYMENT_ITEM_TYPE_ID = HD.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;      --INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHD ON PHD.PAYMENT_HISTORY_HEADER_ID = PH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      --WHERE PHD.DISTRIBUTION_STATUS_VALUE = 'RSUD' AND PHD.OLD_DISTRIBUTION_ID IS NULL&#xD;&#xA;      --GROUP BY PH.PAYEE_ACCOUNT_ID ,PH.PERSON_ID,PH.PAYMENT_DATE,PHD.PAYMENT_HISTORY_DISTRIBUTION_ID,PHD.CHECK_NUMBER,PH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      --ORDER BY PH.PAYMENT_DATE DESC&#xD;&#xA;      &#xD;&#xA;      SELECT DISTINCT TABLE1.CHECK_NUMBER, TABLE1.PAYMENT_HISTORY_HEADER_ID, TABLE1.PAYEE_ACCOUNT_ID, TABLE1.PAYMENT_DATE, TABLE1.PAYMENT_HISTORY_DISTRIBUTION_ID, &#xD;&#xA;      TABLE2.PAYMENT_HISTORY_DISTRIBUTION_ID PAYMENT_HISTORY_DISTRIBUTION_ID1, TABLE2.OLD_DISTRIBUTION_ID&#xD;&#xA;  FROM(&#xD;&#xA;   SELECT DISTINCT PH.PAYEE_ACCOUNT_ID, PHD.PAYMENT_HISTORY_DISTRIBUTION_ID, PH.PAYMENT_HISTORY_HEADER_ID, PH.PAYMENT_DATE, PHD.CHECK_NUMBER, PHD.OLD_DISTRIBUTION_ID&#xD;&#xA;   FROM SGT_PAYMENT_HISTORY_HEADER PH INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHD ON PHD.PAYMENT_HISTORY_HEADER_ID = PH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;   WHERE PHD.DISTRIBUTION_STATUS_VALUE = 'RSUD' AND PHD.OLD_DISTRIBUTION_ID IS NULL           &#xD;&#xA;      ) TABLE1&#xD;&#xA;  INNER JOIN&#xD;&#xA;   (SELECT DISTINCT PH.PAYEE_ACCOUNT_ID, PHD.PAYMENT_HISTORY_DISTRIBUTION_ID, PH.PAYMENT_HISTORY_HEADER_ID, PH.PAYMENT_DATE, PHD.CHECK_NUMBER, PHD.OLD_DISTRIBUTION_ID&#xD;&#xA;   FROM SGT_PAYMENT_HISTORY_HEADER PH INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHD ON PHD.PAYMENT_HISTORY_HEADER_ID = PH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;   WHERE PHD.OLD_DISTRIBUTION_ID IS NOT NULL&#xD;&#xA;   ) TABLE2&#xD;&#xA;  ON TABLE1.PAYEE_ACCOUNT_ID = TABLE2.PAYEE_ACCOUNT_ID      &#xD;&#xA;  WHERE TABLE2.OLD_DISTRIBUTION_ID IS NOT NULL&#xD;&#xA;  AND TABLE2.PAYMENT_DATE &gt;= TABLE1.PAYMENT_DATE&#xD;&#xA;  AND TABLE1.PAYMENT_HISTORY_DISTRIBUTION_ID = TABLE2.OLD_DISTRIBUTION_ID&#xD;&#xA; ) AA ON PHH.PAYEE_ACCOUNT_ID = AA.PAYEE_ACCOUNT_ID AND SPHD.OLD_DISTRIBUTION_ID IS NOT NULL &#xD;&#xA;  AND (SPHD.OLD_DISTRIBUTION_ID = AA.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;  OR SPHD.OLD_DISTRIBUTION_ID = AA.PAYMENT_HISTORY_DISTRIBUTION_ID1)&#xD;&#xA;  AND PHH.PAYMENT_DATE &gt;= AA.PAYMENT_DATE          &#xD;&#xA; &#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BADSBL WITH(NOLOCK) ON BADSBL.PERSON_ID = PA.PERSON_ID AND BADSBL.BENEFIT_TYPE_VALUE='DSBL' AND BADSBL.APPLICATION_STATUS_VALUE='APRD'&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_DETAIL BAD WITH(NOLOCK) ON BAD.BENEFIT_APPLICATION_DETAIL_ID = PA.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) ON BAD.BENEFIT_APPLICATION_ID = BA.BENEFIT_APPLICATION_ID AND BA.APPLICATION_STATUS_VALUE='APRD'&#xD;&#xA; LEFT OUTER JOIN SGT_DRO_BENEFIT_DETAILS DBD WITH(NOLOCK) ON DBD.DRO_BENEFIT_ID = PA.DRO_APPLICATION_DETAIL_ID&#xD;&#xA; LEFT OUTER JOIN SGT_DRO_APPLICATION DAPP WITH(NOLOCK) ON DAPP.DRO_APPLICATION_ID = DBD.DRO_APPLICATION_ID AND DAPP.DRO_STATUS_VALUE='QLFD'&#xD;&#xA; LEFT OUTER JOIN SGT_DRO_APPLICATION DRO WITH(NOLOCK) ON DRO.DRO_APPLICATION_ID=BA.DRO_APPLICATION_ID AND DRO.DRO_STATUS_VALUE='QLFD'&#xD;&#xA; LEFT OUTER JOIN SGT_PERSON PER WITH(NOLOCK) ON PHH.PERSON_ID = PER.PERSON_ID &#xD;&#xA; LEFT OUTER JOIN SGT_ORGANIZATION O WITH(NOLOCK) ON PHH.ORG_ID = O.ORG_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PLAN P WITH(NOLOCK) ON P.PLAN_ID=PHH.PLAN_ID&#xD;&#xA; &#xD;&#xA; ORDER BY PHH.PAYMENT_DATE DESC">
      <parameters />
    </query>
    <query ID="createPaymentHistory" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="INSERT INTO SGT_PAYMENT_HISTORY_HEADER(PAYEE_ACCOUNT_ID,PLAN_ID,PERSON_ID,ORG_ID,PAYMENT_SCHEDULE_ID,PAYMENT_DATE, --REISSUE DETAIL PROD PIR 373&#xD;&#xA;            FED_TAX_OPTION_ID,FED_TAX_OPTION_VALUE,FED_TAX_ALLOWANCE,FED_MARITAL_STATUS_ID,FED_MARITAL_STATUS_VALUE,FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;            STATE_TAX_OPTION_ID,STATE_TAX_OPTION_VALUE,STATE_TAX_ALLOWANCE,STATE_MARITAL_STATUS_ID,STATE_MARITAL_STATUS_VALUE,STATE_ADDITIONAL_TAX_AMOUNT,ROLLOVER_TYPE_ID,ROLLOVER_TYPE_VALUE,&#xD;&#xA;            CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ)&#xD;&#xA;&#xD;&#xA;SELECT TEMP.* FROM &#xD;&#xA;(&#xD;&#xA;--NORMAL HEADER  &#xD;&#xA;SELECT &#xD;&#xA;    &#xD;&#xA;    DISTINCT TSPA.PAYEE_ACCOUNT_ID, --REISSUE DETAIL PROD PIR 373&#xD;&#xA;    PLAN_ID,&#xD;&#xA;    CASE WHEN (TSPA.TRANSFER_ORG_ID IS NULL AND TSPA.PERSON_ID IS NOT NULL) THEN PERSON_ID ELSE NULL END AS PERSON_ID, --CHNG ABHI&#xD;&#xA;    CASE WHEN (TSPA.TRANSFER_ORG_ID &gt; 0 AND TSPA.PERSON_ID &gt; 0) THEN O.ORG_ID ELSE TSPA.ORG_ID END AS ORG_ID, -- CHNG ABHI&#xD;&#xA;    @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;    @PAYMENTDATE AS PAYMENT_DATE,&#xD;&#xA;    FED_TAX_OPTION_ID ,&#xD;&#xA;    FED_TAX_OPTION_VALUE ,&#xD;&#xA;    FED_TAX_ALLOWANCE ,&#xD;&#xA;    FED_MARITAL_STATUS_ID ,&#xD;&#xA;    FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;    FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;    STATE_TAX_OPTION_ID ,&#xD;&#xA;    STATE_TAX_OPTION_VALUE ,&#xD;&#xA;    STATE_TAX_ALLOWANCE ,&#xD;&#xA;    STATE_MARITAL_STATUS_ID ,&#xD;&#xA;    STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;    STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;    7041 as ROLLOVER_TYPE_ID,&#xD;&#xA;    Null as ROLLOVER_TYPE_VALUE,&#xD;&#xA;    'OPUS Batch' as  CREATED_BY ,getdate() as CREATED_DATE,'OPUS Batch' as  MODIFIED_BY ,getdate() as MODIFIED_DATE,0 UPDATE_SEQ&#xD;&#xA;FROM TEMP_TABLE_FOR_PAYMENT TSPA &#xD;&#xA; INNER JOIN &#xD;&#xA; (&#xD;&#xA;  SELECT SUM(PAPIT.AMOUNT*PIT.ITEM_TYPE_DIRECTION) as NET_AMOUNT, PAYEE.PAYEE_ACCOUNT_ID  FROM TEMP_TABLE_FOR_PAYMENT PAYEE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT  ON PAPIT.PAYEE_ACCOUNT_ID=PAYEE.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;  WHERE &#xD;&#xA;   (@CheckStartDate=1 OR PAPIT.START_DATE &lt;= @PAYMENTDATE) &#xD;&#xA;   AND (PAPIT.END_DATE IS NULL OR PAPIT.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;   AND (PAPIT.START_DATE &lt;&gt; PAPIT.END_DATE or PAPIT.END_DATE IS NULL)&#xD;&#xA;   AND (ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y' AND ISNULL(PAYEE.REISSUE_ITEM_FLAG,'N')&lt;&gt;'Y')&#xD;&#xA;  GROUP BY PAYEE.PAYEE_ACCOUNT_ID&#xD;&#xA;    )PAPI ON TSPA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_ORGANIZATION O ON TSPA.TRANSFER_ORG_ID = O.ORG_ID -- CHNG ABHI&#xD;&#xA;WHERE NET_AMOUNT&gt;=0&#xD;&#xA; &#xD;&#xA;UNION ALL&#xD;&#xA;--ROLLOVER HEADER    &#xD;&#xA;SELECT &#xD;&#xA;    DISTINCT TSPA.PAYEE_ACCOUNT_ID, --REISSUE DETAIL PROD PIR 373&#xD;&#xA;    PLAN_ID,&#xD;&#xA;    Null  AS PERSON_ID,--NULL PERSON ID &#xD;&#xA;    PAPI.ROLLOVER_ORG_ID AS ORG_ID ,&#xD;&#xA;    --7037 AS STATUS_ID ,&#xD;&#xA;    --'OUST' AS STATUS_VALUE,&#xD;&#xA;    @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;    @PAYMENTDATE AS PAYMENT_DATE,&#xD;&#xA;    7004 AS FED_TAX_OPTION_ID ,&#xD;&#xA;    Null AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;    0 AS FED_TAX_ALLOWANCE ,&#xD;&#xA;    7032 AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;    Null AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;    0.00 AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;    7004 AS STATE_TAX_OPTION_ID ,&#xD;&#xA;    Null STATE_TAX_OPTION_VALUE ,&#xD;&#xA;    0 AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;    7032 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;    Null AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;    0.00 AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;    7041 as ROLLOVER_TYPE_ID,&#xD;&#xA;    PAPI.ROLLOVER_TYPE_VALUE as ROLLOVER_TYPE_VALUE,&#xD;&#xA;    'OPUS Batch' as  CREATED_BY ,getdate() as CREATED_DATE,'OPUS Batch' as  MODIFIED_BY ,getdate() as MODIFIED_DATE,0 UPDATE_SEQ&#xD;&#xA;       FROM TEMP_TABLE_FOR_PAYMENT TSPA &#xD;&#xA;    INNER JOIN &#xD;&#xA;    (&#xD;&#xA;     SELECT PAPIT.PAYEE_ACCOUNT_ID,&#xD;&#xA;    PARD.ROLLOVER_ORG_ID, PARD.ROLLOVER_TYPE_VALUE &#xD;&#xA;    FROM TEMP_TABLE_FOR_PAYMENT PAYEE &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK) ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK) ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;   AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   WHERE&#xD;&#xA;    (@CheckStartDate=1 OR PAPIT.START_DATE &lt;= @PAYMENTDATE) &#xD;&#xA;    AND (PAPIT.START_DATE &lt;&gt; PAPIT.END_DATE or PAPIT.END_DATE IS NULL)&#xD;&#xA;    AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;    AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA;    --AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;    AND  (ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y' AND ISNULL(PAYEE.REISSUE_ITEM_FLAG,'N')&lt;&gt;'Y')&#xD;&#xA;              -- OR &#xD;&#xA;              --(ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') = 'Y' AND ISNULL(PAYEE.REISSUE_ITEM_FLAG,'N')='Y'))&#xD;&#xA;   GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PARD.ROLLOVER_ORG_ID ,PARD.ROLLOVER_TYPE_VALUE&#xD;&#xA;    ) AS PAPI ON TSPA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;--REISSUE Header PIR 637&#xD;&#xA;SELECT &#xD;&#xA;    &#xD;&#xA;    DISTINCT TSPA.PAYEE_ACCOUNT_ID, &#xD;&#xA;    PLAN_ID,&#xD;&#xA;&#x9;&#x9;--PIR-622&#xD;&#xA;    CASE WHEN PAPI.RECIPIENT_PERSON_ID IS NULL THEN TSPA.PERSON_ID &#xD;&#xA;&#x9;ELSE  PAPI.RECIPIENT_PERSON_ID END AS PERSON_ID,&#xD;&#xA;&#x9;CASE WHEN PAPI.RECIPIENT_ORG_ID IS NULL THEN NULL&#xD;&#xA;&#x9;ELSE  PAPI.RECIPIENT_ORG_ID END AS ORG_ID,&#xD;&#xA;  --isnull(PAPI.RECIPIENT_ORG_ID,null) AS ORG_ID, --PIR 637&#xD;&#xA;    @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;    @PAYMENTDATE AS PAYMENT_DATE,&#xD;&#xA;    FED_TAX_OPTION_ID ,&#xD;&#xA;    FED_TAX_OPTION_VALUE ,&#xD;&#xA;    FED_TAX_ALLOWANCE ,&#xD;&#xA;    FED_MARITAL_STATUS_ID ,&#xD;&#xA;    FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;    FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;    STATE_TAX_OPTION_ID ,&#xD;&#xA;    STATE_TAX_OPTION_VALUE ,&#xD;&#xA;    STATE_TAX_ALLOWANCE ,&#xD;&#xA;    STATE_MARITAL_STATUS_ID ,&#xD;&#xA;    STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;    STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;    7041 as ROLLOVER_TYPE_ID,&#xD;&#xA;    Null as ROLLOVER_TYPE_VALUE,&#xD;&#xA;    'OPUS Batch' as  CREATED_BY ,getdate() as CREATED_DATE,'OPUS Batch' as  MODIFIED_BY ,getdate() as MODIFIED_DATE,0 UPDATE_SEQ&#xD;&#xA;FROM TEMP_TABLE_FOR_PAYMENT TSPA &#xD;&#xA;  INNER JOIN(&#xD;&#xA;     SELECT SUM(PAPIT.AMOUNT*PIT.ITEM_TYPE_DIRECTION) as NET_AMOUNT, &#xD;&#xA;      PAYEE.PAYEE_ACCOUNT_ID,&#xD;&#xA;      RD.RECIPIENT_PERSON_ID,  &#xD;&#xA;&#x9;  --PIR-622&#xD;&#xA;&#x9;  RD.RECIPIENT_ORG_ID&#xD;&#xA;      FROM TEMP_TABLE_FOR_PAYMENT PAYEE&#xD;&#xA;     INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT  ON PAPIT.PAYEE_ACCOUNT_ID=PAYEE.PAYEE_ACCOUNT_ID&#xD;&#xA;     INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;     --REissue details&#xD;&#xA;     INNER JOIN SGT_PAYMENT_REISSUE_DETAIL  RD WITH(NOLOCK)ON RD.PAYMENT_REISSUE_DETAIL_ID = PAYEE.PAYMENT_REISSUE_DETAIL_ID&#xD;&#xA;     AND ISNULL(RD.RECIPIENT_ROLLOVER_ORG_ID,0) = 0 --PIR 637&#xD;&#xA;     INNER JOIN SGT_PAYMENT_REISSUE_ITEM_DETAIL RID WITH(NOLOCK) ON RID.PAYMENT_REISSUE_DETAIL_ID = RD.PAYMENT_REISSUE_DETAIL_ID&#xD;&#xA;     AND RID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID &#xD;&#xA;&#xD;&#xA;     WHERE &#xD;&#xA;      (@CheckStartDate=1 OR PAPIT.START_DATE &lt;= @PAYMENTDATE) &#xD;&#xA;      AND PAPIT.END_DATE IS NULL --OR PAPIT.END_DATE &gt;= @PAYMENTDATE) --PIR 637&#xD;&#xA;      AND PIT.ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'RRED' --PIR 637&#xD;&#xA;      AND (PAPIT.START_DATE &lt;&gt; PAPIT.END_DATE or PAPIT.END_DATE IS NULL)&#xD;&#xA;      AND (ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') = 'Y' AND ISNULL(PAYEE.REISSUE_ITEM_FLAG,'N')='Y')&#xD;&#xA;     GROUP BY PAYEE.PAYEE_ACCOUNT_ID,RD.RECIPIENT_PERSON_ID,RD.RECIPIENT_ROLLOVER_ORG_ID,RD.RECIPIENT_ORG_ID&#xD;&#xA;  ) PAPI ON TSPA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_ORGANIZATION O ON TSPA.TRANSFER_ORG_ID = O.ORG_ID -- CHNG ABHI&#xD;&#xA;WHERE NET_AMOUNT&gt;=0&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;--Reissue ROLLOVER HEADER PROD PIR 637 &#xD;&#xA;SELECT &#xD;&#xA;    DISTINCT TSPA.PAYEE_ACCOUNT_ID, --REISSUE DETAIL PROD PIR 373&#xD;&#xA;    PLAN_ID,&#xD;&#xA;    Null  AS PERSON_ID,--NULL PERSON ID &#xD;&#xA;    PAPI.ROLLOVER_ORG_ID AS ORG_ID ,&#xD;&#xA;    --7037 AS STATUS_ID ,&#xD;&#xA;    --'OUST' AS STATUS_VALUE,&#xD;&#xA;    @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;    @PAYMENTDATE AS PAYMENT_DATE,&#xD;&#xA;    7004 AS FED_TAX_OPTION_ID ,&#xD;&#xA;    Null AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;    0 AS FED_TAX_ALLOWANCE ,&#xD;&#xA;    7032 AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;    Null AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;    0.00 AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;    7004 AS STATE_TAX_OPTION_ID ,&#xD;&#xA;    Null STATE_TAX_OPTION_VALUE ,&#xD;&#xA;    0 AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;    7032 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;    Null AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;    0.00 AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;    7041 as ROLLOVER_TYPE_ID,&#xD;&#xA;    PAPI.ROLLOVER_TYPE_VALUE as ROLLOVER_TYPE_VALUE,&#xD;&#xA;    'OPUS Batch' as  CREATED_BY ,getdate() as CREATED_DATE,'OPUS Batch' as  MODIFIED_BY ,getdate() as MODIFIED_DATE,0 UPDATE_SEQ&#xD;&#xA;FROM TEMP_TABLE_FOR_PAYMENT TSPA &#xD;&#xA;     INNER JOIN (&#xD;&#xA;    SELECT PAPIT.PAYEE_ACCOUNT_ID,&#xD;&#xA;    PARD.ROLLOVER_ORG_ID, PARD.ROLLOVER_TYPE_VALUE &#xD;&#xA;    FROM TEMP_TABLE_FOR_PAYMENT PAYEE &#xD;&#xA;     INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;     INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;     INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK) ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;     INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK) ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;     --REissue details&#xD;&#xA;     INNER JOIN SGT_PAYMENT_REISSUE_DETAIL  RD WITH(NOLOCK)ON RD.PAYMENT_REISSUE_DETAIL_ID = PAYEE.PAYMENT_REISSUE_DETAIL_ID&#xD;&#xA;     INNER JOIN SGT_PAYMENT_REISSUE_ITEM_DETAIL RID WITH(NOLOCK) ON RID.PAYMENT_REISSUE_DETAIL_ID = RD.PAYMENT_REISSUE_DETAIL_ID&#xD;&#xA;     AND RID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID &#xD;&#xA;    WHERE&#xD;&#xA;     (@CheckStartDate=1 OR PAPIT.START_DATE &lt;= @PAYMENTDATE) &#xD;&#xA;     AND (PAPIT.START_DATE &lt;&gt; PAPIT.END_DATE or PAPIT.END_DATE IS NULL)&#xD;&#xA;     AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;     AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA; --AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;     AND (ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') = 'Y' AND ISNULL(PAYEE.REISSUE_ITEM_FLAG,'N')='Y')&#xD;&#xA;    GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PARD.ROLLOVER_ORG_ID ,PARD.ROLLOVER_TYPE_VALUE&#xD;&#xA;    ) AS PAPI ON TSPA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;    &#xD;&#xA;) AS TEMP&#xD;&#xA;     INNER JOIN SGT_PAYEE_ACCOUNT PA ON TEMP.PAYEE_ACCOUNT_ID  = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;     LEFT OUTER JOIN SGT_PERSON P ON TEMP.PERSON_ID= P.PERSON_ID&#xD;&#xA;     LEFT OUTER JOIN SGT_ORGANIZATION O ON TEMP.ORG_ID = O.ORG_ID&#xD;&#xA; ORDER BY &#xD;&#xA; CASE WHEN TEMP.PERSON_ID IS NOT NULL  THEN  ISNULL(P.FIRST_NAME,'') +' '+ ISNULL(P.MIDDLE_NAME,'') +' '+ ISNULL(P.LAST_NAME,'') ELSE O.ORG_NAME END  ">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@CheckStartDate" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="createPaymentHistoryForDeduction" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;INSERT INTO SGT_PAYMENT_HISTORY_HEADER(PLAN_ID,PAYEE_ACCOUNT_ID,PERSON_ID,ORG_ID,PAYMENT_SCHEDULE_ID,PAYMENT_DATE,&#xD;&#xA;            FED_TAX_OPTION_ID,FED_TAX_OPTION_VALUE,FED_TAX_ALLOWANCE,FED_MARITAL_STATUS_ID,FED_MARITAL_STATUS_VALUE,FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;            STATE_TAX_OPTION_ID,STATE_TAX_OPTION_VALUE,STATE_TAX_ALLOWANCE,STATE_MARITAL_STATUS_ID,STATE_MARITAL_STATUS_VALUE,STATE_ADDITIONAL_TAX_AMOUNT,ROLLOVER_TYPE_ID,ROLLOVER_TYPE_VALUE,&#xD;&#xA;            CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ)&#xD;&#xA;&#xD;&#xA;SELECT TEMP.* FROM &#xD;&#xA;(&#xD;&#xA;&#xD;&#xA;--DEDUCTION HEADER    &#xD;&#xA;SELECT &#xD;&#xA;    PLAN_ID,&#xD;&#xA;    TSPA.PAYEE_ACCOUNT_ID,&#xD;&#xA;    --PAPI.PAY_TO_VALUE,&#xD;&#xA;    CASE WHEN PAPI.PAY_TO_VALUE='PRSN'  THEN PAPI.PERSON_ID ELSE NULL END AS PERSON_ID,&#xD;&#xA;    CASE WHEN PAPI.PAY_TO_VALUE!='PRSN'  THEN PAPI.ORG_ID ELSE NULL END AS ORG_ID,&#xD;&#xA;    --7037 AS STATUS_ID ,&#xD;&#xA;    --'OUST' AS STATUS_VALUE,&#xD;&#xA;    @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;    @PAYMENTDATE AS PAYMENT_DATE,&#xD;&#xA;    7004 AS FED_TAX_OPTION_ID ,&#xD;&#xA;    Null AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;    0 AS FED_TAX_ALLOWANCE ,&#xD;&#xA;    7032 AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;    Null AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;    0.00 AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;    7004 AS STATE_TAX_OPTION_ID ,&#xD;&#xA;    Null STATE_TAX_OPTION_VALUE ,&#xD;&#xA;    0 AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;    7032 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;    Null AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;    0.00 AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;    7041 as ROLLOVER_TYPE_ID,&#xD;&#xA;    NULL as ROLLOVER_TYPE_VALUE,&#xD;&#xA;    'OPUS Batch' as  CREATED_BY ,getdate() as CREATED_DATE,'OPUS Batch' as  MODIFIED_BY ,getdate() as MODIFIED_DATE,0 UPDATE_SEQ&#xD;&#xA;       FROM TEMP_TABLE_FOR_PAYMENT TSPA &#xD;&#xA;    INNER JOIN &#xD;&#xA;    (&#xD;&#xA;   SELECT PAPIT.PAYEE_ACCOUNT_ID, PAD.PERSON_ID, PAD.PAY_TO_VALUE,PAD.ORG_ID  &#xD;&#xA;   FROM TEMP_TABLE_FOR_PAYMENT PAYEE&#xD;&#xA;   &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;   &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;   &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_DEDUCTION  PAD WITH(NOLOCK)ON PAD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;                                        AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAD.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   WHERE&#xD;&#xA;   (@CheckStartDate=1 OR PAPIT.START_DATE &lt;= @PAYMENTDATE) AND (PAPIT.END_DATE IS NULL OR PAPIT.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;   AND (PAPIT.START_DATE &lt;&gt; PAPIT.END_DATE or PAPIT.END_DATE IS NULL)&#xD;&#xA;   AND PIT.DEDUCTION_VALUE = 'UPDT' &#xD;&#xA;   --AND PIT.VENDOR_FLAG='N'--Include for IRS Levy&#xD;&#xA;   --AND PAD.STATUS_VALUE = 'ACTV'&#xD;&#xA;   --AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;   AND (ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y' AND ISNULL(PAYEE.REISSUE_ITEM_FLAG,'N')&lt;&gt;'Y')&#xD;&#xA;      GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PAD.PERSON_ID, PAD.PAY_TO_VALUE,PAD.ORG_ID&#xD;&#xA;    ) AS PAPI&#xD;&#xA;    ON TSPA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;    &#xD;&#xA;UNION ALL &#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;    PLAN_ID,&#xD;&#xA;    TSPA.PAYEE_ACCOUNT_ID,&#xD;&#xA;    --PAPI.PAY_TO_VALUE,&#xD;&#xA;          PAPI.RECIPIENT_PERSON_ID AS PERSON_ID,&#xD;&#xA;    --PIR-622&#xD;&#xA;    --PAPI.RECIPIENT_ROLLOVER_ORG_ID AS ORG_ID,&#xD;&#xA;&#x9;case when PAPI.RECIPIENT_ROLLOVER_ORG_ID&gt;0 then PAPI.RECIPIENT_ROLLOVER_ORG_ID &#xD;&#xA;&#x9;     else &#xD;&#xA;&#x9;&#x9; PAPI.RECIPIENT_ORG_ID END AS ORG_ID ,&#xD;&#xA;    --7037 AS STATUS_ID ,&#xD;&#xA;    --'OUST' AS STATUS_VALUE,&#xD;&#xA;    @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;    @PAYMENTDATE AS PAYMENT_DATE,&#xD;&#xA;    7004 AS FED_TAX_OPTION_ID ,&#xD;&#xA;    Null AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;    0 AS FED_TAX_ALLOWANCE ,&#xD;&#xA;    7032 AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;    Null AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;    0.00 AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;    7004 AS STATE_TAX_OPTION_ID ,&#xD;&#xA;    Null STATE_TAX_OPTION_VALUE ,&#xD;&#xA;    0 AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;    7032 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;    Null AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;    0.00 AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;    7041 as ROLLOVER_TYPE_ID,&#xD;&#xA;    NULL as ROLLOVER_TYPE_VALUE,&#xD;&#xA;    'OPUS Batch' as  CREATED_BY ,getdate() as CREATED_DATE,'OPUS Batch' as  MODIFIED_BY ,getdate() as MODIFIED_DATE,0 UPDATE_SEQ&#xD;&#xA;       FROM TEMP_TABLE_FOR_PAYMENT TSPA &#xD;&#xA;    INNER JOIN &#xD;&#xA;    (&#xD;&#xA;&#x9;--PIR-622&#xD;&#xA;   SELECT PAPIT.PAYEE_ACCOUNT_ID, RD.RECIPIENT_PERSON_ID,RD.RECIPIENT_ROLLOVER_ORG_ID,RD.RECIPIENT_ORG_ID  &#xD;&#xA;   FROM TEMP_TABLE_FOR_PAYMENT PAYEE&#xD;&#xA;   &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;   &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;   &#xD;&#xA;   INNER JOIN SGT_PAYMENT_REISSUE_DETAIL  RD WITH(NOLOCK)ON RD.PAYMENT_REISSUE_DETAIL_ID = PAYEE.PAYMENT_REISSUE_DETAIL_ID&#xD;&#xA;   INNER JOIN SGT_PAYMENT_REISSUE_ITEM_DETAIL RID WITH(NOLOCK) ON RID.PAYMENT_REISSUE_DETAIL_ID = RD.PAYMENT_REISSUE_DETAIL_ID&#xD;&#xA;                  AND RID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID                                        &#xD;&#xA;      &#xD;&#xA;   WHERE&#xD;&#xA;   (@CheckStartDate=1 OR PAPIT.START_DATE &lt;= @PAYMENTDATE) AND (PAPIT.END_DATE IS NULL OR PAPIT.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;   AND (PAPIT.START_DATE &lt;&gt; PAPIT.END_DATE or PAPIT.END_DATE IS NULL)&#xD;&#xA;   AND PIT.DEDUCTION_VALUE = 'UPDT' &#xD;&#xA;   --AND PIT.VENDOR_FLAG='N'--Include for IRS Levy&#xD;&#xA;   --AND PAD.STATUS_VALUE = 'ACTV'&#xD;&#xA;   --AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;   AND (ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') = 'Y' AND ISNULL(PAYEE.REISSUE_ITEM_FLAG,'N')='Y')&#xD;&#xA;      GROUP BY PAPIT.PAYEE_ACCOUNT_ID,RD.RECIPIENT_PERSON_ID,RD.RECIPIENT_ROLLOVER_ORG_ID ,RD.RECIPIENT_ORG_ID   &#xD;&#xA;    ) AS PAPI&#xD;&#xA;    ON TSPA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;) AS TEMP&#xD;&#xA;     INNER JOIN SGT_PAYEE_ACCOUNT PA ON TEMP.PAYEE_ACCOUNT_ID  = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;     LEFT OUTER JOIN SGT_PERSON P  ON TEMP.PERSON_ID= P.PERSON_ID&#xD;&#xA;     LEFT OUTER JOIN SGT_ORGANIZATION O ON TEMP.ORG_ID = O.ORG_ID&#xD;&#xA; ORDER BY &#xD;&#xA; CASE WHEN TEMP.PERSON_ID IS NOT NULL  THEN  ISNULL(P.FIRST_NAME,'') +' '+ ISNULL(P.MIDDLE_NAME,'') +' '+ ISNULL(P.LAST_NAME,'') ELSE O.ORG_NAME END  ">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@CheckStartDate" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPaymentHistryHeaderId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select top(1) PAYMENT_HISTORY_HEADER_ID from SGT_PAYMENT_HISTORY_HEADER &#xD;&#xA;where PAYEE_ACCOUNT_ID =  @PAYEE_ACCOUNT_ID order by PAYMENT_HISTORY_HEADER_ID desc">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetTaxes" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PROVIDER_REPORT_PAYMENT &#xD;&#xA;WHERE PAYMENT_HISTORY_HEADER_ID = @PAYMENT_HISTORY_HEADER_ID AND &#xD;&#xA;SUBSYSTEM_VALUE = 'PMNT'&#xD;&#xA;">
      <parameters>
        <parameter ID="@PAYMENT_HISTORY_HEADER_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPaymentHistoryHeaderIDForACHStatusUpdateBatch" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select SPHH.PAYMENT_HISTORY_HEADER_ID from SGT_PAYMENT_HISTORY_HEADER SPHH inner join SGT_PAYMENT_HISTORY_DISTRIBUTION SPHD&#xD;&#xA;ON SPHH.PAYMENT_HISTORY_HEADER_ID=SPHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;WHERE SPHD.PAYMENT_METHOD_VALUE='ACH' AND SPHD.DISTRIBUTION_STATUS_VALUE='OUTS'">
      <parameters />
    </query>
    <query ID="GetPaymentHistoryDistributionIDFromHeaderID" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PAYMENT_HISTORY_DISTRIBUTION WHERE PAYMENT_HISTORY_HEADER_ID=@PAYMENT_HISTORY_HEADER_ID">
      <parameters>
        <parameter ID="@PAYMENT_HISTORY_HEADER_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetDistributionIDFromPayeeAccountID" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) FROM SGT_PAYMENT_HISTORY_DISTRIBUTION SPHD INNER JOIN SGT_PAYMENT_HISTORY_HEADER SPHH&#xD;&#xA;ON SPHH.PAYMENT_HISTORY_HEADER_ID=SPHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;WHERE SPHD.DISTRIBUTION_STATUS_VALUE NOT IN('CNLD','RCMD') AND SPHH.PAYEE_ACCOUNT_ID=@PAYEE_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPaymentCountForMEA" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT PHH.* FROM SGT_PAYMENT_HISTORY_DETAIL PHD&#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT&#xD;&#xA;ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION SPHD&#xD;&#xA;ON PHD.PAYMENT_HISTORY_HEADER_ID = SPHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;WHERE PHH.PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID AND PIT.ITEM_TYPE_CODE = 'ITEM2'&#xD;&#xA;AND SPHD.DISTRIBUTION_STATUS_VALUE IN ('OUTS','CLRD')">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPaymentsCount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;SELECT DISTINCT SPHH.* FROM SGT_PAYMENT_HISTORY_HEADER SPHH&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION SPHD&#xD;&#xA;ON SPHH.PAYMENT_HISTORY_HEADER_ID = SPHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;WHERE SPHH.PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID&#xD;&#xA;AND SPHD.DISTRIBUTION_STATUS_VALUE IN ('OUTS','CLRD')">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetLumpSumAmountPaidOut" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;  SUM(PHD.AMOUNT) &#xA;FROM&#xA;  SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) &#xA; INNER &#xA;  JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xA;  ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xA; INNER &#xA;  JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK)&#xA;  ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID &#xA; INNER &#xA;  JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) &#xA;  ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xA; INNER &#xA;  JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHDS WITH(NOLOCK)&#xA;  ON PHH.PAYMENT_HISTORY_HEADER_ID = PHDS.PAYMENT_HISTORY_HEADER_ID &#xA;WHERE&#xA;  PA.PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID AND&#xA;  PHDS.DISTRIBUTION_STATUS_VALUE IN ('OUTS',&#xA; 'CLRD') AND&#xA;  PIT.ACH_CHECK_GROUP_VALUE = 'GROS' &#xA;GROUP  BY  PA.PAYEE_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetOutsandClrdDistributionByPayeeAccountID" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;  SPHH.PAYMENT_DATE &#xA;FROM&#xA;  SGT_PAYMENT_HISTORY_HEADER SPHH WITH(NOLOCK)  &#xA; INNER &#xA;  JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION SPHD WITH(NOLOCK) &#xA;  ON SPHD.PAYMENT_HISTORY_HEADER_ID = SPHH.PAYMENT_HISTORY_HEADER_ID &#xA;WHERE&#xA;  SPHH.PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID AND&#xA;  SPHD.DISTRIBUTION_STATUS_VALUE IN ('OUTS',&#xA; 'CLRD')">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetFedTax&amp;StateTax" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' THEN (PHD.AMOUNT) ELSE 0 END) AS STATE_TAX_AMOUNT, &#xD;&#xA;SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX' THEN (PHD.AMOUNT) ELSE 0 END) AS FEDERAL_TAX_AMOUNT  &#xD;&#xA;FROM SGT_PAYMENT_HISTORY_DETAIL PHD&#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT&#xD;&#xA;ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;WHERE PHD.PAYMENT_HISTORY_HEADER_ID = @PAYMENT_HISTORY_HEADER_ID">
      <parameters>
        <parameter ID="@PAYMENT_HISTORY_HEADER_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateBeginingBalance" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="INSERT INTO SGT_MONTHLY_BENIFIT_SUMMARY&#xD;&#xA;           (PAYMENT_SCHEDULE_ID&#xD;&#xA;           ,MPIPP_AMOUNT&#xD;&#xA;           ,L52_AMOUNT&#xD;&#xA;           ,L161_AMOUNT&#xD;&#xA;           ,L600_AMOUNT&#xD;&#xA;           ,L666_AMOUNT&#xD;&#xA;           ,L700_AMOUNT&#xD;&#xA;           ,CREATED_BY&#xD;&#xA;           ,CREATED_DATE&#xD;&#xA;           ,MODIFIED_BY&#xD;&#xA;           ,MODIFIED_DATE&#xD;&#xA;           ,UPDATE_SEQ)&#xD;&#xA;&#xD;&#xA;    (SELECT PAYMENT_SCHEDULE_ID,&#xD;&#xA;    [2] AS MPIPP_Amount,&#xD;&#xA;    [7] AS L52_Amount,&#xD;&#xA;    [8] AS L161_Amount,&#xD;&#xA;    [3] AS L600_Amount,&#xD;&#xA;    [4] AS L666_Amount,&#xD;&#xA;    [6] AS L700_Amount,&#xD;&#xA;    'OPUS Batch' as  CREATED_BY ,getdate() as CREATED_DATE,'OPUS Batch' as  MODIFIED_BY ,getdate() as MODIFIED_DATE,0 UPDATE_SEQ&#xD;&#xA; FROM&#xD;&#xA; (&#xD;&#xA; SELECT  @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID, SUM(SPHD.NET_AMOUNT) AS AMOUNT, SPHH.PLAN_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION SPHD&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER SPHH ON SPHH.PAYMENT_HISTORY_HEADER_ID = SPHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; WHERE &#xD;&#xA; ISNULL(SPHH.PAYMENT_SCHEDULE_ID,0) = @PAYMENTSCHEDULEID&#xD;&#xA; GROUP BY SPHH.PLAN_ID&#xD;&#xA; ) P PIVOT (SUM(AMOUNT) FOR PLAN_ID IN (&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;6&quot;,&quot;7&quot;,&quot;8&quot;)) AS PVT)">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetExistingOverPaymentInfo" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT SPARP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT SPARP&#xD;&#xA;WHERE SPARP.PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID AND &#xD;&#xA;SPARP.RETRO_PAYMENT_TYPE_VALUE = 'OVER' AND &#xD;&#xA;NOT EXISTS (SELECT * FROM SGT_REPAYMENT_SCHEDULE SRS WHERE SRS.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA; = SPARP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID)&#xD;&#xA;UNION &#xD;&#xA;SELECT DISTINCT SPARP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT SPARP&#xD;&#xA;INNER JOIN SGT_REPAYMENT_SCHEDULE SRS &#xD;&#xA;ON SPARP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID = SRS.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;WHERE SPARP.PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID AND &#xD;&#xA;SPARP.RETRO_PAYMENT_TYPE_VALUE = 'OVER' AND SRS.REIMBURSEMENT_STATUS_VALUE IN ('INPR','PEND')">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPaymentHistoryDetail" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT *,(AMOUNT*ITEM_TYPE_DIRECTION) AS SIGNED_AMOUNT FROM SGT_PAYMENT_HISTORY_DETAIL PHD &#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;WHERE PAYMENT_HISTORY_HEADER_ID=@PAYMENT_HISTORY_HEADER_ID">
      <parameters>
        <parameter ID="@PAYMENT_HISTORY_HEADER_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetBenefitAmtForCorr" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select PBXR.BENEFIT_OPTION_VALUE,ISNULL(PARTICIPANT.FIRST_NAME,'') as FIRST_NAME,ISNULL(PARTICIPANT.LAST_NAME,'') as LAST_NAME,&#xD;&#xA;ISNULL(PARTICIPANT.MIDDLE_NAME,'') as MIDDLE_NAME&#xD;&#xA;,isnull(BCO.BENEFIT_AMOUNT,0.0) as BENEFIT_AMOUNT,Pa.*,PAYMENT.GROSS_AMOUNT,PARTICIPANT.DATE_OF_BIRTH&#xD;&#xA;from TEMP_TABLE_FOR_PAYMENT PA&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_DETAIL BCDTL WITH(NOLOCK) ON BCDTL.BENEFIT_CALCULATION_DETAIL_ID = PA.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_OPTIONS BCO WITH(NOLOCK) ON BCO.BENEFIT_CALCULATION_DETAIL_ID = PA.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA;INNER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA;INNER  JOIN &#xD;&#xA;(&#xD;&#xA;            SELECT &#xD;&#xA;                   PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;                   SUM(PHD.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS GROSS_AMOUNT&#xD;&#xA;              &#xD;&#xA;               FROM SGT_PAYMENT_HISTORY_DETAIL  PHD&#xD;&#xA;                   INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH  &#xD;&#xA;                              ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;             INNER JOIN TEMP_TABLE_FOR_PAYMENT PA&#xD;&#xA;                  ON PA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;      &#xD;&#xA;                INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;                              ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;                   INNER JOIN SGT_PAYMENT_SCHEDULE SCH &#xD;&#xA;                              ON SCH.PAYMENT_SCHEDULE_ID = PHH.PAYMENT_SCHEDULE_ID&#xD;&#xA; &#xD;&#xA;                WHERE &#xD;&#xA;                PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID AND &#xD;&#xA;                PIT.ACH_CHECK_GROUP_VALUE = 'GROS' &#xD;&#xA;                GROUP BY  PHH.PAYMENT_HISTORY_HEADER_ID,PHH.PERSON_ID,PHH.ORG_ID,PHH.PAYEE_ACCOUNT_ID,SCH.CHECK_MESSAGE&#xD;&#xA; &#xD;&#xA;      ) AS PAYMENT ON PAYMENT.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA ON PA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON PARTICIPANT ON PARTICIPANT.PERSON_ID=PBA.PERSON_ID&#xD;&#xA;where  PBXR.BENEFIT_OPTION_VALUE&lt;&gt;'LUMP'">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPayoutandUnallocableAmt4YeadEndIapAlloc" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;DECLARE @START_DATE DATETIME = CAST(CAST(@COMPUTATIONYEAR AS VARCHAR(4))+'0101' AS DATETIME)&#xD;&#xA;DECLARE @END_DATE DATETIME = CAST(CAST(@COMPUTATIONYEAR AS VARCHAR(4))+'1231' AS DATETIME)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT PA.PERSON_ACCOUNT_ID,ISNULL(SPBA.FUNDS_TYPE_VALUE,'IAP')FUND_TYPE ,&#xD;&#xA;SUM(RESULT.GROSS_AMOUNT) PAYOUTS,0.00 AS UNALLOCABLE_BALANCE &#xD;&#xA;FROM (&#xD;&#xA;-- IAP PAYROLLS&#xD;&#xA;SELECT SPA.PAYEE_ACCOUNT_ID,'IAP Payroll' AS RESULT_TYPE, CONVERT(VARCHAR(3),PHH.PAYMENT_DATE,100) AS PAY_MONTH, MONTH(PHH.PAYMENT_DATE) PM,&#xD;&#xA;     SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;THEN ISNULL(PHDE.AMOUNT,0.0) WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM41','ITEM42','ITEM43','ITEM44')) &#xD;&#xA;THEN ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION WHEN ITEM_TYPE_CODE = 'ITEM54' THEN ISNULL(PHDE.AMOUNT,0.0)  ELSE 0 END)  AS GROSS_AMOUNT,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' THEN ( PHDE.AMOUNT) ELSE 0 END) AS STATE_TAX_AMOUNT,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX'  THEN ( PHDE.AMOUNT) ELSE 0 END) AS FED_TAX_AMOUNT,&#xD;&#xA;        SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;THEN ISNULL(PHDE.AMOUNT,0.0) WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM41','ITEM42','ITEM43','ITEM44')) &#xD;&#xA;THEN ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION WHEN ITEM_TYPE_CODE = 'ITEM54' THEN ISNULL(PHDE.AMOUNT,0.0)  ELSE 0 END) -&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' THEN ( PHDE.AMOUNT) ELSE 0 END) -&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX'  THEN ( PHDE.AMOUNT) ELSE 0 END) AS NET_AMOUNT&#xD;&#xA;                          FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT SPA ON SPA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PERSON SP ON SP.PERSON_ID = SPA.PERSON_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE WITH(NOLOCK) ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PHDE.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;WHERE CONVERT(DATE,PHH.PAYMENT_DATE) BETWEEN @START_DATE AND @END_DATE&#xD;&#xA;AND (--(@PLAN_IDENTIFIER = 'PENS' AND PHH.PLAN_ID &lt;&gt; 1) --OR &#xD;&#xA;(PHH.PLAN_ID = 1)&#xD;&#xA;)&#xD;&#xA;GROUP BY CONVERT(VARCHAR(3),PHH.PAYMENT_DATE,100), MONTH(PHH.PAYMENT_DATE),SPA.PAYEE_ACCOUNT_ID&#xD;&#xA;--ADDING IAP PAYBACK AMOUNT IN PAYOUTS&#xD;&#xA;UNION&#xD;&#xA;SELECT SPA.PAYEE_ACCOUNT_ID,'IAP Payback' AS RESULT_TYPE, CONVERT(VARCHAR(3),PAYMENT_POSTED_DATE,100) AS PAY_MONTH, MONTH(PAYMENT_POSTED_DATE) PM, &#xD;&#xA; - SUM(ISNULL(check_amount,0.0)) AS GROSS_AMOUNT, 0 AS STATE_TAX_AMOUNT, 0 AS  FED_TAX_AMOUNT, - SUM(ISNULL(check_amount,0.0)) AS NET_AMOUNT&#xD;&#xA;FROM SGT_IAP_HARDSHIP_PAYBACK PHH WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT SPA ON PHH.PAYEE_ACCOUNT_ID = SPA.PAYEE_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON SP ON SP.PERSON_ID = SPA.PERSON_ID&#xD;&#xA;WHERE CONVERT(DATE,PAYMENT_POSTED_DATE) BETWEEN @START_DATE AND @END_DATE&#xD;&#xA;GROUP BY CONVERT(VARCHAR(3),PAYMENT_POSTED_DATE,100), MONTH(PAYMENT_POSTED_DATE),SPA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;UNION &#xD;&#xA;&#xD;&#xA;-- PENSION RECEIVABLE&#xD;&#xA;SELECT SPA.PAYEE_ACCOUNT_ID,'Pension Receivable' AS RESULT_TYPE, CONVERT(VARCHAR(3),PHH.PAYMENT_DATE,100) AS PAY_MONTH, MONTH(PHH.PAYMENT_DATE) PM, &#xD;&#xA; - SUM(CASE WHEN ITEM_TYPE_CODE = 'ITEM53' THEN ISNULL(PHDE.AMOUNT,0.0)  ELSE 0 END)  AS GROSS_AMOUNT,&#xD;&#xA;0 AS STATE_TAX_AMOUNT, 0 AS  FED_TAX_AMOUNT,&#xD;&#xA;- SUM(CASE WHEN ITEM_TYPE_CODE = 'ITEM53' THEN ISNULL(PHDE.AMOUNT,0.0)  ELSE 0 END)  AS NET_AMOUNT&#xD;&#xA;          FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT SPA ON SPA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PERSON SP ON SP.PERSON_ID = SPA.PERSON_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE WITH(NOLOCK) ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PHDE.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;WHERE CONVERT(DATE,PHH.PAYMENT_DATE) BETWEEN @START_DATE AND @END_DATE&#xD;&#xA;AND ((PHH.PLAN_ID = 1)) &#xD;&#xA; GROUP BY CONVERT(VARCHAR(3),PHH.PAYMENT_DATE,100), MONTH(PHH.PAYMENT_DATE),SPA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UNION &#xD;&#xA;&#xD;&#xA;--CHECK RECEIVED&#xD;&#xA;SELECT SPA.PAYEE_ACCOUNT_ID,'Check Received' AS RESULT_TYPE, CONVERT(VARCHAR(3),SRD.POSTED_DATE,100) AS PAY_MONTH, MONTH(SRD.POSTED_DATE) PM,&#xD;&#xA;- SUM(SRD.GROSS_AMOUNT)  AS GROSS_AMOUNT,&#xD;&#xA; - SUM(ISNULL(SRD.STATE_TAX,0.0)) AS STATE_TAX_AMOUNT, - SUM(ISNULL(SRD.FED_TAX,0.0)) AS  FED_TAX_AMOUNT,&#xD;&#xA;- SUM(SRD.AMOUNT_PAID) AS NET_AMOUNT&#xD;&#xA;FROM SGT_REIMBURSEMENT_DETAILS SRD INNER JOIN SGT_REPAYMENT_SCHEDULE SRS&#xD;&#xA;ON SRD.REPAYMENT_SCHEDULE_ID = SRS.REPAYMENT_SCHEDULE_ID &#xD;&#xA; INNER  JOIN  SGT_PAYEE_ACCOUNT SPA ON SPA.PAYEE_ACCOUNT_ID = SRS.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PLAN_BENEFIT_XR X ON X.PLAN_BENEFIT_ID = SPA.PLAN_BENEFIT_ID WHERE CONVERT(DATE,SRD.POSTED_DATE) BETWEEN @START_DATE AND @END_DATE &#xD;&#xA; AND SRD.PAYMENT_OPTION_VALUE = 'CHEK' AND ((X.PLAN_ID = 1))-- AND SPA.PLAN_BENEFIT_ID = 9)) &#xD;&#xA; &#xD;&#xA; GROUP BY CONVERT(VARCHAR(3),SRD.POSTED_DATE,100), MONTH(SRD.POSTED_DATE),SPA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA; UNION &#xD;&#xA;&#xD;&#xA;--REISSUED AMOUNT&#xD;&#xA;SELECT SPA.PAYEE_ACCOUNT_ID,'Reissued Amount' AS RESULT_TYPE, CONVERT(VARCHAR(3),PHH.PAYMENT_DATE,100) AS PAY_MONTH, MONTH(PHH.PAYMENT_DATE) PM,&#xD;&#xA;     - SUM(CASE WHEN ITEM_TYPE_CODE = 'ITEM54' THEN ISNULL(PHDE.AMOUNT,0.0)  ELSE 0 END) AS GROSS_AMOUNT,&#xD;&#xA;     0 AS STATE_TAX_AMOUNT, 0 AS  FED_TAX_AMOUNT, - SUM(CASE WHEN ITEM_TYPE_CODE = 'ITEM54' THEN ISNULL(PHDE.AMOUNT,0.0)  ELSE 0 END) AS NET_AMOUNT&#xD;&#xA;      FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT SPA ON SPA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE WITH(NOLOCK) ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PHDE.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;(SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH&#xD;&#xA;WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND CONVERT(DATE,SH.TRANSACTION_DATE) BETWEEN @START_DATE AND @END_DATE ORDER BY SH.TRANSACTION_DATE DESC)&#xD;&#xA;   --   INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION ON OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID = PHD.OLD_DISTRIBUTION_ID&#xD;&#xA;   --INNER JOIN SGT_PAYMENT_HISTORY_HEADER OLD_HEADER ON OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;   --AND YEAR(OLD_HEADER.PAYMENT_DATE) = YEAR(@START_DATE)&#xD;&#xA;&#xD;&#xA;WHERE PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD') AND&#xD;&#xA;CONVERT(DATE,PHH.PAYMENT_DATE) BETWEEN @START_DATE AND @END_DATE AND&#xD;&#xA;((PHH.PLAN_ID = 1))-- AND SPA.PLAN_BENEFIT_ID = 9))   &#xD;&#xA; GROUP BY CONVERT(VARCHAR(3),PHH.PAYMENT_DATE,100) , MONTH(PHH.PAYMENT_DATE),SPA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UNION &#xD;&#xA; &#xD;&#xA; &#xD;&#xA;--CANCELLED&#xD;&#xA;   SELECT SPA.PAYEE_ACCOUNT_ID,'Cancelled' AS RESULT_TYPE, CONVERT(VARCHAR(3),PHH.PAYMENT_DATE,100) AS PAY_MONTH, MONTH(PHH.PAYMENT_DATE) PM,&#xD;&#xA;    - SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;THEN ISNULL(PHDE.AMOUNT,0.0) WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) &#xD;&#xA;THEN ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION ELSE 0 END)  AS GROSS_AMOUNT , &#xD;&#xA;      -  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' THEN ( PHDE.AMOUNT) ELSE 0 END) AS STATE_TAX_AMOUNT,&#xD;&#xA;      -  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX'  THEN ( PHDE.AMOUNT) ELSE 0 END) AS FED_TAX_AMOUNT,&#xD;&#xA;     -   ((SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND (((PAYMENT_1099R_FLAG = 'Y' OR ITEM_TYPE_CODE = 'ITEM54') AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;THEN ISNULL(PHDE.AMOUNT,0.0) WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) &#xD;&#xA;THEN ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION ELSE 0 END) -&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' THEN ( PHDE.AMOUNT) ELSE 0 END) -&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX'  THEN ( PHDE.AMOUNT) ELSE 0 END))) AS NET_AMOUNT&#xD;&#xA;  FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT SPA ON SPA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE WITH(NOLOCK) ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PHDE.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;(SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH&#xD;&#xA;WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND CONVERT(DATE,SH.TRANSACTION_DATE) &lt;= @END_DATE ORDER BY SH.TRANSACTION_DATE DESC)&#xD;&#xA;WHERE PHDSH.DISTRIBUTION_STATUS_VALUE IN ('CNLD')&#xD;&#xA;AND  ((PHH.PLAN_ID = 1))-- AND SPA.PLAN_BENEFIT_ID = 9))&#xD;&#xA;AND CONVERT(DATE,PHH.PAYMENT_DATE) BETWEEN @START_DATE AND @END_DATE  &#xD;&#xA; GROUP BY CONVERT(VARCHAR(3),PHH.PAYMENT_DATE,100), MONTH(PHH.PAYMENT_DATE),SPA.PAYEE_ACCOUNT_ID&#xD;&#xA; &#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;--CANCELLED&#xD;&#xA;   SELECT SPA.PAYEE_ACCOUNT_ID,'Cancelled' AS RESULT_TYPE, CONVERT(VARCHAR(3),PHH.PAYMENT_DATE,100) AS PAY_MONTH, MONTH(PHH.PAYMENT_DATE) PM,&#xD;&#xA;     SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;THEN ISNULL(PHDE.AMOUNT,0.0) WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) &#xD;&#xA;THEN ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION ELSE 0 END)  AS GROSS_AMOUNT , &#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' THEN ( PHDE.AMOUNT) ELSE 0 END) AS STATE_TAX_AMOUNT,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX'  THEN ( PHDE.AMOUNT) ELSE 0 END) AS FED_TAX_AMOUNT,&#xD;&#xA;       ((SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND (((PAYMENT_1099R_FLAG = 'Y' OR ITEM_TYPE_CODE = 'ITEM54') AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;THEN ISNULL(PHDE.AMOUNT,0.0) WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) &#xD;&#xA;THEN ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION ELSE 0 END) -&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' THEN ( PHDE.AMOUNT) ELSE 0 END) -&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX'  THEN ( PHDE.AMOUNT) ELSE 0 END))) AS NET_AMOUNT&#xD;&#xA;                          FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT SPA ON SPA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE WITH(NOLOCK) ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PHDE.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;(SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH&#xD;&#xA;WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND CONVERT(DATE,SH.TRANSACTION_DATE) BETWEEN @START_DATE AND @END_DATE ORDER BY SH.TRANSACTION_DATE DESC)&#xD;&#xA;WHERE PHDSH.DISTRIBUTION_STATUS_VALUE IN ('CNLD') &#xD;&#xA;AND  ((PHH.PLAN_ID = 1))-- AND SPA.PLAN_BENEFIT_ID = 9))&#xD;&#xA;AND CONVERT(DATE,PHH.PAYMENT_DATE) &lt; @START_DATE&#xD;&#xA; GROUP BY CONVERT(VARCHAR(3),PHH.PAYMENT_DATE,100), MONTH(PHH.PAYMENT_DATE),SPA.PAYEE_ACCOUNT_ID &#xD;&#xA;&#xD;&#xA;UNION &#xD;&#xA;--RECLAIMED&#xD;&#xA;    SELECT SPA.PAYEE_ACCOUNT_ID,'Reclaimed' AS RESULT_TYPE, CONVERT(VARCHAR(3),PHH.PAYMENT_DATE,100) AS PAY_MONTH, MONTH(PHH.PAYMENT_DATE) PM,&#xD;&#xA;    - SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;THEN ISNULL(PHDE.AMOUNT,0.0) WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) &#xD;&#xA;THEN ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION ELSE 0 END)  AS GROSS_AMOUNT , &#xD;&#xA;       - SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' THEN ( PHDE.AMOUNT) ELSE 0 END) AS STATE_TAX_AMOUNT,&#xD;&#xA;          -  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX'  THEN ( PHDE.AMOUNT) ELSE 0 END) AS FED_TAX_AMOUNT,&#xD;&#xA;           -  ((SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;THEN ISNULL(PHDE.AMOUNT,0.0) WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) &#xD;&#xA;THEN ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION ELSE 0 END) -&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' THEN ( PHDE.AMOUNT) ELSE 0 END) -&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX'  THEN ( PHDE.AMOUNT) ELSE 0 END))) AS NET_AMOUNT&#xD;&#xA;                          FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT SPA ON SPA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE WITH(NOLOCK) ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PHDE.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;(SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH&#xD;&#xA;WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND CONVERT(DATE,SH.TRANSACTION_DATE) BETWEEN @START_DATE AND @END_DATE ORDER BY SH.TRANSACTION_DATE DESC)&#xD;&#xA;WHERE PHDSH.DISTRIBUTION_STATUS_VALUE IN ('RCMD') &#xD;&#xA;AND  ((PHH.PLAN_ID = 1))-- AND SPA.PLAN_BENEFIT_ID = 9))&#xD;&#xA;AND CONVERT(DATE,PHH.PAYMENT_DATE) BETWEEN @START_DATE AND @END_DATE  &#xD;&#xA;GROUP BY CONVERT(VARCHAR(3),PHH.PAYMENT_DATE,100), MONTH(PHH.PAYMENT_DATE),SPA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;UNION &#xD;&#xA;&#xD;&#xA;--CANCELLED AND REISSUED&#xD;&#xA;  SELECT SPA.PAYEE_ACCOUNT_ID,'Cancelled and Reissued' AS RESULT_TYPE, CONVERT(VARCHAR(3),PHH.PAYMENT_DATE,100) AS PAY_MONTH, MONTH(PHH.PAYMENT_DATE) PM,&#xD;&#xA;    - SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;THEN ISNULL(OLD_DETAIL.AMOUNT,0.0) WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) &#xD;&#xA;THEN ISNULL(OLD_DETAIL.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;ELSE 0 END)  AS GROSS_AMOUNT , &#xD;&#xA;       - SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' THEN ( OLD_DETAIL.AMOUNT) ELSE 0 END) AS STATE_TAX_AMOUNT,&#xD;&#xA;          -  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX'  THEN ( OLD_DETAIL.AMOUNT) ELSE 0 END) AS FED_TAX_AMOUNT,&#xD;&#xA;          - ((SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;THEN ISNULL(OLD_DETAIL.AMOUNT,0.0) WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) &#xD;&#xA;THEN ISNULL(OLD_DETAIL.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION ELSE 0 END) -&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' THEN (OLD_DETAIL.AMOUNT) ELSE 0 END) -&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX'  THEN ( OLD_DETAIL.AMOUNT) ELSE 0 END))) AS NET_AMOUNT&#xD;&#xA;                          FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT SPA ON SPA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;      --INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE WITH(NOLOCK) ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      &#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION ON OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID = PHD.OLD_DISTRIBUTION_ID&#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER OLD_HEADER ON OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DETAIL OLD_DETAIL ON OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DETAIL.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;         INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID = OLD_DETAIL.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;&#xD;&#xA;   --AND YEAR(OLD_HEADER.PAYMENT_DATE) = YEAR(@START_DATE)&#xD;&#xA;WHERE OLD_DISTRIBUTION.DISTRIBUTION_STATUS_VALUE IN ('CDRE') &#xD;&#xA;AND  ((PHH.PLAN_ID = 1)) --AND SPA.PLAN_BENEFIT_ID = 9))  &#xD;&#xA;AND CONVERT(DATE,PHH.PAYMENT_DATE) BETWEEN @START_DATE AND @END_DATE  &#xD;&#xA; GROUP BY CONVERT(VARCHAR(3),PHH.PAYMENT_DATE,100), MONTH(PHH.PAYMENT_DATE),SPA.PAYEE_ACCOUNT_ID&#xD;&#xA;) AS RESULT &#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT SPA ON SPA.PAYEE_ACCOUNT_ID = RESULT.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT SPBA ON SPBA.PAYEE_BENEFIT_ACCOUNT_ID = SPA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT PA ON PA.PERSON_ACCOUNT_ID = SPBA.PERSON_ACCOUNT_ID AND PA.PLAN_ID = 1&#xD;&#xA;GROUP BY PA.PERSON_ACCOUNT_ID,SPBA.FUNDS_TYPE_VALUE">
      <parameters>
        <parameter ID="@COMPUTATIONYEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetReclaimedTaxes" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PROVIDER_REPORT_PAYMENT &#xD;&#xA;WHERE PAYMENT_HISTORY_HEADER_ID = @PAYMENT_HISTORY_HEADER_ID AND &#xD;&#xA;SUBSYSTEM_VALUE = 'RCMD'">
      <parameters>
        <parameter ID="@PAYMENT_HISTORY_HEADER_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetTaxesforReclamation" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;  PHD.PAYMENT_HISTORY_DETAIL_ID AS SUBSYSTEM_REF_ID&#xD;&#xA;  , PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  , PHH.PERSON_ID&#xD;&#xA;  , PHD.VENDOR_ORG_ID AS PROVIDER_ORG_ID&#xD;&#xA;  , PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;  , PIT.ITEM_TYPE_CODE&#xD;&#xA;  , SUM(PHD.AMOUNT * PIT.ITEM_TYPE_DIRECTION * -1) AS AMOUNT&#xD;&#xA;  , PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;FROM SGT_PAYMENT_HISTORY_DETAIL  PHD WITH(NOLOCK)&#xD;&#xA; &#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)  &#xD;&#xA; ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA; &#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK)&#xD;&#xA; ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID  &#xD;&#xA; &#xD;&#xA;WHERE   &#xD;&#xA; PHH.PAYMENT_HISTORY_HEADER_ID = @PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA; AND PHD.VENDOR_ORG_ID IS NOT NULL&#xD;&#xA;    AND PIT.PAYEE_DETAIL_GROUP_VALUE IN  ('FEDX','STTX')&#xD;&#xA;&#xD;&#xA;GROUP BY  &#xD;&#xA; PHD.PAYMENT_HISTORY_DETAIL_ID,&#xD;&#xA; PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA; PHH.PERSON_ID,&#xD;&#xA; PHD.VENDOR_ORG_ID, &#xD;&#xA; PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA; PIT.ITEM_TYPE_CODE,&#xD;&#xA; PIT.PAYMENT_ITEM_TYPE_ID">
      <parameters>
        <parameter ID="@PAYMENT_HISTORY_HEADER_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetNewParticipant" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT SP.*,&#xD;&#xA;CASE &#xD;&#xA;WHEN &#xD;&#xA;(SELECT COUNT(*) FROM SGT_PERSON_ADDRESS PA WHERE PA.PERSON_ID = SP.PERSON_ID &#xD;&#xA;AND (PA.END_DATE IS NULL OR PA.END_DATE &lt; GETDATE()) &#xD;&#xA;and (PA.BAD_ADDRESS_FLAG IS NULL OR PA.BAD_ADDRESS_FLAG='N')&#xD;&#xA;) &gt; 0 THEN 'Y' ELSE 'N' END AS IS_VALID_ADDRESS_PRESENT,&#xD;&#xA;CASE WHEN&#xD;&#xA;(SELECT COUNT(*) FROM SGT_PERSON_ACCOUNT_ELIGIBILITY PAE&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT PA1 ON PA1.PERSON_ACCOUNT_ID = PAE.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE PA1.PLAN_ID=2 &#xD;&#xA;AND PAE.VESTED_DATE IS NOT NULL &#xD;&#xA;) &gt; 0 THEN 'Y' ELSE 'N' END AS IS_VESTED_IN_MPI&#xD;&#xA;FROM SGT_PERSON SP WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT SPA WITH(NOLOCK) ON SP.PERSON_ID=SPA.PERSON_ID &#xD;&#xA;INNER JOIN SGT_PLAN SPL WITH(NOLOCK) ON SPL.PLAN_ID=SPA.PLAN_ID &#xD;&#xA;WHERE (SPL.PLAN_ID IN (1,2))&#xD;&#xA;AND (SP.SSN IS NOT NULL OR SP.SSN &lt;&gt; '')&#xD;&#xA;AND SPA.BENEFECIARY_PERSON_ID IS NULL &#xD;&#xA;AND SPA.BENEFECIARY_OF_PERSON_ID IS NULL &#xD;&#xA;AND SP.PERSON_ID IS NOT NULL&#xD;&#xA;AND SPA.STATUS_VALUE NOT IN ('RETR','DCSD')&#xD;&#xA;AND (SP.NEW_PARTICIPANT_LETTER_SEND_FLAG IS NULL OR SP.NEW_PARTICIPANT_LETTER_SEND_FLAG = 'N')&#xD;&#xA;">
      <parameters />
    </query>
    <query ID="GetNewParticipantPersonAccounts" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT pae.VESTED_DATE AS idtVestedDate,SPL.PLAN_CODE AS istrPlanCode,SPL.MERGER_DATE AS idtMergerDate,&#xD;&#xA;SPA.PERSON_ACCOUNT_ID,SPA.PERSON_ID,SPA.PLAN_ID,SPA.START_DATE,SPA.STATUS_ID,SPA.STATUS_VALUE,SPA.CREATED_BY,SPA.CREATED_DATE,SPA.MODIFIED_BY,SPA.MODIFIED_DATE,SPA.UPDATE_SEQ,SPA.SPECIAL_ACCOUNT,SPA.UVHP,SPA.EE_CONTR,&#xD;&#xA;SPA.BENEFECIARY_PERSON_ID,SPA.BENEFECIARY_OF_PERSON_ID,&#xD;&#xA;CASE WHEN SPA.STATUS_VALUE='DCSD' THEN SPA.END_DATE  &#xD;&#xA;     WHEN SPA.STATUS_VALUE IN ('ACTV','INAC') THEN SPA.END_DATE&#xD;&#xA;     WHEN SPA.STATUS_VALUE IN ('RETR') THEN&#xD;&#xA;     ((SELECT TOP(1) BAA.RETIREMENT_DATE FROM SGT_BENEFIT_APPLICATION BAA &#xD;&#xA;       WHERE BAA.PERSON_ID = SP.PERSON_ID AND BAA.APPLICATION_STATUS_VALUE='APPR'AND BAA.BENEFIT_TYPE_VALUE IN ('RTMT','DSBL') ORDER BY BAA.RETIREMENT_DATE DESC)) &#xD;&#xA;     ELSE NULL  &#xD;&#xA;     END AS END_DATE&#xD;&#xA;FROM SGT_PERSON_ACCOUNT SPA WITH(NOLOCK) &#xD;&#xA;INNER JOIN SGT_PLAN SPL WITH(NOLOCK) ON SPL.PLAN_ID=SPA.PLAN_ID &#xD;&#xA;INNER JOIN SGT_PERSON SP WITH(NOLOCK) ON SP.PERSON_ID = SPA.PERSON_ID&#xD;&#xA;LEFT JOIN SGT_PERSON_ACCOUNT_ELIGIBILITY PAE WITH(NOLOCK) ON PAE.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID&#xD;&#xA;LEFT JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) on BA.PERSON_ID = SP.PERSON_ID &#xD;&#xA;WHERE (SPL.PLAN_ID IN (1,2))&#xD;&#xA;AND (SP.SSN IS NOT NULL OR SP.SSN &lt;&gt; '')&#xD;&#xA;AND SPA.BENEFECIARY_PERSON_ID IS NULL &#xD;&#xA;AND SPA.BENEFECIARY_OF_PERSON_ID IS NULL &#xD;&#xA;AND SP.PERSON_ID IS NOT NULL&#xD;&#xA;AND (SP.NEW_PARTICIPANT_LETTER_SEND_FLAG IS NULL OR SP.NEW_PARTICIPANT_LETTER_SEND_FLAG = 'N')&#xD;&#xA;">
      <parameters />
    </query>
    <query ID="GetGrossAmountPaidToPart" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;SUM(CASE WHEN (ITEM_TYPE_DIRECTION = 1 OR ALLOW_ROLLOVER_CODE_VALUE = 'RRED') AND REISSUE_ITEMS_FLAG = 'N' &#xD;&#xA;THEN (PHD.AMOUNT * PIT.ITEM_TYPE_DIRECTION) ELSE 0 END)   AS GROSS_AMOUNT,      &#xD;&#xA;SUM(CASE WHEN TAXABLE_ITEM_FLAG = 'Y'AND (ITEM_TYPE_DIRECTION = 1 OR ALLOW_ROLLOVER_CODE_VALUE = 'RRED') AND ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;THEN (PHD.AMOUNT * PIT.ITEM_TYPE_DIRECTION) ELSE 0 END)  AS TAXABLE_AMOUNT,&#xD;&#xA;SUM(CASE WHEN TAXABLE_ITEM_FLAG &lt;&gt; 'Y' AND (ITEM_TYPE_DIRECTION = 1 OR ALLOW_ROLLOVER_CODE_VALUE = 'RRED') AND ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'  &#xD;&#xA;THEN (AMOUNT * ITEM_TYPE_DIRECTION) ELSE 0 END) AS NONTAXABLE_AMOUNT,&#xD;&#xA;SUM(CASE WHEN TAXABLE_ITEM_FLAG &lt;&gt; 'Y' AND (ITEM_TYPE_DIRECTION = 1 OR ALLOW_ROLLOVER_CODE_VALUE = 'RRED') AND ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET' &#xD;&#xA;THEN (AMOUNT * ITEM_TYPE_DIRECTION) ELSE 0 END) AS NONTAXABLE_AMOUNT_FOR_REMAINING,             &#xD;&#xA;SUM(ITEM_TYPE_DIRECTION * AMOUNT ) AS NET_AMOUNT&#xD;&#xA;FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION SPHD WITH(NOLOCK) ON SPHD.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PAYMENT_SCHEDULE SPS WITH(NOLOCK) ON SPS.PAYMENT_SCHEDULE_ID = PHH.PAYMENT_SCHEDULE_ID&#xD;&#xA;WHERE PHH.PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID &#xD;&#xA;AND SPHD.DISTRIBUTION_STATUS_VALUE not in( 'CNLD' ,'CDRE','RCMD')">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetActiveDistributionRecord" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;select COUNT(Distinct SPHH.PAYMENT_HISTORY_HEADER_ID) from  SGT_PAYMENT_HISTORY_DISTRIBUTION SPHD INNER JOIN SGT_PAYMENT_HISTORY_HEADER SPHH&#xD;&#xA;ON SPHH.PAYMENT_HISTORY_HEADER_ID=SPHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;inner join  SGT_PAYEE_ACCOUNT spa  on SPHH.PAYEE_ACCOUNT_ID=spa.PAYEE_ACCOUNT_ID&#xD;&#xA;inner join SGT_BENEFIT_CALCULATION_DETAIL CD on  cd.BENEFIT_CALCULATION_DETAIL_ID=spa.BENEFIT_CALCULATION_DETAIL_ID &#xD;&#xA;inner join SGT_BENEFIT_CALCULATION_HEADER sbch on sbch.BENEFIT_CALCULATION_HEADER_ID=CD.BENEFIT_CALCULATION_HEADER_ID&#xD;&#xA;inner join SGT_PAYMENT_HISTORY_DETAIL SPED on SPED.PAYMENT_HISTORY_HEADER_ID=SPHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;inner join SGT_PAYMENT_ITEM_TYPE PIT on PIT.PAYMENT_ITEM_TYPE_ID = SPED.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;where SPHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','RCMD') AND sbch.BENEFIT_CALCULATION_HEADER_ID = @benefit_calculation_header_id&#xD;&#xA;HAVING SUM(ISNULL(SPED.AMOUNT,0) * PIT.ITEM_TYPE_DIRECTION) &gt; 0&#xD;&#xA;">
      <parameters>
        <parameter ID="@benefit_calculation_header_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetQDROActiveDistributionRecord" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select COUNT(Distinct SPHH.PAYMENT_HISTORY_HEADER_ID) from  SGT_PAYMENT_HISTORY_DISTRIBUTION SPHD INNER JOIN SGT_PAYMENT_HISTORY_HEADER SPHH&#xD;&#xA;ON SPHH.PAYMENT_HISTORY_HEADER_ID=SPHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;inner join  SGT_PAYEE_ACCOUNT spa  on SPHH.PAYEE_ACCOUNT_ID=spa.PAYEE_ACCOUNT_ID&#xD;&#xA;inner join SGT_QDRO_CALCULATION_DETAIL CD on  cd.QDRO_CALCULATION_DETAIL_ID=spa.DRO_CALCULATION_DETAIL_ID &#xD;&#xA;inner join SGT_QDRO_CALCULATION_HEADER sqch on sqch.QDRO_CALCULATION_HEADER_ID=CD.QDRO_CALCULATION_HEADER_ID&#xD;&#xA;inner join SGT_PAYMENT_HISTORY_DETAIL SPED on SPED.PAYMENT_HISTORY_HEADER_ID=SPHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;inner join SGT_PAYMENT_ITEM_TYPE PIT on PIT.PAYMENT_ITEM_TYPE_ID = SPED.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;where SPHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','RCMD') AND sqch.QDRO_CALCULATION_HEADER_ID = @QDRO_CALCULATION_HEADER_ID&#xD;&#xA;HAVING SUM(ISNULL(SPED.AMOUNT,0) * PIT.ITEM_TYPE_DIRECTION) &gt; 0">
      <parameters>
        <parameter ID="@QDRO_CALCULATION_HEADER_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetActiveDistributionRecordFromPayeeAccnt" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql=" select COUNT(Distinct SPHH.PAYMENT_HISTORY_HEADER_ID) from  &#xD;&#xA;SGT_PAYMENT_HISTORY_DISTRIBUTION SPHD &#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_HEADER SPHH ON SPHH.PAYMENT_HISTORY_HEADER_ID=SPHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;inner join  SGT_PAYEE_ACCOUNT spa  on SPHH.PAYEE_ACCOUNT_ID=spa.PAYEE_ACCOUNT_ID&#xD;&#xA;inner join SGT_PAYMENT_HISTORY_DETAIL SPED on SPED.PAYMENT_HISTORY_HEADER_ID=SPHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;inner join SGT_PAYMENT_ITEM_TYPE PIT on PIT.PAYMENT_ITEM_TYPE_ID = SPED.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;where SPHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','RCMD') AND spa.PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID&#xD;&#xA;HAVING SUM(ISNULL(SPED.AMOUNT,0) * PIT.ITEM_TYPE_DIRECTION) &gt; 0">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetClrdDistributionByPayeeAccountID" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xD;&#xA;  TOP 1 SPHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;FROM&#xD;&#xA;  SGT_PAYMENT_HISTORY_HEADER SPHH WITH(NOLOCK)  &#xD;&#xA; INNER &#xD;&#xA;  JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION SPHD WITH(NOLOCK) &#xD;&#xA;  ON SPHD.PAYMENT_HISTORY_HEADER_ID = SPHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;WHERE&#xD;&#xA;  SPHH.PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID AND&#xD;&#xA;  SPHD.DISTRIBUTION_STATUS_VALUE IN ('CLRD')&#xD;&#xA;ORDER BY SPHH.PAYMENT_HISTORY_HEADER_ID DESC&#xD;&#xA;">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIAPPayback" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @START_DATE DATETIME = CAST(CAST(@COMPUTATIONYEAR AS VARCHAR(4))+'0101' AS DATETIME)&#xD;&#xA;DECLARE @END_DATE DATETIME = CAST(CAST(@COMPUTATIONYEAR AS VARCHAR(4))+'1231' AS DATETIME)&#xD;&#xA;&#xD;&#xA;SELECT PA.PERSON_ACCOUNT_ID, SUM(PHH.CHECK_AMOUNT) PAYBACK&#xD;&#xA;FROM SGT_IAP_HARDSHIP_PAYBACK PHH WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT SPA ON SPA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT SPBA ON SPBA.PAYEE_BENEFIT_ACCOUNT_ID = SPA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT PA ON PA.PERSON_ACCOUNT_ID = SPBA.PERSON_ACCOUNT_ID AND PA.PLAN_ID = 1&#xD;&#xA;WHERE CONVERT(DATE,PAYMENT_POSTED_DATE) BETWEEN @START_DATE AND @END_DATE&#xD;&#xA;GROUP BY PA.PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@COMPUTATIONYEAR" sfwDataType="int" />
      </parameters>
    </query>
  </queries>
  <attributes>
    <attribute sfwValue="payment_history_header_id" sfwType="Column" sfwKeyNo="1" sfwIsIdentity="True" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="PaymentHistoryHeaderId" sfwIsSequence="False" sfwCaption="ID" />
    <attribute sfwValue="plan_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="PlanId" sfwIsSequence="False" sfwCaption="Plan Id" />
    <attribute sfwValue="payee_account_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="PayeeAccountId" sfwIsSequence="False" sfwCaption="Payee Account Id" />
    <attribute sfwValue="person_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="PersonId" sfwIsSequence="False" sfwCaption="Person Id" />
    <attribute sfwValue="org_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="OrgId" sfwIsSequence="False" sfwCaption="Org Id" />
    <attribute sfwValue="payment_schedule_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="PaymentScheduleId" sfwIsSequence="False" sfwCaption="Payment Schedule Id" />
    <attribute sfwType="Description" ID="FedTaxOptionDescription" sfwCaption="Fed Tax Option" sfwValue="fed_tax_option_description" />
    <attribute sfwValue="fed_tax_option_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="FedTaxOptionId" sfwCodeID="7006" sfwIsSequence="False" sfwCaption="Fed Tax Option" />
    <attribute sfwValue="fed_tax_option_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="FedTaxOptionValue" sfwIsSequence="False" sfwCaption="Fed Tax Option" />
    <attribute sfwValue="fed_tax_allowance" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="FedTaxAllowance" sfwIsSequence="False" sfwCaption="Fed Tax Allowance" />
    <attribute sfwType="Description" ID="FedMaritalStatusDescription" sfwCaption="Fed Marital Status" sfwValue="fed_marital_status_description" />
    <attribute sfwValue="fed_marital_status_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="FedMaritalStatusId" sfwCodeID="7032" sfwIsSequence="False" sfwCaption="Fed Marital Status" />
    <attribute sfwValue="fed_marital_status_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="FedMaritalStatusValue" sfwIsSequence="False" sfwCaption="Fed Marital Status" />
    <attribute sfwValue="fed_additional_tax_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="FedAdditionalTaxAmount" sfwIsSequence="False" sfwCaption="Fed Additional Tax Amount" />
    <attribute sfwType="Description" ID="StateTaxOptionDescription" sfwCaption="State Tax Option" sfwValue="state_tax_option_description" />
    <attribute sfwValue="state_tax_option_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="StateTaxOptionId" sfwCodeID="7006" sfwIsSequence="False" sfwCaption="State Tax Option" />
    <attribute sfwValue="state_tax_option_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="StateTaxOptionValue" sfwIsSequence="False" sfwCaption="State Tax Option" />
    <attribute sfwValue="state_tax_allowance" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="StateTaxAllowance" sfwIsSequence="False" sfwCaption="State Tax Allowance" />
    <attribute sfwType="Description" ID="StateMaritalStatusDescription" sfwCaption="State Marital Status" sfwValue="state_marital_status_description" />
    <attribute sfwValue="state_marital_status_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="StateMaritalStatusId" sfwCodeID="7032" sfwIsSequence="False" sfwCaption="State Marital Status" />
    <attribute sfwValue="state_marital_status_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="StateMaritalStatusValue" sfwIsSequence="False" sfwCaption="State Marital Status" />
    <attribute sfwValue="state_additional_tax_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="StateAdditionalTaxAmount" sfwIsSequence="False" sfwCaption="State Additional Tax Amount" />
    <attribute sfwType="Description" ID="RolloverTypeDescription" sfwCaption="Rollover Type" sfwValue="rollover_type_description" />
    <attribute sfwValue="rollover_type_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="RolloverTypeId" sfwCodeID="7041" sfwIsSequence="False" sfwCaption="Rollover Type" />
    <attribute sfwValue="rollover_type_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="RolloverTypeValue" sfwIsSequence="False" sfwCaption="Rollover Type" />
    <attribute sfwValue="old_payment_history_header_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="OldPaymentHistoryHeaderId" sfwIsSequence="False" sfwCaption="Old Payment History Header Id" />
    <attribute sfwValue="created_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="CreatedBy" sfwIsSequence="False" sfwCaption="Created By" />
    <attribute sfwValue="created_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="CreatedDate" sfwIsSequence="False" sfwCaption="Created Date" />
    <attribute sfwValue="modified_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="ModifiedBy" sfwIsSequence="False" sfwCaption="Modified By" />
    <attribute sfwValue="modified_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="ModifiedDate" sfwIsSequence="False" sfwCaption="Modified Date" />
    <attribute sfwValue="update_seq" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="UpdateSeq" sfwIsSequence="False" sfwCaption="Update Seq" />
    <attribute sfwValue="payment_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="PaymentDate" sfwIsSequence="False" sfwCaption="Payment Date" />
    <attribute ID="objPayee" sfwType="Object" sfwEntity="entPerson" sfwValue="ibusPayee" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrPlanDescription" sfwValue="icdoPaymentHistoryHeader.istrPlanDescription" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrBenefitType" sfwValue="icdoPaymentHistoryHeader.istrBenefitType" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="IdtPaymentDate" sfwValue="icdoPaymentHistoryHeader.idtPaymentDate" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="GrossAmount" sfwValue="icdoPaymentHistoryHeader.gross_amount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="DeductionAmount" sfwValue="icdoPaymentHistoryHeader.deduction_amount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="Idecfedraltax" sfwValue="icdoPaymentHistoryHeader.idecfedraltax" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="Idecstatetax" sfwValue="icdoPaymentHistoryHeader.idecstatetax" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="NetAmount" sfwValue="icdoPaymentHistoryHeader.net_amount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="RetroAmount" sfwValue="icdoPaymentHistoryHeader.retro_amount" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrPaymentMethod" sfwValue="icdoPaymentHistoryHeader.istrPaymentMethod" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrCheckNumber" sfwValue="icdoPaymentHistoryHeader.istrCheckNumber" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrDistributionCodeDescription" sfwValue="icdoPaymentHistoryHeader.istrDistributionCodeDescription" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrPaymentType" sfwValue="icdoPaymentHistoryHeader.istrPaymentType" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrFundsType" sfwValue="icdoPaymentHistoryHeader.istrFundsType" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrBankName" sfwValue="icdoPaymentHistoryHeader.istrBankName" />
    <attribute sfwDataType="int" sfwType="Property" ID="PaymentYear" sfwValue="icdoPaymentHistoryHeader.payment_year" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="TaxableAmount" sfwValue="icdoPaymentHistoryHeader.taxable_amount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="NonTaxableAmount" sfwValue="icdoPaymentHistoryHeader.NonTaxable_Amount" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="PaymentYearEndDate" sfwValue="icdoPaymentHistoryHeader.PaymentYearEndDate" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="PaymentYearStartDate" sfwValue="icdoPaymentHistoryHeader.PaymentYearStartDate" />
    <attribute ID="objOrganization" sfwType="Object" sfwEntity="entOrganization" sfwValue="ibusOrganization" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintOriginalHeaderId" sfwValue="icdoPaymentHistoryHeader.iintOriginalHeaderId" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrDistributionCode" sfwValue="icdoPaymentHistoryHeader.istrDistributionCode" />
    <attribute sfwDataType="int" sfwType="Property" ID="IstrPaymentHistoryDistributionId" sfwValue="istrPaymentHistoryDistributionId" />
    <attribute ID="objPayeeAccount" sfwType="Object" sfwEntity="entPayeeAccount" sfwValue="ibusPayeeAccount" />
    <attribute sfwType="Collection" sfwEntity="entPaymentHistoryDetail" ID="lstPaymentHistoryDetail" sfwValue="iclbPaymentHistoryDetail" />
    <attribute sfwType="Collection" sfwEntity="entPaymentHistoryDistribution" ID="lstPaymentHistoryDistribution" sfwValue="iclbPaymentHistoryDistribution" />
    <attribute ID="IstrRelativeVipFlag" sfwDataType="string" sfwPrivate="False" sfwValue="icdoPaymentHistoryHeader.istrRelativeVipFlag" sfwType="Property" />
  </attributes>
  <objectmethods>
    <method ID="btn_StopPayment" sfwReturnType="ArrayList" />
    <method ID="btn_CancelPayment" sfwReturnType="ArrayList" />
    <method ID="btn_CreateReclamation" sfwReturnType="ArrayList" />
    <method ID="btn_CreateBenefitOverpayment" sfwReturnType="ArrayList" />
    <method ID="btn_Outstanding" sfwReturnType="ArrayList" />
    <method ID="btn_BuyBack" sfwReturnType="ArrayList" />
  </objectmethods>
</entity>