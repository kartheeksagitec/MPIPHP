<?xml version="1.0" encoding="utf-8"?>
<entity ID="entPayeeOverpaymentReportData" sfwMainCDO="icdoPayeeOverpaymentReportData" sfwType="BusinessRule" sfwActive="True" sfwStatus="Review" sfwObjectID="busPayeeOverpaymentReportData" sfwTableName="sgt_payee_overpayment_report_data" sfwView="False" sfwDataObjectID="doPayeeOverpaymentReportData">
  <queries>
    <query ID="LookUp" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from sgt_payee_overpayment_report_data ">
      <parameters />
    </query>
    <query ID="rptPayeeOverpaymentReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @FIRST_DATE_OF_PREV_QTR DATETIME = DATEADD(qq, DATEDIFF(qq, 0, GETDATE()) - 1, 0)&#xD;&#xA;DECLARE @LAST_DATE_OF_PREV_QTR DATETIME = DATEADD(dd, -1, DATEADD(qq, DATEDIFF(qq, 0, GETDATE()), 0))&#xD;&#xA;&#xD;&#xA;--DECLARE @FIRST_DATE_OF_PREV_QTR DATETIME = DATEADD(qq, DATEDIFF(qq, 0, GETDATE()), 0)&#xD;&#xA;--DECLARE @LAST_DATE_OF_PREV_QTR DATETIME = DATEADD (dd, -1, DATEADD(qq, DATEDIFF(qq, 0, GETDATE()) + 1, 0))&#xD;&#xA;&#xD;&#xA;DELETE FROM SGT_PAYEE_OVERPAYMENT_REPORT_DATA WHERE START_DATE = @FIRST_DATE_OF_PREV_QTR AND END_DATE = @LAST_DATE_OF_PREV_QTR AND START_DATE &gt; '06/30/2018' --Report Go Live Date &#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;PAYEE_OP.START_DATE,&#xD;&#xA;PAYEE_OP.END_DATE,&#xD;&#xA;PAYEE_OP.MPI_PERSON_ID,&#xD;&#xA;PAYEE_OP.SSN,&#xD;&#xA;PAYEE_OP. PAYEE_NAME,&#xD;&#xA;PAYEE_OP.DATE_OF_DEATH,&#xD;&#xA;PAYEE_OP.PLAN_CODE,&#xD;&#xA;PAYEE_OP.NEXT_GROSS_PAYMENT,&#xD;&#xA;PAYEE_OP.NEXT_AMT_DUE,&#xD;&#xA;CASE WHEN ISNULL(PAYEE_OP.NEXT_AMT_DUE,0) = 0 AND  ISNULL(PAYEE_OP.NEXT_GROSS_PAYMENT,0) &lt;&gt; 0 AND &#xD;&#xA;&#x9;&#x9;PAYEE_OP.REIMBURSEMENT_STATUS_VALUE != 'CMPL' AND PAYEE_OP.OVERPAYMENT_ID IS NOT NULL AND ISNULL(PAYEE_OP.NEW_OUTSTANDING_BALANCE,0) &lt;&gt; 0 AND PAYEE_OP.STATUS_VALUE IN ('Receiving','Review')&#xD;&#xA;&#x9;THEN 'Yes' &#xD;&#xA;ELSE 'No' END AS REVIEW,&#xD;&#xA;PAYEE_OP.PAYEE_ACCOUNT_ID,&#xD;&#xA;PAYEE_OP.OVERPAYMENT_ID,&#xD;&#xA;PAYEE_OP.EFFECTIVE_DATE,&#xD;&#xA;PAYEE_OP.TOTAL_OP_AMOUNT,&#xD;&#xA;PAYEE_OP.NEW_OVERPAYMENT,&#xD;&#xA;CASE WHEN PAYEE_OP.REIMBURSEMENT_STATUS_VALUE = 'CMPL' OR PAYEE_OP.OVERPAYMENT_ID IS NULL THEN &#xD;&#xA;   CASE WHEN ISNULL(PAYEE_OP.NEW_OVERPAYMENT,0) &lt;&gt; 0 THEN (ISNULL(PAYEE_OP.NEW_OVERPAYMENT,0) - ISNULL(PAYEE_OP.TOTAL_OP_AMOUNT,0)) + (ISNULL(PAYEE_OP.NEW_OUTSTANDING_BALANCE,0) * -1)&#xD;&#xA;   ELSE ISNULL(PAYEE_OP.NEW_OUTSTANDING_BALANCE,0) * -1 END&#xD;&#xA;WHEN ISNULL(PAYEE_OP.NEW_OVERPAYMENT,0) &lt;&gt; 0 THEN ISNULL(PAYEE_OP.NEW_OVERPAYMENT,0) - ISNULL(PAYEE_OP.TOTAL_OP_AMOUNT,0) &#xD;&#xA;ELSE 0 END  AS ADJUSTMENT,&#xD;&#xA;PAYEE_OP.REIMBURSEMENT_AMT_PAID,&#xD;&#xA;PAYEE_OP.[MONTH],&#xD;&#xA;CASE WHEN PAYEE_OP.REIMBURSEMENT_STATUS_VALUE = 'CMPL' OR PAYEE_OP.OVERPAYMENT_ID IS NULL THEN 0 ELSE PAYEE_OP.NEW_OUTSTANDING_BALANCE END AS NEW_OUTSTANDING_BALANCE,&#xD;&#xA;PAYEE_OP.ESTIMATED_END_DATE,&#xD;&#xA;PAYEE_OP.STATUS_VALUE&#xD;&#xA;INTO #TEMP&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA; --Query for payees with exisitng overpayments&#xD;&#xA; SELECT DISTINCT &#xD;&#xA; @FIRST_DATE_OF_PREV_QTR AS START_DATE,&#xD;&#xA; @LAST_DATE_OF_PREV_QTR AS END_DATE,&#xD;&#xA; SP.MPI_PERSON_ID,SP.SSN,SP.FIRST_NAME + ' ' + SP.LAST_NAME AS PAYEE_NAME,&#xD;&#xA; SP.DATE_OF_DEATH,&#xD;&#xA; PL.PLAN_CODE,AMT.AMOUNT AS NEXT_GROSS_PAYMENT,&#xD;&#xA; AMT.NEXT_AMT_DUE,SPA.PAYEE_ACCOUNT_ID,&#xD;&#xA; OP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID AS OVERPAYMENT_ID,&#xD;&#xA; OP.REPAYMENT_CREATED_DATE AS EFFECTIVE_DATE, &#xD;&#xA; ISNULL(PAYEE_OP_REPORT.NEW_OUTSTANDING_BALANCE,0) AS TOTAL_OP_AMOUNT, &#xD;&#xA; CASE WHEN (ISNULL(OP.REIMBURSEMENT_AMOUNT,0) - ISNULL(OP.REIMBURSEMENT_AMOUNT_PAID_AS_PREV_PERIOD,0)) &lt;&gt; ISNULL(PAYEE_OP_REPORT.NEW_OUTSTANDING_BALANCE,0) THEN ISNULL(OP.REIMBURSEMENT_AMOUNT,0) - ISNULL(OP.REIMBURSEMENT_AMOUNT_PAID_AS_PREV_PERIOD,0) ELSE 0 END  AS NEW_OVERPAYMENT,&#xD;&#xA; SUM(ISNULL(OP.REIMBURSEMENT_AMOUNT_PAID,0)) * -1 AS REIMBURSEMENT_AMT_PAID, &#xD;&#xA; DATEDIFF(MONTH, OP.REPAYMENT_CREATED_DATE, @LAST_DATE_OF_PREV_QTR) AS [MONTH], &#xD;&#xA; OP.REIMBURSEMENT_STATUS_VALUE,&#xD;&#xA; CASE WHEN OP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID IS NULL THEN PAYEE_OP_REPORT.NEW_OUTSTANDING_BALANCE&#xD;&#xA;&#x9;ELSE (ISNULL(OP.REIMBURSEMENT_AMOUNT,0) - ISNULL(OP.REIMBURSEMENT_AMOUNT_PAID_AS_PREV_PERIOD,0)) - ISNULL(OP.REIMBURSEMENT_AMOUNT_PAID,0) END AS NEW_OUTSTANDING_BALANCE,&#xD;&#xA; OP.ESTIMATED_END_DATE,&#xD;&#xA; CV.DESCRIPTION AS STATUS_VALUE&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT SPA&#xD;&#xA; LEFT OUTER JOIN SGT_PERSON SP ON SPA.PERSON_ID = SP.PERSON_ID &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS SPAS ON SPA.PAYEE_ACCOUNT_ID = SPAS.PAYEE_ACCOUNT_ID&#xD;&#xA;  AND SPAS.PAYEE_ACCOUNT_STATUS_ID = (SELECT TOP 1 Q.PAYEE_ACCOUNT_STATUS_ID FROM SGT_PAYEE_ACCOUNT_STATUS Q WHERE SPA.PAYEE_ACCOUNT_ID = Q.PAYEE_ACCOUNT_ID ORDER BY Q.STATUS_EFFECTIVE_DATE DESC)&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV ON SPAS.STATUS_ID = CV.CODE_ID AND SPAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN&#xD;&#xA; (&#xD;&#xA;  SELECT * FROM SGT_PAYEE_OVERPAYMENT_REPORT_DATA DATA WHERE DATA.START_DATE = &#xD;&#xA;   (SELECT MAX(START_DATE) FROM SGT_PAYEE_OVERPAYMENT_REPORT_DATA) AND ISNULL(NEW_OUTSTANDING_BALANCE,0) &lt;&gt; 0&#xD;&#xA; )PAYEE_OP_REPORT ON SPA.PAYEE_ACCOUNT_ID = PAYEE_OP_REPORT.PAYEE_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN  &#xD;&#xA; (&#xD;&#xA;  SELECT PAPIT.PAYEE_ACCOUNT_ID ,&#xD;&#xA;  SUM(CASE WHEN PAPIT.PAYMENT_ITEM_TYPE_ID IN (1,2,21,22) THEN (ISNULL(PAPIT.AMOUNT,0)) ELSE 0 END) AS AMOUNT ,&#xD;&#xA;  SUM(CASE WHEN PAPIT.PAYMENT_ITEM_TYPE_ID = 53 THEN (ISNULL(PAPIT.AMOUNT,0)) ELSE 0 END) AS NEXT_AMT_DUE &#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT WHERE PAPIT.PAYMENT_ITEM_TYPE_ID IN (1,2,21,22,53) AND PAPIT.END_DATE IS NULL&#xD;&#xA;  GROUP BY PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA; )AMT ON SPA.PAYEE_ACCOUNT_ID = AMT.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PLAN_BENEFIT_XR XR ON XR.PLAN_BENEFIT_ID = SPA.PLAN_BENEFIT_ID AND PLAN_ID &lt;&gt; 1&#xD;&#xA; INNER JOIN SGT_PLAN PL ON XR.PLAN_ID = PL.PLAN_ID&#xD;&#xA; LEFT OUTER JOIN &#xD;&#xA; (&#xD;&#xA;  SELECT DISTINCT SPARP.PAYEE_ACCOUNT_ID,SPARP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID,SRS.EFFECTIVE_DATE,SPARP.GROSS_PAYMENT_AMOUNT,MAX(ISNULL(POSTED_DATE,'01/01/1900')) AS POSTED_DATE,&#xD;&#xA;  SRS.REIMBURSEMENT_AMOUNT AS REIMBURSEMENT_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN SRD.POSTED_DATE &lt; @FIRST_DATE_OF_PREV_QTR THEN ISNULL(SRD.GROSS_AMOUNT,0) ELSE 0 END) AS REIMBURSEMENT_AMOUNT_PAID_AS_PREV_PERIOD,&#xD;&#xA;  SUM(CASE WHEN SRD.POSTED_DATE BETWEEN @FIRST_DATE_OF_PREV_QTR AND @LAST_DATE_OF_PREV_QTR THEN ISNULL(SRD.GROSS_AMOUNT,0) ELSE 0 END) AS REIMBURSEMENT_AMOUNT_PAID, &#xD;&#xA;  SRS.ESTIMATED_END_DATE, SRS.REIMBURSEMENT_STATUS_VALUE,SRS.REPAYMENT_SCHEDULE_ID,&#xD;&#xA;  SRS.CREATED_DATE AS REPAYMENT_CREATED_DATE ,SRS.MODIFIED_DATE AS REPAYMENT_MODIFIED_DATE&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT SPARP &#xD;&#xA;  INNER JOIN SGT_REPAYMENT_SCHEDULE SRS ON SPARP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID = SRS.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;   AND SRS.REPAYMENT_SCHEDULE_ID = (SELECT TOP 1 Q.REPAYMENT_SCHEDULE_ID FROM SGT_REPAYMENT_SCHEDULE Q&#xD;&#xA;            INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT P ON Q.PAYEE_ACCOUNT_RETRO_PAYMENT_ID = P.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;            LEFT OUTER JOIN SGT_REIMBURSEMENT_DETAILS R ON Q.REPAYMENT_SCHEDULE_ID = R.REPAYMENT_SCHEDULE_ID AND CONVERT(DATE,R.POSTED_DATE) &lt;= @LAST_DATE_OF_PREV_QTR&#xD;&#xA;            WHERE SPARP.PAYEE_ACCOUNT_ID = P.PAYEE_ACCOUNT_ID AND &#xD;&#xA;            ((R.REPAYMENT_SCHEDULE_ID IS NULL AND Q.CREATED_DATE &lt;= @LAST_DATE_OF_PREV_QTR) OR (R.REPAYMENT_SCHEDULE_ID IS NOT NULL OR Q.EFFECTIVE_DATE &lt;= @LAST_DATE_OF_PREV_QTR))&#xD;&#xA;            ORDER BY Q.REPAYMENT_SCHEDULE_ID DESC)&#xD;&#xA;  LEFT OUTER JOIN SGT_REIMBURSEMENT_DETAILS SRD ON SRS.REPAYMENT_SCHEDULE_ID = SRD.REPAYMENT_SCHEDULE_ID AND SRD.POSTED_DATE &lt;=  @LAST_DATE_OF_PREV_QTR&#xD;&#xA;  WHERE &#xD;&#xA;  ISNULL(IS_OVERPAYMENT_FLAG,'N') = 'Y' AND SPARP.RETRO_PAYMENT_TYPE_VALUE &lt;&gt; 'OVER' AND SRS.CREATED_DATE &lt;= @LAST_DATE_OF_PREV_QTR &#xD;&#xA;  AND ((ISNULL(REIMBURSEMENT_STATUS_VALUE,'') &lt;&gt; 'CMPL' OR (ISNULL(REIMBURSEMENT_STATUS_VALUE,'') = 'CMPL' AND SRS.MODIFIED_DATE BETWEEN @FIRST_DATE_OF_PREV_QTR AND GETDATE()) OR&#xD;&#xA;   EXISTS(SELECT * FROM SGT_REIMBURSEMENT_DETAILS Q WHERE Q.REPAYMENT_SCHEDULE_ID = SRS.REPAYMENT_SCHEDULE_ID AND Q.POSTED_DATE BETWEEN @FIRST_DATE_OF_PREV_QTR AND @LAST_DATE_OF_PREV_QTR)))  &#xD;&#xA;  AND ISNULL(SRD.POSTED_DATE,'01/01/1900') &lt;= @LAST_DATE_OF_PREV_QTR   &#xD;&#xA;  GROUP BY SPARP.PAYEE_ACCOUNT_ID,SPARP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID,SRS.EFFECTIVE_DATE,SPARP.GROSS_PAYMENT_AMOUNT, SRS.REIMBURSEMENT_AMOUNT,&#xD;&#xA;  SRS.ESTIMATED_END_DATE ,SRS.REIMBURSEMENT_STATUS_VALUE,SRS.REPAYMENT_SCHEDULE_ID,SRS.CREATED_DATE ,SRS.MODIFIED_DATE&#xD;&#xA;&#xD;&#xA; )OP ON SPA.PAYEE_ACCOUNT_ID = OP.PAYEE_ACCOUNT_ID&#xD;&#xA; WHERE ((((SP.DATE_OF_DEATH IS NULL AND SPAS.STATUS_VALUE NOT IN ('CNCL')) OR (SP.DATE_OF_DEATH IS NOT NULL AND SPAS.STATUS_VALUE IN ('SPND') AND SPAS.STATUS_EFFECTIVE_DATE BETWEEN @FIRST_DATE_OF_PREV_QTR AND @LAST_DATE_OF_PREV_QTR)) &#xD;&#xA; AND REIMBURSEMENT_STATUS_VALUE &lt;&gt; 'CONV') OR PAYEE_OP_REPORT.SSN IS NOT NULL) &#xD;&#xA;&#xD;&#xA; GROUP BY SP.MPI_PERSON_ID,SPAS.STATUS_VALUE,SP.SSN,SP.FIRST_NAME , SP.LAST_NAME,PL.PLAN_CODE,SPA.PAYEE_ACCOUNT_ID,OP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID,OP.EFFECTIVE_DATE,OP.GROSS_PAYMENT_AMOUNT,&#xD;&#xA; OP.REIMBURSEMENT_AMOUNT,OP.REIMBURSEMENT_AMOUNT_PAID,OP.ESTIMATED_END_DATE,OP.REIMBURSEMENT_STATUS_VALUE,OP.REPAYMENT_SCHEDULE_ID,AMT.AMOUNT,OP.REPAYMENT_CREATED_DATE,AMT.NEXT_AMT_DUE,&#xD;&#xA; SP.DATE_OF_DEATH,PAYEE_OP_REPORT.NEW_OUTSTANDING_BALANCE,OP.REIMBURSEMENT_AMOUNT_PAID_AS_PREV_PERIOD,CV.DESCRIPTION&#xD;&#xA;&#xD;&#xA; UNION&#xD;&#xA; &#xD;&#xA; --Query for payees with new overpayments&#xD;&#xA; SELECT DISTINCT &#xD;&#xA; @FIRST_DATE_OF_PREV_QTR AS START_DATE,&#xD;&#xA; @LAST_DATE_OF_PREV_QTR AS END_DATE,&#xD;&#xA; SP.MPI_PERSON_ID,SP.SSN,SP.FIRST_NAME + ' ' + SP.LAST_NAME AS PAYEE_NAME,&#xD;&#xA; SP.DATE_OF_DEATH,&#xD;&#xA; PL.PLAN_CODE,&#xD;&#xA; AMT.AMOUNT AS NEXT_GROSS_PAYMENT,&#xD;&#xA; AMT.NEXT_AMT_DUE,SPA.PAYEE_ACCOUNT_ID,&#xD;&#xA; OP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID AS OVERPAYMENT_ID,&#xD;&#xA; OP.REPAYMENT_CREATED_DATE AS EFFECTIVE_DATE, &#xD;&#xA; 0 AS TOTAL_OP_AMOUNT, &#xD;&#xA; ISNULL(OP.REIMBURSEMENT_AMOUNT,0) - ISNULL(OP.REIMBURSEMENT_AMOUNT_PAID_AS_PREV_PERIOD,0) AS NEW_OVERPAYMENT,&#xD;&#xA; SUM(ISNULL(OP.REIMBURSEMENT_AMOUNT_PAID,0)) * -1 AS REIMBURSEMENT_AMT_PAID, &#xD;&#xA; DATEDIFF(MONTH, OP.REPAYMENT_CREATED_DATE, @LAST_DATE_OF_PREV_QTR) AS [MONTH],&#xD;&#xA; OP.REIMBURSEMENT_STATUS_VALUE,&#xD;&#xA; ISNULL(OP.REIMBURSEMENT_AMOUNT,0) - ISNULL(OP.REIMBURSEMENT_AMOUNT_PAID_AS_PREV_PERIOD,0) - ISNULL(OP.REIMBURSEMENT_AMOUNT_PAID,0) AS NEW_OUTSTANDING_BALANCE,&#xD;&#xA; OP.ESTIMATED_END_DATE,&#xD;&#xA; CV.DESCRIPTION AS STATUS_VALUE&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT SPA&#xD;&#xA; LEFT OUTER JOIN SGT_PERSON SP ON SPA.PERSON_ID = SP.PERSON_ID &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS SPAS ON SPA.PAYEE_ACCOUNT_ID = SPAS.PAYEE_ACCOUNT_ID&#xD;&#xA;  AND SPAS.PAYEE_ACCOUNT_STATUS_ID = (SELECT TOP 1 Q.PAYEE_ACCOUNT_STATUS_ID FROM SGT_PAYEE_ACCOUNT_STATUS Q WHERE SPA.PAYEE_ACCOUNT_ID = Q.PAYEE_ACCOUNT_ID ORDER BY Q.STATUS_EFFECTIVE_DATE DESC)&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV ON SPAS.STATUS_ID = CV.CODE_ID AND SPAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; LEFT OUTER JOIN&#xD;&#xA; (&#xD;&#xA;  SELECT * FROM SGT_PAYEE_OVERPAYMENT_REPORT_DATA DATA WHERE DATA.START_DATE = &#xD;&#xA;   (SELECT MAX(START_DATE) FROM SGT_PAYEE_OVERPAYMENT_REPORT_DATA) AND ISNULL(NEW_OUTSTANDING_BALANCE,0) &lt;&gt; 0&#xD;&#xA; )PAYEE_OP_REPORT ON SPA.PAYEE_ACCOUNT_ID = PAYEE_OP_REPORT.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN  &#xD;&#xA; (&#xD;&#xA;  SELECT PAPIT.PAYEE_ACCOUNT_ID ,&#xD;&#xA;  SUM(CASE WHEN PAPIT.PAYMENT_ITEM_TYPE_ID IN (1,2,21,22) THEN (ISNULL(PAPIT.AMOUNT,0)) ELSE 0 END) AS AMOUNT ,&#xD;&#xA;  SUM(CASE WHEN PAPIT.PAYMENT_ITEM_TYPE_ID = 53 THEN (ISNULL(PAPIT.AMOUNT,0)) ELSE 0 END) AS NEXT_AMT_DUE &#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT WHERE PAPIT.PAYMENT_ITEM_TYPE_ID IN (1,2,21,22,53) AND PAPIT.END_DATE IS NULL&#xD;&#xA;  GROUP BY PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA; )AMT ON SPA.PAYEE_ACCOUNT_ID = AMT.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PLAN_BENEFIT_XR XR ON XR.PLAN_BENEFIT_ID = SPA.PLAN_BENEFIT_ID AND PLAN_ID &lt;&gt; 1&#xD;&#xA; INNER JOIN SGT_PLAN PL ON XR.PLAN_ID = PL.PLAN_ID&#xD;&#xA; INNER JOIN &#xD;&#xA; (&#xD;&#xA;  SELECT DISTINCT SPARP.PAYEE_ACCOUNT_ID,SPARP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID,SRS.EFFECTIVE_DATE,SPARP.GROSS_PAYMENT_AMOUNT,MAX(ISNULL(POSTED_DATE,'01/01/1900')) AS POSTED_DATE,&#xD;&#xA;  SRS.REIMBURSEMENT_AMOUNT AS REIMBURSEMENT_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN SRD.POSTED_DATE &lt; @FIRST_DATE_OF_PREV_QTR THEN ISNULL(SRD.GROSS_AMOUNT,0) ELSE 0 END) AS REIMBURSEMENT_AMOUNT_PAID_AS_PREV_PERIOD,&#xD;&#xA;  SUM(CASE WHEN SRD.POSTED_DATE BETWEEN @FIRST_DATE_OF_PREV_QTR AND @LAST_DATE_OF_PREV_QTR THEN ISNULL(SRD.GROSS_AMOUNT,0) ELSE 0 END) AS REIMBURSEMENT_AMOUNT_PAID, &#xD;&#xA;  SRS.ESTIMATED_END_DATE, SRS.REIMBURSEMENT_STATUS_VALUE,SRS.REPAYMENT_SCHEDULE_ID,&#xD;&#xA;  SRS.CREATED_DATE AS REPAYMENT_CREATED_DATE ,SRS.MODIFIED_DATE AS REPAYMENT_MODIFIED_DATE&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT SPARP &#xD;&#xA;  INNER JOIN SGT_REPAYMENT_SCHEDULE SRS ON SPARP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID = SRS.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;   AND SRS.REPAYMENT_SCHEDULE_ID = (SELECT TOP 1 Q.REPAYMENT_SCHEDULE_ID FROM SGT_REPAYMENT_SCHEDULE Q&#xD;&#xA;            INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT P ON Q.PAYEE_ACCOUNT_RETRO_PAYMENT_ID = P.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;            LEFT OUTER JOIN SGT_REIMBURSEMENT_DETAILS R ON Q.REPAYMENT_SCHEDULE_ID = R.REPAYMENT_SCHEDULE_ID AND CONVERT(DATE,R.POSTED_DATE) &lt;= @LAST_DATE_OF_PREV_QTR&#xD;&#xA;            WHERE SPARP.PAYEE_ACCOUNT_ID = P.PAYEE_ACCOUNT_ID AND &#xD;&#xA;            ((R.REPAYMENT_SCHEDULE_ID IS NULL AND Q.CREATED_DATE &lt;= @LAST_DATE_OF_PREV_QTR) OR (R.REPAYMENT_SCHEDULE_ID IS NOT NULL OR Q.EFFECTIVE_DATE &lt;= @LAST_DATE_OF_PREV_QTR))&#xD;&#xA;            ORDER BY Q.REPAYMENT_SCHEDULE_ID DESC)&#xD;&#xA;  LEFT OUTER JOIN SGT_REIMBURSEMENT_DETAILS SRD ON SRS.REPAYMENT_SCHEDULE_ID = SRD.REPAYMENT_SCHEDULE_ID AND SRD.POSTED_DATE &lt;=  @LAST_DATE_OF_PREV_QTR&#xD;&#xA;  WHERE &#xD;&#xA;  ISNULL(IS_OVERPAYMENT_FLAG,'N') = 'Y' AND SPARP.RETRO_PAYMENT_TYPE_VALUE &lt;&gt; 'OVER' AND SRS.CREATED_DATE &lt;= @LAST_DATE_OF_PREV_QTR &#xD;&#xA;  AND ((ISNULL(REIMBURSEMENT_STATUS_VALUE,'') &lt;&gt; 'CMPL' OR (ISNULL(REIMBURSEMENT_STATUS_VALUE,'') = 'CMPL' AND SRS.MODIFIED_DATE BETWEEN @FIRST_DATE_OF_PREV_QTR AND GETDATE()) OR&#xD;&#xA;   EXISTS(SELECT * FROM SGT_REIMBURSEMENT_DETAILS Q WHERE Q.REPAYMENT_SCHEDULE_ID = SRS.REPAYMENT_SCHEDULE_ID AND Q.POSTED_DATE BETWEEN @FIRST_DATE_OF_PREV_QTR AND @LAST_DATE_OF_PREV_QTR)))  &#xD;&#xA;  AND ISNULL(SRD.POSTED_DATE,'01/01/1900') &lt;= @LAST_DATE_OF_PREV_QTR   &#xD;&#xA;  GROUP BY SPARP.PAYEE_ACCOUNT_ID,SPARP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID,SRS.EFFECTIVE_DATE,SPARP.GROSS_PAYMENT_AMOUNT, SRS.REIMBURSEMENT_AMOUNT,&#xD;&#xA;  SRS.ESTIMATED_END_DATE ,SRS.REIMBURSEMENT_STATUS_VALUE,SRS.REPAYMENT_SCHEDULE_ID,SRS.CREATED_DATE ,SRS.MODIFIED_DATE&#xD;&#xA;&#xD;&#xA; )OP ON SPA.PAYEE_ACCOUNT_ID = OP.PAYEE_ACCOUNT_ID&#xD;&#xA; WHERE PAYEE_OP_REPORT.SSN IS NULL AND &#xD;&#xA; ((SP.DATE_OF_DEATH IS NULL AND SPAS.STATUS_VALUE NOT IN ('CNCL')) OR (SP.DATE_OF_DEATH IS NOT NULL AND SPAS.STATUS_VALUE IN ('SPND') AND SPAS.STATUS_EFFECTIVE_DATE BETWEEN @FIRST_DATE_OF_PREV_QTR AND @LAST_DATE_OF_PREV_QTR)) &#xD;&#xA; AND REIMBURSEMENT_STATUS_VALUE &lt;&gt; 'CONV'&#xD;&#xA;&#xD;&#xA; GROUP BY SP.MPI_PERSON_ID,SPAS.STATUS_VALUE,SP.SSN,SP.FIRST_NAME , SP.LAST_NAME,PL.PLAN_CODE,SPA.PAYEE_ACCOUNT_ID,OP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID,OP.EFFECTIVE_DATE,OP.GROSS_PAYMENT_AMOUNT,&#xD;&#xA; OP.REIMBURSEMENT_AMOUNT,OP.REIMBURSEMENT_AMOUNT_PAID,OP.ESTIMATED_END_DATE,OP.REIMBURSEMENT_STATUS_VALUE,OP.REPAYMENT_SCHEDULE_ID,AMT.AMOUNT,OP.REPAYMENT_CREATED_DATE,AMT.NEXT_AMT_DUE,&#xD;&#xA; SP.DATE_OF_DEATH,OP.REIMBURSEMENT_AMOUNT, PAYEE_OP_REPORT.NEW_OUTSTANDING_BALANCE,CV.DESCRIPTION,OP.REIMBURSEMENT_AMOUNT_PAID_AS_PREV_PERIOD&#xD;&#xA;)PAYEE_OP&#xD;&#xA;&#xD;&#xA;DELETE FROM #TEMP WHERE ISNULL(TOTAL_OP_AMOUNT,0) = 0 AND ISNULL(REIMBURSEMENT_AMT_PAID,0) = 0 AND ISNULL(ADJUSTMENT,0) = 0 AND ISNULL(NEW_OUTSTANDING_BALANCE,0) = 0 &#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PAYEE_OVERPAYMENT_REPORT_DATA &#xD;&#xA;(START_DATE,END_DATE,MPI_PERSON_ID,SSN,PAYEE_NAME,DATE_OF_DEATH,PLAN_CODE,NEXT_GROSS_PAYMENT,NEXT_AMT_DUE,PAYEE_ACCOUNT_ID,OVERPAYMENT_ID,EFFECTIVE_DATE,TOTAL_OP_AMOUNT,NEW_OVERPAYMENT,REIMBURSEMENT_AMT_PAID&#xD;&#xA; ,MONTH,ADJUSTMENT,NEW_OUTSTANDING_BALANCE,ESTIMATED_END_DATE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ,STATUS_VALUE)&#xD;&#xA;SELECT &#xD;&#xA;START_DATE,END_DATE,MPI_PERSON_ID,SSN,PAYEE_NAME,DATE_OF_DEATH,PLAN_CODE,NEXT_GROSS_PAYMENT,NEXT_AMT_DUE,PAYEE_ACCOUNT_ID,OVERPAYMENT_ID,EFFECTIVE_DATE,TOTAL_OP_AMOUNT,NEW_OVERPAYMENT,REIMBURSEMENT_AMT_PAID&#xD;&#xA;,MONTH,ADJUSTMENT,NEW_OUTSTANDING_BALANCE,ESTIMATED_END_DATE,'DATAFIX',GETDATE(),'DATAFIX',GETDATE(),0,STATUS_VALUE &#xD;&#xA;FROM #TEMP T&#xD;&#xA;&#xD;&#xA;SELECT * FROM #TEMP&#xD;&#xA;ORDER BY REVIEW desc,PAYEE_NAME">
      <parameters />
    </query>
  </queries>
  <attributes>
    <attribute sfwValue="payee_overpayment_report_data_id" sfwType="Column" sfwKeyNo="1" sfwIsIdentity="True" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="PayeeOverpaymentReportDataId" sfwCaption="ID" />
    <attribute sfwValue="start_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="StartDate" sfwCaption="Start Date" />
    <attribute sfwValue="end_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="EndDate" sfwCaption="End Date" />
    <attribute sfwValue="mpi_person_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="20" sfwIsNull="True" ID="MpiPersonId" sfwCaption="Mpi Person Id" />
    <attribute sfwValue="ssn" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="256" sfwIsNull="True" ID="Ssn" sfwCaption="Ssn" />
    <attribute sfwValue="payee_name" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="True" ID="PayeeName" sfwCaption="Payee Name" />
    <attribute sfwValue="date_of_death" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="DateOfDeath" sfwCaption="Date Of Death" />
    <attribute sfwValue="plan_code" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="True" ID="PlanCode" sfwCaption="Plan Code" />
    <attribute sfwValue="next_gross_payment" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="NextGrossPayment" sfwCaption="Next Gross Payment" />
    <attribute sfwValue="next_amt_due" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="NextAmtDue" sfwCaption="Next Amt Due" />
    <attribute sfwValue="payee_account_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="PayeeAccountId" sfwCaption="Payee Account Id" />
    <attribute sfwValue="overpayment_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="OverpaymentId" sfwCaption="Overpayment Id" />
    <attribute sfwValue="effective_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="EffectiveDate" sfwCaption="Effective Date" />
    <attribute sfwValue="total_op_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="TotalOpAmount" sfwCaption="Total Op Amount" />
    <attribute sfwValue="new_overpayment" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="NewOverpayment" sfwCaption="New Overpayment" />
    <attribute sfwValue="reimbursement_amt_paid" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="ReimbursementAmtPaid" sfwCaption="Reimbursement Amt Paid" />
    <attribute sfwValue="month" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="Month" sfwCaption="Month" />
    <attribute sfwValue="adjustment" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="Adjustment" sfwCaption="Adjustment" />
    <attribute sfwValue="new_outstanding_balance" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="NewOutstandingBalance" sfwCaption="New Outstanding Balance" />
    <attribute sfwValue="estimated_end_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="EstimatedEndDate" sfwCaption="Estimated End Date" />
    <attribute sfwValue="created_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="CreatedBy" sfwCaption="Created By" />
    <attribute sfwValue="created_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="CreatedDate" sfwCaption="Created Date" />
    <attribute sfwValue="modified_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="ModifiedBy" sfwCaption="Modified By" />
    <attribute sfwValue="modified_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="ModifiedDate" sfwCaption="Modified Date" />
    <attribute sfwValue="update_seq" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="UpdateSeq" sfwCaption="Update Seq" />
    <attribute sfwValue="status_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="20" sfwIsNull="True" ID="StatusValue" sfwCaption="Status Value" />
  </attributes>
</entity>