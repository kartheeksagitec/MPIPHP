<entity ID="entPaymentHistoryDistribution" sfwActive="True" sfwStatus="Review" sfwType="BusinessRule" sfwMainCDO="icdoPaymentHistoryDistribution" sfwObjectID="busPaymentHistoryDistribution" sfwTableName="sgt_payment_history_distribution" sfwView="False" sfwDataObjectID="doPaymentHistoryDistribution">
  <rules>
    <rule ID="VisibleRule-ShowCancelPaymentButton" sfwExpression="(this.icdoPaymentHistoryDistribution.distribution_status_value == &quot;STLE&quot;) || &#xA;(this.icdoPaymentHistoryDistribution.distribution_status_value == &quot;STPM&quot;) || &#xA;(this.icdoPaymentHistoryDistribution.distribution_status_value == &quot;STLE&quot;) || &#xA;(this.icdoPaymentHistoryDistribution.distribution_status_value == &quot;STPM&quot;)" sfwObjectBased="True" />
  </rules>
  <delete />
  <checklist />
  <initialload>
    <item ID="VisibleRule-ShowCancelPaymentButton" sfwMode="All" sfwStatus="Active" />
  </initialload>
  <softerror />
  <harderror />
  <validatedelete />
  <groupslist />
  <updateablecdo />
  <commonproperties />
  <expressionfields />
  <constraint />
  <queries>
    <query ID="NewQuery" sfwQueryType="SelectQuery" sfwDataType="EntityTable">
      <parameters />
    </query>
    <query ID="CreateCheckHistoryforPayees" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="------- CreateCheckHistoryforPayees -------&#xD;&#xA;&#xD;&#xA;DECLARE @EFFECTIVE_DATE DATETIME&#xD;&#xA;DECLARE @SCHEDULE_TYPE VARCHAR(4)&#xD;&#xA;&#xD;&#xA;SELECT TOP 1 @EFFECTIVE_DATE = ACH_EFFECTIVE_DATE, @SCHEDULE_TYPE= SCHEDULE_TYPE_VALUE     &#xD;&#xA;FROM SGT_PAYMENT_SCHEDULE WITH(NOLOCK) WHERE PAYMENT_SCHEDULE_ID  = @PAYMENTSCHEDULEID&#xD;&#xA;ORDER BY PAYMENT_DATE DESC&#xD;&#xA;&#xD;&#xA;IF @SCHEDULE_TYPE IN ('MTLY','ADHM')&#xD;&#xA;SET @SCHEDULE_TYPE='PENC'&#xD;&#xA;ELSE &#xD;&#xA;SET @SCHEDULE_TYPE='IAPC'&#xD;&#xA;&#xD;&#xA;DECLARE @CHECKNO VARCHAR(20)&#xD;&#xA;DECLARE @CHECKBOOKID INT&#xD;&#xA;DECLARE @LASTCHECKID  INT&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;   TOP 1 @CHECKNO = CASE WHEN ISNULL(LAST_CHECK_NUMBER,'') = '' THEN FIRST_CHECK_NUMBER ELSE LAST_CHECK_NUMBER END,&#xD;&#xA;   @CHECKBOOKID  = CHECK_BOOK_ID&#xD;&#xA;   FROM SGT_PAYMENT_CHECK_BOOK WITH(NOLOCK) &#xD;&#xA;   WHERE EFFECTIVE_DATE=(SELECT MAX(EFFECTIVE_DATE)FROM SGT_PAYMENT_CHECK_BOOK WITH(NOLOCK) WHERE EFFECTIVE_DATE&lt;=@PAYMENTDATE &#xD;&#xA;   AND  CHECK_TYPE_VALUE=@SCHEDULE_TYPE)&#xD;&#xA;   AND CHECK_TYPE_VALUE=@SCHEDULE_TYPE&#xD;&#xA; &#xD;&#xA; ------- NORMAL DISTRIBUTION &#xD;&#xA;INSERT INTO SGT_PAYMENT_HISTORY_DISTRIBUTION&#xD;&#xA;(&#xD;&#xA;         PAYMENT_HISTORY_HEADER_ID, PAYMENT_METHOD_ID, PAYMENT_METHOD_VALUE, CHECK_MESSAGE,CHECK_ACH_EFFECTIVE_DATE, &#xD;&#xA;         DISTRIBUTION_STATUS_ID, DISTRIBUTION_STATUS_VALUE, NET_AMOUNT, CHECK_NUMBER, OLD_DISTRIBUTION_ID, RECIPIENT_NAME,&#xD;&#xA;         FBO_CO, ADDR_LINE_1, ADDR_LINE_2,ADDR_LINE_3, ADDR_CITY, ADDR_STATE_ID, ADDR_STATE_VALUE, ADDR_COUNTRY_ID, ADDR_COUNTRY_VALUE, &#xD;&#xA;         ADDR_ZIP_CODE, ADDR_ZIP_4_CODE, FOREIGN_PROVINCE, FOREIGN_POSTAL_CODE, BANK_NAME, ROUTING_NUMBER,&#xD;&#xA;         ACCOUNT_TYPE_ID, ACCOUNT_TYPE_VALUE, ACCOUNT_NUMBER, PERSON_ID, ORG_ID,PAYEE_ACCOUNT_ACH_DETAIL_ID,&#xD;&#xA;         CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ &#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;SELECT&#xD;&#xA;       PAYMENT_HISTORY_HEADER_ID, PAYMENT_METHOD_ID, PAYMENT_METHOD_VALUE, CHECK_MESSAGE,CHECK_ACH_EFFECTIVE_DATE,&#xD;&#xA;       DISTRIBUTION_STATUS_ID, DISTRIBUTION_STATUS_VALUE, NET_AMOUNT, CHECK_NUMBER, OLD_DISTRIBUTION_ID,&#xD;&#xA;       RECIPIENT_NAME, FBO_CO, ADDR_LINE_1, ADDR_LINE_2,ADDR_LINE_3, ADDR_CITY, ADDR_STATE_ID, ADDR_STATE_VALUE, &#xD;&#xA;       ADDR_COUNTRY_ID, ADDR_COUNTRY_VALUE, ADDR_ZIP_CODE, ADDR_ZIP_4_CODE, FOREIGN_PROVINCE, FOREIGN_POSTAL_CODE,&#xD;&#xA;       BANK_NAME, ROUTING_NUMBER, ACCOUNT_TYPE_ID, ACCOUNT_TYPE_VALUE, ACCOUNT_NUMBER, PERSON_ID, ORG_ID,PAYEE_ACCOUNT_ACH_DETAIL_ID,&#xD;&#xA;       'OPUS Batch' as  CREATED_BY ,getdate() as CREATED_DATE,'OPUS Batch' as  MODIFIED_BY ,getdate() as MODIFIED_DATE,0 UPDATE_SEQ&#xD;&#xA;FROM (&#xD;&#xA;&#xD;&#xA;      SELECT &#xD;&#xA;            PAYMENT.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;            @EFFECTIVE_DATE AS CHECK_ACH_EFFECTIVE_DATE,&#xD;&#xA;            7039 AS PAYMENT_METHOD_ID,&#xD;&#xA;            CASE WHEN PAYMENT.AMOUNT&gt;0 THEN 'CHK'  ELSE NULL END AS PAYMENT_METHOD_VALUE, &#xD;&#xA;            PAYMENT.CHECK_MESSAGE,&#xD;&#xA;            7036 AS DISTRIBUTION_STATUS_ID,&#xD;&#xA;   CASE WHEN PAYMENT.AMOUNT &gt; 0 THEN 'OUTS' ELSE  'CLRD' END AS DISTRIBUTION_STATUS_VALUE,&#xD;&#xA;            PAYMENT.AMOUNT AS NET_AMOUNT,&#xD;&#xA;            CASE WHEN PAYMENT.AMOUNT &gt; 0 THEN (ROW_NUMBER() OVER (ORDER BY PAYMENT.AMOUNT desc))+@CHECKNO ELSE  NULL END AS CHECK_NUMBER,                   &#xD;&#xA;            NULL AS OLD_DISTRIBUTION_ID,&#xD;&#xA;   CASE WHEN PAYMENT.PERSON_ID IS NOT NULL  THEN  (ISNULL(RTRIM(LTRIM(P.FIRST_NAME))+ ' ','') + ISNULL(RTRIM(LTRIM(P.MIDDLE_NAME))+ ' ','') + ISNULL(RTRIM(LTRIM(P.LAST_NAME)),'')) else (O.ORG_NAME) END AS RECIPIENT_NAME,                          &#xD;&#xA;   CASE WHEN PAYMENT.TRANSFER_ORG_ID IS NOT NULL THEN ('FBO: '+ PAYMENT.FBO_CO) ELSE NULL END AS FBO_CO,&#xD;&#xA;   CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_1 &#xD;&#xA;            ELSE &#xD;&#xA;            CASE WHEN PAYMENT.TRANSFER_ORG_CONTACT_NAME IS NOT NULL &#xD;&#xA;                  THEN (ISNULL(RTRIM(LTRIM('C/O ' + PAYMENT.TRANSFER_ORG_CONTACT_NAME)),'')) &#xD;&#xA;                  ELSE&#xD;&#xA;                      CASE WHEN O.CARE_OF IS NOT NULL &#xD;&#xA;                      THEN (ISNULL(RTRIM(LTRIM('C/O ' + O.CARE_OF)),''))&#xD;&#xA;                      ELSE &#xD;&#xA;                      OCA.ADDR_LINE_1 &#xD;&#xA;                      END&#xD;&#xA;                  END &#xD;&#xA;   END AS ADDR_LINE_1,&#xD;&#xA;   CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_2 &#xD;&#xA;             ELSE &#xD;&#xA;             CASE WHEN PAYMENT.TRANSFER_ORG_CONTACT_NAME IS NOT NULL &#xD;&#xA;                  THEN OCA.ADDR_LINE_1 &#xD;&#xA;                  ELSE&#xD;&#xA;                  CASE WHEN O.CARE_OF IS NOT NULL &#xD;&#xA;                       THEN OCA.ADDR_LINE_1&#xD;&#xA;                       ELSE &#xD;&#xA;                       OCA.ADDR_LINE_2 &#xD;&#xA;                       END&#xD;&#xA;                  END &#xD;&#xA;   END AS ADDR_LINE_2,&#xD;&#xA;   CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN NULL &#xD;&#xA;             ELSE &#xD;&#xA;             CASE &#xD;&#xA;                 WHEN PAYMENT.TRANSFER_ORG_CONTACT_NAME IS NOT NULL &#xD;&#xA;                 THEN OCA.ADDR_LINE_2 &#xD;&#xA;                 ELSE &#xD;&#xA;                     CASE WHEN O.CARE_OF IS NOT NULL &#xD;&#xA;                       THEN OCA.ADDR_LINE_2&#xD;&#xA;                       ELSE &#xD;&#xA;                       NULL&#xD;&#xA;                       END &#xD;&#xA;                 END &#xD;&#xA;   END AS ADDR_LINE_3,&#xD;&#xA;   CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_CITY ELSE OCA.CITY END AS ADDR_CITY,&#xD;&#xA;   CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_STATE_ID ELSE OCA.STATE_ID END AS ADDR_STATE_ID,&#xD;&#xA;   CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_STATE_VALUE ELSE OCA.STATE_VALUE END AS ADDR_STATE_VALUE,&#xD;&#xA;   CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_COUNTRY_ID ELSE OCA.COUNTRY_ID END AS ADDR_COUNTRY_ID,&#xD;&#xA;   CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_COUNTRY_VALUE ELSE OCA.COUNTRY_VALUE END AS ADDR_COUNTRY_VALUE,&#xD;&#xA;   CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_ZIP_CODE ELSE OCA.ZIP_CODE END AS ADDR_ZIP_CODE,&#xD;&#xA;   CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_ZIP_4_CODE ELSE OCA.ZIP_4_CODE END AS ADDR_ZIP_4_CODE,&#xD;&#xA;   CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.FOREIGN_PROVINCE ELSE OCA.FOREIGN_PROVINCE END AS FOREIGN_PROVINCE,&#xD;&#xA;   CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.FOREIGN_POSTAL_CODE ELSE OCA.FOREIGN_POSTAL_CODE END AS FOREIGN_POSTAL_CODE,        &#xD;&#xA;            NULL AS BANK_NAME,--NULL IN CASE OF CHECK&#xD;&#xA;            NULL AS ROUTING_NUMBER,&#xD;&#xA;            7003 AS ACCOUNT_TYPE_ID, &#xD;&#xA;            NULL AS ACCOUNT_TYPE_VALUE,&#xD;&#xA;            NULL AS ACCOUNT_NUMBER,&#xD;&#xA;            PAYMENT.PERSON_ID,PAYMENT.ORG_ID,&#xD;&#xA;            NULL AS PAYEE_ACCOUNT_ACH_DETAIL_ID&#xD;&#xA;FROM&#xD;&#xA;      (&#xD;&#xA;&#xD;&#xA;     &#xD;&#xA;            SELECT &#xD;&#xA;                   DISTINCT PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;                   SCH.CHECK_MESSAGE,&#xD;&#xA;                   PHH.PERSON_ID,&#xD;&#xA;                   PHH.ORG_ID,PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;                   SUM(PHD.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT,&#xD;&#xA;                   -- PROD PIR 267 This is causing the last name to become truncated. so middle name removed. + ISNULL(RTRIM(LTRIM(PPSN.MIDDLE_NAME)) +' ','')&#xD;&#xA;            (ISNULL(RTRIM(PAYP.FIRST_NAME) +' ','') + ISNULL(RTRIM(LTRIM(PAYP.LAST_NAME)),'')) AS FBO_CO,&#xD;&#xA;      PA.TRANSFER_ORG_ID,&#xD;&#xA;      PA.TRANSFER_ORG_CONTACT_NAME   &#xD;&#xA;      FROM SGT_PAYMENT_HISTORY_DETAIL  PHD&#xD;&#xA;                  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;      INNER JOIN TEMP_TABLE_FOR_PAYMENT PA ON PA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID &#xD;&#xA;         AND (ISNULL(PHH.ORG_ID,0) = ISNULL(PA.ORG_ID,0) OR PHH.ORG_ID = PA.TRANSFER_ORG_ID) AND --PIR 637 &#xD;&#xA;       (ISNULL(PHH.PERSON_ID,0) = ISNULL(PA.PERSON_ID,0) OR PHH.ORG_ID = PA.TRANSFER_ORG_ID) --PIR 637&#xD;&#xA;                  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;      INNER JOIN SGT_PAYMENT_SCHEDULE SCH  ON SCH.PAYMENT_SCHEDULE_ID = PHH.PAYMENT_SCHEDULE_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PAYMENT_REISSUE_DETAIL RD ON RD.PAYMENT_REISSUE_DETAIL_ID = PA.PAYMENT_REISSUE_DETAIL_ID           &#xD;&#xA;      LEFT OUTER JOIN SGT_PERSON PAYP ON PAYP.PERSON_ID=PA.PERSON_ID --PIR 826&#xD;&#xA;                  LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID&#xD;&#xA;             WHERE &#xD;&#xA;      PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;      AND PIT.ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;      AND PIT.ITEM_TYPE_CODE NOT IN ('ITEM45', 'ITEM46' ,'ITEM47','ITEM56') &#xD;&#xA;      AND PA.PAYEE_ACCOUNT_ACH_DETAIL_ID IS NULL&#xD;&#xA;             &#xD;&#xA;    GROUP BY PHH.PAYMENT_HISTORY_HEADER_ID,PHH.PERSON_ID,PHH.ORG_ID,PHH.PAYEE_ACCOUNT_ID,SCH.CHECK_MESSAGE,&#xD;&#xA;      PBXR.BENEFIT_OPTION_VALUE,PAYP.LAST_NAME,PAYP.MIDDLE_NAME,PAYP.FIRST_NAME,PA.TRANSFER_ORG_ID,&#xD;&#xA;      PA.TRANSFER_ORG_CONTACT_NAME, PA.PAYMENT_REISSUE_DETAIL_ID&#xD;&#xA;&#xD;&#xA;      ) AS PAYMENT&#xD;&#xA;  LEFT OUTER JOIN SGT_PERSON P ON PAYMENT.PERSON_ID = P.PERSON_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_ORGANIZATION O ON PAYMENT.ORG_ID = O.ORG_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_ORG_ADDRESS OCA ON O.ORG_ID = OCA.ORG_ID AND OCA.START_DATE &lt;= @PAYMENTDATE &#xD;&#xA;     AND (OCA.END_DATE IS NULL OR OCA.END_DATE &gt;= @PAYMENTDATE) AND OCA.ADDRESS_TYPE_VALUE IN ('PYAM','MAIL')&#xD;&#xA;  LEFT OUTER JOIN &#xD;&#xA;       ( &#xD;&#xA;   SELECT  P.PERSON_ID, &#xD;&#xA;                    PA1.ADDR_LINE_1 AS ADDR_LINE_1,&#xD;&#xA;                    PA1.ADDR_LINE_2 AS ADDR_LINE_2,&#xD;&#xA;     PA1.ADDR_CITY  AS ADDR_CITY,&#xD;&#xA;     PA1.ADDR_STATE_ID  AS ADDR_STATE_ID,&#xD;&#xA;     CASE WHEN PAC.ADDRESS_TYPE_VALUE='MAIL' OR PAC.ADDRESS_TYPE_VALUE IS NULL  then 1 ELSE 2 END AS ADDRESS_TYPE,&#xD;&#xA;     PA1.ADDR_STATE_VALUE AS ADDR_STATE_VALUE,&#xD;&#xA;     PA1.ADDR_COUNTRY_ID  AS ADDR_COUNTRY_ID,&#xD;&#xA;     PA1.ADDR_COUNTRY_VALUE  AS ADDR_COUNTRY_VALUE,&#xD;&#xA;     PA1.ADDR_ZIP_CODE AS ADDR_ZIP_CODE,&#xD;&#xA;     PA1.ADDR_ZIP_4_CODE  AS ADDR_ZIP_4_CODE,&#xD;&#xA;     PA1.FOREIGN_PROVINCE  AS FOREIGN_PROVINCE,&#xD;&#xA;     PA1.FOREIGN_POSTAL_CODE  AS FOREIGN_POSTAL_CODE&#xD;&#xA;     FROM SGT_PERSON P &#xD;&#xA;   LEFT OUTER JOIN SGT_PERSON_ADDRESS PA1 ON P.PERSON_ID  = PA1.PERSON_ID  &#xD;&#xA;                           AND PA1.START_DATE &lt;= @PAYMENTDATE AND (PA1.END_DATE IS NULL OR PA1.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;            INNER JOIN SGT_PERSON_ADDRESS_CHKLIST PAC ON PA1.ADDRESS_ID=PAC.ADDRESS_ID WHERE PAC.ADDRESS_TYPE_VALUE='MAIL'&#xD;&#xA;        ) AS PERADDR ON PERADDR.PERSON_ID=PAYMENT.PERSON_ID&#xD;&#xA;&#xD;&#xA;  LEFT OUTER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT DISTINCT PAYEE_ACCOUNT_ID &#xD;&#xA;     FROM SGT_PAYMENT_HISTORY_DISTRIBUTION CHK&#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER CHKHD ON CHK.PAYMENT_HISTORY_HEADER_ID = CHKHD.PAYMENT_HISTORY_HEADER_ID    &#xD;&#xA;   WHERE &#xD;&#xA;     PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID &#xD;&#xA;     AND PAYMENT_METHOD_VALUE  IN ('ACH','WIRE')&#xD;&#xA;     AND CHKHD.ORG_ID IS NULL&#xD;&#xA;  ) AS CHECKSPAID ON PAYMENT.PAYEE_ACCOUNT_ID   = CHECKSPAID.PAYEE_ACCOUNT_ID &#xD;&#xA;  WHERE CHECKSPAID.PAYEE_ACCOUNT_ID IS NULL&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;)TEMP &#xD;&#xA;&#xD;&#xA;ORDER BY PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#xD;&#xA;IF EXISTS &#xD;&#xA;        (&#xD;&#xA;        SELECT * from SGT_PAYMENT_HISTORY_DISTRIBUTION PHD &#xD;&#xA;                    INNER JOIN  SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;                    ON PHH.PAYMENT_HISTORY_HEADER_ID=PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                    WHERE PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID AND PAYMENT_METHOD_VALUE IN ('CHK','RCHK'))&#xD;&#xA; BEGIN&#xD;&#xA;      SELECT @CHECKNO=MAX(CHECK_NUMBER) from SGT_PAYMENT_HISTORY_DISTRIBUTION PHD &#xD;&#xA;                    INNER JOIN  SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;                    ON PHH.PAYMENT_HISTORY_HEADER_ID=PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                    WHERE PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID &#xD;&#xA;                    &#xD;&#xA; END&#xD;&#xA;&#xD;&#xA;--- ROLLOVER DISTRIBUTION&#xD;&#xA;INSERT INTO SGT_PAYMENT_HISTORY_DISTRIBUTION&#xD;&#xA;(&#xD;&#xA;       PAYMENT_HISTORY_HEADER_ID, PAYMENT_METHOD_ID, PAYMENT_METHOD_VALUE,CHECK_ACH_EFFECTIVE_DATE, &#xD;&#xA;       CHECK_MESSAGE, DISTRIBUTION_STATUS_ID, DISTRIBUTION_STATUS_VALUE, NET_AMOUNT, CHECK_NUMBER,&#xD;&#xA;       OLD_DISTRIBUTION_ID, RECIPIENT_NAME, FBO_CO, ADDR_LINE_1, ADDR_LINE_2,ADDR_LINE_3, ADDR_CITY, ADDR_STATE_ID, ADDR_STATE_VALUE, &#xD;&#xA;       ADDR_COUNTRY_ID, ADDR_COUNTRY_VALUE, ADDR_ZIP_CODE, ADDR_ZIP_4_CODE, FOREIGN_PROVINCE, FOREIGN_POSTAL_CODE, &#xD;&#xA;       BANK_NAME, ROUTING_NUMBER, ACCOUNT_TYPE_ID, ACCOUNT_TYPE_VALUE, ACCOUNT_NUMBER, PERSON_ID, ORG_ID,ROLLOVER_ACCOUNT_NO, &#xD;&#xA;       CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;  PAYMENT_HISTORY_HEADER_ID, PAYMENT_METHOD_ID, PAYMENT_METHOD_VALUE, CHECK_ACH_EFFECTIVE_DATE,CHECK_MESSAGE,&#xD;&#xA;  DISTRIBUTION_STATUS_ID, DISTRIBUTION_STATUS_VALUE, NET_AMOUNT,CHECK_NUMBER,&#xD;&#xA;  NULL AS OLD_DISTRIBUTION_ID, --ASK ONCE OLD_DISTRIBUTION_ID&#xD;&#xA;  RECIPIENT_NAME, FBO_CO, ADDR_LINE_1, ADDR_LINE_2,ADDR_LINE_3, ADDR_CITY, ADDR_STATE_ID, &#xD;&#xA;  ADDR_STATE_VALUE, ADDR_COUNTRY_ID, ADDR_COUNTRY_VALUE, ADDR_ZIP_CODE, ADDR_ZIP_4_CODE,&#xD;&#xA;  FOREIGN_PROVINCE, FOREIGN_POSTAL_CODE, BANK_NAME, ROUTING_NUMBER, &#xD;&#xA;  ACCOUNT_TYPE_ID, ACCOUNT_TYPE_VALUE, ACCOUNT_NUMBER, PERSON_ID, ORG_ID,ROLLOVER_ACCOUNT_NO, CREATED_BY, &#xD;&#xA;  CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ  &#xD;&#xA;FROM &#xD;&#xA;      (&#xD;&#xA;       SELECT &#xD;&#xA;            PAYMENT.PAYMENT_HISTORY_HEADER_ID, &#xD;&#xA;            @EFFECTIVE_DATE AS CHECK_ACH_EFFECTIVE_DATE,&#xD;&#xA;            PAYMENT.PERSON_ID,&#xD;&#xA;            PAYMENT.ROLLOVER_ORG_ID as ORG_ID,PAYMENT.PAYEE_ACCOUNT_ID,&#xD;&#xA;            PAYMENT.AMOUNT AS NET_AMOUNT,&#xD;&#xA;            PAYMENT.CHECK_MESSAGE,&#xD;&#xA;            7039 AS PAYMENT_METHOD_ID,&#xD;&#xA;            CASE WHEN PAYMENT.AMOUNT&gt;0 THEN 'RCHK'  ELSE NULL END AS PAYMENT_METHOD_VALUE, &#xD;&#xA;            7036 AS DISTRIBUTION_STATUS_ID,&#xD;&#xA;            CASE WHEN PAYMENT.AMOUNT&gt;0 THEN 'OUTS' ELSE  'CLRD' END AS DISTRIBUTION_STATUS_VALUE,&#xD;&#xA;            O.ORG_NAME AS RECIPIENT_NAME,&#xD;&#xA;            -- PROD PIR 267 This is causing the last name to become truncated. so middle name removed. + ISNULL(RTRIM(LTRIM(PPSN.MIDDLE_NAME)) +' ','')&#xD;&#xA;            ('FBO: '+ CASE WHEN PPSN.FIRST_NAME IS NULL AND PPSN.LAST_NAME IS NULL AND OOSN.ORG_NAME IS NOT NULL THEN ISNULL(RTRIM(LTRIM(OOSN.ORG_NAME)),'') ELSE ISNULL(RTRIM(PPSN.FIRST_NAME) +' ','') + ISNULL(RTRIM(LTRIM(PPSN.LAST_NAME)),'') END) --PIR 964&#xD;&#xA;             AS FBO_CO,&#xD;&#xA;            NULL as BANK_ORG_ID,&#xD;&#xA;            NULL as BANK_NAME,&#xD;&#xA;            CASE WHEN PAYMENT.AMOUNT&gt;0 THEN (ROW_NUMBER() OVER ( ORDER BY PAYMENT.AMOUNT desc))+@CHECKNO ELSE  NULL END AS CHECK_NUMBER,           &#xD;&#xA;            NULL AS ROUTING_NUMBER,&#xD;&#xA;            NULL AS ACCOUNT_TYPE_ID,&#xD;&#xA;            NULL AS ACCOUNT_TYPE_VALUE,&#xD;&#xA;            NULL AS ACCOUNT_NUMBER,&#xD;&#xA;            PARD.ACCOUNT_NUMBER AS ROLLOVER_ACCOUNT_NO,&#xD;&#xA;            CASE WHEN PARD.CONTACT_NAME IS NOT NULL THEN PARD.CONTACT_NAME ELSE  PARD.ADDR_LINE_1 END  AS ADDR_LINE_1,&#xD;&#xA;            CASE WHEN PARD.CONTACT_NAME IS NOT NULL THEN PARD.ADDR_LINE_1 ELSE  PARD.ADDR_LINE_2 END  AS ADDR_LINE_2,&#xD;&#xA;            CASE WHEN PARD.CONTACT_NAME IS NOT NULL THEN PARD.ADDR_LINE_2 ELSE  NULL END  AS ADDR_LINE_3,&#xD;&#xA;            PARD.CITY AS ADDR_CITY,&#xD;&#xA;            PARD.STATE_ID AS ADDR_STATE_ID,&#xD;&#xA;            PARD.STATE_VALUE AS ADDR_STATE_VALUE,&#xD;&#xA;            PARD.COUNTRY_ID AS ADDR_COUNTRY_ID,&#xD;&#xA;            PARD.COUNTRY_VALUE AS ADDR_COUNTRY_VALUE,&#xD;&#xA;            PARD.ZIP_CODE AS ADDR_ZIP_CODE,&#xD;&#xA;            PARD.ZIP_4_CODE AS ADDR_ZIP_4_CODE,&#xD;&#xA;            NULL AS FOREIGN_PROVINCE,&#xD;&#xA;            NULL AS FOREIGN_POSTAL_CODE, &#xD;&#xA;            'OPUS Batch' AS  CREATED_BY ,GETDATE() AS CREATED_DATE,&#xD;&#xA;            'OPUS Batch' AS  MODIFIED_BY ,GETDATE() AS MODIFIED_DATE,0 UPDATE_SEQ&#xD;&#xA;      FROM&#xD;&#xA;      (&#xD;&#xA;            &#xD;&#xA;            SELECT &#xD;&#xA;                 PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;                 PHH.PERSON_ID,PHH.ORG_ID,&#xD;&#xA;     PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;     PHH.ORG_ID as ROLLOVER_ORG_ID,   &#xD;&#xA;                 PS.CHECK_MESSAGE,&#xD;&#xA;                 SUM(PHD.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT&#xD;&#xA;                 FROM SGT_PAYMENT_HISTORY_DETAIL  PHD WITH(NOLOCK) &#xD;&#xA;                 INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)  &#xD;&#xA;                            ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;                 INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) &#xD;&#xA;                            ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;                 INNER JOIN SGT_PAYMENT_SCHEDULE PS WITH(NOLOCK)  &#xD;&#xA;                            ON PS.PAYMENT_SCHEDULE_ID=PHH.PAYMENT_SCHEDULE_ID&#xD;&#xA;                 --INNER JOIN TEMP_TABLE_FOR_PAYMENT PA WITH(NOLOCK)  &#xD;&#xA;                 --           ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID -- PIR 637&#xD;&#xA;                WHERE &#xD;&#xA;                PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;                AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'CRET' &#xD;&#xA;                AND PIT.ITEM_TYPE_CODE NOT IN ('ITEM45', 'ITEM46' ,'ITEM47','ITEM56')          &#xD;&#xA;           GROUP BY  PHH.PAYMENT_HISTORY_HEADER_ID,PHH.PERSON_ID,PHH.ORG_ID,PHH.PAYEE_ACCOUNT_ID,PHD.ROLLOVER_ORG_ID,PS.CHECK_MESSAGE   &#xD;&#xA;      ) AS PAYMENT&#xD;&#xA;     &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK) ON PARD.PAYEE_ACCOUNT_ID = PAYMENT.PAYEE_ACCOUNT_ID AND PARD.ROLLOVER_ORG_ID = PAYMENT.ROLLOVER_ORG_ID  &#xD;&#xA;      LEFT OUTER JOIN SGT_PERSON P WITH(NOLOCK) ON PAYMENT.PERSON_ID = P.PERSON_ID                     &#xD;&#xA;      LEFT OUTER JOIN SGT_ORGANIZATION O WITH(NOLOCK) ON O.ORG_ID = PARD.ROLLOVER_ORG_ID  AND O.PAYMENT_TYPE_VALUE = 'RCHK' &#xD;&#xA;      LEFT OUTER JOIN SGT_PAYEE_ACCOUNT PAACT WITH(NOLOCK) ON PAYMENT.PAYEE_ACCOUNT_ID = PAACT.PAYEE_ACCOUNT_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PERSON PPSN WITH(NOLOCK) ON  PAACT.PERSON_ID = PPSN.PERSON_ID&#xD;&#xA;&#x9;  LEFT OUTER JOIN SGT_ORGANIZATION OOSN WITH(NOLOCK) ON  PAACT.ORG_ID = OOSN.ORG_ID --PIR 964&#xD;&#xA;   LEFT OUTER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT &#xD;&#xA;   DISTINCT PAYEE_ACCOUNT_ID &#xD;&#xA;   FROM SGT_PAYMENT_HISTORY_DISTRIBUTION CHK&#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER CHKHD ON CHK.PAYMENT_HISTORY_HEADER_ID = CHKHD.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;   WHERE &#xD;&#xA;   PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID AND &#xD;&#xA;   PAYMENT_METHOD_VALUE  IN ('RACH')&#xD;&#xA;   AND CHKHD.ORG_ID IS NOT NULL&#xD;&#xA;  ) AS CHECKSPAID ON PAYMENT.PAYEE_ACCOUNT_ID = CHECKSPAID.PAYEE_ACCOUNT_ID &#xD;&#xA;WHERE  &#xD;&#xA; CHECKSPAID.PAYEE_ACCOUNT_ID IS NULL AND PARD.STATUS_VALUE = 'ACTV' &#xD;&#xA;&#xD;&#xA;)TEMP &#xD;&#xA;WHERE NET_AMOUNT &gt; 0 ORDER BY PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#xD;&#xA;IF EXISTS &#xD;&#xA;        (SELECT * from SGT_PAYMENT_HISTORY_DISTRIBUTION PHD &#xD;&#xA;                    INNER JOIN  SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;                    ON PHH.PAYMENT_HISTORY_HEADER_ID=PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                    WHERE PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID AND PAYMENT_METHOD_VALUE IN ('CHK','RCHK'))&#xD;&#xA; BEGIN&#xD;&#xA;      SELECT @CHECKNO=MAX(CHECK_NUMBER) from SGT_PAYMENT_HISTORY_DISTRIBUTION PHD &#xD;&#xA;                    INNER JOIN  SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;                    ON PHH.PAYMENT_HISTORY_HEADER_ID=PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                    WHERE PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID &#xD;&#xA;                    &#xD;&#xA; END&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;If @CHECKNO is not null begin&#xD;&#xA; UPDATE SGT_PAYMENT_CHECK_BOOK SET LAST_CHECK_NUMBER = @CHECKNO ,MODIFIED_BY='OPUS Batch',MODIFIED_DATE=GETDATE(),&#xD;&#xA; UPDATE_SEQ = UPDATE_SEQ+1&#xD;&#xA; WHERE @CHECKBOOKID  = CHECK_BOOK_ID&#xD;&#xA; &#xD;&#xA; END">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CreateCheckHistoryforPayeesForDeduction" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Declare @EFFECTIVE_DATE datetime&#xD;&#xA;Declare @SCHEDULE_TYPE VARCHAR(4)&#xD;&#xA;SELECT TOP 1 @EFFECTIVE_DATE = ACH_EFFECTIVE_DATE,&#xD;&#xA;    @SCHEDULE_TYPE= SCHEDULE_TYPE_VALUE   &#xD;&#xA; FROM SGT_PAYMENT_SCHEDULE WITH(NOLOCK) &#xD;&#xA; WHERE PAYMENT_SCHEDULE_ID  = @PAYMENTSCHEDULEID&#xD;&#xA; ORDER BY PAYMENT_DATE DESC&#xD;&#xA;IF @SCHEDULE_TYPE IN ('MTLY','ADHM')&#xD;&#xA;SET @SCHEDULE_TYPE='PENC'&#xD;&#xA;ELSE &#xD;&#xA;SET @SCHEDULE_TYPE='IAPC'&#xD;&#xA;&#xD;&#xA;Declare @checkNo varchar(20)&#xD;&#xA;Declare @CheckBookId int&#xD;&#xA;Declare @lastCheckId  Int&#xD;&#xA;SELECT &#xD;&#xA;      TOP 1 @CHECKNO = CASE WHEN ISNULL(LAST_CHECK_NUMBER,'') = '' THEN FIRST_CHECK_NUMBER ELSE LAST_CHECK_NUMBER END,&#xD;&#xA;   @CheckBookId  = CHECK_BOOK_ID&#xD;&#xA;    FROM SGT_PAYMENT_CHECK_BOOK WITH(NOLOCK) &#xD;&#xA;    WHERE EFFECTIVE_DATE=(SELECT MAX(EFFECTIVE_DATE)FROM SGT_PAYMENT_CHECK_BOOK WITH(NOLOCK) WHERE EFFECTIVE_DATE&lt;=@PAYMENTDATE&#xD;&#xA;    and  CHECK_TYPE_VALUE=@SCHEDULE_TYPE&#xD;&#xA;    )&#xD;&#xA;    AND CHECK_TYPE_VALUE=@SCHEDULE_TYPE&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PAYMENT_HISTORY_DISTRIBUTION&#xD;&#xA;(&#xD;&#xA;       PAYMENT_HISTORY_HEADER_ID, PAYMENT_METHOD_ID, PAYMENT_METHOD_VALUE,CHECK_ACH_EFFECTIVE_DATE, &#xD;&#xA;       CHECK_MESSAGE, DISTRIBUTION_STATUS_ID, DISTRIBUTION_STATUS_VALUE, NET_AMOUNT, CHECK_NUMBER,&#xD;&#xA;       OLD_DISTRIBUTION_ID, RECIPIENT_NAME, FBO_CO, ADDR_LINE_1, ADDR_LINE_2, ADDR_CITY, ADDR_STATE_ID, ADDR_STATE_VALUE, &#xD;&#xA;       ADDR_COUNTRY_ID, ADDR_COUNTRY_VALUE, ADDR_ZIP_CODE, ADDR_ZIP_4_CODE, FOREIGN_PROVINCE, FOREIGN_POSTAL_CODE, &#xD;&#xA;       BANK_NAME, ROUTING_NUMBER, ACCOUNT_TYPE_ID, ACCOUNT_TYPE_VALUE, ACCOUNT_NUMBER,ROLLOVER_ACCOUNT_NO, PERSON_ID, ORG_ID, &#xD;&#xA;       CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;      PAYMENT_HISTORY_HEADER_ID, PAYMENT_METHOD_ID, PAYMENT_METHOD_VALUE, CHECK_ACH_EFFECTIVE_DATE,CHECK_MESSAGE,&#xD;&#xA;       DISTRIBUTION_STATUS_ID, DISTRIBUTION_STATUS_VALUE, NET_AMOUNT,CHECK_NUMBER,&#xD;&#xA;       NULL AS OLD_DISTRIBUTION_ID, --ASK ONCE OLD_DISTRIBUTION_ID&#xD;&#xA;       RECIPIENT_NAME, FBO_CO, ADDR_LINE_1, ADDR_LINE_2, ADDR_CITY, ADDR_STATE_ID, &#xD;&#xA;       ADDR_STATE_VALUE, ADDR_COUNTRY_ID, ADDR_COUNTRY_VALUE, ADDR_ZIP_CODE, ADDR_ZIP_4_CODE,&#xD;&#xA;       FOREIGN_PROVINCE, FOREIGN_POSTAL_CODE, BANK_NAME, ROUTING_NUMBER, &#xD;&#xA;       ACCOUNT_TYPE_ID, ACCOUNT_TYPE_VALUE, ACCOUNT_NUMBER,ROLLOVER_ACCOUNT_NO, PERSON_ID, ORG_ID, CREATED_BY, &#xD;&#xA;       CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ  &#xD;&#xA;      FROM &#xD;&#xA;      (&#xD;&#xA;      SELECT &#xD;&#xA;            PAYMENT.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;            @EFFECTIVE_DATE AS CHECK_ACH_EFFECTIVE_DATE,&#xD;&#xA;            PAYMENT.DEDUCTION_PERSON_ID AS PERSON_ID,&#xD;&#xA;            PAYMENT.DEDUCTION_ORG_ID as ORG_ID,PAYMENT.PAYEE_ACCOUNT_ID,&#xD;&#xA;            PAYMENT.AMOUNT AS NET_AMOUNT,&#xD;&#xA;            PAYMENT.CHECK_MESSAGE,&#xD;&#xA;            7039 AS PAYMENT_METHOD_ID,&#xD;&#xA;            CASE WHEN PAYMENT.PERSON_ID IS NOT NULL  THEN 'CHK' ELSE O.PAYMENT_TYPE_VALUE END AS PAYMENT_METHOD_VALUE,&#xD;&#xA;            7036 AS DISTRIBUTION_STATUS_ID,&#xD;&#xA;            'OUTS' AS DISTRIBUTION_STATUS_VALUE,&#xD;&#xA;            --CASE WHEN PAYMENT.PERSON_ID IS NOT NULL  THEN  ISNULL(P.FIRST_NAME,'') +' '+ ISNULL(P.MIDDLE_NAME,'') +' '+ ISNULL(P.LAST_NAME,'') else O.ORG_NAME END AS RECIPIENT_NAME,&#xD;&#xA;            CASE WHEN PAYMENT.DEDUCTION_TYPE NOT IN ('IRS_Levy')  &#xD;&#xA;                 THEN&#xD;&#xA;                      CASE &#xD;&#xA;                      WHEN PAYMENT.PERSON_ID IS NOT NULL  &#xD;&#xA;                      THEN  ISNULL(RTRIM(LTRIM(P.FIRST_NAME))+' ','') + ISNULL(RTRIM(LTRIM(P.MIDDLE_NAME))+' ','') + ISNULL(RTRIM(LTRIM(P.LAST_NAME)),'')  &#xD;&#xA;                      ELSE O.ORG_NAME &#xD;&#xA;                      END&#xD;&#xA;                 ELSE 'INTERNAL REVENUE SERVICES' &#xD;&#xA;            END AS RECIPIENT_NAME,&#xD;&#xA;            CASE WHEN PAYMENT.DEDUCTION_TYPE NOT IN ('IRS_Levy')  &#xD;&#xA;                 THEN&#xD;&#xA;                      CASE &#xD;&#xA;                      WHEN PAACT.PERSON_ID IS NOT NULL  &#xD;&#xA;                      -- PROD PIR 267 This is causing the last name to become truncated. so middle name removed. + ISNULL(RTRIM(LTRIM(PPSN.MIDDLE_NAME))+' ','')&#xD;&#xA;                      THEN  ISNULL(RTRIM(LTRIM(PPSN.FIRST_NAME))+' ','')  + ISNULL(RTRIM(LTRIM(PPSN.LAST_NAME)),'')  &#xD;&#xA;                      ELSE PORG.ORG_NAME &#xD;&#xA;                      END&#xD;&#xA;                      -- PROD PIR 267 This is causing the last name to become truncated. so middle name removed. + ISNULL(RTRIM(LTRIM(PPSN.MIDDLE_NAME))+' ','')&#xD;&#xA;                 ELSE (ISNULL(RTRIM(LTRIM('LEVY PROCEEDS: ' + ISNULL(RTRIM(LTRIM(PPSN.FIRST_NAME))+' ','') + ISNULL(RTRIM(LTRIM(PPSN.LAST_NAME)),''))),'')) &#xD;&#xA;            END AS FBO_CO,&#xD;&#xA;            BANK.ORG_ID AS BANK_ORG_ID,&#xD;&#xA;            BANK.ORG_NAME as BANK_NAME,&#xD;&#xA;   CASE WHEN ISNULL(O.PAYMENT_TYPE_VALUE,'CHK') &lt;&gt; 'ACH' AND  ISNULL(O.PAYMENT_TYPE_VALUE,'CHK') &lt;&gt; 'WIRE' THEN (ROW_NUMBER() OVER (ORDER BY PAYMENT.PAYMENT_HISTORY_HEADER_ID))+@CHECKNO ELSE NULL END  AS CHECK_NUMBER,&#xD;&#xA;            BANK.ROUTING_NUMBER AS ROUTING_NUMBER,&#xD;&#xA;            ORBANK.ACCOUNT_TYPE_ID AS ACCOUNT_TYPE_ID,&#xD;&#xA;            ORBANK.ACCOUNT_TYPE_VALUE AS ACCOUNT_TYPE_VALUE,&#xD;&#xA;            ORBANK.ACCOUNT_NO AS ACCOUNT_NUMBER,&#xD;&#xA;             CASE WHEN PAYMENT.DEDUCTION_TYPE IN ('IRS_Levy')  THEN (ISNULL(RTRIM(LTRIM('SS# ' + PPSN.SSN)),'')) ELSE NULL END AS ROLLOVER_ACCOUNT_NO,&#xD;&#xA;            --CASE WHEN PAYMENT.DEDUCTION_PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_1 ELSE ORGADDR.ADDR_LINE_1 END AS ADDR_LINE_1 ,&#xD;&#xA;            --CASE WHEN PAYMENT.DEDUCTION_PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_2 ELSE ORGADDR.ADDR_LINE_2 END AS ADDR_LINE_2 ,&#xD;&#xA;            CASE WHEN PAYMENT.DEDUCTION_PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_1 &#xD;&#xA;             ELSE &#xD;&#xA;             CASE WHEN O.CARE_OF IS NOT NULL THEN (ISNULL(RTRIM(LTRIM('C/O ' + O.CARE_OF)),'')) ELSE ORGADDR.ADDR_LINE_1 END &#xD;&#xA;   END AS ADDR_LINE_1,&#xD;&#xA;   CASE WHEN PAYMENT.DEDUCTION_PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_2 &#xD;&#xA;             ELSE &#xD;&#xA;             CASE WHEN O.CARE_OF IS NOT NULL THEN ORGADDR.ADDR_LINE_1 ELSE ORGADDR.ADDR_LINE_2 END &#xD;&#xA;   END AS ADDR_LINE_2,&#xD;&#xA;   CASE WHEN PAYMENT.DEDUCTION_PERSON_ID IS NOT NULL THEN NULL &#xD;&#xA;             ELSE &#xD;&#xA;             CASE WHEN O.CARE_OF IS NOT NULL THEN ORGADDR.ADDR_LINE_2 ELSE NULL END &#xD;&#xA;   END AS ADDR_LINE_3,&#xD;&#xA;   CASE WHEN PAYMENT.DEDUCTION_PERSON_ID IS NOT NULL THEN PERADDR.ADDR_CITY ELSE ORGADDR.ADDR_CITY END AS  ADDR_CITY ,&#xD;&#xA;            CASE WHEN PAYMENT.DEDUCTION_PERSON_ID IS NOT NULL THEN PERADDR.ADDR_STATE_ID ELSE ORGADDR.ADDR_STATE_ID END AS ADDR_STATE_ID ,&#xD;&#xA;            CASE WHEN PAYMENT.DEDUCTION_PERSON_ID IS NOT NULL THEN PERADDR.ADDR_STATE_VALUE ELSE ORGADDR.ADDR_STATE_VALUE END AS ADDR_STATE_VALUE ,&#xD;&#xA;            CASE WHEN PAYMENT.DEDUCTION_PERSON_ID IS NOT NULL THEN PERADDR.ADDR_COUNTRY_ID ELSE ORGADDR.ADDR_COUNTRY_ID END AS ADDR_COUNTRY_ID,&#xD;&#xA;            CASE WHEN PAYMENT.DEDUCTION_PERSON_ID IS NOT NULL THEN PERADDR.ADDR_COUNTRY_VALUE ELSE ORGADDR.ADDR_COUNTRY_VALUE END AS ADDR_COUNTRY_VALUE,&#xD;&#xA;            CASE WHEN PAYMENT.DEDUCTION_PERSON_ID IS NOT NULL THEN PERADDR.ADDR_ZIP_CODE ELSE ORGADDR.ADDR_ZIP_CODE END AS ADDR_ZIP_CODE,&#xD;&#xA;            CASE WHEN PAYMENT.DEDUCTION_PERSON_ID IS NOT NULL THEN PERADDR.ADDR_ZIP_4_CODE ELSE ORGADDR.ADDR_ZIP_4_CODE END AS ADDR_ZIP_4_CODE,&#xD;&#xA;            CASE WHEN PAYMENT.DEDUCTION_PERSON_ID IS NOT NULL THEN PERADDR.FOREIGN_PROVINCE ELSE ORGADDR.FOREIGN_PROVINCE END AS FOREIGN_PROVINCE,&#xD;&#xA;            CASE WHEN PAYMENT.DEDUCTION_PERSON_ID IS NOT NULL THEN PERADDR.FOREIGN_POSTAL_CODE ELSE ORGADDR.FOREIGN_POSTAL_CODE END AS FOREIGN_POSTAL_CODE,&#xD;&#xA;            'OPUS Batch' AS  CREATED_BY ,GETDATE() AS CREATED_DATE,&#xD;&#xA;            'OPUS Batch' AS  MODIFIED_BY ,GETDATE() AS MODIFIED_DATE,0 UPDATE_SEQ&#xD;&#xA;      FROM&#xD;&#xA;      (&#xD;&#xA;            &#xD;&#xA;            SELECT &#xD;&#xA;                 PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;                 PHH.PERSON_ID,&#xD;&#xA;        PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;       PHH.ORG_ID as DEDUCTION_ORG_ID,&#xD;&#xA;       PHH.PERSON_ID as DEDUCTION_PERSON_ID,  --&#xD;&#xA;                 PS.CHECK_MESSAGE,&#xD;&#xA;                 SUM(PHD.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT,&#xD;&#xA;                 PIT.ITEM_TYPE_CODE,&#xD;&#xA;                CASE WHEN PIT.ITEM_TYPE_CODE='ITEM46' THEN 'Spousal_Support' &#xD;&#xA;                                          ELSE &#xD;&#xA;                                             CASE WHEN PIT.ITEM_TYPE_CODE='ITEM47'  THEN 'Deduction_Other'&#xD;&#xA;                                             ELSE &#xD;&#xA;                                                    CASE WHEN PIT.ITEM_TYPE_CODE='ITEM56'  THEN 'IRS_Levy'&#xD;&#xA;                                                    ELSE &#xD;&#xA;                                                        CASE WHEN PIT.ITEM_TYPE_CODE='ITEM45'  THEN 'Child_Support' &#xD;&#xA;                                                        ELSE NULL&#xD;&#xA;                                                        END&#xD;&#xA;                                                    END &#xD;&#xA;                                              END &#xD;&#xA;                                           END AS DEDUCTION_TYPE&#xD;&#xA;                FROM SGT_PAYMENT_HISTORY_DETAIL  PHD WITH(NOLOCK) &#xD;&#xA;                 INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)  &#xD;&#xA;                            ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;                 INNER JOIN TEMP_TABLE_FOR_PAYMENT PA WITH(NOLOCK)  &#xD;&#xA;                            ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID &#xD;&#xA;                 INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) &#xD;&#xA;                            ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;                 INNER JOIN SGT_PAYMENT_SCHEDULE PS WITH(NOLOCK)  ON PS.PAYMENT_SCHEDULE_ID=PHH.PAYMENT_SCHEDULE_ID&#xD;&#xA;                WHERE &#xD;&#xA;                PHH.PAYMENT_SCHEDULE_ID= @PAYMENTSCHEDULEID AND &#xD;&#xA;                (PIT.ITEM_TYPE_CODE='ITEM45' OR PIT.ITEM_TYPE_CODE='ITEM46' OR PIT.ITEM_TYPE_CODE='ITEM47' OR PIT.ITEM_TYPE_CODE='ITEM56')    &#xD;&#xA;           GROUP BY  PHH.PAYMENT_HISTORY_HEADER_ID,PHH.PERSON_ID,PHH.ORG_ID,PHH.PAYEE_ACCOUNT_ID,PHD.ROLLOVER_ORG_ID,PS.CHECK_MESSAGE,PIT.ITEM_TYPE_CODE   &#xD;&#xA;      ) AS PAYMENT&#xD;&#xA;      --INNER JOIN SGT_PAYEE_ACCOUNT_DEDUCTION PAD WITH(NOLOCK)   &#xD;&#xA;      --           ON PAD.PAYEE_ACCOUNT_ID = PAYMENT.PAYEE_ACCOUNT_ID AND (PAD.PERSON_ID=PAYMENT.DEDUCTION_PERSON_ID OR PAD.ORG_ID=PAYMENT.DEDUCTION_ORG_ID)  &#xD;&#xA;      LEFT OUTER JOIN SGT_PERSON P WITH(NOLOCK)  &#xD;&#xA;                      ON PAYMENT.DEDUCTION_PERSON_ID = P.PERSON_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_ORGANIZATION O WITH(NOLOCK)  &#xD;&#xA;                      ON O.ORG_ID = PAYMENT.DEDUCTION_ORG_ID&#xD;&#xA;                      --AND O.PAYMENT_TYPE_VALUE = 'CHK'  /*COMMENTED AND ADDED BELOW JOIN SINCE THERE ARE TWO CHILD SUPPORT PAYMENTS RECV ACH*/&#xD;&#xA;      LEFT OUTER JOIN SGT_ORG_BANK ORBANK WITH(NOLOCK) ON O.ORG_ID = ORBANK.ORG_ID AND ORBANK.STATUS_VALUE = 'ACTV'&#xD;&#xA;      LEFT OUTER JOIN SGT_ORGANIZATION BANK WITH(NOLOCK) ON ORBANK.BANK_ORG_ID = BANK.ORG_ID &#xD;&#xA;      LEFT OUTER JOIN SGT_PAYEE_ACCOUNT PAACT WITH(NOLOCK) &#xD;&#xA;                      ON PAYMENT.PAYEE_ACCOUNT_ID = PAACT.PAYEE_ACCOUNT_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PERSON PPSN WITH(NOLOCK) &#xD;&#xA;                      ON  PAACT.PERSON_ID = PPSN.PERSON_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_ORGANIZATION PORG WITH(NOLOCK)&#xD;&#xA;       ON PAACT.ORG_ID = PORG.ORG_ID&#xD;&#xA;   LEFT OUTER JOIN &#xD;&#xA;          (SELECT  P.PERSON_ID, &#xD;&#xA;                                 PA1.ADDR_LINE_1 AS ADDR_LINE_1,&#xD;&#xA;                                 PA1.ADDR_LINE_2 AS ADDR_LINE_2,&#xD;&#xA;         PA1.ADDR_CITY  AS ADDR_CITY,&#xD;&#xA;         PA1.ADDR_STATE_ID  AS ADDR_STATE_ID,&#xD;&#xA;         CASE WHEN PAC.ADDRESS_TYPE_VALUE='MAIL' OR PAC.ADDRESS_TYPE_VALUE IS NULL  then 1 ELSE 2 END AS ADDRESS_TYPE,&#xD;&#xA;         PA1.ADDR_STATE_VALUE AS ADDR_STATE_VALUE,&#xD;&#xA;            PA1.ADDR_COUNTRY_ID  AS ADDR_COUNTRY_ID,&#xD;&#xA;                                 PA1.ADDR_COUNTRY_VALUE  AS ADDR_COUNTRY_VALUE,&#xD;&#xA;                                 PA1.ADDR_ZIP_CODE AS ADDR_ZIP_CODE,&#xD;&#xA;                                 PA1.ADDR_ZIP_4_CODE  AS ADDR_ZIP_4_CODE,&#xD;&#xA;                                 PA1.FOREIGN_PROVINCE  AS FOREIGN_PROVINCE,&#xD;&#xA;                                 PA1.FOREIGN_POSTAL_CODE  AS FOREIGN_POSTAL_CODE&#xD;&#xA;                           FROM SGT_PERSON P &#xD;&#xA;                           LEFT OUTER JOIN SGT_PERSON_ADDRESS PA1   &#xD;&#xA;                           ON P.PERSON_ID  = PA1.PERSON_ID  &#xD;&#xA;                           AND PA1.START_DATE &lt;= @PAYMENTDATE AND (PA1.END_DATE IS NULL OR PA1.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;                           INNER JOIN SGT_PERSON_ADDRESS_CHKLIST PAC ON PA1.ADDRESS_ID=PAC.ADDRESS_ID&#xD;&#xA;                           WHERE PAC.ADDRESS_TYPE_VALUE='MAIL'&#xD;&#xA;                          &#xD;&#xA;            &#xD;&#xA;            )AS PERADDR ON PERADDR.PERSON_ID=PAYMENT.DEDUCTION_PERSON_ID&#xD;&#xA;    LEFT OUTER JOIN &#xD;&#xA;                   (SELECT  P.ORG_ID, &#xD;&#xA;                                 PA1.ADDR_LINE_1 AS ADDR_LINE_1,&#xD;&#xA;                                 PA1.ADDR_LINE_2 AS ADDR_LINE_2,&#xD;&#xA;         PA1.CITY  AS ADDR_CITY,&#xD;&#xA;         PA1.STATE_ID  AS ADDR_STATE_ID,&#xD;&#xA;         CASE WHEN PA1.ADDRESS_TYPE_VALUE='MAIL' OR PA1.ADDRESS_TYPE_VALUE IS NULL  then 1 ELSE 2 END AS ADDRESS_TYPE,&#xD;&#xA;         PA1.STATE_VALUE AS ADDR_STATE_VALUE,&#xD;&#xA;            PA1.COUNTRY_ID  AS ADDR_COUNTRY_ID,&#xD;&#xA;                                 PA1.COUNTRY_VALUE  AS ADDR_COUNTRY_VALUE,&#xD;&#xA;                                 PA1.ZIP_CODE AS ADDR_ZIP_CODE,&#xD;&#xA;                                 PA1.ZIP_4_CODE  AS ADDR_ZIP_4_CODE,&#xD;&#xA;                                 PA1.FOREIGN_PROVINCE  AS FOREIGN_PROVINCE,&#xD;&#xA;                                 PA1.FOREIGN_POSTAL_CODE  AS FOREIGN_POSTAL_CODE&#xD;&#xA;                           FROM SGT_ORGANIZATION P &#xD;&#xA;                           LEFT OUTER JOIN SGT_ORG_ADDRESS PA1   &#xD;&#xA;                           ON  P.ORG_ID  = PA1.ORG_ID  &#xD;&#xA;                           AND PA1.START_DATE &lt;= @PAYMENTDATE AND (PA1.END_DATE IS NULL OR PA1.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;         AND PA1.ADDRESS_TYPE_VALUE IN ('PYAM','MAIL')                           &#xD;&#xA;                          &#xD;&#xA;            )AS ORGADDR ON ORGADDR.ORG_ID=PAYMENT.DEDUCTION_ORG_ID&#xD;&#xA;&#xD;&#xA;)TEMP WHERE NET_AMOUNT &gt; 0 ORDER BY PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#xD;&#xA;IF EXISTS &#xD;&#xA;        (SELECT * from SGT_PAYMENT_HISTORY_DISTRIBUTION PHD &#xD;&#xA;                    INNER JOIN  SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;                    ON PHH.PAYMENT_HISTORY_HEADER_ID=PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                    WHERE PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID AND PAYMENT_METHOD_VALUE IN ('CHK','RCHK'))&#xD;&#xA; BEGIN&#xD;&#xA;      SELECT @CHECKNO=MAX(CHECK_NUMBER) from SGT_PAYMENT_HISTORY_DISTRIBUTION PHD &#xD;&#xA;                    INNER JOIN  SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;                    ON PHH.PAYMENT_HISTORY_HEADER_ID=PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                    WHERE PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID &#xD;&#xA;                    &#xD;&#xA; END&#xD;&#xA;&#xD;&#xA;If @CHECKNO is not null begin&#xD;&#xA; UPDATE SGT_PAYMENT_CHECK_BOOK SET LAST_CHECK_NUMBER = @CHECKNO ,MODIFIED_BY='OPUS Batch',MODIFIED_DATE=GETDATE(),&#xD;&#xA; UPDATE_SEQ = UPDATE_SEQ+1&#xD;&#xA; WHERE @CHECKBOOKID  = CHECK_BOOK_ID&#xD;&#xA; &#xD;&#xA;end">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CreateACHHistoryForPayees" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Declare @EFFECTIVE_DATE datetime&#xD;&#xA;SELECT TOP 1 @EFFECTIVE_DATE = ACH_EFFECTIVE_DATE   &#xD;&#xA; FROM SGT_PAYMENT_SCHEDULE WITH(NOLOCK) &#xD;&#xA; WHERE PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA; ORDER BY PAYMENT_DATE DESC&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PAYMENT_HISTORY_DISTRIBUTION&#xD;&#xA;(&#xD;&#xA;      PAYMENT_HISTORY_HEADER_ID, PAYMENT_METHOD_ID, PAYMENT_METHOD_VALUE, CHECK_MESSAGE,CHECK_ACH_EFFECTIVE_DATE,&#xD;&#xA;      DISTRIBUTION_STATUS_ID, DISTRIBUTION_STATUS_VALUE, NET_AMOUNT, CHECK_NUMBER, OLD_DISTRIBUTION_ID, RECIPIENT_NAME,&#xD;&#xA;      FBO_CO, ADDR_LINE_1, ADDR_LINE_2,ADDR_LINE_3, ADDR_CITY, ADDR_STATE_ID, ADDR_STATE_VALUE, ADDR_COUNTRY_ID, ADDR_COUNTRY_VALUE, &#xD;&#xA;      ADDR_ZIP_CODE, ADDR_ZIP_4_CODE, FOREIGN_PROVINCE, FOREIGN_POSTAL_CODE, BANK_NAME, ROUTING_NUMBER,&#xD;&#xA;      ACCOUNT_TYPE_ID, ACCOUNT_TYPE_VALUE, ACCOUNT_NUMBER, PERSON_ID, ORG_ID,&#xD;&#xA;      CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ, PAYEE_ACCOUNT_ACH_DETAIL_ID&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;SELECT&#xD;&#xA;      PAYMENT_HISTORY_HEADER_ID, PAYMENT_METHOD_ID, PAYMENT_METHOD_VALUE, CHECK_MESSAGE,CHECK_ACH_EFFECTIVE_DATE,&#xD;&#xA;      DISTRIBUTION_STATUS_ID, DISTRIBUTION_STATUS_VALUE, NET_AMOUNT, CHECK_NUMBER, OLD_DISTRIBUTION_ID, RECIPIENT_NAME, &#xD;&#xA;      FBO_CO, ADDR_LINE_1, ADDR_LINE_2,ADDR_LINE_3, ADDR_CITY, ADDR_STATE_ID, ADDR_STATE_VALUE, ADDR_COUNTRY_ID, ADDR_COUNTRY_VALUE, &#xD;&#xA;      ADDR_ZIP_CODE, ADDR_ZIP_4_CODE, FOREIGN_PROVINCE, FOREIGN_POSTAL_CODE,&#xD;&#xA;      BANK_NAME, ROUTING_NUMBER, ACCOUNT_TYPE_ID, ACCOUNT_TYPE_VALUE, ACCOUNT_NUMBER, PERSON_ID, ORG_ID,&#xD;&#xA;      'OPUS Batch' as  CREATED_BY ,getdate() as CREATED_DATE,'OPUS Batch' as  MODIFIED_BY ,getdate() as MODIFIED_DATE,0 UPDATE_SEQ, PAYEE_ACCOUNT_ACH_DETAIL_ID&#xD;&#xA;FROM (&#xD;&#xA;SELECT      &#xD;&#xA;       PAYMENT.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;       @EFFECTIVE_DATE AS CHECK_ACH_EFFECTIVE_DATE,&#xD;&#xA;       7039 AS PAYMENT_METHOD_ID,&#xD;&#xA;       CASE WHEN PAYMENT.AMOUNT&gt;0 THEN 'ACH'  ELSE NULL END AS PAYMENT_METHOD_VALUE,--aCCOUNT tRANSFER&#xD;&#xA;       PAYMENT.CHECK_MESSAGE,&#xD;&#xA;       7036 AS DISTRIBUTION_STATUS_ID,&#xD;&#xA;       CASE WHEN PAYMENT.AMOUNT&gt;0 THEN 'OUTS' ELSE  'CLRD' END AS DISTRIBUTION_STATUS_VALUE, &#xD;&#xA;       PAYMENT.AMOUNT AS NET_AMOUNT,         &#xD;&#xA;       NULL AS CHECK_NUMBER,&#xD;&#xA;       NULL AS OLD_DISTRIBUTION_ID,&#xD;&#xA;    CASE WHEN PAYMENT.PERSON_ID IS NOT NULL  THEN  ISNULL(P.FIRST_NAME,'') +' '+ ISNULL(P.MIDDLE_NAME,'') +' '+ ISNULL(P.LAST_NAME,'') else +ORG.ORG_NAME END AS RECIPIENT_NAME,             &#xD;&#xA;       NULL as FBO_CO,&#xD;&#xA;       CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_1 &#xD;&#xA;             ELSE &#xD;&#xA;             CASE WHEN PAYMENT.TRANSFER_ORG_CONTACT_NAME IS NOT NULL THEN (ISNULL(RTRIM(LTRIM('C/O ' + PAYMENT.TRANSFER_ORG_CONTACT_NAME)),'')) ELSE OCA.ADDR_LINE_1 END &#xD;&#xA;   END AS ADDR_LINE_1,&#xD;&#xA;   CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_2 &#xD;&#xA;             ELSE &#xD;&#xA;             CASE WHEN PAYMENT.TRANSFER_ORG_CONTACT_NAME IS NOT NULL THEN OCA.ADDR_LINE_1 ELSE OCA.ADDR_LINE_2 END &#xD;&#xA;   END AS ADDR_LINE_2,&#xD;&#xA;   CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN NULL &#xD;&#xA;             ELSE &#xD;&#xA;             CASE WHEN PAYMENT.TRANSFER_ORG_CONTACT_NAME IS NOT NULL THEN OCA.ADDR_LINE_2 ELSE NULL END &#xD;&#xA;   END AS ADDR_LINE_3,&#xD;&#xA;       CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_CITY ELSE OCA.CITY END AS ADDR_CITY,&#xD;&#xA;       CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_STATE_ID ELSE OCA.STATE_ID END AS ADDR_STATE_ID,&#xD;&#xA;       CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_STATE_VALUE ELSE OCA.STATE_VALUE END AS ADDR_STATE_VALUE,&#xD;&#xA;       CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_COUNTRY_ID ELSE OCA.COUNTRY_ID END AS ADDR_COUNTRY_ID,&#xD;&#xA;       CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_COUNTRY_VALUE ELSE OCA.COUNTRY_VALUE END AS ADDR_COUNTRY_VALUE,&#xD;&#xA;       CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_ZIP_CODE ELSE OCA.ZIP_CODE END AS ADDR_ZIP_CODE,&#xD;&#xA;       CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_ZIP_4_CODE ELSE OCA.ZIP_4_CODE END AS ADDR_ZIP_4_CODE,&#xD;&#xA;       CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.FOREIGN_PROVINCE ELSE OCA.FOREIGN_PROVINCE END AS FOREIGN_PROVINCE,&#xD;&#xA;       CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.FOREIGN_POSTAL_CODE ELSE OCA.FOREIGN_POSTAL_CODE END AS FOREIGN_POSTAL_CODE,        &#xD;&#xA;       ORG.ORG_NAME as BANK_NAME,&#xD;&#xA;       ORG.ROUTING_NUMBER as ROUTING_NUMBER,&#xD;&#xA;       TPA.BANK_ACCOUNT_TYPE_ID as ACCOUNT_TYPE_ID, &#xD;&#xA;       TPA.BANK_ACCOUNT_TYPE_VALUE as ACCOUNT_TYPE_VALUE,&#xD;&#xA;       TPA.ACCOUNT_NUMBER as ACCOUNT_NUMBER,&#xD;&#xA;       PAYMENT.PERSON_ID,PAYMENT.ORG_ID, TPA.PAYEE_ACCOUNT_ACH_DETAIL_ID&#xD;&#xA;FROM&#xD;&#xA;           (&#xD;&#xA;&#xD;&#xA;            SELECT DISTINCT&#xD;&#xA;                  PHH.PAYMENT_HISTORY_HEADER_ID,SCH.CHECK_MESSAGE,&#xD;&#xA;                  PHH.PERSON_ID,PHH.ORG_ID,PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;                  SUM(PHD.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT,&#xD;&#xA;         ISNULL(PAYP.LAST_NAME,'') +' '+ ISNULL(PAYP.MIDDLE_NAME,'') +' '+ ISNULL(PAYP.FIRST_NAME,'')  AS FBO_CO&#xD;&#xA;         ,PA.TRANSFER_ORG_CONTACT_NAME          &#xD;&#xA;            FROM SGT_PAYMENT_HISTORY_DETAIL  PHD&#xD;&#xA;            INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH  &#xD;&#xA;                  ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;         INNER JOIN TEMP_TABLE_FOR_PAYMENT PA&#xD;&#xA;                  ON PA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;                  ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;            INNER JOIN SGT_PAYMENT_SCHEDULE SCH &#xD;&#xA;                  ON SCH.PAYMENT_SCHEDULE_ID = PHH.PAYMENT_SCHEDULE_ID&#xD;&#xA;           LEFT OUTER JOIN SGT_PAYMENT_REISSUE_DETAIL RD &#xD;&#xA;         ON RD.PAYMENT_REISSUE_DETAIL_ID = PA.PAYMENT_REISSUE_DETAIL_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_PERSON PAYP&#xD;&#xA;      ON PAYP.PERSON_ID=PHH.PERSON_ID&#xD;&#xA;            LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR&#xD;&#xA;      ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID&#xD;&#xA;            WHERE PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;            AND PIT.ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;            AND PIT.ITEM_TYPE_CODE NOT IN ('ITEM45', 'ITEM46' ,'ITEM47','ITEM56') &#xD;&#xA;            GROUP BY  PHH.PAYMENT_HISTORY_HEADER_ID,PHH.PERSON_ID,PHH.ORG_ID,PHH.PAYEE_ACCOUNT_ID,SCH.CHECK_MESSAGE,&#xD;&#xA;       PBXR.BENEFIT_OPTION_VALUE,PAYP.LAST_NAME,PAYP.MIDDLE_NAME,PAYP.FIRST_NAME&#xD;&#xA;                      ,PA.TRANSFER_ORG_CONTACT_NAME,PA.PAYMENT_REISSUE_DETAIL_ID&#xD;&#xA;          ) AS PAYMENT&#xD;&#xA;&#xD;&#xA;      INNER JOIN TEMP_TABLE_FOR_PAYMENT TPA&#xD;&#xA;            ON TPA.PAYEE_ACCOUNT_ID = PAYMENT.PAYEE_ACCOUNT_ID &#xD;&#xA;      LEFT OUTER JOIN SGT_PERSON P  &#xD;&#xA;           ON PAYMENT.PERSON_ID = P.PERSON_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_ORGANIZATION O  &#xD;&#xA;           ON PAYMENT.ORG_ID = O.ORG_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_ORGANIZATION ORG &#xD;&#xA;           ON TPA.ACH_BANK_ORG_ID = ORG.ORG_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_ORG_ADDRESS OCA ON O.ORG_ID = OCA.ORG_ID AND &#xD;&#xA;       OCA.START_DATE &lt;= @PAYMENTDATE AND (OCA.END_DATE IS NULL OR OCA.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;                      AND OCA.ADDRESS_TYPE_VALUE IN ('PYAM','MAIL')&#xD;&#xA;&#xD;&#xA;   LEFT OUTER JOIN &#xD;&#xA;       (SELECT  P.PERSON_ID, &#xD;&#xA;                                 PA1.ADDR_LINE_1 AS ADDR_LINE_1,&#xD;&#xA;                                 PA1.ADDR_LINE_2 AS ADDR_LINE_2,&#xD;&#xA;         PA1.ADDR_CITY  AS ADDR_CITY,&#xD;&#xA;         PA1.ADDR_STATE_ID  AS ADDR_STATE_ID,&#xD;&#xA;         CASE WHEN PAC.ADDRESS_TYPE_VALUE='MAIL' OR PAC.ADDRESS_TYPE_VALUE IS NULL  then 1 ELSE 2 END AS ADDRESS_TYPE,&#xD;&#xA;         PA1.ADDR_STATE_VALUE AS ADDR_STATE_VALUE,&#xD;&#xA;            PA1.ADDR_COUNTRY_ID  AS ADDR_COUNTRY_ID,&#xD;&#xA;                                 PA1.ADDR_COUNTRY_VALUE  AS ADDR_COUNTRY_VALUE,&#xD;&#xA;                                 PA1.ADDR_ZIP_CODE AS ADDR_ZIP_CODE,&#xD;&#xA;                                 PA1.ADDR_ZIP_4_CODE  AS ADDR_ZIP_4_CODE,&#xD;&#xA;                                 PA1.FOREIGN_PROVINCE  AS FOREIGN_PROVINCE,&#xD;&#xA;                                 PA1.FOREIGN_POSTAL_CODE  AS FOREIGN_POSTAL_CODE&#xD;&#xA;                           FROM SGT_PERSON P &#xD;&#xA;                           LEFT OUTER JOIN SGT_PERSON_ADDRESS PA1   &#xD;&#xA;                           ON P.PERSON_ID  = PA1.PERSON_ID  &#xD;&#xA;                           &#xD;&#xA;                           AND PA1.START_DATE &lt;= @PAYMENTDATE AND (PA1.END_DATE IS NULL OR PA1.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;                           INNER JOIN SGT_PERSON_ADDRESS_CHKLIST PAC ON PA1.ADDRESS_ID=PAC.ADDRESS_ID&#xD;&#xA;                           WHERE PAC.ADDRESS_TYPE_VALUE='MAIL'&#xD;&#xA;                          &#xD;&#xA;            )AS PERADDR ON PERADDR.PERSON_ID=PAYMENT.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN&#xD;&#xA;        ( &#xD;&#xA;       SELECT DISTINCT PAYEE_ACCOUNT_ID FROM &#xD;&#xA;           SGT_PAYMENT_HISTORY_DISTRIBUTION CHK&#xD;&#xA;        INNER JOIN SGT_PAYMENT_HISTORY_HEADER CHKHD&#xD;&#xA;                 ON CHK.PAYMENT_HISTORY_HEADER_ID = CHKHD.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;                 AND CHKHD.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;        WHERE PAYMENT_METHOD_VALUE IN ('CHK','WIRE')&#xD;&#xA;         ) AS CHECKSPAID&#xD;&#xA;         ON PAYMENT.PAYEE_ACCOUNT_ID   = CHECKSPAID.PAYEE_ACCOUNT_ID &#xD;&#xA;WHERE  TPA.PAYEE_ACCOUNT_ACH_DETAIL_ID IS NOT NULL&#xD;&#xA;AND CHECKSPAID.PAYEE_ACCOUNT_ID IS NULL&#xD;&#xA;&#xD;&#xA;)TEMP &#xD;&#xA;&#xD;&#xA;GROUP BY &#xD;&#xA;      PAYMENT_HISTORY_HEADER_ID, PAYMENT_METHOD_ID, PAYMENT_METHOD_VALUE, CHECK_MESSAGE,CHECK_ACH_EFFECTIVE_DATE,&#xD;&#xA;      DISTRIBUTION_STATUS_ID, DISTRIBUTION_STATUS_VALUE, NET_AMOUNT, CHECK_NUMBER, OLD_DISTRIBUTION_ID, RECIPIENT_NAME, &#xD;&#xA;      FBO_CO, ADDR_LINE_1, ADDR_LINE_2,ADDR_LINE_3, ADDR_CITY, ADDR_STATE_ID, ADDR_STATE_VALUE, ADDR_COUNTRY_ID, ADDR_COUNTRY_VALUE, &#xD;&#xA;      ADDR_ZIP_CODE, ADDR_ZIP_4_CODE, FOREIGN_PROVINCE, FOREIGN_POSTAL_CODE,&#xD;&#xA;      BANK_NAME, ROUTING_NUMBER, ACCOUNT_TYPE_ID, ACCOUNT_TYPE_VALUE, ACCOUNT_NUMBER, PERSON_ID, ORG_ID,&#xD;&#xA;      PAYEE_ACCOUNT_ACH_DETAIL_ID&#xD;&#xA;ORDER BY PAYMENT_HISTORY_HEADER_ID">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="CreateRolloverACHHistoryForPayees" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;Declare @EFFECTIVE_DATE datetime&#xD;&#xA;SELECT TOP 1 @EFFECTIVE_DATE = ACH_EFFECTIVE_DATE   &#xD;&#xA; FROM SGT_PAYMENT_SCHEDULE WITH(NOLOCK) &#xD;&#xA; WHERE PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA; ORDER BY PAYMENT_DATE DESC&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PAYMENT_HISTORY_DISTRIBUTION&#xD;&#xA;(&#xD;&#xA;       PAYMENT_HISTORY_HEADER_ID, PAYMENT_METHOD_ID, PAYMENT_METHOD_VALUE, CHECK_MESSAGE,&#xD;&#xA;       DISTRIBUTION_STATUS_ID, DISTRIBUTION_STATUS_VALUE, NET_AMOUNT, CHECK_NUMBER, OLD_DISTRIBUTION_ID,CHECK_ACH_EFFECTIVE_DATE, RECIPIENT_NAME,&#xD;&#xA;       FBO_CO, ADDR_LINE_1, ADDR_LINE_2,ADDR_LINE_3, ADDR_CITY, ADDR_STATE_ID, ADDR_STATE_VALUE, ADDR_COUNTRY_ID, ADDR_COUNTRY_VALUE, &#xD;&#xA;       ADDR_ZIP_CODE, ADDR_ZIP_4_CODE, FOREIGN_PROVINCE, FOREIGN_POSTAL_CODE, BANK_NAME, ROUTING_NUMBER,&#xD;&#xA;       ACCOUNT_TYPE_ID, ACCOUNT_TYPE_VALUE, ACCOUNT_NUMBER, PERSON_ID, ORG_ID,PAYEE_ACCOUNT_ACH_DETAIL_ID,ROLLOVER_ACCOUNT_NO,&#xD;&#xA;       CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;SELECT&#xD;&#xA;      PAYMENT_HISTORY_HEADER_ID, PAYMENT_METHOD_ID, PAYMENT_METHOD_VALUE, CHECK_MESSAGE,&#xD;&#xA;      DISTRIBUTION_STATUS_ID, DISTRIBUTION_STATUS_VALUE, NET_AMOUNT, CHECK_NUMBER, OLD_DISTRIBUTION_ID,CHECK_ACH_EFFECTIVE_DATE, &#xD;&#xA;      RECIPIENT_NAME, FBO_CO, ADDR_LINE_1, ADDR_LINE_2,ADDR_LINE_3, ADDR_CITY, ADDR_STATE_ID, ADDR_STATE_VALUE, &#xD;&#xA;      ADDR_COUNTRY_ID, ADDR_COUNTRY_VALUE, ADDR_ZIP_CODE, ADDR_ZIP_4_CODE, FOREIGN_PROVINCE, FOREIGN_POSTAL_CODE,&#xD;&#xA;      BANK_NAME, ROUTING_NUMBER, ACCOUNT_TYPE_ID, ACCOUNT_TYPE_VALUE, ACCOUNT_NUMBER, PERSON_ID, ORG_ID,PAYEE_ACCOUNT_ACH_DETAIL_ID,ROLLOVER_ACCOUNT_NO,&#xD;&#xA;      'OPUS Batch' as  CREATED_BY ,getdate() as CREATED_DATE,'OPUS Batch' as  MODIFIED_BY ,getdate() as MODIFIED_DATE,0 UPDATE_SEQ&#xD;&#xA;FROM &#xD;&#xA;     (SELECT      &#xD;&#xA;            PAYMENT.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;            @EFFECTIVE_DATE AS CHECK_ACH_EFFECTIVE_DATE,&#xD;&#xA;            7039 AS PAYMENT_METHOD_ID,&#xD;&#xA;            CASE WHEN PAYMENT.AMOUNT&gt;0 THEN 'RACH'  ELSE NULL END AS PAYMENT_METHOD_VALUE, &#xD;&#xA;            PAYMENT.CHECK_MESSAGE,&#xD;&#xA;            7036 AS DISTRIBUTION_STATUS_ID,&#xD;&#xA;            CASE WHEN PAYMENT.AMOUNT&gt;0 THEN 'OUTS' ELSE  'CLRD' END AS DISTRIBUTION_STATUS_VALUE,&#xD;&#xA;            PAYMENT.AMOUNT AS NET_AMOUNT,         &#xD;&#xA;            NULL AS CHECK_NUMBER,&#xD;&#xA;            NULL AS OLD_DISTRIBUTION_ID,&#xD;&#xA;   CASE WHEN PAYMENT.PERSON_ID IS NOT NULL  THEN  ISNULL(P.FIRST_NAME,'') +' '+ ISNULL(P.MIDDLE_NAME,'') +' '+ ISNULL(P.LAST_NAME,'') else +ORG.ORG_NAME END AS RECIPIENT_NAME,             &#xD;&#xA;            'FBO:'+ ISNULL(PPSN.FIRST_NAME,'') +'  '+ ISNULL(PPSN.MIDDLE_NAME,'') +' '+ ISNULL(PPSN.LAST_NAME,'') &#xD;&#xA;            --+ ' A/C NO: '+ isnull(PARD.ACCOUNT_NUMBER,'') &#xD;&#xA;            AS FBO_CO,&#xD;&#xA;    CASE WHEN PARD.CONTACT_NAME IS NOT NULL THEN PARD.CONTACT_NAME ELSE  PARD.ADDR_LINE_1 END  AS ADDR_LINE_1,&#xD;&#xA;            CASE WHEN PARD.CONTACT_NAME IS NOT NULL THEN PARD.ADDR_LINE_1 ELSE  PARD.ADDR_LINE_2 END  AS ADDR_LINE_2,&#xD;&#xA;            CASE WHEN PARD.CONTACT_NAME IS NOT NULL THEN PARD.ADDR_LINE_2 ELSE  NULL END  AS ADDR_LINE_3,&#xD;&#xA;   PARD.CITY AS ADDR_CITY,&#xD;&#xA;   PARD.STATE_ID AS ADDR_STATE_ID,&#xD;&#xA;   PARD.STATE_VALUE AS ADDR_STATE_VALUE,&#xD;&#xA;   PARD.COUNTRY_ID AS ADDR_COUNTRY_ID,&#xD;&#xA;   PARD.COUNTRY_VALUE AS ADDR_COUNTRY_VALUE,&#xD;&#xA;   PARD.ZIP_CODE AS ADDR_ZIP_CODE,&#xD;&#xA;   PARD.ZIP_4_CODE AS ADDR_ZIP_4_CODE,&#xD;&#xA;   NULL AS FOREIGN_PROVINCE,&#xD;&#xA;   NULL AS FOREIGN_POSTAL_CODE,        &#xD;&#xA;            ORG.ORG_NAME as BANK_NAME,&#xD;&#xA;            ORG.ROUTING_NUMBER as ROUTING_NUMBER,&#xD;&#xA;            7003 AS  ACCOUNT_TYPE_ID,--ASK ONCE &#xD;&#xA;            NULL AS ACCOUNT_TYPE_VALUE,--ASK ONCE&#xD;&#xA;            BANK.ACCOUNT_NO as ACCOUNT_NUMBER,&#xD;&#xA;            PAYMENT.PERSON_ID,PAYMENT.ORG_ID,&#xD;&#xA;            NULL AS PAYEE_ACCOUNT_ACH_DETAIL_ID,--IN CASE OF ROLLOVER CHECK&#xD;&#xA;            PARD.ACCOUNT_NUMBER AS ROLLOVER_ACCOUNT_NO &#xD;&#xA;FROM&#xD;&#xA;       (&#xD;&#xA;            SELECT &#xD;&#xA;                  PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;                  SCH.CHECK_MESSAGE,PHH.PERSON_ID,&#xD;&#xA;                  PHH.ORG_ID,PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;                  SUM(PHD.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT      &#xD;&#xA;               FROM SGT_PAYMENT_HISTORY_DETAIL  PHD&#xD;&#xA;            INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH  &#xD;&#xA;                       ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;   INNER JOIN TEMP_TABLE_FOR_PAYMENT PA&#xD;&#xA;           ON PA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;            INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;                       ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;            INNER JOIN SGT_PAYMENT_SCHEDULE SCH &#xD;&#xA;                       ON SCH.PAYMENT_SCHEDULE_ID = PHH.PAYMENT_SCHEDULE_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_PERSON PAYP&#xD;&#xA;              ON PAYP.PERSON_ID=PA.PERSON_ID&#xD;&#xA;            LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR&#xD;&#xA;           ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID&#xD;&#xA;            WHERE PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;                  AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'CRET'&#xD;&#xA;           AND PIT.ITEM_TYPE_CODE NOT IN ('ITEM45', 'ITEM46' ,'ITEM47','ITEM56')&#xD;&#xA;            GROUP BY  PHH.PAYMENT_HISTORY_HEADER_ID,PHH.PERSON_ID,PHH.ORG_ID,PHH.PAYEE_ACCOUNT_ID,SCH.CHECK_MESSAGE,&#xD;&#xA;       PBXR.BENEFIT_OPTION_VALUE,PAYP.LAST_NAME,PAYP.MIDDLE_NAME,PAYP.FIRST_NAME&#xD;&#xA;&#xD;&#xA;        ) AS PAYMENT&#xD;&#xA;        INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK) &#xD;&#xA;             ON PARD.PAYEE_ACCOUNT_ID = PAYMENT.PAYEE_ACCOUNT_ID &#xD;&#xA;             AND PARD.ROLLOVER_ORG_ID=PARD.ROLLOVER_ORG_ID&#xD;&#xA;        INNER JOIN SGT_ORGANIZATION ORG  &#xD;&#xA;                   ON PARD.ROLLOVER_ORG_ID = ORG.ORG_ID&#xD;&#xA;                   AND ORG.PAYMENT_TYPE_VALUE='RACH'--ADDED FOR RELATION FOR BANK TABLE WITH VALUE ACH&#xD;&#xA;        INNER JOIN SGT_ORG_BANK BANK &#xD;&#xA;                   ON ORG.ORG_ID=BANK.ORG_ID&#xD;&#xA;        LEFT OUTER JOIN SGT_PERSON P  &#xD;&#xA;                   ON PAYMENT.PERSON_ID = P.PERSON_ID&#xD;&#xA;        LEFT OUTER JOIN SGT_ORG_ADDRESS OCA  &#xD;&#xA;                   ON BANK.ORG_ID =OCA.ORG_ID&#xD;&#xA;        LEFT OUTER JOIN SGT_PAYEE_ACCOUNT PAACT WITH(NOLOCK) &#xD;&#xA;                      ON PAYMENT.PAYEE_ACCOUNT_ID = PAACT.PAYEE_ACCOUNT_ID&#xD;&#xA;        LEFT OUTER JOIN SGT_PERSON PPSN WITH(NOLOCK) &#xD;&#xA;                      ON  PAACT.PERSON_ID = PPSN.PERSON_ID&#xD;&#xA;&#xD;&#xA;)TEMP &#xD;&#xA;--where  net_amount &gt; 0&#xD;&#xA;ORDER BY PAYMENT_HISTORY_HEADER_ID">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateCO" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Update PHD set FBO_CO = Contact_Name,ADDR_LINE_1=PAYEE.ADDR_LINE_1,ADDR_LINE_2=PAYEE.ADDR_LINE_2,ADDR_LINE_3=PAYEE.ADDR_LINE_3,ADDR_CITY=PAYEE.ADDR_CITY,&#xD;&#xA;ADDR_STATE_ID=PAYEE.ADDR_STATE_ID,ADDR_STATE_VALUE=PAYEE.ADDR_STATE_VALUE,ADDR_COUNTRY_ID=PAYEE.ADDR_COUNTRY_ID,ADDR_COUNTRY_VALUE=PAYEE.ADDR_COUNTRY_VALUE,ADDR_ZIP_CODE=PAYEE.ADDR_ZIP_CODE,&#xD;&#xA;ADDR_ZIP_4_CODE=PAYEE.ADDR_ZIP_4_CODE,FOREIGN_PROVINCE=PAYEE.FOREIGN_PROVINCE,FOREIGN_POSTAL_CODE=PAYEE.FOREIGN_POSTAL_CODE ,UPDATE_SEQ = UPDATE_SEQ+1 from &#xD;&#xA; SGT_PAYMENT_HISTORY_DISTRIBUTION PHD&#xD;&#xA;Inner Join &#xD;&#xA;(&#xD;&#xA;SELECT &#xD;&#xA;'C/O '+ pc.contact_name  + case when PC.CONTACT_TYPE_VALUE = 'POAP' then ' POA' else '' end as Contact_Name, &#xD;&#xA;PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;--PC.ADDR_LINE_1,PC.ADDR_LINE_2,&#xD;&#xA;(ISNULL(RTRIM(LTRIM('C/O ' + PC.CONTACT_NAME)),'')) AS ADDR_LINE_1,&#xD;&#xA;ADDR_LINE_1 AS ADDR_LINE_2,&#xD;&#xA;ADDR_LINE_2 AS ADDR_LINE_3,&#xD;&#xA;PC.ADDR_CITY,PC.ADDR_STATE_ID,PC.ADDR_STATE_VALUE,&#xD;&#xA;PC.ADDR_COUNTRY_ID,PC.ADDR_COUNTRY_VALUE,PC.ADDR_ZIP_CODE,PC.ADDR_ZIP_4_CODE,PC.FOREIGN_PROVINCE,&#xD;&#xA;PC.FOREIGN_POSTAL_CODE &#xD;&#xA;FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) &#xD;&#xA;INNER Join SGT_PERSON P WITH(NOLOCK) &#xD;&#xA;ON PHH.PERSON_ID = P.PERSON_ID &#xD;&#xA;INNER Join SGT_PERSON_CONTACT PC WITH(NOLOCK) &#xD;&#xA;ON P.PERSON_ID = PC.PERSON_ID &#xD;&#xA;WHERE phh.Payment_schedule_id = @paymentScheduleId &#xD;&#xA;--AND((datediff(d,dbo.fn_GET_DECRYPTED_VALUE( p.date_of_birth),@PaymentDate))/365.25 &lt; 18.0  or PC.CONTACT_TYPE_VALUE='POAP')&#xD;&#xA;AND PC.CONTACT_TYPE_VALUE in ('POAP','GRDN','FMIN','COAP')  --RID 115325 adding conservator type also&#xD;&#xA;AND PC.STATUS_VALUE='VALD'&#xD;&#xA;AND( PC.EFFECTIVE_START_DATE &lt;= @PaymentDate) AND (PC.EFFECTIVE_END_DATE IS NULL OR PC.EFFECTIVE_END_DATE &gt;= @PaymentDate)&#xD;&#xA;) as PAYEE&#xD;&#xA;On PAYEE.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;and PAYMENT_METHOD_VALUE not in ('RACH','RCHK')&#xD;&#xA;&#xD;&#xA;---For organization fbo update&#xD;&#xA;Update PHD set FBO_CO = PAYEE.FBO_CO,UPDATE_SEQ = UPDATE_SEQ+1 from &#xD;&#xA;      SGT_PAYMENT_HISTORY_DISTRIBUTION PHD&#xD;&#xA;Inner Join &#xD;&#xA;(&#xD;&#xA;SELECT &#xD;&#xA;'C/O: ' + ISNULL(O.CARE_OF,NULL) AS FBO_CO,&#xD;&#xA;PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) &#xD;&#xA;INNER Join SGT_ORGANIZATION O WITH(NOLOCK) &#xD;&#xA;ON PHH.ORG_ID = O.ORG_ID &#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT SPA ON SPA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID--PIR 890&#xD;&#xA;WHERE phh.Payment_schedule_id = @paymentScheduleId AND SPA.TRANSFER_ORG_ID IS NULL) as PAYEE&#xD;&#xA;On PAYEE.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;and PAYMENT_METHOD_VALUE not in ('RACH','RCHK')&#xD;&#xA;&#xD;&#xA;--PIR 964 IAP CHILD SUPPORT &#xD;&#xA;UPDATE PHD SET PHD.FBO_CO = CASE WHEN PHD.FBO_CO IS NOT NULL THEN PHD.FBO_CO + ' ' + ISNULL(SPAD.ACCOUNT_NUMBER,'') ELSE 'FBO: ' + ISNULL(SPAD.ACCOUNT_NUMBER,'') END, PHD.UPDATE_SEQ = PHD.UPDATE_SEQ+1&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT SPA WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_DEDUCTION SPAD WITH(NOLOCK) ON SPA.PAYEE_ACCOUNT_ID = SPAD.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;AND (SPAD.START_DATE &lt;= @PaymentDate) AND (SPAD.END_DATE IS NULL OR SPAD.END_DATE &gt;= @PaymentDate)&#xD;&#xA;INNER JOIN SGT_BENEFIT_APPLICATION_DETAIL SBAD WITH(NOLOCK) ON SPA.BENEFIT_APPLICATION_DETAIL_ID = SBAD.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;INNER JOIN SGT_PLAN_BENEFIT_XR XR WITH(NOLOCK) ON XR.PLAN_BENEFIT_ID = SBAD.PLAN_BENEFIT_ID AND XR.PLAN_ID = 1&#xD;&#xA;INNER JOIN SGT_BENEFIT_APPLICATION SBA WITH(NOLOCK) ON SBAD.BENEFIT_APPLICATION_ID = SBA.BENEFIT_APPLICATION_ID AND ISNULL(CHILD_SUPPORT_FLAG,'N') = 'Y' AND SBA.BENEFIT_TYPE_VALUE = 'WDRL'&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) ON PHH.PAYEE_ACCOUNT_ID = SPA.PAYEE_ACCOUNT_ID AND PHH.PAYMENT_SCHEDULE_ID = @paymentScheduleId&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHDE WITH(NOLOCK) ON PHDE.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHDE.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;WHERE PIT.ITEM_TYPE_CODE = 'ITEM45'">
      <parameters>
        <parameter ID="@paymentScheduleId" sfwDataType="int" />
        <parameter ID="@PaymentDate" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="CreateOutstandingDistributionHistoryRecords" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="INSERT INTO SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY&#xD;&#xA;(&#xD;&#xA;       PAYMENT_HISTORY_DISTRIBUTION_ID, PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;       DISTRIBUTION_STATUS_ID, DISTRIBUTION_STATUS_VALUE, TRANSACTION_DATE,&#xD;&#xA;       STATUS_CHANGED_BY, STATUS_CHANGE_REASON_ID, STATUS_CHANGE_REASON_VALUE, &#xD;&#xA;       CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;SELECT &#xD;&#xA;      PAYMENT_HISTORY_DISTRIBUTION_ID,&#xD;&#xA;      PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;      DISTRIBUTION_STATUS_ID,&#xD;&#xA;      DISTRIBUTION_STATUS_VALUE,&#xD;&#xA;      TRANSACTION_DATE,&#xD;&#xA;      'OPUS Batch' as STATUS_CHANGED_BY,&#xD;&#xA;      7038 as STATUS_CHANGE_REASON_ID,&#xD;&#xA;      NULL as STATUS_CHANGE_REASON_VALUE,&#xD;&#xA;      'OPUS Batch' as CREATED_BY,&#xD;&#xA;      GETDATE() as CREATED_DATE,&#xD;&#xA;      'OPUS Batch' as MODIFIED_BY,&#xD;&#xA;      GETDATE() as MODIFIED_DATE,&#xD;&#xA;      0 as UPDATE_SEQ from&#xD;&#xA;     (&#xD;&#xA;&#x9; &#x9;&#x9;SELECT &#xD;&#xA;            PHD.*,PHH.CREATED_DATE as TRANSACTION_DATE &#xD;&#xA;&#x9;&#x9;&#x9;from SGT_PAYMENT_HISTORY_DISTRIBUTION PHD &#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH on PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#x9;&#x9;    --PIR 964 IAP CHILD SUPPORT&#xD;&#xA;&#x9;&#x9;&#x9;LEFT OUTER JOIN&#xD;&#xA;&#x9;&#x9;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SELECT SPAD.PAYEE_ACCOUNT_ID,SPAD.PERSON_ID,SPAD.ORG_ID,SPAD.AMOUNT,SPAD.ACCOUNT_NUMBER,SP.MPI_PERSON_ID,O.MPI_ORG_ID,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ISNULL(RTRIM(SP.FIRST_NAME),'') + ' ' + ISNULL(RTRIM(LTRIM(SP.LAST_NAME)),'') AS PERSON_NAME,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ISNULL(RTRIM(LTRIM(O.ORG_NAME)),'') AS ORG_NAME&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;FROM SGT_PAYEE_ACCOUNT SPA &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT_DEDUCTION SPAD ON SPA.PAYEE_ACCOUNT_ID = SPAD.PAYEE_ACCOUNT_ID AND SPAD.START_DATE &lt;&gt; ISNULL(SPAD.END_DATE,'99991231') AND SPAD.END_DATE IS NULL&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN SGT_PERSON SP ON SPAD.PERSON_ID = SP.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN SGT_ORGANIZATION O ON SPAD.ORG_ID = O.ORG_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_BENEFIT_APPLICATION_DETAIL SBAD ON SPA.BENEFIT_APPLICATION_DETAIL_ID = SBAD.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PLAN_BENEFIT_XR XR ON XR.PLAN_BENEFIT_ID = SBAD.PLAN_BENEFIT_ID AND XR.PLAN_ID = 1&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_BENEFIT_APPLICATION SBA ON SBAD.BENEFIT_APPLICATION_ID = SBA.BENEFIT_APPLICATION_ID AND ISNULL(CHILD_SUPPORT_FLAG,'N') = 'Y' AND SBA.BENEFIT_TYPE_VALUE = 'WDRL'&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;)CHILD_SUPP ON PHH.PAYEE_ACCOUNT_ID = CHILD_SUPP.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9; &#xD;&#xA;&#x9;&#x9;&#x9;where (PHD.DISTRIBUTION_STATUS_VALUE='OUTS' OR (CHILD_SUPP.PAYEE_ACCOUNT_ID IS NOT NULL AND PHD.DISTRIBUTION_STATUS_VALUE='CLRD' AND CHECK_NUMBER IS NULL AND ISNULL(NET_AMOUNT,0) =0)) &#xD;&#xA;&#x9;&#x9;&#x9;and PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;      )TEMP&#xD;&#xA;&#xD;&#xA;">
      <parameters>
        <parameter ID="@paymentscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadACHPaymentDistribution" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;      SPE.PAYEE_ACCOUNT_ID,&#xD;&#xA;      PHD.NET_AMOUNT,&#xD;&#xA;      PHD.ROUTING_NUMBER,&#xD;&#xA;      PHD.ACCOUNT_NUMBER,     &#xD;&#xA;   PHD.ACCOUNT_TYPE_VALUE AS TRANSACTION_CODE,    &#xD;&#xA;   PHD.ACCOUNT_NUMBER AS ACCOUNT_NO,&#xD;&#xA;   CASE WHEN PHH.PERSON_ID IS NULL THEN ORG.ORG_ID ELSE PER1.PERSON_ID END AS PERSON_ID,&#xD;&#xA;   CASE WHEN PHH.PERSON_ID IS NULL THEN ORG.ORG_NAME ELSE PER1.LAST_NAME + ' ' + PER1.FIRST_NAME END AS PERSON_NAME,&#xD;&#xA;   PER1.MPI_PERSON_ID,&#xD;&#xA;   PHD.PAYMENT_HISTORY_DISTRIBUTION_ID AS IIN,&#xD;&#xA;   PHH.PLAN_ID       &#xD;&#xA;    FROM SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK)&#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;        ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT SPE WITH(NOLOCK) &#xD;&#xA;        ON SPE.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID &#xD;&#xA;   LEFT JOIN SGT_PAYEE_ACCOUNT_ACH_DETAIL PE WITH(NOLOCK) &#xD;&#xA;        ON SPE.PAYEE_ACCOUNT_ID=PE.PAYEE_ACCOUNT_ID  AND PE.BANK_ORG_ID = PHD.ORG_ID&#xD;&#xA;   LEFT JOIN SGT_PERSON PER1 WITH(NOLOCK) &#xD;&#xA;        ON PER1.PERSON_ID = PHH.PERSON_ID&#xD;&#xA;   LEFT JOIN  SGT_ORGANIZATION ORG&#xD;&#xA;     ON PHH.ORG_ID = ORG.ORG_ID&#xD;&#xA;     WHERE    &#xD;&#xA;     PHD.PAYMENT_METHOD_VALUE = 'ACH'&#xD;&#xA;  AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENT_SCHEDULE_ID&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT &#xD;&#xA;        SPE.PAYEE_ACCOUNT_ID,&#xD;&#xA;        PHD.NET_AMOUNT,&#xD;&#xA;        PHD.ROUTING_NUMBER,&#xD;&#xA;        PHD.ACCOUNT_NUMBER,     &#xD;&#xA;  PHD.ACCOUNT_TYPE_VALUE AS TRANSACTION_CODE,    &#xD;&#xA;  PHD.ACCOUNT_NUMBER AS ACCOUNT_NO,&#xD;&#xA;  ORG.ORG_ID  AS PERSON_ID,&#xD;&#xA;  ORG.ORG_NAME AS PERSON_NAME ,&#xD;&#xA;  ORG.MPI_ORG_ID as MPI_PERSON_ID,&#xD;&#xA;  PHD.PAYMENT_HISTORY_DISTRIBUTION_ID AS IIN,&#xD;&#xA;  PHH.PLAN_ID       &#xD;&#xA;FROM SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;       ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT SPE WITH(NOLOCK) &#xD;&#xA;       ON SPE.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID &#xD;&#xA; LEFT JOIN SGT_PAYEE_ACCOUNT_ACH_DETAIL PE WITH(NOLOCK) &#xD;&#xA;     ON SPE.PAYEE_ACCOUNT_ID=PE.PAYEE_ACCOUNT_ID  AND PE.BANK_ORG_ID = PHD.ORG_ID&#xD;&#xA; LEFT JOIN SGT_ORGANIZATION ORG WITH(NOLOCK) &#xD;&#xA;     ON PHH.ORG_ID=ORG.ORG_ID&#xD;&#xA;WHERE PHD.PAYMENT_METHOD_VALUE = 'RACH'&#xD;&#xA;AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENT_SCHEDULE_ID">
      <parameters>
        <parameter ID="@PAYMENT_SCHEDULE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPayeeAccountsForRecalculatingTax" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;Declare @GOLIVEDATE  DATETIME&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;      TOP 1 @GOLIVEDATE = DATA1&#xD;&#xA;    FROM SGS_CODE_VALUE  WITH(NOLOCK) &#xD;&#xA;    WHERE CODE_ID = 52 and CODE_VALUE = 'GLDT'&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;DECLARE @PAYMENT_ITEM_TYPE_ID INT&#xD;&#xA;SELECT &#xD;&#xA;     @PAYMENT_ITEM_TYPE_ID = PAYMENT_ITEM_TYPE_ID &#xD;&#xA;     FROM SGT_PAYMENT_ITEM_TYPE  &#xD;&#xA;     WHERE &#xD;&#xA;     ITEM_TYPE_CODE = 'ITEM1'--ASK ONCE&#xD;&#xA;DECLARE @PAYMENT_ITEM_TYPE_ID_NON_TAXABLE INT&#xD;&#xA;SELECT &#xD;&#xA;      @PAYMENT_ITEM_TYPE_ID_NON_TAXABLE = PAYMENT_ITEM_TYPE_ID &#xD;&#xA;      FROM SGT_PAYMENT_ITEM_TYPE  &#xD;&#xA;      WHERE ITEM_TYPE_CODE = 'ITEM2'&#xD;&#xA;DECLARE @EFFECTIVE_DATE DATETIME&#xD;&#xA;DECLARE @SCHEDULE_ID INT&#xD;&#xA;SELECT &#xD;&#xA;      @EFFECTIVE_DATE = EFFECTIVE_DATE,&#xD;&#xA;      @SCHEDULE_ID = PAYMENT_SCHEDULE_ID &#xD;&#xA;      FROM SGT_PAYMENT_SCHEDULE WHERE PAYMENT_DATE = @PAYMENTDATE  &#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;      PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID, &#xD;&#xA;      PAPIT.PAYEE_ACCOUNT_ID, &#xD;&#xA;      PAPIT.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;      (PAPIT.AMOUNT-DIFF_AMOUNT) AS AMOUNT, &#xD;&#xA;      DIFF_AMOUNT&#xD;&#xA;      INTO &#xD;&#xA;      #NONTXBLAMT--NON TAXABLE TABLE &#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT  &#xD;&#xA;INNER JOIN  &#xD;&#xA;( &#xD;&#xA; SELECT &#xD;&#xA;        PHH.PAYEE_ACCOUNT_ID, &#xD;&#xA;        PHD.PAYMENT_ITEM_TYPE_ID ,&#xD;&#xA;        PAYEE.NONTAXABLE_BEGINNING_BALANCE, &#xD;&#xA;        SUM(PHD.AMOUNT) AS AMOUNT, &#xD;&#xA;        CASE WHEN PAYEE.NONTAXABLE_BEGINNING_BALANCE &lt;= 0 THEN 0 ELSE (PAYEE.NONTAXABLE_BEGINNING_BALANCE - SUM(PHD.AMOUNT)) END AS DIFF_AMOUNT,&#xD;&#xA;     SUM(CASE WHEN PHH.PAYMENT_SCHEDULE_ID = @SCHEDULE_ID THEN PHD.AMOUNT ELSE 0 END) AS FTM_AMOUNT FROM SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;           INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD &#xD;&#xA;                      ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;     INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH &#xD;&#xA;                ON PHH.PAYMENT_HISTORY_HEADER_ID = PHDSH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;     INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;                ON PHD.PAYMENT_ITEM_TYPE_ID =  PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;        INNER JOIN          &#xD;&#xA;    (SELECT &#xD;&#xA;           PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;           CASE WHEN ISNULL(PA.NONTAXABLE_BEGINNING_BALANCE,0) &gt; 0  THEN PA.NONTAXABLE_BEGINNING_BALANCE ELSE ISNULL(PA.REMAINING_NON_TAXABLE_FROM_CONVERSION,0) END AS NONTAXABLE_BEGINNING_BALANCE &#xD;&#xA;           FROM SGT_PAYEE_ACCOUNT PA&#xD;&#xA;        INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;                   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;     WHERE PAS.STATUS_VALUE NOT IN ('CNCL','CMPL') &#xD;&#xA;     AND PAYEE_ACCOUNT_STATUS_ID  =     &#xD;&#xA;                    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;                     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;                     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE &#xD;&#xA;                     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC)&#xD;&#xA;           AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;           AND BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;     ) AS PAYEE ON PAYEE.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID &#xD;&#xA;        &#xD;&#xA;        WHERE &#xD;&#xA;        PHDSH.TRANSACTION_DATE &lt;= @EFFECTIVE_DATE&#xD;&#xA;     AND PIT.PAYMENT_ITEM_TYPE_ID = @PAYMENT_ITEM_TYPE_ID_NON_TAXABLE -- NON  TAXABLE AMOUNT &#xD;&#xA;      AND PHH.PAYMENT_DATE&gt; @GOLIVEDATE -- Conversion data ISSUE GO LIVE DATE Change  &#xD;&#xA;        GROUP BY PHH.PAYEE_ACCOUNT_ID,PHD.PAYMENT_ITEM_TYPE_ID,PAYEE.NONTAXABLE_BEGINNING_BALANCE&#xD;&#xA;        HAVING (PAYEE.NONTAXABLE_BEGINNING_BALANCE - SUM(PHD.AMOUNT))  &lt; &#xD;&#xA;     SUM(CASE WHEN PHDSH.TRANSACTION_DATE = @EFFECTIVE_DATE THEN PHD.AMOUNT ELSE 0 END)   &#xD;&#xA;     &#xD;&#xA;) PAYMENTS &#xD;&#xA;         ON PAPIT.PAYEE_ACCOUNT_ID = PAYMENTS.PAYEE_ACCOUNT_ID&#xD;&#xA;         AND PAPIT.PAYMENT_ITEM_TYPE_ID = PAYMENTS.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;         AND PAPIT.END_DATE IS NULL&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;      PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID, &#xD;&#xA;      PAPIT.PAYEE_ACCOUNT_ID,&#xD;&#xA;      PAPIT.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;      PAPIT.AMOUNT,0 AS DIFF_AMOUNT&#xD;&#xA;      INTO #TXBLAMT FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT , &#xD;&#xA;      #NONTXBLAMT NON &#xD;&#xA;      WHERE PAPIT.PAYEE_ACCOUNT_ID = NON.PAYEE_ACCOUNT_ID &#xD;&#xA;      AND PAPIT.PAYMENT_ITEM_TYPE_ID = @PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   AND PAPIT.END_DATE IS NULL&#xD;&#xA;&#xD;&#xA;INSERT INTO #NONTXBLAMT &#xD;&#xA;&#xD;&#xA;SELECT * FROM #TXBLAMT &#xD;&#xA;&#xD;&#xA;UPDATE A SET END_DATE = (DATEADD(D,-1,DATEADD(M,1,@PAYMENTDATE ))) ,MODIFIED_DATE=GETDATE() , MODIFIED_BY='OPUS Batch',&#xD;&#xA;      UPDATE_SEQ = UPDATE_SEQ+1 &#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE A  &#xD;&#xA;      INNER JOIN #NONTXBLAMT B &#xD;&#xA;                ON A.PAYEE_ACCOUNT_ID = B.PAYEE_ACCOUNT_ID &#xD;&#xA;                AND A.PAYMENT_ITEM_TYPE_ID = B.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;          AND A.END_DATE IS NULL&#xD;&#xA;          AND A.START_DATE &lt;= @PAYMENTDATE &#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE &#xD;&#xA;           (PAYEE_ACCOUNT_ID, PAYMENT_ITEM_TYPE_ID, ACCOUNT_NUMBER, VENDOR_ORG_ID,AMOUNT,START_DATE,END_DATE,&#xD;&#xA;            CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ)&#xD;&#xA; SELECT &#xD;&#xA;  PAYEE_ACCOUNT_ID ,&#xD;&#xA;  @PAYMENT_ITEM_TYPE_ID &#xD;&#xA;  AS PAYMENT_ITEM_TYPE_ID ,&#xD;&#xA;  NULL AS ACCOUNT_NUMBER,      &#xD;&#xA;  NULL VENDOR_ORG_ID,&#xD;&#xA;  SUM(AMOUNT) AS AMOUNT,                                  &#xD;&#xA;  DATEADD(M,1,@PAYMENTDATE ) AS START_DATE,              &#xD;&#xA;  NULL AS END_DATE  ,              &#xD;&#xA;  'OPUS Batch' AS CREATED_BY,GETDATE() AS CREATED_DATE,'OPUS Batch' AS MODIFIED_BY,GETDATE() AS MODIFIED_DATE,0 AS UPDATE_SEQ&#xD;&#xA;  FROM #NONTXBLAMT &#xD;&#xA;  GROUP BY &#xD;&#xA;PAYEE_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE &#xD;&#xA;(PAYEE_ACCOUNT_ID, PAYMENT_ITEM_TYPE_ID, ACCOUNT_NUMBER, VENDOR_ORG_ID,AMOUNT,START_DATE,END_DATE,CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ)&#xD;&#xA; SELECT   &#xD;&#xA;  PAYEE_ACCOUNT_ID ,&#xD;&#xA;  PAYMENT_ITEM_TYPE_ID ,&#xD;&#xA;  NULL AS ACCOUNT_NUMBER,      &#xD;&#xA;  NULL VENDOR_ORG_ID,&#xD;&#xA;  DIFF_AMOUNT AS AMOUNT,                                  &#xD;&#xA;  DATEADD(M,1,@PAYMENTDATE ) AS START_DATE,              &#xD;&#xA;  NULL AS END_DATE  ,              &#xD;&#xA;  'OPUS Batch' AS CREATED_BY,GETDATE() AS CREATED_DATE,'OPUS Batch' AS MODIFIED_BY,GETDATE() AS MODIFIED_DATE,0 AS UPDATE_SEQ&#xD;&#xA; FROM #NONTXBLAMT &#xD;&#xA; WHERE DIFF_AMOUNT &gt; 0 AND PAYMENT_ITEM_TYPE_ID = @PAYMENT_ITEM_TYPE_ID_NON_TAXABLE&#xD;&#xA;--sELECT INTO TABLE&#xD;&#xA;Select * from SGT_PAYEE_ACCOUNT where PAYEE_ACCOUNT_ID In( Select PAYEE_ACCOUNT_ID from #TXBLAMT)&#xD;&#xA;DROP TABLE #NONTXBLAMT&#xD;&#xA;DROP TABLE #TXBLAMT">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadCheckPaymentDistribution" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  &#xD;&#xA;  CASE WHEN PHH.PERSON_ID IS NULL THEN UPPER(ORG.ORG_NAME) ELSE UPPER(ISNULL(RTRIM(FIRST_NAME)+' ','')+ISNULL(RTRIM(LTRIM(MIDDLE_NAME)) + ' ','') + ISNULL(RTRIM(LTRIM(LAST_NAME)),'')) END &#xD;&#xA;  AS PayeeName_OrganizationName,&#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) + &#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE IN( 'CHLD','OTHR') THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Gross_Amount,&#xD;&#xA;  &#xD;&#xA;  SUM(CASE WHEN PHD.PAYMENT_METHOD_VALUE = 'RCHK' AND PBXR.PLAN_ID &lt;&gt; 1 AND PBXR.BENEFIT_OPTION_VALUE = 'LUMP'&#xD;&#xA;  THEN CASE WHEN PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE = 'TXRA' &#xD;&#xA;  THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END               &#xD;&#xA;  ELSE CASE WHEN ((PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE = 'TEEA' &#xD;&#xA;  OR (PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE = 'OTDT' AND PIT.TAXABLE_ITEM_FLAG='Y')) AND PBXR.PLAN_ID &lt;&gt; 1 AND PBXR.BENEFIT_OPTION_VALUE = 'LUMP') &#xD;&#xA;  THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END&#xD;&#xA;  END) AS TAXABLE_AMOUNT, &#xD;&#xA; &#xD;&#xA;  SUM(CASE WHEN PHD.PAYMENT_METHOD_VALUE = 'RCHK' AND PBXR.PLAN_ID &lt;&gt; 1 AND PBXR.BENEFIT_OPTION_VALUE = 'LUMP'&#xD;&#xA;  THEN CASE WHEN PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE = 'NTRA' &#xD;&#xA;  THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END  &#xD;&#xA;  ELSE CASE WHEN ((PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE = 'NEEA' &#xD;&#xA;  OR (PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE = 'OTDT' AND PIT.TAXABLE_ITEM_FLAG='N')) AND PBXR.PLAN_ID &lt;&gt; 1 AND PBXR.BENEFIT_OPTION_VALUE = 'LUMP') &#xD;&#xA;  THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END&#xD;&#xA;  END) AS NON_TAXABLE_AMOUNT,&#xD;&#xA;&#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' THEN (AMOUNT) ELSE 0 END) AS State_Tax_Amount, &#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX' THEN (AMOUNT) ELSE 0 END) AS Federal_Tax_Amount,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'RECV' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Deduction4,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'CHLD' THEN (AMOUNT) ELSE 0 END) AS ChildORSpousal_Support,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'LAVY' THEN (AMOUNT) ELSE 0 END) AS Deduction3,&#xD;&#xA;        PHH.PAYMENT_DATE  AS Pay_Date,&#xD;&#xA;        &#xD;&#xA;        CASE WHEN PHH.PERSON_ID IS NULL THEN ISNULL(ORG.FEDERAL_ID,'') ELSE ISNULL(DBO.fn_GET_DECRYPTED_TEXT(P.SSN),'') END AS SSN,&#xD;&#xA;        UPPER(PHD.ADDR_LINE_1) AS ADDR_LINE_1, &#xD;&#xA;  UPPER(PHD.ADDR_LINE_2)as ADDR_LINE_2,&#xD;&#xA;  UPPER(PHD.ADDR_LINE_3)as ADDR_LINE_3,&#xD;&#xA;  CASE WHEN PHD.ADDR_COUNTRY_VALUE = '0001' &#xD;&#xA;                 THEN&#xD;&#xA;                     PHD.ADDR_STATE_VALUE&#xD;&#xA;                 ELSE &#xD;&#xA;                     CASE WHEN PHD.FOREIGN_PROVINCE IS NULL THEN CVDSTATE.DESCRIPTION ELSE PHD.FOREIGN_PROVINCE END  &#xD;&#xA;       END  AS ADDR_STATE_VALUE,&#xD;&#xA;  &#xD;&#xA;  --PHD.ADDR_STATE_VALUE,&#xD;&#xA;  UPPER(PHD.ADDR_CITY) AS ADDR_CITY,&#xD;&#xA;  CASE WHEN PHD.ADDR_COUNTRY_VALUE = '0001'  THEN NULL ELSE PHD.ADDR_COUNTRY_VALUE END AS ADDR_COUNTRY_VALUE,&#xD;&#xA;  CASE WHEN PHD.ADDR_COUNTRY_VALUE = '0001' &#xD;&#xA;                 THEN&#xD;&#xA;                     ISNULL(PHD.ADDR_ZIP_CODE,'') + CASE WHEN ADDR_ZIP_4_CODE IS NOT NULL AND RTRIM(LTRIM(ADDR_ZIP_4_CODE))&lt;&gt; '' THEN '-' + ADDR_ZIP_4_CODE ELSE '' END&#xD;&#xA;                 ELSE &#xD;&#xA;                     CASE WHEN PHD.FOREIGN_POSTAL_CODE IS NULL &#xD;&#xA;                          THEN &#xD;&#xA;                            ISNULL(PHD.ADDR_ZIP_CODE,'') + CASE WHEN ADDR_ZIP_4_CODE IS NOT NULL AND RTRIM(LTRIM(ADDR_ZIP_4_CODE))&lt;&gt; '' THEN '-' + ADDR_ZIP_4_CODE ELSE '' END &#xD;&#xA;                          ELSE &#xD;&#xA;                            PHD.FOREIGN_POSTAL_CODE &#xD;&#xA;                          END  &#xD;&#xA;       END  AS ADDR_ZIP_CODE,&#xD;&#xA;  --ISNULL(PHD.ADDR_ZIP_CODE,'') + CASE WHEN ADDR_ZIP_4_CODE IS NOT NULL AND RTRIM(LTRIM(ADDR_ZIP_4_CODE))&lt;&gt; '' THEN '-' + ADDR_ZIP_4_CODE ELSE '' END AS ADDR_ZIP_CODE,&#xD;&#xA;  UPPER(PHD.ADDR_CITY) AS ADDR_CITY,&#xD;&#xA;  PBXR.PLAN_ID,&#xD;&#xA;  SP.PLAN_NAME,&#xD;&#xA;  PHD.NET_AMOUNT,&#xD;&#xA;  PHD.CHECK_NUMBER,&#xD;&#xA;  UPPER(P.FIRST_NAME) AS FBO_First_Name,&#xD;&#xA;        UPPER(P.LAST_NAME) AS FBO_Last_Name,&#xD;&#xA;        PHD.PAYMENT_METHOD_VALUE,&#xD;&#xA;        CASE WHEN PHD.PAYMENT_METHOD_VALUE = 'RCHK'  THEN 'ACCT# '+ PHD.ROLLOVER_ACCOUNT_NO ELSE PHD.ROLLOVER_ACCOUNT_NO END AS ROLLOVER_ACCOUNT_NO,&#xD;&#xA;  UPPER(PHD.FBO_CO) AS FBO_CO,&#xD;&#xA;  REPLACE(SPBA.FUNDS_TYPE_VALUE,'0','') AS FUNDS_TYPE_VALUE,&#xD;&#xA;  SPA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;      FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;       INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD &#xD;&#xA;                   ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;       INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE &#xD;&#xA;                   ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                   AND PHD.PAYMENT_METHOD_VALUE IN ('CHK','RCHK')--ASK ONCE&#xD;&#xA;       LEFT OUTER JOIN SGT_PERSON P &#xD;&#xA;                  ON PHH.PERSON_ID=P.PERSON_ID&#xD;&#xA;       LEFT OUTER JOIN SGT_ORGANIZATION ORG &#xD;&#xA;                  ON PHH.ORG_ID=ORG.ORG_ID&#xD;&#xA;&#xD;&#xA;       --INNER JOIN TEMP_TABLE_FOR_PAYMENT TPA &#xD;&#xA;       --           ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID &#xD;&#xA;    -- Query chnaged to handle Multiple Reissue case&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT SPA ON SPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGT_PLAN_BENEFIT_XR PBXR ON PBXR.PLAN_BENEFIT_ID = SPA.PLAN_BENEFIT_ID&#xD;&#xA;    INNER JOIN SGT_PLAN SP ON SP.PLAN_ID = PBXR.PLAN_ID&#xD;&#xA;       INNER JOIN  SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;                   ON PHDE.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;&#xD;&#xA;       INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT SPBA ON SPBA.PAYEE_BENEFIT_ACCOUNT_ID = SPA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;       LEFT OUTER JOIN SGS_CODE_VALUE CVDSTATE WITH(NOLOCK) &#xD;&#xA;       ON CVDSTATE.CODE_ID = PHD.ADDR_STATE_ID AND CVDSTATE.CODE_VALUE = PHD.ADDR_STATE_VALUE&#xD;&#xA;     WHERE &#xD;&#xA;     PHH.PAYMENT_SCHEDULE_ID= @PAYMENTSCHEDULEID&#xD;&#xA;&#xD;&#xA;GROUP BY SPA.ACCOUNT_RELATION_VALUE,SPA.BENEFIT_ACCOUNT_TYPE_VALUE,PBXR.BENEFIT_OPTION_VALUE,&#xD;&#xA;  PHD.NET_AMOUNT,PHH.PERSON_ID,P.PERSON_ID,ORG.ORG_ID,ORG.ORG_NAME,P.LAST_NAME,P.FIRST_NAME,P.MIDDLE_NAME,PHD.PAYMENT_METHOD_VALUE,FBO_CO,&#xD;&#xA;  PHD.CHECK_NUMBER,PHH.PAYMENT_DATE,P.SSN,PHD.ADDR_LINE_1,PHD.ADDR_LINE_2,PHD.ADDR_CITY,ADDR_STATE_VALUE,ADDR_COUNTRY_VALUE,PHD.ADDR_ZIP_CODE,ADDR_ZIP_4_CODE,PBXR.PLAN_ID,&#xD;&#xA;  SP.PLAN_NAME,&#xD;&#xA;  PHD.NET_AMOUNT,&#xD;&#xA;  PHD.CHECK_NUMBER,&#xD;&#xA;  P.FIRST_NAME,&#xD;&#xA;        P.LAST_NAME,ADDR_LINE_3,&#xD;&#xA;        PHD.PAYMENT_METHOD_VALUE,ORG.FEDERAL_ID,P.SSN,PHD.ACCOUNT_NUMBER,PHD.FBO_CO,PHD.ROLLOVER_ACCOUNT_NO,SPBA.FUNDS_TYPE_VALUE,PHD.FOREIGN_PROVINCE,&#xD;&#xA;        CVDSTATE.DESCRIPTION,phd.FOREIGN_POSTAL_CODE,PHD.ADDR_STATE_ID, SPA.PAYEE_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPaymentHistoryDistributionDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select SPHH.ORG_ID,SPA.ORG_ID,SPHD.* from SGT_PAYMENT_HISTORY_DISTRIBUTION SPHD &#xD;&#xA;inner join SGT_PAYMENT_HISTORY_HEADER SPHH on SPHD.PAYMENT_HISTORY_HEADER_ID = SPHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;inner join SGT_PAYEE_ACCOUNT SPA on SPHH.PAYEE_ACCOUNT_ID = SPA.PAYEE_ACCOUNT_ID&#xD;&#xA;where SPA.PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID --and SPA.PERSON_ID= SPHH.PERSON_ID &#xD;&#xA;and &#xD;&#xA;SPHD.DISTRIBUTION_STATUS_VALUE in ('OUTS') and sphd.PAYMENT_METHOD_VALUE in ('CHK')&#xD;&#xA;AND (SPA.PERSON_ID= SPHH.PERSON_ID OR SPA.TRANSFER_ORG_ID=SPHH.ORG_ID)">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="fleGetOutstandingRecordsForCheckFile" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--PIR1040 Added STLE status with OUTS status.&#xD;&#xA;SELECT * FROM SGT_PAYMENT_HISTORY_DISTRIBUTION SPHD WITH(NOLOCK)&#xD;&#xA;WHERE SPHD.DISTRIBUTION_STATUS_VALUE in('OUTS','STLE') AND &#xD;&#xA;(SPHD.PAYMENT_METHOD_VALUE = 'CHK' OR SPHD.PAYMENT_METHOD_VALUE = 'RCHK')">
      <parameters />
    </query>
    <query ID="GetDistributionDetailsForIRSChildSpouseOther" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;PHH.PERSON_ID,&#xD;&#xA;PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;PHH.ORG_ID as DEDUCTION_ORG_ID,&#xD;&#xA;PHH.PERSON_ID as DEDUCTION_PERSON_ID,  --&#xD;&#xA;PS.CHECK_MESSAGE,&#xD;&#xA;PIT.ITEM_TYPE_CODE,&#xD;&#xA;SUM(PHD.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT&#xD;&#xA;FROM SGT_PAYMENT_HISTORY_DETAIL  PHD WITH(NOLOCK) &#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)  &#xD;&#xA;ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;INNER JOIN TEMP_TABLE_FOR_PAYMENT PA WITH(NOLOCK)  &#xD;&#xA;ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) &#xD;&#xA;ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;INNER JOIN SGT_PAYMENT_SCHEDULE PS WITH(NOLOCK)  ON PS.PAYMENT_SCHEDULE_ID=PHH.PAYMENT_SCHEDULE_ID&#xD;&#xA;WHERE &#xD;&#xA;PHH.PAYMENT_SCHEDULE_ID= (select top 1 PAYMENT_SCHEDULE_ID from SGT_PAYMENT_HISTORY_HEADER where PAYEE_ACCOUNT_ID=@PAYEE_ACCOUNT_ID order by PAYMENT_DATE)&#xD;&#xA;AND &#xD;&#xA;(PIT.ITEM_TYPE_CODE='ITEM45' OR PIT.ITEM_TYPE_CODE='ITEM46' OR PIT.ITEM_TYPE_CODE='ITEM47' OR PIT.ITEM_TYPE_CODE='ITEM56')    &#xD;&#xA;GROUP BY  PHH.PAYMENT_HISTORY_HEADER_ID,PHH.PERSON_ID,PHH.ORG_ID,PHH.PAYEE_ACCOUNT_ID,PHD.ROLLOVER_ORG_ID,PS.CHECK_MESSAGE,PIT.ITEM_TYPE_CODE">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetGrossAmountForTheParticipant" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;Select  PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;  PHD.NET_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS'  THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Gross_Amount,&#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS' and TAXABLE_ITEM_FLAG = 'Y' and ITEM_TYPE_DIRECTION = 1 THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Taxable_Amount, &#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS' and TAXABLE_ITEM_FLAG = 'N' and ITEM_TYPE_DIRECTION = 1 THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Non_Taxable_Amount,&#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS'  and ITEM_TYPE_DIRECTION = -1 THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Rollover_Amount,  &#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS State_Tax_Amount,   &#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Federal_Tax_Amount,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'RECV' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Pension_Receivable,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'CHLD' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS ChildORSpousal_Support,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'LAVY' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Tax_Levy,&#xD;&#xA;        PHD.CHECK_NUMBER AS Cheque_Number,&#xD;&#xA;  DATEADD(MM,DATEDIFF(MONTH,0,PHH.PAYMENT_DATE),0) AS 'PAYMENT_DATE' --PIR 883&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;JOIN SGT_PERSON P ON PHH.PERSON_ID=P.PERSON_ID&#xD;&#xA;JOIN SGT_PAYEE_ACCOUNT TPA ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID AND PHH.PERSON_ID=TPA.PERSON_ID&#xD;&#xA;JOIN  SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PHDE.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;where PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CDRE','CNLD','RCMD')  AND (PHD.OLD_DISTRIBUTION_ID IS NULL OR &#xD;&#xA;(PHD.OLD_DISTRIBUTION_ID IS NOT NULL AND EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_DISTRIBUTION Q WHERE Q.PAYMENT_HISTORY_DISTRIBUTION_ID = PHD.OLD_DISTRIBUTION_ID AND Q.DISTRIBUTION_STATUS_VALUE = 'CDRE'))) &#xD;&#xA;AND TPA.PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID and PHH.PAYMENT_DATE between @FROMDATE and @TODATE&#xD;&#xA; AND PHD.OLD_DISTRIBUTION_ID IS NULL AND PHH.OLD_PAYMENT_HISTORY_HEADER_ID IS NULL&#xD;&#xA;GROUP BY PHH.PAYMENT_HISTORY_HEADER_ID, TPA.PAYEE_ACCOUNT_ID,&#xD;&#xA;  PHD.NET_AMOUNT,PHH.PERSON_ID,P.MPI_PERSON_ID,P.LAST_NAME,P.FIRST_NAME,P.MIDDLE_NAME,PHD.PAYMENT_METHOD_VALUE,FBO_CO,&#xD;&#xA;  PHD.CHECK_NUMBER,PHH.PAYMENT_DATE &#xD;&#xA;order by PHH.PAYMENT_DATE&#xD;&#xA;">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@FROMDATE" sfwDataType="DateTime" />
        <parameter ID="@TODATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadACHForReclamationFile" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;      SPE.PAYEE_ACCOUNT_ID,&#xD;&#xA;      PHD.NET_AMOUNT,&#xD;&#xA;      PHD.ROUTING_NUMBER,&#xD;&#xA;      PHD.ACCOUNT_NUMBER,     &#xD;&#xA;   PHD.ACCOUNT_TYPE_VALUE AS TRANSACTION_CODE,    &#xD;&#xA;   PHD.ACCOUNT_NUMBER AS ACCOUNT_NO,&#xD;&#xA;   CASE WHEN PHH.PERSON_ID IS NULL THEN ORG.ORG_ID ELSE PER1.PERSON_ID END AS PERSON_ID,&#xD;&#xA;   CASE WHEN PHH.PERSON_ID IS NULL THEN ORG.ORG_NAME ELSE PER1.LAST_NAME + ' ' + PER1.FIRST_NAME END AS PERSON_NAME,&#xD;&#xA;   PER1.MPI_PERSON_ID,&#xD;&#xA;   PHD.PAYMENT_HISTORY_DISTRIBUTION_ID AS IIN,&#xD;&#xA;   PLAN_ID       &#xD;&#xA;    FROM SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK)&#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;        ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT SPE WITH(NOLOCK) &#xD;&#xA;        ON SPE.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID &#xD;&#xA;   LEFT JOIN SGT_PAYEE_ACCOUNT_ACH_DETAIL PE WITH(NOLOCK) &#xD;&#xA;        ON SPE.PAYEE_ACCOUNT_ID=PE.PAYEE_ACCOUNT_ID  AND PE.BANK_ORG_ID = PHD.ORG_ID&#xD;&#xA;   LEFT JOIN SGT_PERSON PER1 WITH(NOLOCK) &#xD;&#xA;        ON PER1.PERSON_ID=PHH.PERSON_ID&#xD;&#xA;   LEFT JOIN  SGT_ORGANIZATION ORG&#xD;&#xA;     ON PHH.ORG_ID = ORG.ORG_ID&#xD;&#xA;     WHERE    &#xD;&#xA;     PHD.PAYMENT_METHOD_VALUE = 'ACH'&#xD;&#xA;  AND PHD.DISTRIBUTION_STATUS_VALUE = 'RMPD'">
      <parameters />
    </query>
    <query ID="LoadfleDetailsForACHNotificationChangeandReturn" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="  SELECT * FROM SGT_PAYEE_ACCOUNT_ACH_DETAIL SPAAD&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT SPA ON SPA.PAYEE_ACCOUNT_ID = SPAAD.PAYEE_ACCOUNT_ID&#xA;  WHERE SPA.PERSON_ID = @PERSON_ID AND &#xA;  SPAAD.ACH_END_DATE IS NULL">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPaymentAfterDeath" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;  PHD.NET_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS'  THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Gross_Amount,&#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS' and TAXABLE_ITEM_FLAG = 'Y' and ITEM_TYPE_DIRECTION = 1 THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Taxable_Amount, &#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS' and TAXABLE_ITEM_FLAG = 'N' and ITEM_TYPE_DIRECTION = 1 THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Non_Taxable_Amount,&#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS'  and ITEM_TYPE_DIRECTION = -1 THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Rollover_Amount,  &#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS State_Tax_Amount,   &#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Federal_Tax_Amount,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'RECV' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Pension_Receivable,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'CHLD' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS ChildORSpousal_Support,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'LAVY' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Tax_Levy,&#xD;&#xA;        PHD.CHECK_NUMBER AS Cheque_Number,&#xD;&#xA;PHH.PAYMENT_DATE&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;JOIN SGT_PERSON P ON PHH.PERSON_ID=P.PERSON_ID&#xD;&#xA;JOIN SGT_PAYEE_ACCOUNT TPA ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID AND PHH.PERSON_ID=TPA.PERSON_ID&#xD;&#xA;JOIN  SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PHDE.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;where PHD.DISTRIBUTION_STATUS_VALUE IN ('OUTS','CLRD') and&#xD;&#xA; TPA.PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID and PHH.PAYMENT_DATE &gt;= @DATEOFDEATH &#xD;&#xA;GROUP BY PHH.PAYMENT_HISTORY_HEADER_ID, TPA.PAYEE_ACCOUNT_ID,&#xD;&#xA;  PHD.NET_AMOUNT,PHH.PERSON_ID,P.MPI_PERSON_ID,P.LAST_NAME,P.FIRST_NAME,P.MIDDLE_NAME,PHD.PAYMENT_METHOD_VALUE,FBO_CO,&#xD;&#xA;  PHD.CHECK_NUMBER,PHH.PAYMENT_DATE">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@DATEOFDEATH" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadCheckReconciliationOutBoundFileData" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  &#xD;&#xA;      RIGHT(REPLICATE('0', 12) + CAST(REPLACE(PHD.NET_AMOUNT,'.','') AS VARCHAR(12)),12) AS istrNetAmount,&#xD;&#xA;      CASE WHEN PHH.PLAN_ID = 1 THEN '158300149768' ELSE '158300149776' END AS ACCOUNT_NUMBER,&#xD;&#xA;   RIGHT(REPLICATE('0', 10) + CAST(PHD.CHECK_NUMBER AS VARCHAR(10)),10) AS CHECK_NUMBER,&#xD;&#xA;   PHD.CHECK_ACH_EFFECTIVE_DATE,&#xD;&#xA;   CASE WHEN (PHD.DISTRIBUTION_STATUS_VALUE = 'CNLD' AND PHD.NET_AMOUNT IS NOT NULL) OR (PHD.NET_AMOUNT = 0) THEN 'V' ELSE ' ' END AS DISTRIBUTION_STATUS_VALUE,&#xD;&#xA;   PHD.NET_AMOUNT, &#xD;&#xA;   CASE WHEN PHH.PERSON_ID IS NULL THEN UPPER(ORG.ORG_NAME) &#xD;&#xA;  ELSE UPPER(ISNULL(RTRIM(FIRST_NAME)+' ','')+ISNULL(RTRIM(LTRIM(MIDDLE_NAME)) + ' ','') + ISNULL(RTRIM(LTRIM(LAST_NAME)),'')) END AS RECIPIENT_NAME --PIR 1077&#xD;&#xA;    FROM SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK)&#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;        ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT SPE WITH(NOLOCK) &#xD;&#xA;        ON SPE.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID &#xD;&#xA;   LEFT OUTER JOIN SGT_PERSON P --PIR 1077&#xD;&#xA;                  ON PHH.PERSON_ID=P.PERSON_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_ORGANIZATION ORG &#xD;&#xA;                  ON PHH.ORG_ID=ORG.ORG_ID&#xD;&#xA;     WHERE    &#xD;&#xA;     PHD.PAYMENT_METHOD_VALUE IN ('CHK','RCHK')&#xD;&#xA;     AND PHD.CHECK_ACH_EFFECTIVE_DATE IS NOT NULL&#xD;&#xA;     AND PHD.CHECK_NUMBER IS NOT NULL&#xD;&#xA;     AND PHH.PAYMENT_SCHEDULE_ID = @Schedule_ID">
      <parameters>
        <parameter ID="@Schedule_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CountForCheckReconcilationOutboundFile" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;      &#xD;&#xA;      RIGHT(REPLICATE('0', 10) + CAST(SUM(PHD.NET_AMOUNT) AS VARCHAR(10)),10) AS intControlAmount,&#xD;&#xA;      RIGHT(REPLICATE('0', 6) + CAST(COUNT(PHD.CHECK_NUMBER) AS VARCHAR(6)),6) AS intControlCount,&#xD;&#xA;   PHD.CHECK_ACH_EFFECTIVE_DATE AS idtIssueDate&#xD;&#xA;    FROM SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK)&#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;        ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT SPE WITH(NOLOCK) &#xD;&#xA;        ON SPE.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID &#xD;&#xA;     WHERE    &#xD;&#xA;     PHD.PAYMENT_METHOD_VALUE IN ('CHK','RCHK')&#xD;&#xA;     AND (PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD') OR PHD.NET_AMOUNT IS NOT NULL)&#xD;&#xA;     AND PHD.CHECK_ACH_EFFECTIVE_DATE IS NOT NULL&#xD;&#xA;     AND PHD.CHECK_NUMBER IS NOT NULL&#xD;&#xA;     GROUP BY PHD.CHECK_ACH_EFFECTIVE_DATE">
      <parameters />
    </query>
    <query ID="GetGrossAmountForTheRetireeIncreaseParticipant" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;        PHD.NET_AMOUNT,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS'  THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Gross_Amount,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS' and TAXABLE_ITEM_FLAG = 'Y' and ITEM_TYPE_DIRECTION = 1 THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Taxable_Amount, &#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS' and TAXABLE_ITEM_FLAG = 'N' and ITEM_TYPE_DIRECTION = 1 THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Non_Taxable_Amount,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS'  and ITEM_TYPE_DIRECTION = -1 THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Rollover_Amount,     &#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS State_Tax_Amount,         &#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Federal_Tax_Amount,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'RECV' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Pension_Receivable,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'CHLD' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS ChildORSpousal_Support,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'LAVY' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Tax_Levy,&#xD;&#xA;        PHD.CHECK_NUMBER AS Cheque_Number,&#xD;&#xA;        DATEADD(MM,datediff(month,0,PHH.PAYMENT_DATE),0) as 'PAYMENT_DATE'    &#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;JOIN SGT_PERSON P ON PHH.PERSON_ID=P.PERSON_ID&#xD;&#xA;JOIN SGT_PAYEE_ACCOUNT TPA ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID AND PHH.PERSON_ID=TPA.PERSON_ID&#xD;&#xA;JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PHDE.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;where PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CDRE','CNLD','RCMD')  AND (PHD.OLD_DISTRIBUTION_ID IS NULL OR &#xD;&#xA;(PHD.OLD_DISTRIBUTION_ID IS NOT NULL AND EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_DISTRIBUTION Q WHERE Q.PAYMENT_HISTORY_DISTRIBUTION_ID = PHD.OLD_DISTRIBUTION_ID AND Q.DISTRIBUTION_STATUS_VALUE = 'CDRE')))&#xD;&#xA; AND TPA.PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID&#xD;&#xA;GROUP BY PHH.PAYMENT_HISTORY_HEADER_ID, TPA.PAYEE_ACCOUNT_ID,&#xD;&#xA;        PHD.NET_AMOUNT,PHH.PERSON_ID,P.MPI_PERSON_ID,P.LAST_NAME,P.FIRST_NAME,P.MIDDLE_NAME,PHD.PAYMENT_METHOD_VALUE,FBO_CO,&#xD;&#xA;        PHD.CHECK_NUMBER,PHH.PAYMENT_DATE&#xD;&#xA;&#xD;&#xA;">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetGrossAmountInAMonth" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select  PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;  PHD.NET_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS' AND PIT.BASE_AMOUNT_FLAG = 'Y' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Gross_Amount,&#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Total_Gross_Amount,&#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS' AND PIT.BASE_AMOUNT_FLAG = 'Y' and TAXABLE_ITEM_FLAG = 'Y' and ITEM_TYPE_DIRECTION = 1 THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Taxable_Amount, &#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS' AND PIT.BASE_AMOUNT_FLAG = 'Y' and TAXABLE_ITEM_FLAG = 'N' and ITEM_TYPE_DIRECTION = 1 THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Non_Taxable_Amount,&#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS' AND PIT.BASE_AMOUNT_FLAG = 'Y' and ITEM_TYPE_DIRECTION = -1 THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Rollover_Amount,  &#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS State_Tax_Amount,   &#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Federal_Tax_Amount,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'RECV' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Pension_Receivable,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'CHLD' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS ChildORSpousal_Support,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'LAVY' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Tax_Levy,&#xD;&#xA;        PHD.CHECK_NUMBER AS Cheque_Number,&#xD;&#xA;PHH.PAYMENT_DATE&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;JOIN SGT_PERSON P ON PHH.PERSON_ID=P.PERSON_ID&#xD;&#xA;JOIN SGT_PAYEE_ACCOUNT TPA ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID AND PHH.PERSON_ID=TPA.PERSON_ID&#xD;&#xA;JOIN  SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PHDE.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;where PHD.DISTRIBUTION_STATUS_VALUE IN ('OUTS','CLRD') and&#xD;&#xA; TPA.PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID and PHH.PAYMENT_DATE = @PAYMENT_DATE&#xD;&#xA;GROUP BY PHH.PAYMENT_HISTORY_HEADER_ID, TPA.PAYEE_ACCOUNT_ID,&#xD;&#xA;  PHD.NET_AMOUNT,PHH.PERSON_ID,P.MPI_PERSON_ID,P.LAST_NAME,P.FIRST_NAME,P.MIDDLE_NAME,PHD.PAYMENT_METHOD_VALUE,FBO_CO,&#xD;&#xA;  PHD.CHECK_NUMBER,PHH.PAYMENT_DATE&#xD;&#xA;">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@PAYMENT_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetOutstandingRecordsForPayee" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--SELECT * FROM SGT_PAYMENT_HISTORY_DISTRIBUTION SPHD WITH(NOLOCK)&#xD;&#xA;--INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;--on SPHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;--WHERE SPHD.DISTRIBUTION_STATUS_VALUE = 'OUTS' AND &#xD;&#xA;--(SPHD.PAYMENT_METHOD_VALUE = 'CHK' OR SPHD.PAYMENT_METHOD_VALUE = 'RCHK')&#xD;&#xA;--AND PHH.PAYEE_ACCOUNT_ID=@PAYEE_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;SELECT &#x9; &#xD;&#xA; PADD.addr_country_value ,&#xD;&#xA;SPHD.payment_history_distribution_id ,&#xD;&#xA;         SPHD.payment_history_header_id ,&#xD;&#xA;         SPHD.payment_method_id ,&#xD;&#xA;        -- SPHD.payment_method_description ,&#xD;&#xA;         SPHD.payment_method_value ,&#xD;&#xA;         SPHD.check_ach_effective_date ,&#xD;&#xA;         SPHD.check_message ,&#xD;&#xA;         SPHD.distribution_status_id ,&#xD;&#xA;        -- SPHD.distribution_status_description ,&#xD;&#xA;         SPHD.distribution_status_value ,&#xD;&#xA;         SPHD.net_amount ,&#xD;&#xA;         SPHD.check_number ,&#xD;&#xA;         SPHD.old_distribution_id ,&#xD;&#xA;        upper(SP.FIRST_NAME + ' ' + SP.LAST_NAME) AS PAYEE_NAME ,&#xD;&#xA;&#x9;&#x9; SPHD.recipient_name ,&#xD;&#xA;         SPHD.fbo_co ,&#xD;&#xA;         PADD.addr_line_1 ,&#xD;&#xA;         PADD.addr_line_2 ,&#xD;&#xA;&#x9;&#x9; '' AS addr_line_3 ,&#xD;&#xA;         PADD.addr_city ,&#xD;&#xA;         PADD.addr_state_id ,&#xD;&#xA;        -- PADD.addr_state_description ,&#xD;&#xA;         PADD.addr_state_value ,&#xD;&#xA;         PADD.addr_country_id ,&#xD;&#xA;        -- PADD.addr_country_description ,      &#xD;&#xA;         PADD.addr_zip_code ,&#xD;&#xA;         PADD.addr_zip_4_code ,&#xD;&#xA;         PADD.foreign_province ,&#xD;&#xA;         PADD.foreign_postal_code ,&#xD;&#xA;         SPHD.bank_name ,&#xD;&#xA;         SPHD.routing_number ,&#xD;&#xA;         SPHD.account_type_id ,&#xD;&#xA;        -- PHH.account_type_description ,&#xD;&#xA;         SPHD.account_type_value ,&#xD;&#xA;         SPHD.account_number ,&#xD;&#xA;         SPHD.person_id ,&#xD;&#xA;         SPHD.org_id ,&#xD;&#xA;         SPHD.status_change_reason_id ,&#xD;&#xA;        -- PHH.status_change_reason_description ,&#xD;&#xA;         SPHD.status_change_reason_value ,&#xD;&#xA;         SPHD.reissue_to_rollover_org_flag ,&#xD;&#xA;         SPHD.reissue_to_rollover_org_by ,&#xD;&#xA;         SPHD.payee_account_ach_detail_id ,&#xD;&#xA;         SPHD.rollover_account_no ,&#xD;&#xA;         SPHD.ach_reversal_flag ,&#xD;&#xA;         SPHD.corres_generated_flag ,&#xD;&#xA;&#x9;&#x9; PHH.PAYMENT_DATE&#xD;&#xA;&#x9; FROM SGT_PAYMENT_HISTORY_DISTRIBUTION SPHD WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;on SPHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PAYEE_ACCOUNT PC ON PHH.PAYEE_ACCOUNT_ID = PC.PAYEE_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON SP ON PC.PERSON_ID = SP.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ADDRESS PADD ON PC.PERSON_ID =PADD.PERSON_ID&#xD;&#xA;WHERE SPHD.DISTRIBUTION_STATUS_VALUE = 'OUTS' AND &#xD;&#xA;(SPHD.PAYMENT_METHOD_VALUE = 'CHK' OR SPHD.PAYMENT_METHOD_VALUE = 'RCHK')&#xD;&#xA;AND PADD.END_DATE IS NULL&#xD;&#xA;AND PHH.PAYEE_ACCOUNT_ID=@PAYEE_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetBenefitAmtFromCalc" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT TOP(1) ISNULL(BCO.BENEFIT_AMOUNT,0) ASBENEFIT_AMOUNT  FROM SGT_BENEFIT_CALCULATION_DETAIL BCD &#xD;&#xA;INNER JOIN SGT_BENEFIT_CALCULATION_OPTIONS BCO &#xD;&#xA;ON BCD.BENEFIT_CALCULATION_DETAIL_ID = BCO.BENEFIT_CALCULATION_DETAIL_ID &#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT SPA ON SPA.BENEFIT_CALCULATION_DETAIL_ID = BCD.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA;WHERE SPA.PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetAmntPaidForThePlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select &#xD;&#xA; SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS'  THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Gross_Amount&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;JOIN SGT_PERSON P ON PHH.PERSON_ID=P.PERSON_ID&#xD;&#xA;JOIN SGT_PAYEE_ACCOUNT TPA ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID AND PHH.PERSON_ID=TPA.PERSON_ID&#xD;&#xA;join SGT_PAYEE_BENEFIT_ACCOUNT SPBA on SPBA.PAYEE_BENEFIT_ACCOUNT_ID = TPA.PAYEE_BENEFIT_ACCOUNT_ID &#xD;&#xA;JOIN  SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PHDE.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;where PHD.DISTRIBUTION_STATUS_VALUE IN ('OUTS','CLRD') AND&#xD;&#xA; SPBA.PAYEE_BENEFIT_ACCOUNT_ID = @PAYEE_BENEFIT_ACCOUNT_ID AND &#xD;&#xA;PHH.PAYMENT_DATE &gt;= @PAYMENT_DATE">
      <parameters>
        <parameter ID="@PAYEE_BENEFIT_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@PAYMENT_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetAmntPaidToTheOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select &#xD;&#xA; SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS'  THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Gross_Amount&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;JOIN SGT_ORGANIZATION P ON PHH.ORG_ID=P.ORG_ID&#xD;&#xA;JOIN SGT_PAYEE_ACCOUNT TPA ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID AND PHH.ORG_ID=TPA.ORG_ID&#xD;&#xA;join SGT_PAYEE_BENEFIT_ACCOUNT SPBA on SPBA.PAYEE_BENEFIT_ACCOUNT_ID = TPA.PAYEE_BENEFIT_ACCOUNT_ID &#xD;&#xA;JOIN  SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PHDE.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;where PHD.DISTRIBUTION_STATUS_VALUE IN ('OUTS','CLRD') AND&#xD;&#xA; SPBA.PAYEE_BENEFIT_ACCOUNT_ID = @PAYEE_BENEFIT_ACCOUNT_ID AND &#xD;&#xA;PHH.PAYMENT_DATE &gt;= @PAYMENT_DATE">
      <parameters>
        <parameter ID="@PAYEE_BENEFIT_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@PAYMENT_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetTrueGrossAmountForTheParticipant" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select  PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;  PHD.NET_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS'  THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Gross_Amount,&#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS' and TAXABLE_ITEM_FLAG = 'Y' and ITEM_TYPE_DIRECTION = 1 THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Taxable_Amount, &#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS' and TAXABLE_ITEM_FLAG = 'N' and ITEM_TYPE_DIRECTION = 1 THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Non_Taxable_Amount,&#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS'  and ITEM_TYPE_DIRECTION = -1 THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Rollover_Amount,  &#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS State_Tax_Amount,   &#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Federal_Tax_Amount,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'RECV' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Pension_Receivable,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'CHLD' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS ChildORSpousal_Support,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'LAVY' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Tax_Levy,&#xD;&#xA;        PHD.CHECK_NUMBER AS Cheque_Number,&#xD;&#xA;  DATEADD(MM,DATEDIFF(MONTH,0,PHH.PAYMENT_DATE),0) AS 'PAYMENT_DATE' --PIR 883 --PHH.PAYMENT_DATE&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;JOIN SGT_PERSON P ON PHH.PERSON_ID=P.PERSON_ID&#xD;&#xA;JOIN SGT_PAYEE_ACCOUNT TPA ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID AND PHH.PERSON_ID=TPA.PERSON_ID&#xD;&#xA;JOIN  SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PHDE.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;where PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CDRE','CNLD','RCMD')  AND (PHD.OLD_DISTRIBUTION_ID IS NULL OR &#xD;&#xA;(PHD.OLD_DISTRIBUTION_ID IS NOT NULL AND EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_DISTRIBUTION Q WHERE Q.PAYMENT_HISTORY_DISTRIBUTION_ID = PHD.OLD_DISTRIBUTION_ID AND Q.DISTRIBUTION_STATUS_VALUE = 'CDRE')))&#xD;&#xA; AND PIT.BASE_AMOUNT_FLAG = 'Y' and&#xD;&#xA; TPA.PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID and PHH.PAYMENT_DATE between @FROMDATE and @TODATE&#xD;&#xA; AND PHD.OLD_DISTRIBUTION_ID IS NULL AND PHH.OLD_PAYMENT_HISTORY_HEADER_ID IS NULL&#xD;&#xA;GROUP BY PHH.PAYMENT_HISTORY_HEADER_ID, TPA.PAYEE_ACCOUNT_ID,&#xD;&#xA;  PHD.NET_AMOUNT,PHH.PERSON_ID,P.MPI_PERSON_ID,P.LAST_NAME,P.FIRST_NAME,P.MIDDLE_NAME,PHD.PAYMENT_METHOD_VALUE,FBO_CO,&#xD;&#xA;  PHD.CHECK_NUMBER,PHH.PAYMENT_DATE &#xD;&#xA;order by PHH.PAYMENT_DATE&#xD;&#xA;">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@FROMDATE" sfwDataType="DateTime" />
        <parameter ID="@TODATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetPayeeInformation" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;SELECT TOP 1&#xD;&#xA;PADD.addr_country_value ,&#xD;&#xA;upper(SP.FIRST_NAME + ' ' + SP.LAST_NAME) AS PAYEE_NAME ,&#xD;&#xA;             PADD.addr_line_1 ,&#xD;&#xA;         PADD.addr_line_2 ,&#xD;&#xA;         '' AS addr_line_3 ,&#xD;&#xA;         PADD.addr_city ,&#xD;&#xA;         PADD.addr_state_id ,&#xD;&#xA;        -- PADD.addr_state_description ,&#xD;&#xA;         PADD.addr_state_value ,&#xD;&#xA;         PADD.addr_country_id ,&#xD;&#xA;        -- PADD.addr_country_description ,      &#xD;&#xA;         PADD.addr_zip_code ,&#xD;&#xA;         PADD.addr_zip_4_code ,&#xD;&#xA;         PADD.foreign_province ,&#xD;&#xA;         PADD.foreign_postal_code &#xD;&#xA;         ,PADD.START_DATE&#xD;&#xA;     FROM SGT_PERSON SP &#xD;&#xA;LEFT OUTER JOIN OPUS.dbo.SGT_PERSON_ADDRESS  PADD on SP.PERSON_ID = PADD.PERSON_ID AND GETDATE() BETWEEN PADD.START_DATE AND ISNULL(PADD.END_DATE,'12/31/2078')&#xD;&#xA;LEFT OUTER JOIN OPUS.dbo.SGT_PERSON_ADDRESS_CHKLIST chk on PADD.ADDRESS_ID = chk.ADDRESS_ID AND chk.ADDRESS_TYPE_VALUE = 'MAIL'&#xD;&#xA;WHERE  SP.PERSON_ID= @PERSON_ID &#xD;&#xA;ORDER BY PADD.ADDRESS_ID DESC">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CreateWIREHistoryForPayees" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Declare @EFFECTIVE_DATE datetime&#xD;&#xA;SELECT TOP 1 @EFFECTIVE_DATE = ACH_EFFECTIVE_DATE   &#xD;&#xA; FROM SGT_PAYMENT_SCHEDULE WITH(NOLOCK) &#xD;&#xA; WHERE PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA; ORDER BY PAYMENT_DATE DESC&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PAYMENT_HISTORY_DISTRIBUTION&#xD;&#xA;(&#xD;&#xA;      PAYMENT_HISTORY_HEADER_ID, PAYMENT_METHOD_ID, PAYMENT_METHOD_VALUE, CHECK_MESSAGE,CHECK_ACH_EFFECTIVE_DATE,&#xD;&#xA;      DISTRIBUTION_STATUS_ID, DISTRIBUTION_STATUS_VALUE, NET_AMOUNT, CHECK_NUMBER, OLD_DISTRIBUTION_ID, RECIPIENT_NAME,&#xD;&#xA;      FBO_CO, ADDR_LINE_1, ADDR_LINE_2,ADDR_LINE_3, ADDR_CITY, ADDR_STATE_ID, ADDR_STATE_VALUE, ADDR_COUNTRY_ID, ADDR_COUNTRY_VALUE, &#xD;&#xA;      ADDR_ZIP_CODE, ADDR_ZIP_4_CODE, FOREIGN_PROVINCE, FOREIGN_POSTAL_CODE, BANK_NAME, ABA_SWIFT_BANK_CODE,&#xD;&#xA;      ACCOUNT_TYPE_ID, ACCOUNT_TYPE_VALUE, ACCOUNT_NUMBER, PERSON_ID, ORG_ID,&#xD;&#xA;      CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ, PAYEE_ACCOUNT_WIRE_DETAIL_ID&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;SELECT&#xD;&#xA;      PAYMENT_HISTORY_HEADER_ID, PAYMENT_METHOD_ID, PAYMENT_METHOD_VALUE, CHECK_MESSAGE,CHECK_ACH_EFFECTIVE_DATE,&#xD;&#xA;      DISTRIBUTION_STATUS_ID, DISTRIBUTION_STATUS_VALUE, NET_AMOUNT, CHECK_NUMBER, OLD_DISTRIBUTION_ID, RECIPIENT_NAME, &#xD;&#xA;      FBO_CO, ADDR_LINE_1, ADDR_LINE_2,ADDR_LINE_3, ADDR_CITY, ADDR_STATE_ID, ADDR_STATE_VALUE, ADDR_COUNTRY_ID, ADDR_COUNTRY_VALUE, &#xD;&#xA;      ADDR_ZIP_CODE, ADDR_ZIP_4_CODE, FOREIGN_PROVINCE, FOREIGN_POSTAL_CODE,&#xD;&#xA;      BANK_NAME, ABA_SWIFT_BANK_CODE, ACCOUNT_TYPE_ID, ACCOUNT_TYPE_VALUE, ACCOUNT_NUMBER, PERSON_ID, ORG_ID,&#xD;&#xA;      'OPUS Batch' as  CREATED_BY ,getdate() as CREATED_DATE,'OPUS Batch' as  MODIFIED_BY ,getdate() as MODIFIED_DATE,0 UPDATE_SEQ, PAYEE_ACCOUNT_WIRE_DETAIL_ID&#xD;&#xA;FROM (&#xD;&#xA;SELECT      &#xD;&#xA;       PAYMENT.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;       @EFFECTIVE_DATE AS CHECK_ACH_EFFECTIVE_DATE,&#xD;&#xA;       7039 AS PAYMENT_METHOD_ID,&#xD;&#xA;       CASE WHEN PAYMENT.AMOUNT&gt;0 THEN 'WIRE'  ELSE NULL END AS PAYMENT_METHOD_VALUE,--aCCOUNT tRANSFER&#xD;&#xA;       PAYMENT.CHECK_MESSAGE,&#xD;&#xA;       7036 AS DISTRIBUTION_STATUS_ID,&#xD;&#xA;       'CLRD' AS DISTRIBUTION_STATUS_VALUE, &#xD;&#xA;       PAYMENT.AMOUNT AS NET_AMOUNT,         &#xD;&#xA;       NULL AS CHECK_NUMBER,&#xD;&#xA;       NULL AS OLD_DISTRIBUTION_ID,&#xD;&#xA;    CASE WHEN PAYMENT.PERSON_ID IS NOT NULL  THEN  ISNULL(P.FIRST_NAME,'') +' '+ ISNULL(P.MIDDLE_NAME,'') +' '+ ISNULL(P.LAST_NAME,'') else +ORG.ORG_NAME END AS RECIPIENT_NAME,             &#xD;&#xA;       NULL as FBO_CO,&#xD;&#xA;       CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_1 &#xD;&#xA;             ELSE &#xD;&#xA;             CASE WHEN PAYMENT.TRANSFER_ORG_CONTACT_NAME IS NOT NULL THEN (ISNULL(RTRIM(LTRIM('C/O ' + PAYMENT.TRANSFER_ORG_CONTACT_NAME)),'')) ELSE OCA.ADDR_LINE_1 END &#xD;&#xA;   END AS ADDR_LINE_1,&#xD;&#xA;   CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_2 &#xD;&#xA;             ELSE &#xD;&#xA;             CASE WHEN PAYMENT.TRANSFER_ORG_CONTACT_NAME IS NOT NULL THEN OCA.ADDR_LINE_1 ELSE OCA.ADDR_LINE_2 END &#xD;&#xA;   END AS ADDR_LINE_2,&#xD;&#xA;   CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN NULL &#xD;&#xA;             ELSE &#xD;&#xA;             CASE WHEN PAYMENT.TRANSFER_ORG_CONTACT_NAME IS NOT NULL THEN OCA.ADDR_LINE_2 ELSE NULL END &#xD;&#xA;   END AS ADDR_LINE_3,&#xD;&#xA;       CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_CITY ELSE OCA.CITY END AS ADDR_CITY,&#xD;&#xA;       CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_STATE_ID ELSE OCA.STATE_ID END AS ADDR_STATE_ID,&#xD;&#xA;       CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_STATE_VALUE ELSE OCA.STATE_VALUE END AS ADDR_STATE_VALUE,&#xD;&#xA;       CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_COUNTRY_ID ELSE OCA.COUNTRY_ID END AS ADDR_COUNTRY_ID,&#xD;&#xA;       CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_COUNTRY_VALUE ELSE OCA.COUNTRY_VALUE END AS ADDR_COUNTRY_VALUE,&#xD;&#xA;       CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_ZIP_CODE ELSE OCA.ZIP_CODE END AS ADDR_ZIP_CODE,&#xD;&#xA;       CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_ZIP_4_CODE ELSE OCA.ZIP_4_CODE END AS ADDR_ZIP_4_CODE,&#xD;&#xA;       CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.FOREIGN_PROVINCE ELSE OCA.FOREIGN_PROVINCE END AS FOREIGN_PROVINCE,&#xD;&#xA;       CASE WHEN PAYMENT.PERSON_ID IS NOT NULL THEN PERADDR.FOREIGN_POSTAL_CODE ELSE OCA.FOREIGN_POSTAL_CODE END AS FOREIGN_POSTAL_CODE,        &#xD;&#xA;       ORG.ORG_NAME as BANK_NAME,&#xD;&#xA;       ORG.ABA_SWIFT_BANK_CODE as ABA_SWIFT_BANK_CODE,&#xD;&#xA;       TPA.BANK_ACCOUNT_TYPE_ID as ACCOUNT_TYPE_ID, &#xD;&#xA;       TPA.BANK_ACCOUNT_TYPE_VALUE as ACCOUNT_TYPE_VALUE,&#xD;&#xA;       TPA.BENEFICIARY_ACCOUNT_NUMBER as ACCOUNT_NUMBER,&#xD;&#xA;       PAYMENT.PERSON_ID,PAYMENT.ORG_ID, TPA.PAYEE_ACCOUNT_WIRE_DETAIL_ID&#xD;&#xA;FROM&#xD;&#xA;           (&#xD;&#xA;&#xD;&#xA;            SELECT DISTINCT&#xD;&#xA;                  PHH.PAYMENT_HISTORY_HEADER_ID,SCH.CHECK_MESSAGE,&#xD;&#xA;                  PHH.PERSON_ID,PHH.ORG_ID,PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;                  SUM(PHD.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT,&#xD;&#xA;         ISNULL(PAYP.LAST_NAME,'') +' '+ ISNULL(PAYP.MIDDLE_NAME,'') +' '+ ISNULL(PAYP.FIRST_NAME,'')  AS FBO_CO&#xD;&#xA;         ,PA.TRANSFER_ORG_CONTACT_NAME          &#xD;&#xA;            FROM SGT_PAYMENT_HISTORY_DETAIL  PHD&#xD;&#xA;            INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH  &#xD;&#xA;                  ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;         INNER JOIN TEMP_TABLE_FOR_PAYMENT PA&#xD;&#xA;                  ON PA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;                  ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;            INNER JOIN SGT_PAYMENT_SCHEDULE SCH &#xD;&#xA;                  ON SCH.PAYMENT_SCHEDULE_ID = PHH.PAYMENT_SCHEDULE_ID&#xD;&#xA;           LEFT OUTER JOIN SGT_PAYMENT_REISSUE_DETAIL RD &#xD;&#xA;         ON RD.PAYMENT_REISSUE_DETAIL_ID = PA.PAYMENT_REISSUE_DETAIL_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_PERSON PAYP&#xD;&#xA;      ON PAYP.PERSON_ID=PHH.PERSON_ID&#xD;&#xA;            LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR&#xD;&#xA;      ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID&#xD;&#xA;            WHERE PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;            AND PIT.ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;            AND PIT.ITEM_TYPE_CODE NOT IN ('ITEM45', 'ITEM46' ,'ITEM47','ITEM56') &#xD;&#xA;            GROUP BY  PHH.PAYMENT_HISTORY_HEADER_ID,PHH.PERSON_ID,PHH.ORG_ID,PHH.PAYEE_ACCOUNT_ID,SCH.CHECK_MESSAGE,&#xD;&#xA;       PBXR.BENEFIT_OPTION_VALUE,PAYP.LAST_NAME,PAYP.MIDDLE_NAME,PAYP.FIRST_NAME&#xD;&#xA;                      ,PA.TRANSFER_ORG_CONTACT_NAME,PA.PAYMENT_REISSUE_DETAIL_ID&#xD;&#xA;          ) AS PAYMENT&#xD;&#xA;&#xD;&#xA;      INNER JOIN TEMP_TABLE_FOR_PAYMENT TPA&#xD;&#xA;            ON TPA.PAYEE_ACCOUNT_ID = PAYMENT.PAYEE_ACCOUNT_ID &#xD;&#xA;      LEFT OUTER JOIN SGT_PERSON P  &#xD;&#xA;           ON PAYMENT.PERSON_ID = P.PERSON_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_ORGANIZATION O  &#xD;&#xA;           ON PAYMENT.ORG_ID = O.ORG_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_ORGANIZATION ORG &#xD;&#xA;           ON TPA.WIRE_BANK_ORG_ID = ORG.ORG_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_ORG_ADDRESS OCA ON O.ORG_ID = OCA.ORG_ID AND &#xD;&#xA;       OCA.START_DATE &lt;= @PAYMENTDATE AND (OCA.END_DATE IS NULL OR OCA.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;                      AND OCA.ADDRESS_TYPE_VALUE IN ('PYAM','MAIL')&#xD;&#xA;&#xD;&#xA;   LEFT OUTER JOIN &#xD;&#xA;       (SELECT  P.PERSON_ID, &#xD;&#xA;                                 PA1.ADDR_LINE_1 AS ADDR_LINE_1,&#xD;&#xA;                                 PA1.ADDR_LINE_2 AS ADDR_LINE_2,&#xD;&#xA;         PA1.ADDR_CITY  AS ADDR_CITY,&#xD;&#xA;         PA1.ADDR_STATE_ID  AS ADDR_STATE_ID,&#xD;&#xA;         CASE WHEN PAC.ADDRESS_TYPE_VALUE='MAIL' OR PAC.ADDRESS_TYPE_VALUE IS NULL  then 1 ELSE 2 END AS ADDRESS_TYPE,&#xD;&#xA;         PA1.ADDR_STATE_VALUE AS ADDR_STATE_VALUE,&#xD;&#xA;            PA1.ADDR_COUNTRY_ID  AS ADDR_COUNTRY_ID,&#xD;&#xA;                                 PA1.ADDR_COUNTRY_VALUE  AS ADDR_COUNTRY_VALUE,&#xD;&#xA;                                 PA1.ADDR_ZIP_CODE AS ADDR_ZIP_CODE,&#xD;&#xA;                                 PA1.ADDR_ZIP_4_CODE  AS ADDR_ZIP_4_CODE,&#xD;&#xA;                                 PA1.FOREIGN_PROVINCE  AS FOREIGN_PROVINCE,&#xD;&#xA;                                 PA1.FOREIGN_POSTAL_CODE  AS FOREIGN_POSTAL_CODE&#xD;&#xA;                           FROM SGT_PERSON P &#xD;&#xA;                           LEFT OUTER JOIN SGT_PERSON_ADDRESS PA1   &#xD;&#xA;                           ON P.PERSON_ID  = PA1.PERSON_ID  &#xD;&#xA;                           &#xD;&#xA;                           AND PA1.START_DATE &lt;= @PAYMENTDATE AND (PA1.END_DATE IS NULL OR PA1.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;                           INNER JOIN SGT_PERSON_ADDRESS_CHKLIST PAC ON PA1.ADDRESS_ID=PAC.ADDRESS_ID&#xD;&#xA;                           WHERE PAC.ADDRESS_TYPE_VALUE='MAIL'&#xD;&#xA;                          &#xD;&#xA;            )AS PERADDR ON PERADDR.PERSON_ID=PAYMENT.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN&#xD;&#xA;        ( &#xD;&#xA;       SELECT DISTINCT PAYEE_ACCOUNT_ID FROM &#xD;&#xA;           SGT_PAYMENT_HISTORY_DISTRIBUTION CHK&#xD;&#xA;        INNER JOIN SGT_PAYMENT_HISTORY_HEADER CHKHD&#xD;&#xA;                 ON CHK.PAYMENT_HISTORY_HEADER_ID = CHKHD.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;                 AND CHKHD.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;        WHERE PAYMENT_METHOD_VALUE  IN ('CHK','ACH')&#xD;&#xA;         ) AS CHECKSPAID&#xD;&#xA;         ON PAYMENT.PAYEE_ACCOUNT_ID   = CHECKSPAID.PAYEE_ACCOUNT_ID &#xD;&#xA;WHERE  TPA.PAYEE_ACCOUNT_WIRE_DETAIL_ID IS NOT NULL&#xD;&#xA;AND CHECKSPAID.PAYEE_ACCOUNT_ID IS NULL&#xD;&#xA;&#xD;&#xA;)TEMP &#xD;&#xA;&#xD;&#xA;GROUP BY &#xD;&#xA;      PAYMENT_HISTORY_HEADER_ID, PAYMENT_METHOD_ID, PAYMENT_METHOD_VALUE, CHECK_MESSAGE,CHECK_ACH_EFFECTIVE_DATE,&#xD;&#xA;      DISTRIBUTION_STATUS_ID, DISTRIBUTION_STATUS_VALUE, NET_AMOUNT, CHECK_NUMBER, OLD_DISTRIBUTION_ID, RECIPIENT_NAME, &#xD;&#xA;      FBO_CO, ADDR_LINE_1, ADDR_LINE_2,ADDR_LINE_3, ADDR_CITY, ADDR_STATE_ID, ADDR_STATE_VALUE, ADDR_COUNTRY_ID, ADDR_COUNTRY_VALUE, &#xD;&#xA;      ADDR_ZIP_CODE, ADDR_ZIP_4_CODE, FOREIGN_PROVINCE, FOREIGN_POSTAL_CODE,&#xD;&#xA;      BANK_NAME, ABA_SWIFT_BANK_CODE, ACCOUNT_TYPE_ID, ACCOUNT_TYPE_VALUE, ACCOUNT_NUMBER, PERSON_ID, ORG_ID,&#xD;&#xA;      PAYEE_ACCOUNT_WIRE_DETAIL_ID&#xD;&#xA;ORDER BY PAYMENT_HISTORY_HEADER_ID">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetOrgMpId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select MPI_ORG_ID AS istrOrgID from SGT_ORGANIZATION WITH(NOLOCK) where  ORG_ID = @MPI_ORG_ID">
      <parameters>
        <parameter ID="@MPI_ORG_ID" sfwDataType="int" />
      </parameters>
    </query>
  </queries>
  <attributes>
    <attribute sfwValue="payment_history_distribution_id" sfwType="Column" sfwKeyNo="1" sfwIsIdentity="True" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="PaymentHistoryDistributionId" sfwIsSequence="False" sfwCaption="ID" />
    <attribute sfwValue="payment_history_header_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="PaymentHistoryHeaderId" sfwIsSequence="False" sfwCaption="Payment History Header Id" />
    <attribute sfwType="Description" ID="PaymentMethodDescription" sfwCaption="Payment Method" sfwValue="payment_method_description" />
    <attribute sfwValue="payment_method_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="PaymentMethodId" sfwCodeID="7039" sfwIsSequence="False" sfwCaption="Payment Method" />
    <attribute sfwValue="payment_method_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="PaymentMethodValue" sfwIsSequence="False" sfwCaption="Payment Method" />
    <attribute sfwValue="check_ach_effective_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="CheckAchEffectiveDate" sfwIsSequence="False" sfwCaption="Check Ach Effective Date" />
    <attribute sfwValue="check_message" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="200" sfwIsNull="True" ID="CheckMessage" sfwIsSequence="False" sfwCaption="Check Message" />
    <attribute sfwType="Description" ID="DistributionStatusDescription" sfwCaption="Distribution Status" sfwValue="distribution_status_description" />
    <attribute sfwValue="distribution_status_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="DistributionStatusId" sfwCodeID="7036" sfwIsSequence="False" sfwCaption="Distribution Status" />
    <attribute sfwValue="distribution_status_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="DistributionStatusValue" sfwIsSequence="False" sfwCaption="Distribution Status" />
    <attribute sfwValue="net_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="NetAmount" sfwIsSequence="False" sfwCaption="Net Amount" />
    <attribute sfwValue="check_number" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="20" sfwIsNull="True" ID="CheckNumber" sfwIsSequence="False" sfwCaption="Check Number" />
    <attribute sfwValue="old_distribution_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="OldDistributionId" sfwIsSequence="False" sfwCaption="Old Distribution Id" />
    <attribute sfwValue="recipient_name" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="True" ID="RecipientName" sfwIsSequence="False" sfwCaption="Recipient Name" />
    <attribute sfwValue="fbo_co" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="100" sfwIsNull="True" ID="FboCo" sfwIsSequence="False" sfwCaption="Fbo Co" />
    <attribute sfwValue="addr_line_1" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="60" sfwIsNull="True" ID="AddrLine1" sfwIsSequence="False" sfwCaption="Addr Line 1" />
    <attribute sfwValue="addr_line_2" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="60" sfwIsNull="True" ID="AddrLine2" sfwIsSequence="False" sfwCaption="Addr Line 2" />
    <attribute sfwValue="addr_city" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="True" ID="AddrCity" sfwIsSequence="False" sfwCaption="Addr City" />
    <attribute sfwType="Description" ID="AddrStateDescription" sfwCaption="Addr State" sfwValue="addr_state_description" />
    <attribute sfwValue="addr_state_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="AddrStateId" sfwCodeID="150" sfwIsSequence="False" sfwCaption="Addr State" />
    <attribute sfwValue="addr_state_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="AddrStateValue" sfwIsSequence="False" sfwCaption="Addr State" />
    <attribute sfwType="Description" ID="AddrCountryDescription" sfwCaption="Addr Country" sfwValue="addr_country_description" />
    <attribute sfwValue="addr_country_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="AddrCountryId" sfwCodeID="151" sfwIsSequence="False" sfwCaption="Addr Country" />
    <attribute sfwValue="addr_country_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="AddrCountryValue" sfwIsSequence="False" sfwCaption="Addr Country" />
    <attribute sfwValue="addr_zip_code" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="5" sfwIsNull="True" ID="AddrZipCode" sfwIsSequence="False" sfwCaption="Addr Zip Code" />
    <attribute sfwValue="addr_zip_4_code" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="AddrZip4Code" sfwIsSequence="False" sfwCaption="Addr Zip 4 Code" />
    <attribute sfwValue="foreign_province" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="256" sfwIsNull="True" ID="ForeignProvince" sfwIsSequence="False" sfwCaption="Foreign Province" />
    <attribute sfwValue="foreign_postal_code" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="10" sfwIsNull="True" ID="ForeignPostalCode" sfwIsSequence="False" sfwCaption="Foreign Postal Code" />
    <attribute sfwValue="bank_name" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="True" ID="BankName" sfwIsSequence="False" sfwCaption="Bank Name" />
    <attribute sfwValue="routing_number" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="20" sfwIsNull="True" ID="RoutingNumber" sfwIsSequence="False" sfwCaption="Routing Number" />
    <attribute sfwType="Description" ID="AccountTypeDescription" sfwCaption="Account Type" sfwValue="account_type_description" />
    <attribute sfwValue="account_type_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="AccountTypeId" sfwCodeID="7003" sfwIsSequence="False" sfwCaption="Account Type" />
    <attribute sfwValue="account_type_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="AccountTypeValue" sfwIsSequence="False" sfwCaption="Account Type" />
    <attribute sfwValue="account_number" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="20" sfwIsNull="True" ID="AccountNumber" sfwIsSequence="False" sfwCaption="Account Number" />
    <attribute sfwValue="person_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="PersonId" sfwIsSequence="False" sfwCaption="Person Id" />
    <attribute sfwValue="org_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="OrgId" sfwIsSequence="False" sfwCaption="Org Id" />
    <attribute sfwType="Description" ID="StatusChangeReasonDescription" sfwCaption="Status Change Reason" sfwValue="status_change_reason_description" />
    <attribute sfwValue="status_change_reason_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="StatusChangeReasonId" sfwCodeID="7038" sfwIsSequence="False" sfwCaption="Status Change Reason" />
    <attribute sfwValue="status_change_reason_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="StatusChangeReasonValue" sfwIsSequence="False" sfwCaption="Status Change Reason" />
    <attribute sfwValue="reissue_to_rollover_org_flag" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="1" sfwIsNull="True" ID="ReissueToRolloverOrgFlag" sfwIsSequence="False" sfwCaption="Reissue To Rollover Org Flag" />
    <attribute sfwValue="reissue_to_rollover_org_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="True" ID="ReissueToRolloverOrgBy" sfwIsSequence="False" sfwCaption="Reissue To Rollover Org By" />
    <attribute sfwValue="payee_account_ach_detail_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="PayeeAccountAchDetailId" sfwIsSequence="False" sfwCaption="Payee Account Ach Detail Id" />
    <attribute sfwValue="created_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="CreatedBy" sfwIsSequence="False" sfwCaption="Created By" />
    <attribute sfwValue="created_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="CreatedDate" sfwIsSequence="False" sfwCaption="Created Date" />
    <attribute sfwValue="modified_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="ModifiedBy" sfwIsSequence="False" sfwCaption="Modified By" />
    <attribute sfwValue="modified_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="ModifiedDate" sfwIsSequence="False" sfwCaption="Modified Date" />
    <attribute sfwValue="update_seq" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="UpdateSeq" sfwIsSequence="False" sfwCaption="Update Seq" />
    <attribute sfwValue="rollover_account_no" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="20" sfwIsNull="True" ID="RolloverAccountNo" sfwIsSequence="False" sfwCaption="Rollover Account No" />
    <attribute sfwValue="addr_line_3" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="60" sfwIsNull="True" ID="AddrLine3" sfwIsSequence="False" sfwCaption="Addr Line 3" />
    <attribute sfwValue="ach_reversal_flag" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="1" sfwIsNull="True" ID="AchReversalFlag" sfwIsSequence="False" sfwCaption="Ach Reversal Flag" />
    <attribute sfwValue="corres_generated_flag" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="1" sfwIsNull="True" ID="CorresGeneratedFlag" sfwCaption="Corres Generated Flag" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrEntryDetailIdentificationNumber" sfwValue="istrEntryDetailIdentificationNumber" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrStatusCode" sfwValue="istrStatusCode" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintRecordCode" sfwValue="iintRecordCode" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrfullAddress" sfwValue="icdoPaymentHistoryDistribution.istrfull_address" />
    <attribute sfwType="Collection" sfwEntity="entPaymentHistoryDistributionStatusHistory" ID="lstPaymentHistoryDistributionStatusHistory" sfwValue="iclbPaymentHistoryDistributionStatusHistory" />
    <attribute ID="objPaymentHistoryHeader" sfwType="Object" sfwEntity="entPaymentHistoryHeader" sfwValue="ibusPaymentHistoryHeader" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrPayeeMPID" sfwValue="istrPayeeMPID" />
    <attribute sfwType="Collection" sfwEntity="entPaymentReissueDetail" ID="lstPaymentReissueDetail" sfwValue="iclbPaymentReissueDetail" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrPayeeName" sfwValue="icdoPaymentHistoryDistribution.istrPayeeName" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrRolloverOrg" sfwValue="icdoPaymentHistoryDistribution.istrRolloverOrg" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrCurrentDate" sfwValue="istrCurrentDate" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrPlanDescription" sfwValue="istrPlanDescription" />
    <attribute sfwValue="aba_swift_bank_code" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="20" sfwIsNull="True" ID="AbaSwiftBankCode" sfwIsSequence="False" sfwCaption="Aba Swift Bank Code" />
    <attribute sfwValue="payee_account_wire_detail_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="PayeeAccountWireDetailId" sfwIsSequence="False" sfwCaption="Payee Account Wire Detail Id" />
    <attribute ID="IstrRecordCode" sfwDataType="string" sfwPrivate="False" sfwValue="istrRecordCode" sfwType="Property" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrOrgID" sfwValue="istrOrgID" />
  </attributes>
  <objectmethods>
    <method ID="GetReissuePaymentTypes" sfwReturnType="Collection" sfwObjectID="cdoCodeValue" sfwEntity="entCodeValue" />
    <method ID="LoadSurvivorsForPayee" sfwReturnType="Collection" sfwObjectID="cdoPerson" sfwEntity="entIAPAllocationDetailPersonOverview" />
    <method ID="btn_DeletReissueClick" sfwReturnType="ArrayList">
      <parameters>
        <parameter ID="aintpayment_reissue_detail_id" sfwDataType="int" />
      </parameters>
    </method>
  </objectmethods>
  <methods />
  <lifecycle />
  <ExtraFields />
</entity>