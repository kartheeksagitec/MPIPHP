<entity ID="entPaymentSchedule" sfwActive="True" sfwStatus="Review" sfwType="BusinessRule" sfwMainCDO="icdoPaymentSchedule" sfwObjectID="busPaymentSchedule" sfwTableName="sgt_payment_schedule" sfwView="False" sfwDataObjectID="doPaymentSchedule">
  <rules>
    <rule ID="Rule-CheckIfStatusSubTypeValeSelected" sfwMessageId="6184" sfwExpression="(this.icdoPaymentSchedule.schedule_type_value == &quot;VEND&quot;) &amp;&amp; &#xA;(string.IsNullOrEmpty(this.icdoPaymentSchedule.schedule_sub_type_value))" sfwObjectBased="True" />
    <rule ID="VisibleRuleForApproveButton" sfwExpression="(this.icdoPaymentSchedule.status_value == &quot;TREX&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRule-ForButtons" sfwExpression="(this.icdoPaymentSchedule.status_value == &quot;TREX&quot;) || &#xA;(this.icdoPaymentSchedule.status_value == &quot;PEND&quot;) || &#xA;(this.icdoPaymentSchedule.status_value == &quot;RFNL&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleForScheduleSubTypeDropDown" sfwExpression="(this.icdoPaymentSchedule.schedule_type_value == &quot;VEND&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleForScheduleTypeVEND" sfwExpression="!(this.icdoPaymentSchedule.schedule_type_value == &quot;VEND&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleForTrialButton" sfwExpression="(this.icdoPaymentSchedule.status_value == &quot;PEND&quot;) || &#xA;(this.icdoPaymentSchedule.status_value == &quot;TREX&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRule-MonthlyPaymentDirectiveReconRptBtn" sfwRuleType="Validation" sfwExpression="((this.icdoPaymentSchedule.status_value == &quot;RFNL&quot; || this.icdoPaymentSchedule.status_value == &quot;TREX&quot;) &amp;&amp; &#xD;&#xA;this.icdoPaymentSchedule.schedule_type_value == &quot;MTLY&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRule-WeeklyPaymentDirectiveReconRpt" sfwRuleType="Validation" sfwExpression="((this.icdoPaymentSchedule.status_value == &quot;RFNL&quot; || this.icdoPaymentSchedule.status_value == &quot;TREX&quot;) &amp;&amp; &#xD;&#xA;this.icdoPaymentSchedule.schedule_type_value == &quot;WKLY&quot;)" sfwObjectBased="True" />
  </rules>
  <delete />
  <checklist />
  <initialload>
    <item ID="VisibleRule-ForButtons" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForApproveButton" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForTrialButton" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForScheduleTypeVEND" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForScheduleSubTypeDropDown" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRule-WeeklyPaymentDirectiveReconRpt" sfwStatus="Active" sfwMode="All" />
    <item ID="VisibleRule-MonthlyPaymentDirectiveReconRptBtn" sfwStatus="Active" sfwMode="All" />
  </initialload>
  <softerror />
  <harderror>
    <item ID="Rule-CheckIfStatusSubTypeValeSelected" sfwMode="All" sfwStatus="Active" />
  </harderror>
  <validatedelete />
  <groupslist />
  <updateablecdo />
  <commonproperties />
  <expressionfields />
  <constraint />
  <queries>
    <query ID="Lookup" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PAYMENT_SCHEDULE">
      <parameters />
    </query>
    <query ID="GetRecentPaymentDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT MAX(PAYMENT_DATE) FROM SGT_PAYMENT_SCHEDULE (nolock) Where SCHEDULE_TYPE_VALUE = 'MTLY' and STATUS_VALUE = 'PRCD'">
      <parameters />
    </query>
    <query ID="LoadPaymentScheduleSteps" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PAYMENT_SCHEDULE_STEP SPSS WITH(NOLOCK)  INNER JOIN &#xD;&#xA;SGT_PAYMENT_STEP_REF SPSR WITH(NOLOCK) ON SPSS.PAYMENT_STEP_ID=SPSR.PAYMENT_STEP_ID&#xD;&#xA;WHERE SPSS.PAYMENT_SCHEDULE_ID=@PAYMENT_SCHEDULE_ID&#xD;&#xA;ORDER BY SPSS.PAYMENT_STEP_ID">
      <parameters>
        <parameter ID="@PAYMENT_SCHEDULE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPayeeAccountsForPaymentProcess" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="IF OBJECT_ID('TEMP_TABLE_FOR_PAYMENT') IS NOT NULL&#xD;&#xA;BEGIN&#xD;&#xA; DROP TABLE TEMP_TABLE_FOR_PAYMENT&#xD;&#xA;END&#xD;&#xA;&#xD;&#xA;SELECT PA.*,PAS.STATUS_EFFECTIVE_DATE,PAS.STATUS_VALUE,&#xD;&#xA;       PBXR.PLAN_ID as PLAN_ID, &#xD;&#xA;       PBXR.BENEFIT_OPTION_ID,PBXR.BENEFIT_OPTION_VALUE,&#xD;&#xA;       Case When TF.TAX_OPTION_ID is not null then TF.TAX_OPTION_ID else 7004 end AS FED_TAX_OPTION_ID ,&#xD;&#xA;    TF.TAX_OPTION_VALUE AS FED_TAX_OPTION_VALUE,TF.TAX_ALLOWANCE  AS FED_TAX_ALLOWANCE ,&#xD;&#xA;    case when TF.MARITAL_STATUS_ID is not null then TF.MARITAL_STATUS_ID else 7032 end AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;    TF.MARITAL_STATUS_VALUE AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;    TF.ADDITIONAL_TAX_AMOUNT AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;    Case When TS.TAX_OPTION_ID is not null then TS.TAX_OPTION_ID else 7004 end AS STATE_TAX_OPTION_ID ,&#xD;&#xA;    TS.TAX_OPTION_VALUE AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;    TS.TAX_ALLOWANCE  AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;    case when TS.MARITAL_STATUS_ID is not null then TS.MARITAL_STATUS_ID else 7032 end AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;    TS.MARITAL_STATUS_VALUE AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;    TS.ADDITIONAL_TAX_AMOUNT AS STATE_ADDITIONAL_TAX_AMOUNT, SPLN.PLAN_CODE AS PLAN_NAME, PER.SSN,&#xD;&#xA;    PER.MPI_PERSON_ID, ORG.MPI_ORG_ID, ORG.ORG_NAME AS ORGANIZATION_NAME,&#xD;&#xA;    CASE WHEN PER.MPI_PERSON_ID IS NOT NULL then ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'') END AS PAYEE_NAME, &#xD;&#xA;    CASE WHEN PER.MPI_PERSON_ID IS NOT NULL then ISNULL(FIRST_NAME,'') END AS PAYEE_FIRST_NAME,&#xD;&#xA;    CASE WHEN PER.MPI_PERSON_ID IS NOT NULL then ISNULL(LAST_NAME,'') END AS PAYEE_LAST_NAME,&#xD;&#xA;    CV.DESCRIPTION AS PAYEE_STATUS, CVOPTION.DESCRIPTION AS BENEFIT_OPTION, CVRELATION.DESCRIPTION AS ACCOUNT_RELATIONSHIP,&#xD;&#xA;    CASE WHEN WIRE.BENEFICIARY_ACCOUNT_NUMBER IS NOT NULL THEN 'WIRE' WHEN ACH.ACCOUNT_NUMBER IS NOT NULL THEN 'ACH' ELSE 'CHK' END PAYMENT_METHOD,&#xD;&#xA;    ACH.ACH_START_DATE,ACH.ACH_END_DATE,ACH.ACCOUNT_NUMBER,ACH.PAYEE_ACCOUNT_ACH_DETAIL_ID,ACH.BANK_ORG_ID AS ACH_BANK_ORG_ID,&#xD;&#xA;    WIRE.WIRE_START_DATE,WIRE.WIRE_END_DATE,WIRE.BENEFICIARY_ACCOUNT_NUMBER,WIRE.PAYEE_ACCOUNT_WIRE_DETAIL_ID,WIRE.BANK_ORG_ID AS WIRE_BANK_ORG_ID,&#xD;&#xA;    CASE WHEN WIRE.BENEFICIARY_ACCOUNT_NUMBER IS NOT NULL THEN WIRE.BANK_ACCOUNT_TYPE_ID WHEN ACH.ACCOUNT_NUMBER IS NOT NULL THEN ACH.BANK_ACCOUNT_TYPE_ID ELSE NULL END BANK_ACCOUNT_TYPE_ID,&#xD;&#xA;    CASE WHEN WIRE.BENEFICIARY_ACCOUNT_NUMBER IS NOT NULL THEN WIRE.BANK_ACCOUNT_TYPE_VALUE WHEN ACH.ACCOUNT_NUMBER IS NOT NULL THEN ACH.BANK_ACCOUNT_TYPE_VALUE ELSE NULL END BANK_ACCOUNT_TYPE_VALUE,&#xD;&#xA;    CASE WHEN APP.RETIREMENT_DATE IS NOT NULL THEN APP.RETIREMENT_DATE ELSE DROAPP.DRO_COMMENCEMENT_DATE END AS RETIREMENT_DATE,&#xD;&#xA;    BACCT.FUNDS_TYPE_ID,BACCT.FUNDS_TYPE_VALUE,'N' as  REISSUE_ITEM_FLAG,'REGL' AS RETRO_PAYMENT_OPTION_VALUE,&#xD;&#xA;    CVBENEFITTYPE.DESCRIPTION AS BENEFIT_TYPE_DESC,'' AS REISSUE_PAYMENT_TYPE_VALUE,0 AS PAYMENT_REISSUE_DETAIL_ID&#xD;&#xA;INTO DBO.TEMP_TABLE_FOR_PAYMENT&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA (NOLOCK) &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS(NOLOCK) ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT BACCT(NOLOCK) ON PA.PAYEE_BENEFIT_ACCOUNT_ID = BACCT.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA; INNER JOIN SGS_CODE_VALUE CVOPTION (nolock) ON PBXR.BENEFIT_OPTION_ID = CVOPTION.CODE_ID AND PBXR.BENEFIT_OPTION_VALUE = CVOPTION.CODE_VALUE&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV (nolock) ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CVRELATION (nolock) ON PA.ACCOUNT_RELATION_ID= CVRELATION.CODE_ID AND PA.ACCOUNT_RELATION_VALUE = CVRELATION.CODE_VALUE&#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TF (NOLOCK)&#xD;&#xA;         ON PA.PAYEE_ACCOUNT_ID = TF.PAYEE_ACCOUNT_ID  AND TF.TAX_IDENTIFIER_VALUE = 'FDRL'&#xD;&#xA;         AND TF.START_DATE &lt;= @PAYMENTDATE AND (TF.END_DATE IS NULL OR TF.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;      --AND DBO.fn_Check_Date_Overlapping(TF.START_DATE,TF.END_DATE,@PAYMENTDATE)=1  &#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TS (NOLOCK)&#xD;&#xA;      ON PA.PAYEE_ACCOUNT_ID = TS.PAYEE_ACCOUNT_ID AND TS.TAX_IDENTIFIER_VALUE = 'STAT'&#xD;&#xA;      AND TS.START_DATE &lt;= @PAYMENTDATE AND (TS.END_DATE IS NULL OR TS.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;      &#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_ACH_DETAIL ACH(NOLOCK)&#xD;&#xA;         ON ACH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;         AND ACH.ACH_START_DATE &lt;= @PAYMENTDATE AND (ACH.ACH_END_DATE IS NULL OR ACH.ACH_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;         --AND DBO.fn_Check_Date_Overlapping(ACH.ACH_START_DATE,ACH.ACH_END_DATE,@PAYMENTDATE)=1&#xD;&#xA;               AND ISNULL(ACH.PRE_NOTE_FLAG,'Y') = 'N' AND ACH.PRE_NOTE_COMPLETION_DATE IS NOT NULL&#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_WIRE_DETAIL WIRE(NOLOCK)&#xD;&#xA;         ON WIRE.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;         AND WIRE.WIRE_START_DATE &lt;= @PAYMENTDATE AND (WIRE.WIRE_END_DATE IS NULL OR WIRE.WIRE_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;               AND ISNULL(WIRE.CALL_BACK_FLAG,'N') = 'Y' AND WIRE.CALL_BACK_COMPLETION_DATE IS NOT NULL&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_DETAIL APPDTL(NOLOCK) ON PA.BENEFIT_APPLICATION_DETAIL_ID = APPDTL.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_DETAIL BCDTL WITH(NOLOCK) ON BCDTL.BENEFIT_CALCULATION_DETAIL_ID = PA.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA; LEFT OUTER JOIN SGT_DRO_BENEFIT_DETAILS DROAPPDTL(NOLOCK) ON PA.DRO_APPLICATION_DETAIL_ID = DROAPPDTL.DRO_BENEFIT_ID&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_APPLICATION APP(NOLOCK) ON APPDTL.BENEFIT_APPLICATION_ID = APP.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN SGT_DRO_APPLICATION DROAPP(NOLOCK) ON DROAPPDTL.DRO_APPLICATION_ID = DROAPP.DRO_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN SGT_DRO_BENEFIT_DETAILS QADTL WITH(NOLOCK) ON QADTL.DRO_BENEFIT_ID = PA.DRO_APPLICATION_DETAIL_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PLAN SPLN WITH(NOLOCK) ON SPLN.PLAN_ID=PBXR.PLAN_ID &#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE CVBENEFITTYPE (nolock) ON PA.BENEFIT_ACCOUNT_TYPE_ID= CVBENEFITTYPE.CODE_ID AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = CVBENEFITTYPE.CODE_VALUE&#xD;&#xA; LEFT OUTER JOIN SGT_PERSON PER(NOLOCK) ON PA.PERSON_ID = PER.PERSON_ID&#xD;&#xA; LEFT OUTER JOIN SGT_ORGANIZATION ORG(NOLOCK) ON PA.ORG_ID = ORG.ORG_ID&#xD;&#xA;    LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_DETAIL SBCD WITH(NOLOCK) ON SBCD.BENEFIT_CALCULATION_DETAIL_ID = PA.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_HEADER SBCH ON SBCH.BENEFIT_CALCULATION_HEADER_ID = SBCD.BENEFIT_CALCULATION_HEADER_ID&#xD;&#xA; LEFT OUTER JOIN SGT_QDRO_CALCULATION_DETAIL SQCD WITH(NOLOCK) ON SQCD.QDRO_CALCULATION_DETAIL_ID = PA.DRO_CALCULATION_DETAIL_ID&#xD;&#xA; LEFT OUTER JOIN SGT_QDRO_CALCULATION_HEADER SQCH ON SQCH.QDRO_CALCULATION_HEADER_ID = SQCD.QDRO_CALCULATION_HEADER_ID&#xD;&#xA;    WHERE PAS.STATUS_VALUE  IN ('APRD','RECV') &#xD;&#xA; AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; --AND DBO.fn_Check_Date_Overlapping(BENEFIT_BEGIN_DATE,BENEFIT_END_DATE,@PAYMENTDATE)=1&#xD;&#xA; AND BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; AND (BACCT.FUNDS_TYPE_VALUE NOT IN ('L052','L161')OR BACCT.FUNDS_TYPE_VALUE IS NULL)&#xD;&#xA; AND (PBXR.PLAN_ID !=1 OR PBXR.PLAN_ID IS NULL)&#xD;&#xA; --RETURN TABLE&#xD;&#xA;&#xD;&#xA;SELECT * FROM TEMP_TABLE_FOR_PAYMENT">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetGrossBenefitAmount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @LAST_SCHEDULE_ID INT&#xD;&#xA;DECLARE @CREATED_BY VARCHAR(50)&#xD;&#xA;SELECT @CREATED_BY=CREATED_BY,@LAST_SCHEDULE_ID=ISNULL(PAYMENT_SCHEDULE_ID,0) FROM SGT_PAYMENT_SCHEDULE &#xD;&#xA;WHERE PAYMENT_DATE &lt; @LAST_PAYMENTDATE AND SCHEDULE_TYPE_VALUE = @SCHEDULE_TYPE_VALUE AND STATUS_VALUE = 'PRCD'&#xD;&#xA;PRINT @LAST_SCHEDULE_ID&#xD;&#xA;SELECT SUM(PHD.AMOUNT* PIT.ITEM_TYPE_DIRECTION) as GROSS_BENEFIT_AMOUNT,PA.PAYEE_ACCOUNT_ID,@LAST_PAYMENTDATE as LAST_PAYMENT_DATE  FROM SGT_PAYEE_ACCOUNT PA&#xD;&#xA;     INNER JOIN  SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;                 ON PHH.PAYEE_ACCOUNT_ID =PA.PAYEE_ACCOUNT_ID AND PHH.PAYMENT_SCHEDULE_ID=@LAST_SCHEDULE_ID&#xD;&#xA;     INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHD&#xD;&#xA;                 ON PHH.PAYMENT_HISTORY_HEADER_ID =PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;     INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;              ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;              &#xD;&#xA;              where PA.PAYEE_ACCOUNT_ID= @PAYEE_ACCOUNT_ID  &#xD;&#xA;                 GROUP BY PA.PAYEE_ACCOUNT_ID,PHH.PAYMENT_SCHEDULE_ID">
      <parameters>
        <parameter ID="@LAST_PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@SCHEDULE_TYPE_VALUE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="LoadPayeeAccountsForWeeklyIAPPaymentProcess" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="IF OBJECT_ID('TEMP_TABLE_FOR_PAYMENT') IS NOT NULL&#xD;&#xA;BEGIN&#xD;&#xA; DROP TABLE TEMP_TABLE_FOR_PAYMENT&#xD;&#xA;END&#xD;&#xA;&#xD;&#xA;SELECT PA.*,PAS.STATUS_EFFECTIVE_DATE,PAS.STATUS_VALUE,&#xD;&#xA;       PBXR.PLAN_ID  as PLAN_ID, &#xD;&#xA;       PBXR.BENEFIT_OPTION_ID,PBXR.BENEFIT_OPTION_VALUE,&#xD;&#xA;       Case When TF.TAX_OPTION_ID is not null then TF.TAX_OPTION_ID else 7004 end AS FED_TAX_OPTION_ID ,&#xD;&#xA;    TF.TAX_OPTION_VALUE AS FED_TAX_OPTION_VALUE,TF.TAX_ALLOWANCE  AS FED_TAX_ALLOWANCE ,&#xD;&#xA;    case when TF.MARITAL_STATUS_ID is not null then TF.MARITAL_STATUS_ID else 7032 end AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;    TF.MARITAL_STATUS_VALUE AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;    TF.ADDITIONAL_TAX_AMOUNT AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;    Case When TS.TAX_OPTION_ID is not null then TS.TAX_OPTION_ID else 7004 end AS STATE_TAX_OPTION_ID ,&#xD;&#xA;    TS.TAX_OPTION_VALUE AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;    TS.TAX_ALLOWANCE  AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;    case when TS.MARITAL_STATUS_ID is not null then TS.MARITAL_STATUS_ID else 7032 end AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;    TS.MARITAL_STATUS_VALUE AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;    TS.ADDITIONAL_TAX_AMOUNT AS STATE_ADDITIONAL_TAX_AMOUNT, SPLN.PLAN_CODE AS PLAN_NAME, PER.SSN,&#xD;&#xA;    PER.MPI_PERSON_ID, ORG.MPI_ORG_ID, ORG.ORG_NAME AS ORGANIZATION_NAME,&#xD;&#xA;    CASE WHEN PER.MPI_PERSON_ID IS NOT NULL then ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'') END AS PAYEE_NAME, &#xD;&#xA;    CASE WHEN PER.MPI_PERSON_ID IS NOT NULL then ISNULL(FIRST_NAME,'') END AS PAYEE_FIRST_NAME,&#xD;&#xA;    CASE WHEN PER.MPI_PERSON_ID IS NOT NULL then ISNULL(LAST_NAME,'') END AS PAYEE_LAST_NAME,&#xD;&#xA;    CV.DESCRIPTION AS PAYEE_STATUS, CVOPTION.DESCRIPTION AS BENEFIT_OPTION, CVRELATION.DESCRIPTION AS ACCOUNT_RELATIONSHIP,&#xD;&#xA;    CASE WHEN ACH.ACCOUNT_NUMBER IS NOT NULL THEN 'ACH' ELSE 'CHK' END PAYMENT_METHOD,&#xD;&#xA;    ACH.ACH_START_DATE,ACH.ACH_END_DATE,ACH.ACCOUNT_NUMBER,ACH.BANK_ACCOUNT_TYPE_ID,ACH.BANK_ACCOUNT_TYPE_VALUE,ACH.PAYEE_ACCOUNT_ACH_DETAIL_ID,ACH.BANK_ORG_ID AS ACH_BANK_ORG_ID,&#xD;&#xA;    CASE WHEN APP.RETIREMENT_DATE IS NOT NULL THEN APP.RETIREMENT_DATE ELSE DROAPP.DRO_COMMENCEMENT_DATE END AS RETIREMENT_DATE,&#xD;&#xA;    BACCT.FUNDS_TYPE_ID,BACCT.FUNDS_TYPE_VALUE,'N' as  REISSUE_ITEM_FLAG,'REGL' AS RETRO_PAYMENT_OPTION_VALUE,&#xD;&#xA;    CVBENEFITTYPE.DESCRIPTION AS BENEFIT_TYPE_DESC,'' AS REISSUE_PAYMENT_TYPE_VALUE,0 AS PAYMENT_REISSUE_DETAIL_ID &#xD;&#xA;INTO  TEMP_TABLE_FOR_PAYMENT&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA (NOLOCK) &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS(NOLOCK) &#xD;&#xA;         ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT BACCT(NOLOCK)&#xD;&#xA;         ON PA.PAYEE_BENEFIT_ACCOUNT_ID = BACCT.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;         &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV (nolock)&#xD;&#xA;         ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CVRELATION (nolock)&#xD;&#xA;         ON PA.ACCOUNT_RELATION_ID= CVRELATION.CODE_ID AND PA.ACCOUNT_RELATION_VALUE = CVRELATION.CODE_VALUE&#xD;&#xA;         &#xD;&#xA;    LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) &#xD;&#xA;         ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID   &#xD;&#xA;         &#xD;&#xA;    LEFT OUTER JOIN SGS_CODE_VALUE CVOPTION (nolock)&#xD;&#xA;         ON PBXR.BENEFIT_OPTION_ID = CVOPTION.CODE_ID AND PBXR.BENEFIT_OPTION_VALUE = CVOPTION.CODE_VALUE                   &#xD;&#xA;                          &#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TF (NOLOCK)&#xD;&#xA;         ON PA.PAYEE_ACCOUNT_ID = TF.PAYEE_ACCOUNT_ID  AND TF.TAX_IDENTIFIER_VALUE = 'FDRL' AND (TF.END_DATE IS NULL OR TF.END_DATE &gt;= @PAYMENT_DATE)&#xD;&#xA;&#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TS (NOLOCK)&#xD;&#xA;      ON PA.PAYEE_ACCOUNT_ID = TS.PAYEE_ACCOUNT_ID AND TS.TAX_IDENTIFIER_VALUE = 'STAT' AND (TS.END_DATE IS NULL OR TS.END_DATE &gt;= @PAYMENT_DATE)&#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_ACH_DETAIL ACH(NOLOCK)&#xD;&#xA;         ON ACH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;         AND ACH.ACH_START_DATE &lt;= @PAYMENT_DATE AND (ACH.ACH_END_DATE IS NULL OR ACH.ACH_END_DATE &gt;= @PAYMENT_DATE)&#xD;&#xA;               AND ISNULL(ACH.PRE_NOTE_FLAG,'Y') = 'N' AND ACH.PRE_NOTE_COMPLETION_DATE IS NOT NULL&#xD;&#xA;               &#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_DETAIL APPDTL(NOLOCK)&#xD;&#xA;         ON PA.BENEFIT_APPLICATION_DETAIL_ID = APPDTL.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_DETAIL BCDTL WITH(NOLOCK) &#xD;&#xA;            ON BCDTL.BENEFIT_CALCULATION_DETAIL_ID = PA.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA; LEFT OUTER JOIN SGT_DRO_BENEFIT_DETAILS DROAPPDTL(NOLOCK)&#xD;&#xA;      ON PA.DRO_APPLICATION_DETAIL_ID = DROAPPDTL.DRO_BENEFIT_ID&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_APPLICATION APP(NOLOCK)&#xD;&#xA;         ON APPDTL.BENEFIT_APPLICATION_ID = APP.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN SGT_DRO_APPLICATION DROAPP(NOLOCK)&#xD;&#xA;         ON DROAPPDTL.DRO_APPLICATION_ID = DROAPP.DRO_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN SGT_DRO_BENEFIT_DETAILS QADTL WITH(NOLOCK) &#xD;&#xA;         ON QADTL.DRO_BENEFIT_ID = PA.DRO_APPLICATION_DETAIL_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PLAN SPLN WITH(NOLOCK) &#xD;&#xA;         ON SPLN.PLAN_ID=PBXR.PLAN_ID &#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE CVBENEFITTYPE (nolock) ON PA.BENEFIT_ACCOUNT_TYPE_ID= CVBENEFITTYPE.CODE_ID AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = CVBENEFITTYPE.CODE_VALUE&#xD;&#xA; LEFT OUTER JOIN SGT_PERSON PER(NOLOCK)&#xD;&#xA;         ON PA.PERSON_ID = PER.PERSON_ID&#xD;&#xA; LEFT OUTER JOIN SGT_ORGANIZATION ORG(NOLOCK)&#xD;&#xA;         ON PA.ORG_ID = ORG.ORG_ID&#xD;&#xA;    LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_DETAIL SBCD WITH(NOLOCK) &#xD;&#xA;               ON SBCD.BENEFIT_CALCULATION_DETAIL_ID = PA.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_HEADER SBCH &#xD;&#xA;            ON SBCH.BENEFIT_CALCULATION_HEADER_ID = SBCD.BENEFIT_CALCULATION_HEADER_ID&#xD;&#xA; LEFT OUTER JOIN SGT_QDRO_CALCULATION_DETAIL SQCD WITH(NOLOCK) &#xD;&#xA;            ON SQCD.QDRO_CALCULATION_DETAIL_ID = PA.DRO_CALCULATION_DETAIL_ID&#xD;&#xA; LEFT OUTER JOIN SGT_QDRO_CALCULATION_HEADER SQCH &#xD;&#xA;            ON SQCH.QDRO_CALCULATION_HEADER_ID = SQCD.QDRO_CALCULATION_HEADER_ID&#xD;&#xA;  WHERE PAS.STATUS_VALUE  IN ('APRD') &#xD;&#xA;     AND&#xD;&#xA;  PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND BENEFIT_BEGIN_DATE &lt;= @PAYMENT_DATE AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt;= @PAYMENT_DATE)&#xD;&#xA; AND (BACCT.FUNDS_TYPE_VALUE IN ('L052','L161') OR BACCT.FUNDS_TYPE_VALUE IS NULL)&#xD;&#xA; AND (PBXR.PLAN_ID = 1 OR PBXR.PLAN_ID IS NULL)&#xD;&#xA; AND ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') &lt;&gt; 'Y' -- PROD PIR 372 &#xD;&#xA;&#xD;&#xA;SELECT * FROM TEMP_TABLE_FOR_PAYMENT">
      <parameters>
        <parameter ID="@PAYMENT_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadPayeeAccountsForAdhocPaymentProcess" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="IF OBJECT_ID('TEMP_TABLE_FOR_PAYMENT') IS NOT NULL&#xD;&#xA;BEGIN&#xD;&#xA;               DROP TABLE TEMP_TABLE_FOR_PAYMENT&#xD;&#xA;END&#xD;&#xA;SELECT * &#xD;&#xA;INTO DBO.TEMP_TABLE_FOR_PAYMENT&#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA;SELECT DISTINCT PA.PAYEE_ACCOUNT_ID&#xD;&#xA;      ,PA.PERSON_ID&#xD;&#xA;      ,PA.ORG_ID&#xD;&#xA;      ,PA.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;      ,PA.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA;      ,PA.DRO_APPLICATION_DETAIL_ID&#xD;&#xA;      ,PA.DRO_CALCULATION_DETAIL_ID&#xD;&#xA;      ,PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;      ,PA.BENEFIT_ACCOUNT_TYPE_ID&#xD;&#xA;      ,PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;      ,PA.RETIREMENT_TYPE_ID&#xD;&#xA;      ,PA.RETIREMENT_TYPE_VALUE&#xD;&#xA;      ,PA.BENEFIT_BEGIN_DATE&#xD;&#xA;      ,PA.BENEFIT_END_DATE&#xD;&#xA;      ,PA.ACCOUNT_RELATION_ID&#xD;&#xA;      ,PA.ACCOUNT_RELATION_VALUE&#xD;&#xA;      ,PA.FAMILY_RELATION_ID&#xD;&#xA;      ,PA.FAMILY_RELATION_VALUE&#xD;&#xA;      ,PA.MINIMUM_GUARANTEE_AMOUNT&#xD;&#xA;      ,PA.NONTAXABLE_BEGINNING_BALANCE&#xD;&#xA;      ,PA.PLAN_BENEFIT_ID&#xD;&#xA;      ,PA.TERM_CERTAIN_END_DATE&#xD;&#xA;      ,PA.CREATED_BY&#xD;&#xA;      ,PA.CREATED_DATE&#xD;&#xA;      ,PA.MODIFIED_BY&#xD;&#xA;      ,PA.MODIFIED_DATE&#xD;&#xA;      ,PA.UPDATE_SEQ&#xD;&#xA;      ,PA.TRANSFER_ORG_ID&#xD;&#xA;      ,PA.VERIFIED_FLAG&#xD;&#xA;      ,PA.ADJUSTMENT_PAYMENT_ELIGIBLE_FLAG&#xD;&#xA;      ,PA.INCLUDE_IN_ADHOC_FLAG&#xD;&#xA;      ,PA.REVIEW_PAYEE_ACC_FOR_RETIREE_INC_FORM&#xD;&#xA;      ,PA.REEMPLOYED_FLAG&#xD;&#xA;      ,PA.REFERENCE_ID&#xD;&#xA;      ,PA.REEMPLOYED_FLAG_FROM_EADB&#xD;&#xA;      ,PA.REEMPLOYED_FLAG_AS_OF_DATE&#xD;&#xA;      ,PA.DISABILITY_CONVERSION_FLAG&#xD;&#xA;      ,PA.ACCRUED_BENEFIT_TO_BE_PAID_REEVAL_FLAG&#xD;&#xA;      ,PA.REEMPLOYMENT_OVERRIDE_FLAG&#xD;&#xA;      ,PA.UNREDUCED_BENEFIT_AMOUNT&#xD;&#xA;      ,PA.EE_DERIVED_BENEFIT_AMOUNT&#xD;&#xA;      ,PA.REMAINING_NON_TAXABLE_FROM_CONVERSION&#xD;&#xA;       ,PA.TRANSFER_ORG_CONTACT_NAME&#xD;&#xA;      ,PAS.STATUS_EFFECTIVE_DATE,PAS.STATUS_VALUE,&#xD;&#xA;       PBXR.PLAN_ID  as PLAN_ID&#xD;&#xA;       ,PBXR.BENEFIT_OPTION_ID,PBXR.BENEFIT_OPTION_VALUE,&#xD;&#xA;       Case When TF.TAX_OPTION_ID is not null then TF.TAX_OPTION_ID else 7004 end AS FED_TAX_OPTION_ID ,&#xD;&#xA;                  TF.TAX_OPTION_VALUE AS FED_TAX_OPTION_VALUE,TF.TAX_ALLOWANCE  AS FED_TAX_ALLOWANCE ,&#xD;&#xA;                  case when TF.MARITAL_STATUS_ID is not null then TF.MARITAL_STATUS_ID else 7032 end AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;                  TF.MARITAL_STATUS_VALUE AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;                  TF.ADDITIONAL_TAX_AMOUNT AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;                  Case When TS.TAX_OPTION_ID is not null then TS.TAX_OPTION_ID else 7004 end AS STATE_TAX_OPTION_ID ,&#xD;&#xA;                  TS.TAX_OPTION_VALUE AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;                  TS.TAX_ALLOWANCE  AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;                  case when TS.MARITAL_STATUS_ID is not null then TS.MARITAL_STATUS_ID else 7032 end AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;                  TS.MARITAL_STATUS_VALUE AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;                  TS.ADDITIONAL_TAX_AMOUNT AS STATE_ADDITIONAL_TAX_AMOUNT, SPLN.PLAN_CODE AS PLAN_NAME, PER.SSN,&#xD;&#xA;                  PER.MPI_PERSON_ID, ORG.MPI_ORG_ID, ORG.ORG_NAME AS ORGANIZATION_NAME,&#xD;&#xA;                  CASE WHEN PER.MPI_PERSON_ID IS NOT NULL then ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'') END AS PAYEE_NAME, &#xD;&#xA;                  CASE WHEN PER.MPI_PERSON_ID IS NOT NULL then ISNULL(FIRST_NAME,'') END AS PAYEE_FIRST_NAME,&#xD;&#xA;                  CASE WHEN PER.MPI_PERSON_ID IS NOT NULL then ISNULL(LAST_NAME,'') END AS PAYEE_LAST_NAME,&#xD;&#xA;                  CV.DESCRIPTION AS PAYEE_STATUS, CVOPTION.DESCRIPTION AS BENEFIT_OPTION, CVRELATION.DESCRIPTION AS ACCOUNT_RELATIONSHIP,&#xD;&#xA;                  CASE WHEN WIRE.BENEFICIARY_ACCOUNT_NUMBER IS NOT NULL THEN 'WIRE' WHEN ACH.ACCOUNT_NUMBER IS NOT NULL THEN 'ACH' ELSE 'CHK' END PAYMENT_METHOD,&#xD;&#xA;                  ACH.ACH_START_DATE,ACH.ACH_END_DATE,ACH.ACCOUNT_NUMBER,ACH.PAYEE_ACCOUNT_ACH_DETAIL_ID,ACH.BANK_ORG_ID AS ACH_BANK_ORG_ID,&#xD;&#xA;                  WIRE.WIRE_START_DATE,WIRE.WIRE_END_DATE,WIRE.BENEFICIARY_ACCOUNT_NUMBER,WIRE.PAYEE_ACCOUNT_WIRE_DETAIL_ID,WIRE.BANK_ORG_ID AS WIRE_BANK_ORG_ID,&#xD;&#xA;                  CASE WHEN WIRE.BENEFICIARY_ACCOUNT_NUMBER IS NOT NULL THEN WIRE.BANK_ACCOUNT_TYPE_ID WHEN ACH.ACCOUNT_NUMBER IS NOT NULL THEN ACH.BANK_ACCOUNT_TYPE_ID ELSE NULL END BANK_ACCOUNT_TYPE_ID,&#xD;&#xA;                  CASE WHEN WIRE.BENEFICIARY_ACCOUNT_NUMBER IS NOT NULL THEN WIRE.BANK_ACCOUNT_TYPE_VALUE WHEN ACH.ACCOUNT_NUMBER IS NOT NULL THEN ACH.BANK_ACCOUNT_TYPE_VALUE ELSE NULL END BANK_ACCOUNT_TYPE_VALUE,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  CASE WHEN APP.RETIREMENT_DATE IS NOT NULL THEN APP.RETIREMENT_DATE ELSE DROAPP.DRO_COMMENCEMENT_DATE END AS RETIREMENT_DATE,&#xD;&#xA;                  BACCT.FUNDS_TYPE_ID,BACCT.FUNDS_TYPE_VALUE,PAPI.REISSUE_ITEM_FLAG,ISNULL(RETRO.PAYMENT_OPTION_VALUE,'REGL') AS RETRO_PAYMENT_OPTION_VALUE,&#xD;&#xA;                  CVBENEFITTYPE.DESCRIPTION AS BENEFIT_TYPE_DESC,PRD.REISSUE_PAYMENT_TYPE_VALUE,PRD.PAYMENT_REISSUE_DETAIL_ID&#xD;&#xA;&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA (NOLOCK) &#xD;&#xA;               INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS(NOLOCK) &#xD;&#xA;                                     ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;               INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT BACCT(NOLOCK)&#xD;&#xA;                                     ON PA.PAYEE_BENEFIT_ACCOUNT_ID = BACCT.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;                                                                   &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV (nolock)&#xD;&#xA;                                     ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;&#xD;&#xA;               INNER JOIN SGS_CODE_VALUE CVRELATION (nolock)&#xD;&#xA;                                     ON PA.ACCOUNT_RELATION_ID= CVRELATION.CODE_ID AND PA.ACCOUNT_RELATION_VALUE = CVRELATION.CODE_VALUE&#xD;&#xA;                                     &#xD;&#xA;               LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) &#xD;&#xA;                                     ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA;                                    &#xD;&#xA;               LEFT OUTER JOIN SGS_CODE_VALUE CVOPTION (nolock)&#xD;&#xA;                                     ON PBXR.BENEFIT_OPTION_ID = CVOPTION.CODE_ID AND PBXR.BENEFIT_OPTION_VALUE = CVOPTION.CODE_VALUE                                                &#xD;&#xA;                                     &#xD;&#xA;               LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TF (NOLOCK)&#xD;&#xA;                                     ON PA.PAYEE_ACCOUNT_ID = TF.PAYEE_ACCOUNT_ID  AND TF.TAX_IDENTIFIER_VALUE = 'FDRL'&#xD;&#xA;                                     AND (TF.END_DATE IS NULL OR TF.END_DATE &gt;= @PAYMENTDATE)    &#xD;&#xA;               LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TS (NOLOCK)&#xD;&#xA;                                                ON PA.PAYEE_ACCOUNT_ID = TS.PAYEE_ACCOUNT_ID AND TS.TAX_IDENTIFIER_VALUE = 'STAT'&#xD;&#xA;                                                AND (TS.END_DATE IS NULL OR TS.END_DATE &gt;= @PAYMENTDATE) &#xD;&#xA;               LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_ACH_DETAIL ACH(NOLOCK)&#xD;&#xA;                                     ON ACH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;                                     AND ACH.ACH_START_DATE &lt;= @PAYMENTDATE AND (ACH.ACH_END_DATE IS NULL OR ACH.ACH_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;               AND ISNULL(ACH.PRE_NOTE_FLAG,'Y') = 'N' AND ACH.PRE_NOTE_COMPLETION_DATE IS NOT NULL&#xD;&#xA;               LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_WIRE_DETAIL WIRE(NOLOCK)&#xD;&#xA;                                     ON WIRE.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;                                     AND WIRE.WIRE_START_DATE &lt;= @PAYMENTDATE AND (WIRE.WIRE_END_DATE IS NULL OR WIRE.WIRE_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;               AND ISNULL(WIRE.CALL_BACK_FLAG,'N') = 'Y' AND WIRE.CALL_BACK_COMPLETION_DATE IS NOT NULL&#xD;&#xA;               LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_DETAIL APPDTL(NOLOCK)&#xD;&#xA;                                     ON PA.BENEFIT_APPLICATION_DETAIL_ID = APPDTL.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_DETAIL BCDTL WITH(NOLOCK) &#xD;&#xA;                          ON BCDTL.BENEFIT_CALCULATION_DETAIL_ID = PA.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_DRO_BENEFIT_DETAILS DROAPPDTL(NOLOCK)&#xD;&#xA;                                                ON PA.DRO_APPLICATION_DETAIL_ID = DROAPPDTL.DRO_BENEFIT_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_BENEFIT_APPLICATION APP(NOLOCK)&#xD;&#xA;                                     ON APPDTL.BENEFIT_APPLICATION_ID = APP.BENEFIT_APPLICATION_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_DRO_APPLICATION DROAPP(NOLOCK)&#xD;&#xA;                                     ON DROAPPDTL.DRO_APPLICATION_ID = DROAPP.DRO_APPLICATION_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_DRO_BENEFIT_DETAILS QADTL WITH(NOLOCK) &#xD;&#xA;                                     ON QADTL.DRO_BENEFIT_ID = PA.DRO_APPLICATION_DETAIL_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_PLAN SPLN WITH(NOLOCK) &#xD;&#xA;                                     ON SPLN.PLAN_ID=PBXR.PLAN_ID &#xD;&#xA;&#xD;&#xA;               LEFT OUTER JOIN SGS_CODE_VALUE CVBENEFITTYPE (nolock) ON &#xD;&#xA;                                                            PA.BENEFIT_ACCOUNT_TYPE_ID= CVBENEFITTYPE.CODE_ID AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = CVBENEFITTYPE.CODE_VALUE&#xD;&#xA;               LEFT JOIN&#xD;&#xA;                                                     (SELECT DISTINCT PAR.PAYEE_ACCOUNT_ID,PAYEE_ACCOUNT_RETRO_PAYMENT_ID,PAYMENT_OPTION_VALUE &#xD;&#xA;                                                                           FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT PAR&#xD;&#xA;                                                                           LEFT OUTER JOIN SGT_PAYMENT_HISTORY_HEADER PHD WITH(NOLOCK) &#xD;&#xA;                                                     ON PHD.PAYMENT_HISTORY_HEADER_ID=PAR.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;                                                                           WHERE PAYMENT_OPTION_VALUE = 'SPCK' AND PHD.PAYMENT_HISTORY_HEADER_ID IS NULL                                                                                                &#xD;&#xA;                                                                 ) AS RETRO&#xD;&#xA;                                                                           On RETRO.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;               LEFT JOIN&#xD;&#xA;                                             (&#xD;&#xA;                                               SELECT PAPIT.PAYEE_ACCOUNT_ID,PAPIT.REISSUE_ITEM_FLAG &#xD;&#xA;                                                               FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;                                                    INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;                                                              ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;                                             WHERE&#xD;&#xA;                                             (PAPIT.END_DATE IS NULL OR PAPIT.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;                                             AND (PAPIT.START_DATE &lt;&gt; PAPIT.END_DATE or PAPIT.END_DATE IS NULL)&#xD;&#xA;                                             AND PAPIT.REISSUE_ITEM_FLAG = 'Y'&#xD;&#xA;                                  GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PAPIT.REISSUE_ITEM_FLAG  &#xD;&#xA;                                ) AS PAPI &#xD;&#xA;                                                                           On PAPI.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_PERSON PER(NOLOCK)&#xD;&#xA;                                     ON PA.PERSON_ID = PER.PERSON_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_ORGANIZATION ORG(NOLOCK)&#xD;&#xA;                                     ON PA.ORG_ID = ORG.ORG_ID&#xD;&#xA;    LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_DETAIL SBCD WITH(NOLOCK) &#xD;&#xA;               ON SBCD.BENEFIT_CALCULATION_DETAIL_ID = PA.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_HEADER SBCH &#xD;&#xA;                          ON SBCH.BENEFIT_CALCULATION_HEADER_ID = SBCD.BENEFIT_CALCULATION_HEADER_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_QDRO_CALCULATION_DETAIL SQCD WITH(NOLOCK) &#xD;&#xA;                          ON SQCD.QDRO_CALCULATION_DETAIL_ID = PA.DRO_CALCULATION_DETAIL_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_QDRO_CALCULATION_HEADER SQCH &#xD;&#xA;                          ON SQCH.QDRO_CALCULATION_HEADER_ID = SQCD.QDRO_CALCULATION_HEADER_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;                          ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHD &#xD;&#xA;                          ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                          AND PHD.DISTRIBUTION_STATUS_VALUE='RSUE'&#xD;&#xA;               LEFT OUTER JOIN SGT_PAYMENT_REISSUE_DETAIL PRD &#xD;&#xA;                          ON PHD.PAYMENT_HISTORY_DISTRIBUTION_ID = PRD.PAYMENT_HISTORY_DISTRIBUTION_ID&#xD;&#xA;                           AND PRD.REISSUE_PAYMENT_TYPE_VALUE !='PTOS' AND PRD.REISSUE_PAYMENT_TYPE_VALUE !='TORG'&#xD;&#xA;               &#xD;&#xA;    WHERE &#xD;&#xA;    --WHOLE COND START&#xD;&#xA;    (&#xD;&#xA;      (&#xD;&#xA;        --Status Check Compolsory&#xD;&#xA;           PAS.STATUS_VALUE  IN ('APRD','RECV') AND &#xD;&#xA;           (PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;                                 (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;                                             FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;                                             WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;                                             ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;                                 ))&#xD;&#xA;                   AND &#xD;&#xA;                   (&#xD;&#xA;                     --All OtherCond&#xD;&#xA;                     (&#xD;&#xA;                       BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;                       AND &#xD;&#xA;                         ( &#xD;&#xA;                         RETRO.PAYEE_ACCOUNT_RETRO_PAYMENT_ID IS NOT NULL &#xD;&#xA;                         OR &#xD;&#xA;                         (PBXR.BENEFIT_OPTION_VALUE = 'LUMP' AND (PA.INCLUDE_IN_ADHOC_FLAG ='Y' OR PA.RETIREE_INCR_FLAG = 'Y' OR PA.ONETIME_PAYMENT_FLAG = 'Y')) -- PROD PIR 240 Excluding normal Lumpsum&#xD;&#xA;                         --OR PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID IS NOT NULL&#xD;&#xA;                         ) &#xD;&#xA;                      ) &#xD;&#xA;                    --INCLUDE Adhoc Cond&#xD;&#xA;                     OR &#xD;&#xA;                     PA.INCLUDE_IN_ADHOC_FLAG ='Y'&#xD;&#xA;                   )  &#xD;&#xA;                 )&#xD;&#xA;                 --REISSUE COND&#xD;&#xA;                 OR&#xD;&#xA;                 (&#xD;&#xA;                     PAS.STATUS_VALUE  IN ('APRD','RECV','CMPL') AND &#xD;&#xA;           (PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;                                 (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;                                             FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;                                             WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;                                             ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;                                 ))&#xD;&#xA;                                 AND &#xD;&#xA;                                 PAPI.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;                                 AND PRD.PAYMENT_REISSUE_DETAIL_ID IS NOT NULL&#xD;&#xA;                                 &#xD;&#xA;                  )&#xD;&#xA;               )&#xD;&#xA;               AND (BACCT.FUNDS_TYPE_VALUE NOT IN ('L052','L161')OR BACCT.FUNDS_TYPE_VALUE IS NULL)&#xD;&#xA;               AND (PBXR.PLAN_ID !=1 OR PBXR.PLAN_ID IS NULL)&#xD;&#xA;               &#xD;&#xA;               UNION ALL&#xD;&#xA;               &#xD;&#xA;               &#xD;&#xA;       SELECT DISTINCT PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;&#x9;   CASE WHEN PA.TRANSFER_ORG_ID &gt; 0 &#xD;&#xA;&#x9;        THEN PA.PERSON_ID&#xD;&#xA;&#x9;        ELSE &#xD;&#xA;                PRD.RECIPIENT_PERSON_ID &#xD;&#xA;&#x9;  END AS PERSON_ID,&#xD;&#xA;      --pir-622&#xD;&#xA;      CASE WHEN (PRD.RECIPIENT_ORG_ID &gt; 0 ) &#xD;&#xA;           THEN PRD.RECIPIENT_ORG_ID&#xD;&#xA;           ELSE &#xD;&#xA;           PA.ORG_ID END AS ORG_ID,&#xD;&#xA;      PA.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;      ,PA.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA;      ,PA.DRO_APPLICATION_DETAIL_ID&#xD;&#xA;      ,PA.DRO_CALCULATION_DETAIL_ID&#xD;&#xA;      ,PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;      ,PA.BENEFIT_ACCOUNT_TYPE_ID&#xD;&#xA;      ,PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;      ,PA.RETIREMENT_TYPE_ID&#xD;&#xA;      ,PA.RETIREMENT_TYPE_VALUE&#xD;&#xA;      ,PA.BENEFIT_BEGIN_DATE&#xD;&#xA;      ,PA.BENEFIT_END_DATE&#xD;&#xA;      ,PA.ACCOUNT_RELATION_ID&#xD;&#xA;      ,PA.ACCOUNT_RELATION_VALUE&#xD;&#xA;      ,PA.FAMILY_RELATION_ID&#xD;&#xA;      ,PA.FAMILY_RELATION_VALUE&#xD;&#xA;      ,PA.MINIMUM_GUARANTEE_AMOUNT&#xD;&#xA;      ,PA.NONTAXABLE_BEGINNING_BALANCE&#xD;&#xA;      ,PA.PLAN_BENEFIT_ID&#xD;&#xA;      ,PA.TERM_CERTAIN_END_DATE&#xD;&#xA;      ,PA.CREATED_BY&#xD;&#xA;      ,PA.CREATED_DATE&#xD;&#xA;      ,PA.MODIFIED_BY&#xD;&#xA;      ,PA.MODIFIED_DATE&#xD;&#xA;      ,PA.UPDATE_SEQ&#xD;&#xA;      ,PA.TRANSFER_ORG_ID&#xD;&#xA;      ,PA.VERIFIED_FLAG&#xD;&#xA;      ,PA.ADJUSTMENT_PAYMENT_ELIGIBLE_FLAG&#xD;&#xA;      ,PA.INCLUDE_IN_ADHOC_FLAG&#xD;&#xA;      ,PA.REVIEW_PAYEE_ACC_FOR_RETIREE_INC_FORM&#xD;&#xA;      ,PA.REEMPLOYED_FLAG&#xD;&#xA;      ,PA.REFERENCE_ID&#xD;&#xA;      ,PA.REEMPLOYED_FLAG_FROM_EADB&#xD;&#xA;      ,PA.REEMPLOYED_FLAG_AS_OF_DATE&#xD;&#xA;      ,PA.DISABILITY_CONVERSION_FLAG&#xD;&#xA;      ,PA.ACCRUED_BENEFIT_TO_BE_PAID_REEVAL_FLAG&#xD;&#xA;      ,PA.REEMPLOYMENT_OVERRIDE_FLAG&#xD;&#xA;      ,PA.UNREDUCED_BENEFIT_AMOUNT&#xD;&#xA;      ,PA.EE_DERIVED_BENEFIT_AMOUNT&#xD;&#xA;      ,PA.REMAINING_NON_TAXABLE_FROM_CONVERSION&#xD;&#xA;      ,PA.TRANSFER_ORG_CONTACT_NAME&#xD;&#xA;       ,PAS.STATUS_EFFECTIVE_DATE,PAS.STATUS_VALUE,&#xD;&#xA;       PBXR.PLAN_ID  as PLAN_ID, &#xD;&#xA;       PBXR.BENEFIT_OPTION_ID,PBXR.BENEFIT_OPTION_VALUE,&#xD;&#xA;       Case When TF.TAX_OPTION_ID is not null then TF.TAX_OPTION_ID else 7004 end AS FED_TAX_OPTION_ID ,&#xD;&#xA;                  TF.TAX_OPTION_VALUE AS FED_TAX_OPTION_VALUE,TF.TAX_ALLOWANCE  AS FED_TAX_ALLOWANCE ,&#xD;&#xA;                 &#xD;&#xA;                  case when TF.MARITAL_STATUS_ID is not null then TF.MARITAL_STATUS_ID else 7032 end AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;                  TF.MARITAL_STATUS_VALUE AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;                  TF.ADDITIONAL_TAX_AMOUNT AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;                  Case When TS.TAX_OPTION_ID is not null then TS.TAX_OPTION_ID else 7004 end AS STATE_TAX_OPTION_ID ,&#xD;&#xA;                  TS.TAX_OPTION_VALUE AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;                  TS.TAX_ALLOWANCE  AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;                  case when TS.MARITAL_STATUS_ID is not null then TS.MARITAL_STATUS_ID else 7032 end AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;                  TS.MARITAL_STATUS_VALUE AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;                  TS.ADDITIONAL_TAX_AMOUNT AS STATE_ADDITIONAL_TAX_AMOUNT, SPLN.PLAN_CODE AS PLAN_NAME, PER.SSN,&#xD;&#xA;                  PER.MPI_PERSON_ID, &#xD;&#xA;                  --PIR-622&#xD;&#xA;                   CASE WHEN (SO.ORG_ID &gt; 0  ) THEN ISNULL( SO.MPI_ORG_ID,'') &#xD;&#xA;                     ELSE &#xD;&#xA;                         ISNULL(ORG.MPI_ORG_ID,'') END AS MPI_ORG_ID,&#xD;&#xA;                    --PIR-622&#xD;&#xA;                   CASE WHEN (SO.ORG_ID &gt; 0 ) THEN ISNULL( SO.ORG_NAME,'') &#xD;&#xA;                     ELSE &#xD;&#xA;                   ISNULL( ORG.ORG_NAME,'') END AS ORGANIZATION_NAME,&#xD;&#xA;&#xD;&#xA;                   CASE WHEN PER.MPI_PERSON_ID IS NOT NULL then ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'') END AS PAYEE_NAME, &#xD;&#xA;                  CASE WHEN PER.MPI_PERSON_ID IS NOT NULL then ISNULL(FIRST_NAME,'') END AS PAYEE_FIRST_NAME,&#xD;&#xA;                  CASE WHEN PER.MPI_PERSON_ID IS NOT NULL then ISNULL(LAST_NAME,'') END AS PAYEE_LAST_NAME,&#xD;&#xA;                  CV.DESCRIPTION AS PAYEE_STATUS, CVOPTION.DESCRIPTION AS BENEFIT_OPTION, CVRELATION.DESCRIPTION AS ACCOUNT_RELATIONSHIP,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9; 'CHK' AS PAYMENT_METHOD,&#xD;&#xA;                  null  AS ACH_START_DATE,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  null  AS ACH_END_DATE, &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  null  AS ACCOUNT_NUMBER, &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  null  AS PAYEE_ACCOUNT_ACH_DETAIL_ID,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  null  AS ACH_BANK_ORG_ID, &#xD;&#xA;                  null  AS WIRE_START_DATE,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  null  AS WIRE_END_DATE, &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  null  AS BENEFICIARY_ACCOUNT_NUMBER, &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  null  AS  PAYEE_ACCOUNT_WIRE_DETAIL_ID,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  null  AS WIRE_BANK_ORG_ID,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  NULL AS BANK_ACCOUNT_TYPE_ID,&#xD;&#xA;                  NULL AS BANK_ACCOUNT_TYPE_VALUE,&#xD;&#xA;                  CASE WHEN APP.RETIREMENT_DATE IS NOT NULL THEN APP.RETIREMENT_DATE ELSE DROAPP.DRO_COMMENCEMENT_DATE END AS RETIREMENT_DATE,&#xD;&#xA;                  BACCT.FUNDS_TYPE_ID,BACCT.FUNDS_TYPE_VALUE,PAPI.REISSUE_ITEM_FLAG,ISNULL(RETRO.PAYMENT_OPTION_VALUE,'REGL') AS RETRO_PAYMENT_OPTION_VALUE,&#xD;&#xA;                  CVBENEFITTYPE.DESCRIPTION AS BENEFIT_TYPE_DESC,PRD.REISSUE_PAYMENT_TYPE_VALUE,PRD.PAYMENT_REISSUE_DETAIL_ID&#xD;&#xA;&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA (NOLOCK) &#xD;&#xA;               INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS(NOLOCK) &#xD;&#xA;                                     ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;               INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT BACCT(NOLOCK)&#xD;&#xA;                                     ON PA.PAYEE_BENEFIT_ACCOUNT_ID = BACCT.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;                                     &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV (nolock)&#xD;&#xA;                                     ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;&#xD;&#xA;               INNER JOIN SGS_CODE_VALUE CVRELATION (nolock)&#xD;&#xA;                                     ON PA.ACCOUNT_RELATION_ID= CVRELATION.CODE_ID AND PA.ACCOUNT_RELATION_VALUE = CVRELATION.CODE_VALUE&#xD;&#xA;               &#xD;&#xA;               LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) &#xD;&#xA;                                     ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID     &#xD;&#xA;                                     &#xD;&#xA;    LEFT OUTER JOIN SGS_CODE_VALUE CVOPTION (nolock)&#xD;&#xA;                                     ON PBXR.BENEFIT_OPTION_ID = CVOPTION.CODE_ID AND PBXR.BENEFIT_OPTION_VALUE = CVOPTION.CODE_VALUE                          &#xD;&#xA;                                     &#xD;&#xA;               LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TF (NOLOCK)&#xD;&#xA;                                     ON PA.PAYEE_ACCOUNT_ID = TF.PAYEE_ACCOUNT_ID  AND TF.TAX_IDENTIFIER_VALUE = 'FDRL'&#xD;&#xA;                                     AND (TF.END_DATE IS NULL OR TF.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;&#xD;&#xA;               LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TS (NOLOCK)&#xD;&#xA;                                                ON PA.PAYEE_ACCOUNT_ID = TS.PAYEE_ACCOUNT_ID AND TS.TAX_IDENTIFIER_VALUE = 'STAT'&#xD;&#xA;                                                AND (TS.END_DATE IS NULL OR TS.END_DATE &gt;= @PAYMENTDATE) &#xD;&#xA;               LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_ACH_DETAIL ACH(NOLOCK)&#xD;&#xA;                                     ON ACH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;                                     AND ACH.ACH_START_DATE &lt;= @PAYMENTDATE AND (ACH.ACH_END_DATE IS NULL OR ACH.ACH_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;               AND ISNULL(ACH.PRE_NOTE_FLAG,'Y') = 'N' AND ACH.PRE_NOTE_COMPLETION_DATE IS NOT NULL&#xD;&#xA;               LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_WIRE_DETAIL WIRE(NOLOCK)&#xD;&#xA;                                     ON WIRE.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;                                     AND WIRE.WIRE_START_DATE &lt;= @PAYMENTDATE AND (WIRE.WIRE_END_DATE IS NULL OR WIRE.WIRE_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;               AND ISNULL(WIRE.CALL_BACK_FLAG,'N') = 'Y' AND WIRE.CALL_BACK_COMPLETION_DATE IS NOT NULL&#xD;&#xA;               LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_DETAIL APPDTL(NOLOCK)&#xD;&#xA;                                     ON PA.BENEFIT_APPLICATION_DETAIL_ID = APPDTL.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_DETAIL BCDTL WITH(NOLOCK) &#xD;&#xA;                          ON BCDTL.BENEFIT_CALCULATION_DETAIL_ID = PA.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_DRO_BENEFIT_DETAILS DROAPPDTL(NOLOCK)&#xD;&#xA;                                                ON PA.DRO_APPLICATION_DETAIL_ID = DROAPPDTL.DRO_BENEFIT_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_BENEFIT_APPLICATION APP(NOLOCK)&#xD;&#xA;                                     ON APPDTL.BENEFIT_APPLICATION_ID = APP.BENEFIT_APPLICATION_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_DRO_APPLICATION DROAPP(NOLOCK)&#xD;&#xA;                                     ON DROAPPDTL.DRO_APPLICATION_ID = DROAPP.DRO_APPLICATION_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_DRO_BENEFIT_DETAILS QADTL WITH(NOLOCK) &#xD;&#xA;                                     ON QADTL.DRO_BENEFIT_ID = PA.DRO_APPLICATION_DETAIL_ID&#xD;&#xA;&#xD;&#xA;               LEFT OUTER JOIN SGT_PLAN SPLN WITH(NOLOCK) &#xD;&#xA;                                     ON SPLN.PLAN_ID=PBXR.PLAN_ID &#xD;&#xA;&#xD;&#xA;               LEFT OUTER JOIN SGS_CODE_VALUE CVBENEFITTYPE (nolock) ON &#xD;&#xA;                                                            PA.BENEFIT_ACCOUNT_TYPE_ID= CVBENEFITTYPE.CODE_ID AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = CVBENEFITTYPE.CODE_VALUE&#xD;&#xA;               LEFT JOIN&#xD;&#xA;                                             (SELECT DISTINCT PAR.PAYEE_ACCOUNT_ID,PAYEE_ACCOUNT_RETRO_PAYMENT_ID,PAYMENT_OPTION_VALUE &#xD;&#xA;                                                                           FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT PAR&#xD;&#xA;                                                                           LEFT OUTER JOIN SGT_PAYMENT_HISTORY_HEADER PHD WITH(NOLOCK) &#xD;&#xA;                                                     ON PHD.PAYMENT_HISTORY_HEADER_ID=PAR.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;                                                                           WHERE PAYMENT_OPTION_VALUE = 'SPCK' &#xD;&#xA;                                                                                                         &#xD;&#xA;                                                                                                         AND PHD.PAYMENT_HISTORY_HEADER_ID IS NULL                                                                                           &#xD;&#xA;                                                                                          ) AS RETRO&#xD;&#xA;                                                                           On RETRO.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;               LEFT JOIN&#xD;&#xA;                                             (&#xD;&#xA;                                             SELECT PAPIT.PAYEE_ACCOUNT_ID,PAPIT.REISSUE_ITEM_FLAG &#xD;&#xA;                                                               FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;                                             INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;                                                              ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;                                             WHERE&#xD;&#xA;                                             (PAPIT.END_DATE IS NULL OR PAPIT.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;                                             AND (PAPIT.START_DATE &lt;&gt; PAPIT.END_DATE or PAPIT.END_DATE IS NULL)&#xD;&#xA;                                             AND PAPIT.REISSUE_ITEM_FLAG = 'Y'&#xD;&#xA;                                  GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID,PAPIT.REISSUE_ITEM_FLAG  &#xD;&#xA;                                ) AS PAPI &#xD;&#xA;                                                                           On PAPI.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;               &#xD;&#xA;               LEFT OUTER JOIN SGT_ORGANIZATION ORG(NOLOCK)&#xD;&#xA;                                     ON PA.ORG_ID = ORG.ORG_ID&#xD;&#xA;    LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_DETAIL SBCD WITH(NOLOCK) &#xD;&#xA;               ON SBCD.BENEFIT_CALCULATION_DETAIL_ID = PA.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_HEADER SBCH &#xD;&#xA;                          ON SBCH.BENEFIT_CALCULATION_HEADER_ID = SBCD.BENEFIT_CALCULATION_HEADER_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_QDRO_CALCULATION_DETAIL SQCD WITH(NOLOCK) &#xD;&#xA;                          ON SQCD.QDRO_CALCULATION_DETAIL_ID = PA.DRO_CALCULATION_DETAIL_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_QDRO_CALCULATION_HEADER SQCH &#xD;&#xA;                          ON SQCH.QDRO_CALCULATION_HEADER_ID = SQCD.QDRO_CALCULATION_HEADER_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;                          ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;               LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHD &#xD;&#xA;                          ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                          AND PHD.DISTRIBUTION_STATUS_VALUE='RSUE'&#xD;&#xA;               LEFT OUTER JOIN SGT_PAYMENT_REISSUE_DETAIL PRD &#xD;&#xA;                          ON PHD.PAYMENT_HISTORY_DISTRIBUTION_ID = PRD.PAYMENT_HISTORY_DISTRIBUTION_ID&#xD;&#xA;                          AND (PRD.REISSUE_PAYMENT_TYPE_VALUE ='PTOS' OR PRD.REISSUE_PAYMENT_TYPE_VALUE ='TORG')&#xD;&#xA;               LEFT OUTER JOIN SGT_PERSON PER(NOLOCK)&#xD;&#xA;                                     ON CASE WHEN PA.TRANSFER_ORG_ID &gt;0 THEN PA.PERSON_ID ELSE PRD.RECIPIENT_PERSON_ID END = PER.PERSON_ID&#xD;&#xA;                                     --PIR-622&#xD;&#xA;                LEFT OUTER JOIN SGT_ORGANIZATION SO(NOLOCK)&#xD;&#xA;                                     ON PRD.RECIPIENT_ORG_ID = SO.ORG_ID&#xD;&#xA;               &#xD;&#xA;    WHERE &#xD;&#xA;    --WHOLE COND START&#xD;&#xA;    &#xD;&#xA;                 (&#xD;&#xA;                     PAS.STATUS_VALUE  IN ('APRD','RECV','CMPL') AND &#xD;&#xA;           (PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;                                 (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;                                             FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;                                             WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;                                             ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;                                 ))&#xD;&#xA;                                 AND &#xD;&#xA;                                 PAPI.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;                                 AND PRD.PAYMENT_REISSUE_DETAIL_ID IS NOT NULL&#xD;&#xA;                                 &#xD;&#xA;                  )&#xD;&#xA;               &#xD;&#xA;               AND (BACCT.FUNDS_TYPE_VALUE NOT IN ('L052','L161')OR BACCT.FUNDS_TYPE_VALUE IS NULL)&#xD;&#xA;               AND (PBXR.PLAN_ID !=1 OR PBXR.PLAN_ID IS NULL)&#xD;&#xA;)TEMP&#xD;&#xA;               SELECT * FROM TEMP_TABLE_FOR_PAYMENT">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetRecentPaymentDateByScheduleType" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT MAX(PAYMENT_DATE) FROM SGT_PAYMENT_SCHEDULE (nolock) Where &#xD;&#xA;SCHEDULE_TYPE_VALUE = @SCHEDULE_TYPE_VALUE and STATUS_VALUE = 'PRCD'">
      <parameters>
        <parameter ID="@SCHEDULE_TYPE_VALUE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="LoadPayeeAccountsForWeeklyAdhocPaymentProcess" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="IF OBJECT_ID('TEMP_TABLE_FOR_PAYMENT') IS NOT NULL&#xD;&#xA;BEGIN&#xD;&#xA; DROP TABLE TEMP_TABLE_FOR_PAYMENT&#xD;&#xA;END&#xD;&#xA;&#xD;&#xA;SELECT * INTO DBO.TEMP_TABLE_FOR_PAYMENT&#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA;SELECT &#xD;&#xA;DISTINCT PA.PAYEE_ACCOUNT_ID&#xD;&#xA;      ,PA.PERSON_ID&#xD;&#xA;      ,PA.ORG_ID&#xD;&#xA;      ,PA.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;      ,PA.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA;      ,PA.DRO_APPLICATION_DETAIL_ID&#xD;&#xA;      ,PA.DRO_CALCULATION_DETAIL_ID&#xD;&#xA;      ,PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;      ,PA.BENEFIT_ACCOUNT_TYPE_ID&#xD;&#xA;      ,PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;      ,PA.RETIREMENT_TYPE_ID&#xD;&#xA;      ,PA.RETIREMENT_TYPE_VALUE&#xD;&#xA;      ,PA.BENEFIT_BEGIN_DATE&#xD;&#xA;      ,PA.BENEFIT_END_DATE&#xD;&#xA;      ,PA.ACCOUNT_RELATION_ID&#xD;&#xA;      ,PA.ACCOUNT_RELATION_VALUE&#xD;&#xA;      ,PA.FAMILY_RELATION_ID&#xD;&#xA;      ,PA.FAMILY_RELATION_VALUE&#xD;&#xA;      ,PA.MINIMUM_GUARANTEE_AMOUNT&#xD;&#xA;      ,PA.NONTAXABLE_BEGINNING_BALANCE&#xD;&#xA;      ,PA.PLAN_BENEFIT_ID&#xD;&#xA;      ,PA.TERM_CERTAIN_END_DATE&#xD;&#xA;      ,PA.CREATED_BY&#xD;&#xA;      ,PA.CREATED_DATE&#xD;&#xA;      ,PA.MODIFIED_BY&#xD;&#xA;      ,PA.MODIFIED_DATE&#xD;&#xA;      ,PA.UPDATE_SEQ&#xD;&#xA;      ,PA.TRANSFER_ORG_ID&#xD;&#xA;      ,PA.VERIFIED_FLAG&#xD;&#xA;      ,PA.ADJUSTMENT_PAYMENT_ELIGIBLE_FLAG&#xD;&#xA;      ,PA.INCLUDE_IN_ADHOC_FLAG&#xD;&#xA;      ,PA.REVIEW_PAYEE_ACC_FOR_RETIREE_INC_FORM&#xD;&#xA;      ,PA.REEMPLOYED_FLAG&#xD;&#xA;      ,PA.REFERENCE_ID&#xD;&#xA;      ,PA.REEMPLOYED_FLAG_FROM_EADB&#xD;&#xA;      ,PA.REEMPLOYED_FLAG_AS_OF_DATE&#xD;&#xA;      ,PA.DISABILITY_CONVERSION_FLAG&#xD;&#xA;      ,PA.ACCRUED_BENEFIT_TO_BE_PAID_REEVAL_FLAG&#xD;&#xA;      ,PA.REEMPLOYMENT_OVERRIDE_FLAG&#xD;&#xA;      ,PA.UNREDUCED_BENEFIT_AMOUNT&#xD;&#xA;      ,PA.EE_DERIVED_BENEFIT_AMOUNT&#xD;&#xA;      ,PA.REMAINING_NON_TAXABLE_FROM_CONVERSION&#xD;&#xA;      ,PA.TRANSFER_ORG_CONTACT_NAME,&#xD;&#xA;&#x9;PAS.STATUS_EFFECTIVE_DATE,PAS.STATUS_VALUE,&#xD;&#xA;       PBXR.PLAN_ID as PLAN_ID, &#xD;&#xA;       PBXR.BENEFIT_OPTION_ID,PBXR.BENEFIT_OPTION_VALUE,&#xD;&#xA;       Case When TF.TAX_OPTION_ID is not null then TF.TAX_OPTION_ID else 7004 end AS FED_TAX_OPTION_ID ,&#xD;&#xA;    TF.TAX_OPTION_VALUE AS FED_TAX_OPTION_VALUE,TF.TAX_ALLOWANCE  AS FED_TAX_ALLOWANCE ,&#xD;&#xA;    case when TF.MARITAL_STATUS_ID is not null then TF.MARITAL_STATUS_ID else 7032 end AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;    TF.MARITAL_STATUS_VALUE AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;    TF.ADDITIONAL_TAX_AMOUNT AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;    Case When TS.TAX_OPTION_ID is not null then TS.TAX_OPTION_ID else 7004 end AS STATE_TAX_OPTION_ID ,&#xD;&#xA;    TS.TAX_OPTION_VALUE AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;    TS.TAX_ALLOWANCE  AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;    case when TS.MARITAL_STATUS_ID is not null then TS.MARITAL_STATUS_ID else 7032 end AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;    TS.MARITAL_STATUS_VALUE AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;    TS.ADDITIONAL_TAX_AMOUNT AS STATE_ADDITIONAL_TAX_AMOUNT, SPLN.PLAN_CODE AS PLAN_NAME, PER.SSN,&#xD;&#xA;    PER.MPI_PERSON_ID, ORG.MPI_ORG_ID, ORG.ORG_NAME AS ORGANIZATION_NAME,&#xD;&#xA;    CASE WHEN PER.MPI_PERSON_ID IS NOT NULL then ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'') END AS PAYEE_NAME, &#xD;&#xA;    CASE WHEN PER.MPI_PERSON_ID IS NOT NULL then ISNULL(FIRST_NAME,'') END AS PAYEE_FIRST_NAME,&#xD;&#xA;    CASE WHEN PER.MPI_PERSON_ID IS NOT NULL then ISNULL(LAST_NAME,'') END AS PAYEE_LAST_NAME,&#xD;&#xA;    CV.DESCRIPTION AS PAYEE_STATUS, CVOPTION.DESCRIPTION AS BENEFIT_OPTION, CVRELATION.DESCRIPTION AS ACCOUNT_RELATIONSHIP,&#xD;&#xA;    CASE WHEN ACH.ACCOUNT_NUMBER IS NOT NULL THEN 'ACH' ELSE 'CHK' END PAYMENT_METHOD,  --Fix error in weekly adhoc&#xD;&#xA;    ACH.ACH_START_DATE,ACH.ACH_END_DATE,ACH.ACCOUNT_NUMBER,ACH.BANK_ACCOUNT_TYPE_ID,ACH.BANK_ACCOUNT_TYPE_VALUE,ACH.PAYEE_ACCOUNT_ACH_DETAIL_ID,ACH.BANK_ORG_ID AS ACH_BANK_ORG_ID,&#xD;&#xA;    CASE WHEN APP.RETIREMENT_DATE IS NOT NULL THEN APP.RETIREMENT_DATE ELSE DROAPP.DRO_COMMENCEMENT_DATE END AS RETIREMENT_DATE,&#xD;&#xA;    BACCT.FUNDS_TYPE_ID,BACCT.FUNDS_TYPE_VALUE,PAPI.REISSUE_ITEM_FLAG,'REGL' AS RETRO_PAYMENT_OPTION_VALUE,&#xD;&#xA;    CVBENEFITTYPE.DESCRIPTION AS BENEFIT_TYPE_DESC,PRD.REISSUE_PAYMENT_TYPE_VALUE AS REISSUE_PAYMENT_TYPE_VALUE,PRD.PAYMENT_REISSUE_DETAIL_ID AS PAYMENT_REISSUE_DETAIL_ID &#xD;&#xA;&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA (NOLOCK) &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS(NOLOCK) &#xD;&#xA;         ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;         &#xD;&#xA; INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT BACCT(NOLOCK)&#xD;&#xA;         ON PA.PAYEE_BENEFIT_ACCOUNT_ID = BACCT.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;         &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV (nolock)&#xD;&#xA;         ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;                 &#xD;&#xA; INNER JOIN SGS_CODE_VALUE CVRELATION (nolock)&#xD;&#xA;         ON PA.ACCOUNT_RELATION_ID= CVRELATION.CODE_ID AND PA.ACCOUNT_RELATION_VALUE = CVRELATION.CODE_VALUE&#xD;&#xA;         &#xD;&#xA; LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) &#xD;&#xA;         ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA;                 &#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE CVOPTION (nolock)&#xD;&#xA;         ON PBXR.BENEFIT_OPTION_ID = CVOPTION.CODE_ID AND PBXR.BENEFIT_OPTION_VALUE = CVOPTION.CODE_VALUE&#xD;&#xA; &#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TF (NOLOCK)&#xD;&#xA;         ON PA.PAYEE_ACCOUNT_ID = TF.PAYEE_ACCOUNT_ID  AND TF.TAX_IDENTIFIER_VALUE = 'FDRL'&#xD;&#xA;         &#xD;&#xA;          AND (TF.END_DATE IS NULL OR TF.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TS (NOLOCK)&#xD;&#xA;      ON PA.PAYEE_ACCOUNT_ID = TS.PAYEE_ACCOUNT_ID AND TS.TAX_IDENTIFIER_VALUE = 'STAT'&#xD;&#xA;      &#xD;&#xA;      AND (TS.END_DATE IS NULL OR TS.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_ACH_DETAIL ACH(NOLOCK)&#xD;&#xA;         ON ACH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;         AND ACH.ACH_START_DATE &lt;= @PAYMENTDATE AND (ACH.ACH_END_DATE IS NULL OR ACH.ACH_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;               AND ISNULL(ACH.PRE_NOTE_FLAG,'Y') = 'N' AND ACH.PRE_NOTE_COMPLETION_DATE IS NOT NULL&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_DETAIL APPDTL(NOLOCK)&#xD;&#xA;         ON PA.BENEFIT_APPLICATION_DETAIL_ID = APPDTL.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_DETAIL BCDTL WITH(NOLOCK) &#xD;&#xA;            ON BCDTL.BENEFIT_CALCULATION_DETAIL_ID = PA.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA; LEFT OUTER JOIN SGT_DRO_BENEFIT_DETAILS DROAPPDTL(NOLOCK)&#xD;&#xA;      ON PA.DRO_APPLICATION_DETAIL_ID = DROAPPDTL.DRO_BENEFIT_ID&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_APPLICATION APP(NOLOCK)&#xD;&#xA;         ON APPDTL.BENEFIT_APPLICATION_ID = APP.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN SGT_DRO_APPLICATION DROAPP(NOLOCK)&#xD;&#xA;         ON DROAPPDTL.DRO_APPLICATION_ID = DROAPP.DRO_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN SGT_DRO_BENEFIT_DETAILS QADTL WITH(NOLOCK) &#xD;&#xA;         ON QADTL.DRO_BENEFIT_ID = PA.DRO_APPLICATION_DETAIL_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PLAN SPLN WITH(NOLOCK) &#xD;&#xA;         ON SPLN.PLAN_ID=PBXR.PLAN_ID &#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE CVBENEFITTYPE (nolock) ON &#xD;&#xA;    PA.BENEFIT_ACCOUNT_TYPE_ID= CVBENEFITTYPE.CODE_ID AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = CVBENEFITTYPE.CODE_VALUE&#xD;&#xA; LEFT JOIN&#xD;&#xA;    (&#xD;&#xA;   SELECT PAPIT.PAYEE_ACCOUNT_ID,PAPIT.REISSUE_ITEM_FLAG &#xD;&#xA;       FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;      ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;   WHERE &#xD;&#xA;   (PAPIT.END_DATE IS NULL OR PAPIT.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;   AND (PAPIT.START_DATE &lt;&gt; PAPIT.END_DATE or PAPIT.END_DATE IS NULL)&#xD;&#xA;   AND PAPIT.REISSUE_ITEM_FLAG = 'Y'&#xD;&#xA;      GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PAPIT.REISSUE_ITEM_FLAG  &#xD;&#xA;    ) AS PAPI &#xD;&#xA;     On PAPI.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PERSON PER(NOLOCK)&#xD;&#xA;         ON PA.PERSON_ID = PER.PERSON_ID&#xD;&#xA; LEFT OUTER JOIN SGT_ORGANIZATION ORG(NOLOCK)&#xD;&#xA;         ON PA.ORG_ID = ORG.ORG_ID&#xD;&#xA;    LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_DETAIL SBCD WITH(NOLOCK) &#xD;&#xA;               ON SBCD.BENEFIT_CALCULATION_DETAIL_ID = PA.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_HEADER SBCH &#xD;&#xA;            ON SBCH.BENEFIT_CALCULATION_HEADER_ID = SBCD.BENEFIT_CALCULATION_HEADER_ID&#xD;&#xA; LEFT OUTER JOIN SGT_QDRO_CALCULATION_DETAIL SQCD WITH(NOLOCK) &#xD;&#xA;            ON SQCD.QDRO_CALCULATION_DETAIL_ID = PA.DRO_CALCULATION_DETAIL_ID&#xD;&#xA; LEFT OUTER JOIN SGT_QDRO_CALCULATION_HEADER SQCH &#xD;&#xA;            ON SQCH.QDRO_CALCULATION_HEADER_ID = SQCD.QDRO_CALCULATION_HEADER_ID&#xD;&#xA;&#xD;&#xA;-- PROD PIR 637&#xD;&#xA;  LEFT OUTER JOIN  SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  LEFT OUTER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  AND PHD.DISTRIBUTION_STATUS_VALUE = 'RSUE' &#xD;&#xA;  LEFT OUTER JOIN  SGT_PAYMENT_REISSUE_DETAIL PRD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_DISTRIBUTION_ID = PRD.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA; AND PRD.REISSUE_PAYMENT_TYPE_VALUE !='PTOS' AND PRD.REISSUE_PAYMENT_TYPE_VALUE !='TORG' &#xD;&#xA;&#xD;&#xA;    WHERE &#xD;&#xA;    --WHOLE COND START&#xD;&#xA;     (&#xD;&#xA;      (&#xD;&#xA;      PAS.STATUS_VALUE  IN ('CMPL','APRD') AND &#xD;&#xA;      ( PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC)&#xD;&#xA;   )&#xD;&#xA;   AND PAPI.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;   AND PRD.PAYMENT_REISSUE_DETAIL_ID IS NOT NULL&#xD;&#xA;  )&#xD;&#xA;  OR&#xD;&#xA;  (&#xD;&#xA;      &#xD;&#xA;      PAS.STATUS_VALUE  IN ('APRD') AND &#xD;&#xA;       ( PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC)&#xD;&#xA;    )&#xD;&#xA;      &#xD;&#xA;   &#xD;&#xA;   AND PA.INCLUDE_IN_ADHOC_FLAG ='Y'&#xD;&#xA; )&#xD;&#xA; )&#xD;&#xA; AND (BACCT.FUNDS_TYPE_VALUE IN ('L052','L161') OR BACCT.FUNDS_TYPE_VALUE IS NULL)&#xD;&#xA; AND (PBXR.PLAN_ID = 1 OR PBXR.PLAN_ID IS NULL)&#xD;&#xA;&#xD;&#xA;UNION ALL -- PROD PIR 637 -Vasim&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;DISTINCT PA.PAYEE_ACCOUNT_ID, &#xD;&#xA;       CASE WHEN PA.TRANSFER_ORG_ID &gt; 0 &#xD;&#xA;&#x9;        THEN PA.PERSON_ID&#xD;&#xA;&#x9;        ELSE &#xD;&#xA;                PRD.RECIPIENT_PERSON_ID &#xD;&#xA;&#x9;  END AS PERSON_ID, &#xD;&#xA;      --pir-622&#xD;&#xA;&#x9;  CASE WHEN (PRD.RECIPIENT_ORG_ID &gt; 0 ) &#xD;&#xA;&#x9;&#x9;   THEN PRD.RECIPIENT_ORG_ID&#xD;&#xA;&#x9;&#x9;   ELSE &#xD;&#xA;&#x9;&#x9;   PA.ORG_ID END AS ORG_ID&#xD;&#xA;      ,PA.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;      ,PA.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA;      ,PA.DRO_APPLICATION_DETAIL_ID&#xD;&#xA;      ,PA.DRO_CALCULATION_DETAIL_ID&#xD;&#xA;      ,PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;      ,PA.BENEFIT_ACCOUNT_TYPE_ID&#xD;&#xA;      ,PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;      ,PA.RETIREMENT_TYPE_ID&#xD;&#xA;      ,PA.RETIREMENT_TYPE_VALUE&#xD;&#xA;      ,PA.BENEFIT_BEGIN_DATE&#xD;&#xA;      ,PA.BENEFIT_END_DATE&#xD;&#xA;      ,PA.ACCOUNT_RELATION_ID&#xD;&#xA;      ,PA.ACCOUNT_RELATION_VALUE&#xD;&#xA;      ,PA.FAMILY_RELATION_ID&#xD;&#xA;      ,PA.FAMILY_RELATION_VALUE&#xD;&#xA;      ,PA.MINIMUM_GUARANTEE_AMOUNT&#xD;&#xA;      ,PA.NONTAXABLE_BEGINNING_BALANCE&#xD;&#xA;      ,PA.PLAN_BENEFIT_ID&#xD;&#xA;      ,PA.TERM_CERTAIN_END_DATE&#xD;&#xA;      ,PA.CREATED_BY&#xD;&#xA;      ,PA.CREATED_DATE&#xD;&#xA;      ,PA.MODIFIED_BY&#xD;&#xA;      ,PA.MODIFIED_DATE&#xD;&#xA;      ,PA.UPDATE_SEQ&#xD;&#xA;      ,PA.TRANSFER_ORG_ID&#xD;&#xA;      ,PA.VERIFIED_FLAG&#xD;&#xA;      ,PA.ADJUSTMENT_PAYMENT_ELIGIBLE_FLAG&#xD;&#xA;      ,PA.INCLUDE_IN_ADHOC_FLAG&#xD;&#xA;      ,PA.REVIEW_PAYEE_ACC_FOR_RETIREE_INC_FORM&#xD;&#xA;      ,PA.REEMPLOYED_FLAG&#xD;&#xA;      ,PA.REFERENCE_ID&#xD;&#xA;      ,PA.REEMPLOYED_FLAG_FROM_EADB&#xD;&#xA;      ,PA.REEMPLOYED_FLAG_AS_OF_DATE&#xD;&#xA;      ,PA.DISABILITY_CONVERSION_FLAG&#xD;&#xA;      ,PA.ACCRUED_BENEFIT_TO_BE_PAID_REEVAL_FLAG&#xD;&#xA;      ,PA.REEMPLOYMENT_OVERRIDE_FLAG&#xD;&#xA;      ,PA.UNREDUCED_BENEFIT_AMOUNT&#xD;&#xA;      ,PA.EE_DERIVED_BENEFIT_AMOUNT&#xD;&#xA;      ,PA.REMAINING_NON_TAXABLE_FROM_CONVERSION&#xD;&#xA;      ,PA.TRANSFER_ORG_CONTACT_NAME,&#xD;&#xA;&#x9;PAS.STATUS_EFFECTIVE_DATE,PAS.STATUS_VALUE,&#xD;&#xA;    PBXR.PLAN_ID as PLAN_ID, &#xD;&#xA;    PBXR.BENEFIT_OPTION_ID,PBXR.BENEFIT_OPTION_VALUE,&#xD;&#xA;    Case When TF.TAX_OPTION_ID is not null then TF.TAX_OPTION_ID else 7004 end AS FED_TAX_OPTION_ID ,&#xD;&#xA;    TF.TAX_OPTION_VALUE AS FED_TAX_OPTION_VALUE,TF.TAX_ALLOWANCE  AS FED_TAX_ALLOWANCE ,&#xD;&#xA;    case when TF.MARITAL_STATUS_ID is not null then TF.MARITAL_STATUS_ID else 7032 end AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;    TF.MARITAL_STATUS_VALUE AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;    TF.ADDITIONAL_TAX_AMOUNT AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;    Case When TS.TAX_OPTION_ID is not null then TS.TAX_OPTION_ID else 7004 end AS STATE_TAX_OPTION_ID ,&#xD;&#xA;    TS.TAX_OPTION_VALUE AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;    TS.TAX_ALLOWANCE  AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;    case when TS.MARITAL_STATUS_ID is not null then TS.MARITAL_STATUS_ID else 7032 end AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;    TS.MARITAL_STATUS_VALUE AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;    TS.ADDITIONAL_TAX_AMOUNT AS STATE_ADDITIONAL_TAX_AMOUNT, SPLN.PLAN_CODE AS PLAN_NAME, PER.SSN,&#xD;&#xA;    PER.MPI_PERSON_ID, &#xD;&#xA;&#x9; --PIR-622&#xD;&#xA;&#x9;   CASE WHEN (SO.ORG_ID &gt; 0  ) THEN ISNULL( SO.MPI_ORG_ID,'') &#xD;&#xA;&#x9; &#x9;&#x9;           ELSE &#xD;&#xA;&#x9;&#x9;          ISNULL(ORG.MPI_ORG_ID,'') END AS MPI_ORG_ID,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;    --PIR-622&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;   CASE WHEN (SO.ORG_ID &gt; 0 ) THEN ISNULL( SO.ORG_NAME,'') &#xD;&#xA;&#x9;&#x9;             ELSE &#xD;&#xA;&#x9;&#x9;           ISNULL(ORG.ORG_NAME,'') END AS ORGANIZATION_NAME,&#xD;&#xA;&#x9;--ORG.MPI_ORG_ID, ORG.ORG_NAME AS ORGANIZATION_NAME,&#xD;&#xA;    CASE WHEN PER.MPI_PERSON_ID IS NOT NULL then ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'') END AS PAYEE_NAME, &#xD;&#xA;    CASE WHEN PER.MPI_PERSON_ID IS NOT NULL then ISNULL(FIRST_NAME,'') END AS PAYEE_FIRST_NAME,&#xD;&#xA;    CASE WHEN PER.MPI_PERSON_ID IS NOT NULL then ISNULL(LAST_NAME,'') END AS PAYEE_LAST_NAME,&#xD;&#xA;    CV.DESCRIPTION AS PAYEE_STATUS, CVOPTION.DESCRIPTION AS BENEFIT_OPTION, CVRELATION.DESCRIPTION AS ACCOUNT_RELATIONSHIP,&#xD;&#xA;    'CHK' AS PAYMENT_METHOD,&#xD;&#xA;&#x9; NULL AS ACH_START_DATE,&#xD;&#xA;&#x9; NULL AS ACH_END_DATE,&#xD;&#xA;&#x9; NULL AS ACCOUNT_NUMBER,&#xD;&#xA;&#x9; NULL AS BANK_ACCOUNT_TYPE_ID,&#xD;&#xA;&#x9; NULL AS BANK_ACCOUNT_TYPE_VALUE,&#xD;&#xA;&#x9; NULL AS PAYEE_ACCOUNT_ACH_DETAIL_ID,&#xD;&#xA;&#x9; NULL AS ACH_BANK_ORG_ID,&#xD;&#xA;&#x9; CASE WHEN APP.RETIREMENT_DATE IS NOT NULL THEN APP.RETIREMENT_DATE ELSE DROAPP.DRO_COMMENCEMENT_DATE END AS RETIREMENT_DATE,&#xD;&#xA;    BACCT.FUNDS_TYPE_ID,BACCT.FUNDS_TYPE_VALUE,PAPI.REISSUE_ITEM_FLAG,'REGL' AS RETRO_PAYMENT_OPTION_VALUE,&#xD;&#xA;    CVBENEFITTYPE.DESCRIPTION AS BENEFIT_TYPE_DESC,PRD.REISSUE_PAYMENT_TYPE_VALUE AS REISSUE_PAYMENT_TYPE_VALUE,PRD.PAYMENT_REISSUE_DETAIL_ID AS PAYMENT_REISSUE_DETAIL_ID &#xD;&#xA;&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA (NOLOCK) &#xD;&#xA;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS(NOLOCK) ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;&#x9;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT BACCT(NOLOCK) ON PA.PAYEE_BENEFIT_ACCOUNT_ID = BACCT.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV (nolock) ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;&#x9;INNER JOIN SGS_CODE_VALUE CVRELATION (nolock) ON PA.ACCOUNT_RELATION_ID= CVRELATION.CODE_ID AND PA.ACCOUNT_RELATION_VALUE = CVRELATION.CODE_VALUE&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA;    LEFT OUTER JOIN SGS_CODE_VALUE CVOPTION (nolock) ON PBXR.BENEFIT_OPTION_ID = CVOPTION.CODE_ID AND PBXR.BENEFIT_OPTION_VALUE = CVOPTION.CODE_VALUE               &#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TF (NOLOCK) ON PA.PAYEE_ACCOUNT_ID = TF.PAYEE_ACCOUNT_ID  AND TF.TAX_IDENTIFIER_VALUE = 'FDRL'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND (TF.END_DATE IS NULL OR TF.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TS (NOLOCK) ON PA.PAYEE_ACCOUNT_ID = TS.PAYEE_ACCOUNT_ID AND TS.TAX_IDENTIFIER_VALUE = 'STAT'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND (TS.END_DATE IS NULL OR TS.END_DATE &gt;= @PAYMENTDATE) &#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_ACH_DETAIL ACH(NOLOCK) ON ACH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND ACH.ACH_START_DATE &lt;= @PAYMENTDATE &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND (ACH.ACH_END_DATE IS NULL OR ACH.ACH_END_DATE &gt;= @PAYMENTDATE) AND ISNULL(ACH.PRE_NOTE_FLAG,'Y') = 'N' AND ACH.PRE_NOTE_COMPLETION_DATE IS NOT NULL&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_DETAIL APPDTL(NOLOCK) ON PA.BENEFIT_APPLICATION_DETAIL_ID = APPDTL.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_DETAIL BCDTL WITH(NOLOCK) ON BCDTL.BENEFIT_CALCULATION_DETAIL_ID = PA.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_DRO_BENEFIT_DETAILS DROAPPDTL(NOLOCK) ON PA.DRO_APPLICATION_DETAIL_ID = DROAPPDTL.DRO_BENEFIT_ID&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION APP(NOLOCK) ON APPDTL.BENEFIT_APPLICATION_ID = APP.BENEFIT_APPLICATION_ID&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_DRO_APPLICATION DROAPP(NOLOCK) ON DROAPPDTL.DRO_APPLICATION_ID = DROAPP.DRO_APPLICATION_ID&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_DRO_BENEFIT_DETAILS QADTL WITH(NOLOCK) ON QADTL.DRO_BENEFIT_ID = PA.DRO_APPLICATION_DETAIL_ID&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_PLAN SPLN WITH(NOLOCK) ON SPLN.PLAN_ID=PBXR.PLAN_ID &#xD;&#xA;&#x9;LEFT OUTER JOIN SGS_CODE_VALUE CVBENEFITTYPE (nolock) ON &#xD;&#xA;    PA.BENEFIT_ACCOUNT_TYPE_ID= CVBENEFITTYPE.CODE_ID AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = CVBENEFITTYPE.CODE_VALUE&#xD;&#xA;&#x9;LEFT JOIN&#xD;&#xA;    (&#x9;SELECT DISTINCT PAR.PAYEE_ACCOUNT_ID,PAYEE_ACCOUNT_RETRO_PAYMENT_ID,PAYMENT_OPTION_VALUE &#xD;&#xA;&#x9;&#x9;FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT PAR&#xD;&#xA;&#x9;&#x9;LEFT OUTER JOIN SGT_PAYMENT_HISTORY_HEADER PHD WITH(NOLOCK) &#xD;&#xA;                         ON PHD.PAYMENT_HISTORY_HEADER_ID=PAR.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;&#x9;&#x9;WHERE PAYMENT_OPTION_VALUE = 'SPCK' &#xD;&#xA;&#x9;&#x9;AND PHD.PAYMENT_HISTORY_HEADER_ID IS NULL       &#xD;&#xA;      ) AS RETRO On RETRO.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;LEFT JOIN&#xD;&#xA;    (&#xD;&#xA;&#x9;&#x9;SELECT PAPIT.PAYEE_ACCOUNT_ID,PAPIT.REISSUE_ITEM_FLAG &#xD;&#xA;&#x9;&#x9;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;&#x9;&#x9;WHERE&#xD;&#xA;&#x9;&#x9;(PAPIT.END_DATE IS NULL OR PAPIT.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;&#x9;&#x9;AND (PAPIT.START_DATE &lt;&gt; PAPIT.END_DATE or PAPIT.END_DATE IS NULL)&#xD;&#xA;&#x9;&#x9;AND PAPIT.REISSUE_ITEM_FLAG = 'Y'&#xD;&#xA;&#x9;&#x9;GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID,PAPIT.REISSUE_ITEM_FLAG  &#xD;&#xA;    ) AS PAPI On PAPI.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; &#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_ORGANIZATION ORG(NOLOCK) ON PA.ORG_ID = ORG.ORG_ID&#xD;&#xA;    LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_DETAIL SBCD WITH(NOLOCK) ON SBCD.BENEFIT_CALCULATION_DETAIL_ID = PA.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_HEADER SBCH WITH(NOLOCK) ON SBCH.BENEFIT_CALCULATION_HEADER_ID = SBCD.BENEFIT_CALCULATION_HEADER_ID&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_QDRO_CALCULATION_DETAIL SQCD WITH(NOLOCK) ON SQCD.QDRO_CALCULATION_DETAIL_ID = PA.DRO_CALCULATION_DETAIL_ID&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_QDRO_CALCULATION_HEADER SQCH ON SQCH.QDRO_CALCULATION_HEADER_ID = SQCD.QDRO_CALCULATION_HEADER_ID&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_PAYMENT_HISTORY_HEADER PHH ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHD ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;            AND PHD.DISTRIBUTION_STATUS_VALUE ='RSUE'&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_PAYMENT_REISSUE_DETAIL PRD ON PHD.PAYMENT_HISTORY_DISTRIBUTION_ID = PRD.PAYMENT_HISTORY_DISTRIBUTION_ID&#xD;&#xA;            AND (PRD.REISSUE_PAYMENT_TYPE_VALUE ='PTOS' OR PRD.REISSUE_PAYMENT_TYPE_VALUE ='TORG')&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_PERSON PER(NOLOCK) ON CASE WHEN PA.TRANSFER_ORG_ID &gt;0 THEN PA.PERSON_ID ELSE PRD.RECIPIENT_PERSON_ID END = PER.PERSON_ID&#xD;&#xA;&#x9;--PIR-622&#xD;&#xA;&#x9;LEFT OUTER JOIN SGT_ORGANIZATION SO(NOLOCK) ON PRD.RECIPIENT_ORG_ID = SO.ORG_ID&#xD;&#xA;WHERE&#xD;&#xA;      --WHOLE COND START      &#xD;&#xA;&#x9;(PAS.STATUS_VALUE  IN ('APRD','RECV','CMPL') &#xD;&#xA;&#x9;AND (PAYEE_ACCOUNT_STATUS_ID =   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID &#xD;&#xA;         FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK)   &#xD;&#xA;         WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;         ORDER BY  PAS1.STATUS_EFFECTIVE_DATE DESC,&#xD;&#xA;         PAS1.PAYEE_ACCOUNT_STATUS_ID DESC))   &#xD;&#xA;&#x9;AND PAPI.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;&#x9;AND PRD.PAYMENT_REISSUE_DETAIL_ID IS NOT NULL) &#xD;&#xA;&#x9;AND (BACCT.FUNDS_TYPE_VALUE IN ('L052','L161') OR BACCT.FUNDS_TYPE_VALUE IS NULL) &#xD;&#xA;&#x9;AND (PBXR.PLAN_ID = 1 OR PBXR.PLAN_ID IS NULL)&#xD;&#xA;&#xD;&#xA;) TEMP&#xD;&#xA;&#xD;&#xA;SELECT * FROM TEMP_TABLE_FOR_PAYMENT">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="ReloadPaymentStepRef" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SPSR.* FROM SGT_PAYMENT_SCHEDULE_STEP SPSS&#xD;&#xA;INNER JOIN SGT_PAYMENT_STEP_REF SPSR ON SPSS.PAYMENT_STEP_ID = SPSR.PAYMENT_STEP_ID&#xD;&#xA;WHERE PAYMENT_SCHEDULE_ID = @PAYMENT_SCHEDULE_ID AND ACTIVE_FLAG = 'Y'&#xD;&#xA;UNION&#xD;&#xA;SELECT * FROM SGT_PAYMENT_STEP_REF&#xD;&#xA;WHERE ACTIVE_FLAG = 'Y'&#xD;&#xA;AND SCHEDULE_TYPE_VALUE = @SCHEDULE_TYPE_VALUE">
      <parameters>
        <parameter ID="@PAYMENT_SCHEDULE_ID" sfwDataType="int" />
        <parameter ID="@SCHEDULE_TYPE_VALUE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="CheckExistingPaymentScheduleForSameDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) FROM SGT_PAYMENT_SCHEDULE WITH(NOLOCK)&#xD;&#xA;WHERE PAYMENT_DATE = @PAYMENT_DATE&#xD;&#xA;AND SCHEDULE_TYPE_VALUE = @SCHEDULE_TYPE_VALUE&#xD;&#xA;AND STATUS_VALUE NOT IN ('CNCL','FALD')&#xD;&#xA;AND PAYMENT_SCHEDULE_ID != @PAYMENT_SCHEDULE_ID&#xD;&#xA;AND SCHEDULE_TYPE_VALUE&lt;&gt;'VEND'">
      <parameters>
        <parameter ID="@PAYMENT_DATE" sfwDataType="DateTime" />
        <parameter ID="@SCHEDULE_TYPE_VALUE" sfwDataType="string" />
        <parameter ID="@PAYMENT_SCHEDULE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckExistingPaymentScheduleForReadyForFinal" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) FROM SGT_PAYMENT_SCHEDULE WITH(NOLOCK)&#xD;&#xA;WHERE &#xD;&#xA; SCHEDULE_TYPE_VALUE = @SCHEDULE_TYPE_VALUE&#xD;&#xA;AND STATUS_VALUE = 'RFNL'">
      <parameters>
        <parameter ID="@SCHEDULE_TYPE_VALUE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="CheckExistingPaymentScheduleTypeForSameDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) FROM SGT_PAYMENT_SCHEDULE WITH(NOLOCK)&#xD;&#xA;WHERE PAYMENT_DATE = @PAYMENT_DATE&#xD;&#xA;AND SCHEDULE_TYPE_VALUE = @SCHEDULE_TYPE_VALUE&#xD;&#xA;AND STATUS_VALUE not in ('PRCD','CNCL','FALD')&#xD;&#xA;AND PAYMENT_SCHEDULE_ID != @PAYMENT_SCHEDULE_ID&#xD;&#xA;AND SCHEDULE_TYPE_VALUE&lt;&gt;'VEND'&#xD;&#xA;">
      <parameters>
        <parameter ID="@PAYMENT_DATE" sfwDataType="DateTime" />
        <parameter ID="@SCHEDULE_TYPE_VALUE" sfwDataType="string" />
        <parameter ID="@PAYMENT_SCHEDULE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadAchStopPayments" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT (ROW_NUMBER() OVER (ORDER BY PHH.PAYMENT_HISTORY_HEADER_ID)) AS ROW_NO, PHH.PLAN_ID,RECIPIENT_NAME,ROUTING_NUMBER,ACCOUNT_NUMBER,NET_AMOUNT,PHD.CHECK_ACH_EFFECTIVE_DATE&#xD;&#xA;&#xD;&#xA;  FROM &#xD;&#xA;     SGT_PAYMENT_HISTORY_DISTRIBUTION  PHD&#xD;&#xA;               INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH  &#xD;&#xA;             ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;             where PHD.PAYMENT_METHOD_VALUE='ACH'&#xD;&#xA;             AND PHD.DISTRIBUTION_STATUS_VALUE='STPM'&#xD;&#xA;             AND (PHD.ACH_REVERSAL_FLAG &lt;&gt;'Y' OR PHD.ACH_REVERSAL_FLAG IS  NULL)&#xD;&#xA;             AND ((@FORIAPPLAN=1 AND PHH.PLAN_ID=1) OR (@FORIAPPLAN &lt;&gt; 1 AND PHH.PLAN_ID&lt;&gt;1))">
      <parameters>
        <parameter ID="@FORIAPPLAN" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetRecentCuttOffDateByScheduleType" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT top (1) PAYMENT_SETUP_CUTOFF_DATE FROM SGT_PAYMENT_SCHEDULE (nolock) Where &#xD;&#xA;SCHEDULE_TYPE_VALUE = @SCHEDULE_TYPE_VALUE order by PAYMENT_DATE desc&#xD;&#xA; ">
      <parameters>
        <parameter ID="@SCHEDULE_TYPE_VALUE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="UpdateAchReversalFlag" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Update   PHD&#xD;&#xA;   set PHD.ACH_REVERSAL_FLAG ='Y',&#xD;&#xA;   PHD.MODIFIED_DATE=GETDATE() , PHD.MODIFIED_BY=@USER_NAME,&#xD;&#xA;     PHD.UPDATE_SEQ = PHD.UPDATE_SEQ+1 &#xD;&#xA;     FROM SGT_PAYMENT_HISTORY_DISTRIBUTION PHD&#xD;&#xA;               INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH  &#xD;&#xA;             ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;             where PHD.PAYMENT_METHOD_VALUE='ACH'&#xD;&#xA;             AND PHD.DISTRIBUTION_STATUS_VALUE='STPM'&#xD;&#xA;             AND (PHD.ACH_REVERSAL_FLAG &lt;&gt;'Y' OR PHD.ACH_REVERSAL_FLAG IS  NULL)&#xD;&#xA;             AND ((@FORIAPPLAN=1 AND PHH.PLAN_ID=1) OR (@FORIAPPLAN &lt;&gt; 1 AND PHH.PLAN_ID&lt;&gt;1))">
      <parameters>
        <parameter ID="@FORIAPPLAN" sfwDataType="int" />
        <parameter ID="@USER_NAME" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetLastProcssedScheduleDetailsbyShceduleType" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT TOP 1 * FROM SGT_PAYMENT_SCHEDULE SPS&#xD;&#xA;WHERE SCHEDULE_TYPE_VALUE = @SCHEDULE_TYPE_VALUE&#xD;&#xA;AND STATUS_VALUE = 'PRCD'&#xD;&#xA;ORDER by SPS.PAYMENT_SCHEDULE_ID DESC">
      <parameters>
        <parameter ID="@SCHEDULE_TYPE_VALUE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="CheckAnyPayeeAccountShouldBeSuspendedForPensionVerification" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select  count(1)&#xD;&#xA;--SP.FIRST_NAME AS istrFirsttName,   SP.LAST_NAME AS istrLastName,   SP.MPI_PERSON_ID AS istrMPID,  spa.payee_account_id,  sp.person_id  &#xD;&#xA;from SGT_PAYEE_ACCOUNT spa inner join SGT_PERSON sp on spa.PERSON_ID = sp.PERSON_ID&#xD;&#xA;inner join &#xD;&#xA;( select payee_account_id&#xD;&#xA; from SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE&#xD;&#xA; where PAYMENT_ITEM_TYPE_ID in(1,2) and END_DATE is null&#xD;&#xA; group by PAYEE_ACCOUNT_ID&#xD;&#xA;)spapit on spa.PAYEE_ACCOUNT_ID = spapit.PAYEE_ACCOUNT_ID&#xD;&#xA;inner join SGT_PAYEE_ACCOUNT_STATUS spas on spa.PAYEE_ACCOUNT_ID = spas.PAYEE_ACCOUNT_ID and spas.STATUS_VALUE IN('APRD','RECV','REVW') and spas.PAYEE_ACCOUNT_STATUS_ID = (select MAX(payee_account_status_id) from SGT_PAYEE_ACCOUNT_STATUS where PAYEE_ACCOUNT_ID = spa.PAYEE_ACCOUNT_ID)&#xD;&#xA;inner join SGT_PAYEE_BENEFIT_ACCOUNT spba on spa.PAYEE_BENEFIT_ACCOUNT_ID = spba.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;inner join SGT_PLAN_BENEFIT_XR spbx on spa.PLAN_BENEFIT_ID = spbx.PLAN_BENEFIT_ID and spbx.PLAN_ID &lt;&gt; 1&#xD;&#xA;left outer join SGT_PERSON sp1 on spba.PERSON_ID = sp1.PERSON_ID  &#xD;&#xA;left outer join SGT_BENEFIT_APPLICATION_DETAIL sbad on spa.BENEFIT_APPLICATION_DETAIL_ID = sbad.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;left outer join SGT_BENEFIT_APPLICATION sba on sbad.BENEFIT_APPLICATION_ID = sba.BENEFIT_APPLICATION_ID and sba.APPLICATION_STATUS_VALUE = 'APPR'&#xD;&#xA;left outer join SGT_DRO_BENEFIT_DETAILS sdbd on spa.DRO_APPLICATION_DETAIL_ID = sdbd.DRO_BENEFIT_ID&#xD;&#xA;left outer join SGT_DRO_APPLICATION sda on sdbd.DRO_APPLICATION_ID = sda.DRO_APPLICATION_ID &#xD;&#xA;inner join SGT_PENSION_VERIFICATION_HISTORY b on spa.PERSON_ID = b.PERSON_ID and b.thirty_days_letter_sent is not null and b.received_date is null">
      <parameters />
    </query>
    <query ID="CheckForPayeeAccountTaxWithholdingSetup" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select Count(1) from(&#xD;&#xA;select  &#xD;&#xA;    pac.PAYEE_ACCOUNT_ID, p.PERSON_ID, p.MPI_PERSON_ID, (p.FIRST_NAME+ ' ' + p.LAST_NAME) PAYEE_NAME, cpa.MANDATORY_WITHHOLDING_STATE, ppa.PREV_MANDATORY_WITHHOLDING_STATE,&#xD;&#xA;    ctw.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID,CASE WHEN  ctw.TAX_IDENTIFIER_VALUE = 'STAT' THEN 'CA' ELSE ctw.TAX_IDENTIFIER_VALUE END TAX_IDENTIFIER_VALUE , ctw.AMOUNT,&#xD;&#xA;    CASE WHEN ptw.PREV_TAX_IDENTIFIER_VALUE = 'STAT' THEN 'CA' ELSE ptw.PREV_TAX_IDENTIFIER_VALUE END AS PREV_TAX_IDENTIFIER_VALUE , ptw.PREV_AMOUNT,&#xD;&#xA;    concat_ws(' ', cpa.ADDR_LINE_1, cpa.ADDR_LINE_2, cpa.ADDR_CITY, cpa.ADDR_STATE_VALUE, cpa.ADDR_ZIP_CODE) NEW_ADDRESS,&#xD;&#xA;    cpa.DESCRIPTION NEW_STATE, ppa.DESCRIPTION PREVIOUS_STATE,&#xD;&#xA;    concat_ws(' ', ppa.PREV_ADDR_LINE_1, ppa.PREV_ADDR_LINE_2, ppa.PREV_ADDR_CITY,  ppa.PREV_ADDR_STATE_VALUE, ppa.PREV_ADDR_ZIP_CODE) PREVIOUS_ADDRESS,      &#xD;&#xA;    CASE &#xD;&#xA;        WHEN cpa.ADDR_STATE_VALUE ='CA' THEN 'STAT' &#xD;&#xA;        ELSE cpa.ADDR_STATE_VALUE+'ST'&#xD;&#xA;    END NEWTAXIDENT,&#xD;&#xA;    CASE &#xD;&#xA;        WHEN cpa.ADDR_STATE_VALUE +'ST' = 'STAT' THEN 'S'&#xD;&#xA;        WHEN CPA.ADDR_STATE_VALUE +'ST' = 'GAST' THEN 'GAS'&#xD;&#xA;        WHEN CPA.ADDR_STATE_VALUE +'ST' = 'ORST' THEN 'ORS'&#xD;&#xA;        WHEN CPA.ADDR_STATE_VALUE +'ST' = 'NCST' THEN 'NCS'&#xD;&#xA;        WHEN CPA.ADDR_STATE_VALUE +'ST' = 'VAST' THEN  NULL &#xD;&#xA;    END MARITAL_STATUS&#xD;&#xA;from dbo.SGT_PAYEE_ACCOUNT pac&#xD;&#xA;inner join dbo.SGT_PERSON p on p.PERSON_ID = pac.PERSON_ID&#xD;&#xA;inner join SGT_PLAN_BENEFIT_XR XR on pac.PLAN_BENEFIT_ID = xr.PLAN_BENEFIT_ID&#xD;&#xA;inner join SGT_PLAN pl on xr.PLAN_ID = pl.PLAN_ID and pl.PLAN_ID=2 and xr.BENEFIT_OPTION_VALUE  &lt;&gt; 'LUMP'&#xD;&#xA;cross apply(&#xD;&#xA;       select top 1 with ties pas.STATUS_VALUE PAYEE_ACCOUNT_STATUS, pas.STATUS_EFFECTIVE_DATE&#xD;&#xA;       from dbo.SGT_PAYEE_ACCOUNT_STATUS pas&#xD;&#xA;       where 1=1&#xD;&#xA;              and pas.PAYEE_ACCOUNT_ID = pac.PAYEE_ACCOUNT_ID&#xD;&#xA;       order by pas.STATUS_EFFECTIVE_DATE desc&#xD;&#xA;) pas&#xD;&#xA;cross apply(&#xD;&#xA;        select top 1 with ties &#xD;&#xA;            pa.START_DATE, pa.ADDR_LINE_1, pa.ADDR_LINE_2, pa.ADDR_CITY, pa.ADDR_STATE_VALUE, pa.ADDR_ZIP_CODE,  pa.ADDR_ZIP_4_CODE, cvv.DESCRIPTION,&#xD;&#xA;            case when cv.DATA1 is null then 'N' when cv.DATA1 = 'MWS' then 'Y' else 'N' end MANDATORY_WITHHOLDING_STATE, cv.CODE_VALUE TAX_IDENTIFIER_VALUE&#xD;&#xA;        from dbo.SGT_PERSON_ADDRESS pa&#xD;&#xA;        inner join dbo.SGS_CODE_VALUE cvv on pa.ADDR_STATE_VALUE = cvv.CODE_VALUE and cvv.CODE_ID =150&#xD;&#xA;        left join dbo.SGS_CODE_VALUE cv on case when cv.CODE_VALUE = 'STAT' then 'CA' else substring(cv.CODE_VALUE, 1, 2) end = pa.ADDR_STATE_VALUE and cv.CODE_ID = 7004&#xD;&#xA;        where 1=1&#xD;&#xA;            and pa.PERSON_ID = pac.PERSON_ID &#xD;&#xA;            and pa.END_DATE is null&#xD;&#xA;       order by pa.START_DATE desc&#xD;&#xA;) cpa&#xD;&#xA;cross apply(&#xD;&#xA;        select top 1 with ties &#xD;&#xA;            pa.ADDR_LINE_1 PREV_ADDR_LINE_1, pa.ADDR_LINE_2 PREV_ADDR_LINE_2, pa.ADDR_CITY PREV_ADDR_CITY, pa.ADDR_STATE_VALUE PREV_ADDR_STATE_VALUE,&#xD;&#xA;            pa.ADDR_ZIP_CODE PREV_ADDR_ZIP_CODE,  pa.ADDR_ZIP_4_CODE PREV_ADDR_ZIP_4_CODE, cvv.DESCRIPTION,&#xD;&#xA;            case when cv.DATA1 is null then 'N' when cv.DATA1 = 'MWS' then 'Y' else 'N' end PREV_MANDATORY_WITHHOLDING_STATE, cv.CODE_VALUE PREV_TAX_IDENTIFIER_VALUE&#xD;&#xA;        from dbo.SGT_PERSON_ADDRESS pa&#xD;&#xA;            inner join dbo.SGS_CODE_VALUE cvv on pa.ADDR_STATE_VALUE = cvv.CODE_VALUE and cvv.CODE_ID =150&#xD;&#xA;            left join dbo.SGS_CODE_VALUE cv on case when cv.CODE_VALUE = 'STAT' then 'CA' else substring(cv.CODE_VALUE, 1, 2) end = pa.ADDR_STATE_VALUE and cv.CODE_ID = 7004&#xD;&#xA;        where 1=1&#xD;&#xA;            and pa.PERSON_ID = pac.PERSON_ID &#xD;&#xA;            and pa.END_DATE is not null&#xD;&#xA;       order by pa.START_DATE desc&#xD;&#xA;) ppa &#xD;&#xA;outer apply(&#xD;&#xA;    select top 1 with ties &#xD;&#xA;        tw.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID, tw.TAX_IDENTIFIER_VALUE, wd.AMOUNT&#xD;&#xA;    from dbo.SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING tw&#xD;&#xA;    left join dbo.SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING_ITEM_DETAIL wd on wd.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID = tw.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID&#xD;&#xA;    where 1=1&#xD;&#xA;        and tw.PAYEE_ACCOUNT_ID = pac.PAYEE_ACCOUNT_ID&#xD;&#xA;        and tw.TAX_IDENTIFIER_VALUE = cpa.TAX_IDENTIFIER_VALUE&#xD;&#xA;        and tw.END_DATE is null&#xD;&#xA;    order by tw.START_DATE desc&#xD;&#xA;) ctw&#xD;&#xA;outer apply(&#xD;&#xA;    select top 1 with ties &#xD;&#xA;        tw.TAX_IDENTIFIER_VALUE PREV_TAX_IDENTIFIER_VALUE, wd.AMOUNT PREV_AMOUNT&#xD;&#xA;    from dbo.SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING tw&#xD;&#xA;    left join dbo.SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING_ITEM_DETAIL wd on wd.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID = tw.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID&#xD;&#xA;    where 1=1&#xD;&#xA;        and tw.PAYEE_ACCOUNT_ID = pac.PAYEE_ACCOUNT_ID&#xD;&#xA;        and tw.TAX_IDENTIFIER_VALUE = ppa.PREV_TAX_IDENTIFIER_VALUE&#xD;&#xA;        and tw.END_DATE is not null&#xD;&#xA;    order by tw.START_DATE desc&#xD;&#xA;) ptw&#xD;&#xA;cross apply(&#xD;&#xA;    select top 1 with ties ps.PROCESS_DATE LAST_PROCESS_DATE&#xD;&#xA;    from dbo.SGT_PAYMENT_SCHEDULE ps&#xD;&#xA;    where 1=1&#xD;&#xA;        and ps.SCHEDULE_TYPE_VALUE = 'MTLY'&#xD;&#xA;        and ps.PROCESS_DATE is not null&#xD;&#xA;&#x9;&#x9;and ps.status_value ='PRCD'&#xD;&#xA;    order by ps.PAYMENT_SCHEDULE_ID desc&#xD;&#xA;) ps&#xD;&#xA;where 1=1&#xD;&#xA;    and pas.PAYEE_ACCOUNT_STATUS in ('SPND', 'REVW', 'RECV', 'APRD')&#xD;&#xA;    and cpa.ADDR_STATE_VALUE &lt;&gt; ppa.PREV_ADDR_STATE_VALUE&#xD;&#xA;    and cpa.START_DATE &gt;= ps.LAST_PROCESS_DATE&#xD;&#xA;) a where a.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID is null&#xD;&#xA;  and a.MANDATORY_WITHHOLDING_STATE ='Y'">
      <parameters />
    </query>
  </queries>
  <attributes>
    <attribute sfwValue="payment_schedule_id" sfwType="Column" sfwKeyNo="1" sfwIsIdentity="True" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="PaymentScheduleId" sfwIsSequence="False" sfwCaption="ID" />
    <attribute sfwValue="payment_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="PaymentDate" sfwIsSequence="False" sfwCaption="Payment Date" />
    <attribute sfwValue="process_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="ProcessDate" sfwIsSequence="False" sfwCaption="Process Date" />
    <attribute sfwValue="effective_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="EffectiveDate" sfwIsSequence="False" sfwCaption="Effective Date" />
    <attribute sfwType="Description" ID="ScheduleTypeDescription" sfwCaption="Schedule Type" sfwValue="schedule_type_description" />
    <attribute sfwValue="schedule_type_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="ScheduleTypeId" sfwCodeID="7025" sfwIsSequence="False" sfwCaption="Schedule Type" />
    <attribute sfwValue="schedule_type_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="ScheduleTypeValue" sfwIsSequence="False" sfwCaption="Schedule Type" />
    <attribute sfwType="Description" ID="StatusDescription" sfwCaption="Status" sfwValue="status_description" />
    <attribute sfwValue="status_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="StatusId" sfwCodeID="7029" sfwIsSequence="False" sfwCaption="Status" />
    <attribute sfwValue="status_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="StatusValue" sfwIsSequence="False" sfwCaption="Status" />
    <attribute sfwValue="check_message" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="256" sfwIsNull="True" ID="CheckMessage" sfwIsSequence="False" sfwCaption="Check Message" />
    <attribute sfwValue="notes" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="2000" sfwIsNull="True" ID="Notes" sfwIsSequence="False" sfwCaption="Notes" />
    <attribute sfwValue="process_start_time" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="ProcessStartTime" sfwIsSequence="False" sfwCaption="Process Start Time" />
    <attribute sfwValue="process_end_time" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="ProcessEndTime" sfwIsSequence="False" sfwCaption="Process End Time" />
    <attribute sfwValue="backup_table_prefix" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="40" sfwIsNull="True" ID="BackupTablePrefix" sfwIsSequence="False" sfwCaption="Backup Table Prefix" />
    <attribute sfwValue="created_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="CreatedBy" sfwIsSequence="False" sfwCaption="Created By" />
    <attribute sfwValue="created_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="CreatedDate" sfwIsSequence="False" sfwCaption="Created Date" />
    <attribute sfwValue="modified_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="ModifiedBy" sfwIsSequence="False" sfwCaption="Modified By" />
    <attribute sfwValue="modified_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="ModifiedDate" sfwIsSequence="False" sfwCaption="Modified Date" />
    <attribute sfwValue="update_seq" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="UpdateSeq" sfwIsSequence="False" sfwCaption="Update Seq" />
    <attribute sfwValue="retriment_notice_due_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="RetrimentNoticeDueDate" sfwIsSequence="False" sfwCaption="Retriment Notice Due Date" />
    <attribute sfwValue="document_due_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="DocumentDueDate" sfwIsSequence="False" sfwCaption="Document Due Date" />
    <attribute sfwValue="payment_setup_cutoff_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="PaymentSetupCutoffDate" sfwIsSequence="False" sfwCaption="Payment Setup Cutoff Date" />
    <attribute sfwValue="check_file_release_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="CheckFileReleaseDate" sfwIsSequence="False" sfwCaption="Check File Release Date" />
    <attribute sfwValue="abf_processing_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="AbfProcessingDate" sfwIsSequence="False" sfwCaption="Abf Processing Date" />
    <attribute sfwValue="check_mailing_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="CheckMailingDate" sfwIsSequence="False" sfwCaption="Check Mailing Date" />
    <attribute sfwValue="ach_effective_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="AchEffectiveDate" sfwIsSequence="False" sfwCaption="Ach Effective Date" />
    <attribute sfwType="Description" ID="ScheduleSubTypeDescription" sfwCaption="Schedule Sub Type" sfwValue="schedule_sub_type_description" />
    <attribute sfwValue="schedule_sub_type_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="ScheduleSubTypeId" sfwCodeID="7074" sfwIsSequence="False" sfwCaption="Schedule Sub Type" />
    <attribute sfwValue="schedule_sub_type_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="ScheduleSubTypeValue" sfwIsSequence="False" sfwCaption="Schedule Sub Type" />
    <attribute sfwType="Collection" sfwEntity="entPaymentScheduleStep" ID="lstPaymentScheduleStep" sfwValue="iclbPaymentScheduleStep" />
  </attributes>
  <objectmethods>
    <method ID="btn_RunTrialReports" sfwReturnType="ArrayList" />
    <method ID="btn_ApproveForFinal" sfwReturnType="ArrayList" />
    <method ID="btn_RunACHReversalRpt" sfwReturnType="ArrayList" />
    <method ID="btn_Cancel" sfwReturnType="ArrayList" />
  </objectmethods>
  <methods />
  <lifecycle />
  <ExtraFields />
</entity>