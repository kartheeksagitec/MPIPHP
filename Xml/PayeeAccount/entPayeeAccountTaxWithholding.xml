<entity ID="entPayeeAccountTaxWithholding" sfwActive="True" sfwStatus="Review" sfwType="BusinessRule" sfwMainCDO="icdoPayeeAccountTaxWithholding" sfwObjectID="busPayeeAccountTaxWithholding" sfwTableName="sgt_payee_account_tax_withholding" sfwView="False" sfwDataObjectID="doPayeeAccountTaxWithholding">
  <rules>
    <rule ID="Rule-CheckEndDtLesssThanStartDt" sfwMessageId="5111" sfwExpression="!(this.icdoPayeeAccountTaxWithholding.end_date == RFunc.CurrentDate()) &amp;&amp; &#xA;(this.icdoPayeeAccountTaxWithholding.end_date &lt;= this.icdoPayeeAccountTaxWithholding.start_date) &amp;&amp; &#xA;!(this.IsStartDateNull() == True)" sfwObjectBased="True" />
    <rule ID="Rule-CHeckStartDtGreaterThanEndDate" sfwMessageId="5139" sfwExpression="!(this.icdoPayeeAccountTaxWithholding.end_date == RFunc.CurrentDate()) &amp;&amp; &#xA;!(this.IsStartDateNull() == True) &amp;&amp; &#xA;(this.icdoPayeeAccountTaxWithholding.start_date &gt;= this.icdoPayeeAccountTaxWithholding.end_date)" sfwObjectBased="True" />
    <rule ID="Rule-CheckStartDtGreterThanTodaysDt" sfwMessageId="5112" sfwExpression="!(this.IsStartDateNull() == True) &amp;&amp; &#xA;(this.icdoPayeeAccountTaxWithholding.start_date &lt; RFunc.CurrentDate())" sfwObjectBased="True" />
    <rule ID="Rule-isStartDateNull" sfwMessageId="5113" sfwExpression="(this.IsStartDateNull() == True)" sfwObjectBased="True" />
    <rule ID="Rule-WHoldingEndDateNotFuture" sfwMessage="Start Date is required." sfwExpression="(this.icdoPayeeAccountTaxWithholding.start_date &gt;= RFunc.CurrentDate())" sfwObjectBased="True" />
  </rules>
  <delete />
  <checklist />
  <initialload>
    <item ID="Rule-WHoldingEndDateNotFuture" sfwMode="All" sfwStatus="Active" />
  </initialload>
  <softerror />
  <harderror>
    <item ID="Rule-isStartDateNull" sfwMode="All" sfwStatus="Active" />
  </harderror>
  <validatedelete />
  <groupslist />
  <updateablecdo />
  <commonproperties />
  <expressionfields />
  <queries>
    <query ID="GetSuspendibleMonth" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(SBCYD.SUSPENDIBLE_MONTHS_COUNT) as SUM_SUSPENDIBLE_MONTHS_COUNT,&#xD;&#xA;SBCYD.BENEFIT_CALCULATION_DETAIL_ID, SBCO.RETROACTIVE_AMOUNT FROM &#xD;&#xA;SGT_BENEFIT_CALCULATION_YEARLY_DETAIL SBCYD WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_BENEFIT_CALCULATION_OPTIONS SBCO WITH(NOLOCK) &#xD;&#xA;ON SBCO.BENEFIT_CALCULATION_DETAIL_ID = SBCYD.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA;where SBCYD.BENEFIT_CALCULATION_DETAIL_ID in (select BENEFIT_CALCULATION_DETAIL_ID from SGT_PAYEE_ACCOUNT WITH(NOLOCK) WHERE PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID) &#xD;&#xA;AND SBCYD.PLAN_YEAR IN (@PLAN_YEAR_FROM,@PLAN_YEAR_TO) &#xD;&#xA;GROUP BY SBCYD.BENEFIT_CALCULATION_DETAIL_ID, SBCO.RETROACTIVE_AMOUNT">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@PLAN_YEAR_FROM" sfwDataType="int" />
        <parameter ID="@PLAN_YEAR_TO" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetAmountOfCalculatedTax" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select SPATWID.AMOUNT from SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE SPAPIT INNER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING_ITEM_DETAIL SPATWID&#xD;&#xA;ON SPAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID=SPATWID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING SPATW ON SPATWID.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID = SPATW.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID&#xD;&#xA;WHERE SPATW.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID=@PAYEE_ACCOUNT_TAX_WITHHOLDING_ID &#xD;&#xA;AND NOT EXISTS&#xD;&#xA;(&#xD;&#xA; SELECT * FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE A &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING_ITEM_DETAIL B&#xD;&#xA; ON A.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID=B.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING C &#xD;&#xA; ON C.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID = B.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID&#xD;&#xA; WHERE C.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID = @PAYEE_ACCOUNT_TAX_WITHHOLDING_ID AND (C.END_DATE IS NULL OR convert(date,C.END_DATE) &gt;= convert(date,GETDATE()))&#xD;&#xA; AND convert(date,A.END_DATE) &lt; convert(date,GETDATE())&#xD;&#xA;)--PIR 1023">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_TAX_WITHHOLDING_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetFederalTaxWithHoldingCalculation" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @RESULT MONEY, @TAXABLEAMT MONEY, @GROSSYEARLY MONEY, @STDDEDUCTION MONEY, @TAXABLEAMT2C MONEY, @TAXABLEAMT2M MONEY, @RESULT2C MONEY, @RESULT2M MONEY&#xD;&#xA;DECLARE @LEASTTAXABLEAMT MONEY, @MINIMUMWITHHOLDINGAMT MONEY, @EXCEDEAMTPERCENTAGE DECIMAL(5,2), @MAXEFFECTIVEDATE DATE&#xD;&#xA;SET @GROSSYEARLY = @GROSSMONTHLY * 12  -- 1c = 1a * 1b&#xD;&#xA;SET @TAXABLEAMT = @GROSSYEARLY + @STEP4A  --1e = 1c + 1d&#xD;&#xA;SET @STDDEDUCTION = CASE WHEN @FILINGSTATUS = 'MQ' THEN 12900 ELSE 8600 END  --1g&#xD;&#xA;SET @TAXABLEAMT = @TAXABLEAMT - (@STEP4B + @STDDEDUCTION)  -- 1i = ( 1e - (1h = 1f + 1g) )&#xD;&#xA;&#xD;&#xA;--CHECK THE @TAXABLEAMT IN ANNUAL PERCENTAGE METHOD TABLE. &#xD;&#xA;--TO PICK THE LATEST RATE&#xD;&#xA;SELECT @MAXEFFECTIVEDATE = MAX(EFFECTIVE_DATE) FROM SGT_FED_STATE_TAX_RATE_ANNUAL WHERE MARITAL_STATUS_VALUE = @FILINGSTATUS AND TAX_IDENTIFIER_VALUE = 'FDRL'&#xD;&#xA;&#xD;&#xA;--2a is step2b3, and 2b is 1g, 2c = 2a - 2b        --step2b3 is cell E28.&#xD;&#xA;SET @TAXABLEAMT2C = CASE WHEN (@STEP2B3 - @STDDEDUCTION) &gt; 0 THEN (@STEP2B3 - @STDDEDUCTION) ELSE 0 END --2c   (cell E30)&#xD;&#xA;--2d is 1i if 2c is not calculated&#xD;&#xA;SET @TAXABLEAMT2C = CASE WHEN @TAXABLEAMT2C = 0 THEN @TAXABLEAMT ELSE @TAXABLEAMT2C END&#xD;&#xA;--2e, 2f, 2g&#xD;&#xA;SELECT @LEASTTAXABLEAMT = T.MINIMUM_AMOUNT, @MINIMUMWITHHOLDINGAMT = T.TAX_AMOUNT, @EXCEDEAMTPERCENTAGE = T.[PERCENTAGE]&#xD;&#xA;FROM SGT_FED_STATE_TAX_RATE_ANNUAL T WHERE @TAXABLEAMT2C &gt;= MINIMUM_AMOUNT AND (MAXIMUM_AMOUNT IS NULL OR @TAXABLEAMT2C &lt; MAXIMUM_AMOUNT)&#xD;&#xA;AND ALLOWANCE_AMOUNT IS NOT NULL &#xD;&#xA;AND MARITAL_STATUS_VALUE = @FILINGSTATUS AND TAX_IDENTIFIER_VALUE = 'FDRL' &#xD;&#xA;AND EFFECTIVE_DATE = @MAXEFFECTIVEDATE&#xD;&#xA;--2h = taxable amount - least taxable amount, 2i = 2h * 2g , 2j = 2f + 2i &#xD;&#xA;SET @RESULT2C = @MINIMUMWITHHOLDINGAMT + ((@TAXABLEAMT2C - @LEASTTAXABLEAMT) * @EXCEDEAMTPERCENTAGE)  --2j (cell E38)&#xD;&#xA;&#xD;&#xA;--2K = step2b3 , 2l = 1i, 2m = 2k+2l &#xD;&#xA;SET @TAXABLEAMT2M = CASE WHEN (@TAXABLEAMT + @STEP2B3)&gt;0 THEN (@TAXABLEAMT + @STEP2B3) ELSE 0 END  --2m  (cell E43)&#xD;&#xA;--2n, 2o, 2p&#xD;&#xA;SELECT @LEASTTAXABLEAMT = T.MINIMUM_AMOUNT, @MINIMUMWITHHOLDINGAMT = T.TAX_AMOUNT, @EXCEDEAMTPERCENTAGE = T.[PERCENTAGE]&#xD;&#xA;FROM SGT_FED_STATE_TAX_RATE_ANNUAL T WHERE @TAXABLEAMT2M &gt;= MINIMUM_AMOUNT AND (MAXIMUM_AMOUNT IS NULL OR @TAXABLEAMT2M &lt; MAXIMUM_AMOUNT)&#xD;&#xA;AND ALLOWANCE_AMOUNT IS NOT NULL &#xD;&#xA;AND MARITAL_STATUS_VALUE = @FILINGSTATUS AND TAX_IDENTIFIER_VALUE = 'FDRL' &#xD;&#xA;AND EFFECTIVE_DATE = @MAXEFFECTIVEDATE&#xD;&#xA;--2q = taxable amount - least taxable amount, 2r = 2q * 2p , 2s = 2o + 2r &#xD;&#xA;SET @RESULT2M = @MINIMUMWITHHOLDINGAMT + ((@TAXABLEAMT2M - @LEASTTAXABLEAMT) * @EXCEDEAMTPERCENTAGE)  --2s (cell E49)&#xD;&#xA;&#xD;&#xA;--2t = 2s - 2j&#xD;&#xA;SET @RESULT = CASE WHEN (@RESULT2M - @RESULT2C) &gt; 0 THEN (@RESULT2M - @RESULT2C) ELSE 0 END --2t  (cell E50)&#xD;&#xA;--SET @RESULT = CASE WHEN @TAXABLEAMT2C &gt; 0 THEN @RESULT ELSE @RESULT2C END  --2u cell E53 formula&#xD;&#xA;SET @RESULT = CASE WHEN (@STEP2B3 - @STDDEDUCTION) &gt; 0 THEN @RESULT ELSE @RESULT2C END  --2u cell E53 formula&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SET @RESULT = CASE WHEN (@RESULT - @STEP3)&gt; 0 THEN (@RESULT - @STEP3) ELSE 0 END  --2u - 3a&#xD;&#xA;SET @RESULT = @RESULT / 12&#xD;&#xA;SET @RESULT = @RESULT + @STEP4C&#xD;&#xA;SELECT CASE WHEN @TaxOption = 'NFTX' THEN  0 &#xD;&#xA;                    ELSE @RESULT END&#xD;&#xA;">
      <parameters>
        <parameter ID="@GROSSMONTHLY" sfwDataType="decimal" />
        <parameter ID="@FILINGSTATUS" sfwDataType="varchar" />
        <parameter ID="@STEP2B3" sfwDataType="decimal" />
        <parameter ID="@STEP3" sfwDataType="decimal" />
        <parameter ID="@STEP4A" sfwDataType="decimal" />
        <parameter ID="@STEP4B" sfwDataType="decimal" />
        <parameter ID="@STEP4C" sfwDataType="decimal" />
        <parameter ID="@TaxOption" sfwDataType="varchar" />
      </parameters>
    </query>
    <query ID="GetTaxWithHoldingScreenColumns" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="IF @TAX_IDENTIFIER_VALUE  = 'FDRL' &#xD;&#xA;   IF @BENDISTYPE ='LSDB' &#xD;&#xA;&#x9;&#x9;BEGIN&#xD;&#xA;&#x9;&#x9;  SELECT NULL as lblmaritalstatus&#xD;&#xA;&#x9;&#x9;&#x9;&#x9; ,'Y' as lblfilingstatus&#xD;&#xA;&#x9;&#x9;&#x9;&#x9; ,'Y' as txtTaxAllowance&#xD;&#xA;&#x9;&#x9;&#x9;&#x9; ,'Y'  as txtTaxPercentage&#xD;&#xA;&#x9;&#x9;&#x9;&#x9; ,'Y' as ddlTaxOptionValue11&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  ,NULL as txtAdditionalTaxAmount1&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  ,null as txtStep2B&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  ,NULL as txtStep3Amount&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  ,NULL as txtStep4a&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  ,NULL as txtStep4b&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  ,NULL as txtStep4c&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  ,NULL as txtPersonalExemptions&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  ,NULL as txtAgeandBlindnessExemptions&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  ,NULL as txtVoluntary_Withholding&#xD;&#xA;&#x9;&#x9;&#x9; FROM [OPUS].[dbo].[SGT_TAX_WITHHOLDING_SCREEN_CONFIGURATION]&#xD;&#xA;&#x9;&#x9;  WHERE [TAX_IDENTIFIER_VALUE] = @TAX_IDENTIFIER_VALUE&#xD;&#xA;  &#xD;&#xA;&#x9;&#x9; END&#xD;&#xA;  ELSE&#xD;&#xA;   BEGIN&#xD;&#xA;&#x9;SELECT [BENEFIT_DISTRIBUTION_TYPE] as ddlBenefitDistributionTypeValue1&#xD;&#xA;&#x9;&#x9;&#x9;,[MARITAL_STATUS] as lblmaritalstatus&#xD;&#xA;&#x9;      ,[FILING_STATUS] as lblfilingstatus&#xD;&#xA;           ,[TAX_ALLOWANCE] as txtTaxAllowance&#xD;&#xA;      ,[TAX_PERCENTAGE]  as txtTaxPercentage&#xD;&#xA;      ,[TAX_OPTION] as ddlTaxOptionValue11&#xD;&#xA;      ,NULL as txtAdditionalTaxAmount1&#xD;&#xA;      ,[STEP-2-B-iii] as txtStep2B&#xD;&#xA;      ,[STEP-3-AMT] as txtStep3Amount&#xD;&#xA;      ,[STEP-4-A] as txtStep4a&#xD;&#xA;      ,[STEP-4-B] as txtStep4b&#xD;&#xA;      ,[STEP-4-C] as txtStep4c&#xD;&#xA;&#x9;   ,NULL as txtPersonalExemptions&#xD;&#xA;&#x9;  ,NULL as txtAgeandBlindnessExemptions&#xD;&#xA;&#x9;  ,NULL as txtVoluntary_Withholding&#xD;&#xA;     FROM [OPUS].[dbo].[SGT_TAX_WITHHOLDING_SCREEN_CONFIGURATION]&#xD;&#xA;  WHERE [TAX_IDENTIFIER_VALUE] = @TAX_IDENTIFIER_VALUE&#xD;&#xA;  END&#xD;&#xA;IF @TAX_IDENTIFIER_VALUE &lt;&gt; 'FDRL'  AND @TAX_IDENTIFIER_VALUE &lt;&gt; 'VAST' &#xD;&#xA;  BEGIN&#xD;&#xA;&#x9;SELECT &#xD;&#xA;&#x9;[BENEFIT_DISTRIBUTION_TYPE] as ddlBenefitDistributionTypeValue1&#xD;&#xA;&#x9;,[MARITAL_STATUS] as lblmaritalstatus&#xD;&#xA;&#x9;,[FILING_STATUS] as lblfilingstatus&#xD;&#xA;    ,[TAX_ALLOWANCE] as txtTaxAllowance&#xD;&#xA;&#x9;, CASE WHEN @TAX_IDENTIFIER_VALUE = 'STAT' THEN  'Y' &#xD;&#xA;&#x9;       WHEN @TAX_IDENTIFIER_VALUE = 'ORST' THEN  'Y' ELSE NULL END AS  txtTaxPercentage&#xD;&#xA;    ,[TAX_OPTION] as ddlTaxOptionValue11&#xD;&#xA;    ,[ADDI_FLAT_TAX_AMOUNT] as txtAdditionalTaxAmount1&#xD;&#xA;    ,[STEP-2-B-iii] as txtStep2B&#xD;&#xA;    ,[STEP-3-AMT] as txtStep3Amount&#xD;&#xA;    ,[STEP-4-A] as txtStep4a&#xD;&#xA;    ,[STEP-4-B] as txtStep4b&#xD;&#xA;    ,[STEP-4-C] as txtStep4c&#xD;&#xA;&#x9;   ,NULL as txtPersonalExemptions&#xD;&#xA;&#x9;  ,NULL as txtAgeandBlindnessExemptions&#xD;&#xA;&#x9;  ,NULL as txtVoluntary_Withholding&#xD;&#xA;     FROM [OPUS].[dbo].[SGT_TAX_WITHHOLDING_SCREEN_CONFIGURATION]&#xD;&#xA;  WHERE [TAX_IDENTIFIER_VALUE] = @TAX_IDENTIFIER_VALUE&#xD;&#xA;  END&#xD;&#xA;IF @TAX_IDENTIFIER_VALUE = 'VAST' &#xD;&#xA;  BEGIN&#xD;&#xA;&#x9;SELECT &#xD;&#xA;&#x9;[BENEFIT_DISTRIBUTION_TYPE] as ddlBenefitDistributionTypeValue1&#xD;&#xA;&#x9;,null as lblmaritalstatus&#xD;&#xA;&#x9;,null as lblfilingstatus&#xD;&#xA;    ,[TAX_ALLOWANCE] as txtTaxAllowance&#xD;&#xA;    ,[TAX_PERCENTAGE]  as txtTaxPercentage&#xD;&#xA;    ,[TAX_OPTION] as ddlTaxOptionValue11&#xD;&#xA;    ,NULL as txtAdditionalTaxAmount1&#xD;&#xA;    ,[STEP-2-B-iii] as txtStep2B&#xD;&#xA;    ,[STEP-3-AMT] as txtStep3Amount&#xD;&#xA;    ,[STEP-4-A] as txtStep4a&#xD;&#xA;    ,[STEP-4-B] as txtStep4b&#xD;&#xA;    ,[STEP-4-C] as txtStep4c&#xD;&#xA;&#x9;,[PERSONAL_EXEMPTIONS] as txtPersonalExemptions&#xD;&#xA;    ,[AGE_AND_BLINDNESS_EXEMPTIONS] as txtAgeandBlindnessExemptions&#xD;&#xA;    FROM [OPUS].[dbo].[SGT_TAX_WITHHOLDING_SCREEN_CONFIGURATION]&#xD;&#xA;  WHERE [TAX_IDENTIFIER_VALUE] = @TAX_IDENTIFIER_VALUE&#xD;&#xA;  END">
      <parameters>
        <parameter ID="@TAX_IDENTIFIER_VALUE" sfwDataType="string" />
        <parameter ID="@BENDISTYPE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetStateTaxWithHoldingCalculationForGAST" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="set @MARITAL_STATUS = isnull(@MARITAL_STATUS, 'GAS')&#xD;&#xA;set @ALLOWANCE = isnull(@ALLOWANCE, 0)&#xD;&#xA;declare @DEPENDENT_ALLOWANCE UDT_INT = case when @MARITAL_STATUS in ('GAH', 'MFJO') and @ALLOWANCE &gt;= 1 then @ALLOWANCE - 1 when @MARITAL_STATUS in ('MFS', 'MFJB') and @ALLOWANCE &gt;= 2 then @ALLOWANCE - 2 else 0 end&#xD;&#xA;set @MONTHLY_GROSS_AMOUNT = @MONTHLY_GROSS_AMOUNT - @MONTHLY_EXCLUSION_AMOUNT &#xD;&#xA;&#xD;&#xA;select&#xD;&#xA;    sd.STANDARD_DEDUCTION,&#xD;&#xA;    sd.PERSONAL_ALLOWANCE_AMOUNT,&#xD;&#xA;    t1.DEPENDENT_ALLOWANCE_AMOUNT,&#xD;&#xA;    t2.TOTAL_ALLOWANCE_AMOUNT,&#xD;&#xA;    t3.TAXABLE_AMOUNT,&#xD;&#xA;    t4.SLAB_TAXABLE_AMOUNT,&#xD;&#xA;    tr.SLAB_TAX_RATE,&#xD;&#xA;    tr.BASE_TAX_AMOUNT,&#xD;&#xA;    t5.SLAB_TAX_AMOUNT,&#xD;&#xA;    t6.TAX_WITHHOLDING_AMOUNT&#xD;&#xA;from dbo.SGT_FED_STATE_DEDUCTION sd&#xD;&#xA;cross apply(&#xD;&#xA;    select max(sd.EFFECTIVE_DATE) LATEST_EFFECTIVE_DATE&#xD;&#xA;    from dbo.SGT_FED_STATE_DEDUCTION sd&#xD;&#xA;    where 1=1&#xD;&#xA;        and sd.TAX_IDENTIFIER_VALUE = 'GAST'&#xD;&#xA;        and sd.MARITAL_STATUS_VALUE = @MARITAL_STATUS&#xD;&#xA;) ed&#xD;&#xA;cross apply(select @DEPENDENT_ALLOWANCE * sd.DEPENDENT_ALLOWANCE_AMOUNT as DEPENDENT_ALLOWANCE_AMOUNT) t1&#xD;&#xA;cross apply(select sd.STANDARD_DEDUCTION + sd.PERSONAL_ALLOWANCE_AMOUNT + t1.DEPENDENT_ALLOWANCE_AMOUNT TOTAL_ALLOWANCE_AMOUNT) t2&#xD;&#xA;cross apply(select @MONTHLY_GROSS_AMOUNT - t2.TOTAL_ALLOWANCE_AMOUNT as TAXABLE_AMOUNT) t3&#xD;&#xA;cross apply(&#xD;&#xA;    select tr.PERCENTAGE SLAB_TAX_RATE, tr.TAX_AMOUNT BASE_TAX_AMOUNT, tr.MINIMUM_AMOUNT - 0.01 as BASE_TAXABLE_AMOUNT&#xD;&#xA;    from dbo.SGT_FED_STATE_TAX_RATE tr&#xD;&#xA;    where 1=1&#xD;&#xA;        and year(tr.EFFECTIVE_DATE) = year(sd.EFFECTIVE_DATE)&#xD;&#xA;        and tr.TAX_IDENTIFIER_VALUE = sd.TAX_IDENTIFIER_VALUE&#xD;&#xA;        and tr.MARITAL_STATUS_VALUE = sd.MARITAL_STATUS_VALUE&#xD;&#xA;        and t3.TAXABLE_AMOUNT between tr.MINIMUM_AMOUNT and tr.MAXIMUM_AMOUNT&#xD;&#xA;) tr&#xD;&#xA;cross apply(select t3.TAXABLE_AMOUNT - tr.BASE_TAXABLE_AMOUNT as SLAB_TAXABLE_AMOUNT) t4&#xD;&#xA;cross apply(select cast(round(t4.SLAB_TAXABLE_AMOUNT * tr.SLAB_TAX_RATE, 2) as numeric(11, 2)) as SLAB_TAX_AMOUNT) t5&#xD;&#xA;cross apply(select tr.BASE_TAX_AMOUNT + t5.SLAB_TAX_AMOUNT + @ADDITIONAL_TAX_AMOUNT as TAX_WITHHOLDING_AMOUNT) t6&#xD;&#xA;where 1=1&#xD;&#xA;    and sd.TAX_IDENTIFIER_VALUE = 'GAST'&#xD;&#xA;    and sd.EFFECTIVE_DATE = ed.LATEST_EFFECTIVE_DATE&#xD;&#xA;    and sd.MARITAL_STATUS_VALUE = @MARITAL_STATUS">
      <parameters>
        <parameter ID="@MARITAL_STATUS" sfwDataType="varchar" />
        <parameter ID="@MONTHLY_GROSS_AMOUNT" sfwDataType="decimal" />
        <parameter ID="@MONTHLY_EXCLUSION_AMOUNT" sfwDataType="decimal" />
        <parameter ID="@ADDITIONAL_TAX_AMOUNT" sfwDataType="decimal" />
        <parameter ID="@ALLOWANCE" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetStateTaxWithHoldingCalculationForORST" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="set @MONTHLY_GROSS_AMOUNT = @MONTHLY_GROSS_AMOUNT - @MONTHLY_EXCLUSION_AMOUNT &#xD;&#xA;declare @ANNUAL_GROSS_AMOUNT UDT_AMT  =  @MONTHLY_GROSS_AMOUNT * 12&#xD;&#xA;declare @ANNUAL_FED_TAX_WITHHOLDING_AMOUNT UDT_AMT  =  @MONTHLY_FED_TAX_WITHHOLDING_AMOUNT * 12&#xD;&#xA;set @ALLOWANCE = case when @MARITAL_STATUS in ('ORS', 'MSR') and @ANNUAL_GROSS_AMOUNT &gt; 100000 then 0 when @MARITAL_STATUS in ('ORM') and @ANNUAL_GROSS_AMOUNT &gt; 200000 then 0 else @ALLOWANCE end&#xD;&#xA;&#xD;&#xA;select&#xD;&#xA;    sd.STANDARD_DEDUCTION,&#xD;&#xA;    od.FED_TAX_DEDUCTION,&#xD;&#xA;    t2.TOTAL_ALLOWANCE_AMOUNT,&#xD;&#xA;    t1.TAXABLE_AMOUNT,&#xD;&#xA;    tr.BASE_TAXABLE_AMOUNT,&#xD;&#xA;    t3.SLAB_TAXABLE_AMOUNT,&#xD;&#xA;    tr.SLAB_TAX_RATE,&#xD;&#xA;    tr.BASE_TAX_AMOUNT,&#xD;&#xA;    t4.SLAB_TAX_AMOUNT,&#xD;&#xA;    t5.TAX_WITHHOLDING_AMOUNT&#xD;&#xA;from dbo.SGT_FED_STATE_DEDUCTION sd&#xD;&#xA;cross apply(&#xD;&#xA;    select max(sd.EFFECTIVE_DATE) LATEST_EFFECTIVE_DATE&#xD;&#xA;    from dbo.SGT_FED_STATE_DEDUCTION sd&#xD;&#xA;    where 1=1&#xD;&#xA;        and sd.TAX_IDENTIFIER_VALUE = 'ORST'&#xD;&#xA;    and sd.MARITAL_STATUS_VALUE = @MARITAL_STATUS&#xD;&#xA;) ed&#xD;&#xA;cross apply(&#xD;&#xA;    select case when od.FED_TAX_DEDUCTION &lt;= @ANNUAL_FED_TAX_WITHHOLDING_AMOUNT then od.FED_TAX_DEDUCTION else @ANNUAL_FED_TAX_WITHHOLDING_AMOUNT end FED_TAX_DEDUCTION&#xD;&#xA;    from dbo.SGT_ORST_OTHER_DEDUCTION od&#xD;&#xA;    where 1=1&#xD;&#xA;        and od.MARITAL_STATUS = sd.MARITAL_STATUS_VALUE&#xD;&#xA;        and @ANNUAL_GROSS_AMOUNT between od.MINIMUM_AMOUNT and od.MAXIMUM_AMOUNT&#xD;&#xA;) od&#xD;&#xA;cross apply(select @ANNUAL_GROSS_AMOUNT - od.FED_TAX_DEDUCTION - sd.STANDARD_DEDUCTION as TAXABLE_AMOUNT) t1&#xD;&#xA;cross apply(&#xD;&#xA;    select tr.ALLOWANCE_AMOUNT, tr.PERCENTAGE SLAB_TAX_RATE, tr.TAX_AMOUNT BASE_TAX_AMOUNT, tr.OFFSET_AMOUNT as BASE_TAXABLE_AMOUNT&#xD;&#xA;    from dbo.SGT_FED_STATE_TAX_RATE tr&#xD;&#xA;    where 1=1&#xD;&#xA;        and year(tr.EFFECTIVE_DATE) = year(sd.EFFECTIVE_DATE)&#xD;&#xA;        and tr.TAX_IDENTIFIER_VALUE = sd.TAX_IDENTIFIER_VALUE&#xD;&#xA;        and tr.MARITAL_STATUS_VALUE = case when @MARITAL_STATUS in ('MSR') then 'ORS' else sd.MARITAL_STATUS_VALUE end&#xD;&#xA;        and tr.ALLOWANCE = case when tr.MARITAL_STATUS_VALUE in ('ORM') then 0 when @ALLOWANCE &lt; 3 then 0 when @ALLOWANCE &gt;= 3 then 3 end&#xD;&#xA;        and t1.TAXABLE_AMOUNT between tr.MINIMUM_AMOUNT and tr.MAXIMUM_AMOUNT&#xD;&#xA;        and tr.ANNUAL_AMOUNT = case when @ANNUAL_GROSS_AMOUNT &gt;= 50000.00 then 50000.00 else 0 end&#xD;&#xA;) tr&#xD;&#xA;cross apply(select tr.ALLOWANCE_AMOUNT * @ALLOWANCE as TOTAL_ALLOWANCE_AMOUNT) t2&#xD;&#xA;cross apply(select t1.TAXABLE_AMOUNT - tr.BASE_TAXABLE_AMOUNT as SLAB_TAXABLE_AMOUNT) t3&#xD;&#xA;cross apply(select cast(round(t3.SLAB_TAXABLE_AMOUNT * tr.SLAB_TAX_RATE, 2) as numeric(11, 2)) as SLAB_TAX_AMOUNT) t4&#xD;&#xA;cross apply(select cast(round((tr.BASE_TAX_AMOUNT + t4.SLAB_TAX_AMOUNT - t2.TOTAL_ALLOWANCE_AMOUNT)/12, 2) as numeric(11, 2)) + @ADDITIONAL_TAX_AMOUNT as TAX_WITHHOLDING_AMOUNT) t5&#xD;&#xA;where 1=1&#xD;&#xA;    and sd.TAX_IDENTIFIER_VALUE = 'ORST'&#xD;&#xA;    and sd.EFFECTIVE_DATE = ed.LATEST_EFFECTIVE_DATE&#xD;&#xA;    and sd.MARITAL_STATUS_VALUE = @MARITAL_STATUS">
      <parameters>
        <parameter ID="@MARITAL_STATUS" sfwDataType="varchar" />
        <parameter ID="@MONTHLY_GROSS_AMOUNT" sfwDataType="decimal" />
        <parameter ID="@MONTHLY_FED_TAX_WITHHOLDING_AMOUNT" sfwDataType="decimal" />
        <parameter ID="@MONTHLY_EXCLUSION_AMOUNT" sfwDataType="decimal" />
        <parameter ID="@ADDITIONAL_TAX_AMOUNT" sfwDataType="decimal" />
        <parameter ID="@ALLOWANCE" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetStateTaxWithHoldingCalculationForNCST" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="set @MARITAL_STATUS = isnull(@MARITAL_STATUS, 'NCS')&#xD;&#xA;set @ALLOWANCE = isnull(@ALLOWANCE, 0)&#xD;&#xA;set @MONTHLY_GROSS_AMOUNT = @MONTHLY_GROSS_AMOUNT - @MONTHLY_EXCLUSION_AMOUNT &#xD;&#xA;declare @ANNUAL_GROSS_AMOUNT UDT_AMT  =  @MONTHLY_GROSS_AMOUNT * 12&#xD;&#xA;&#xD;&#xA;select&#xD;&#xA;    sd.STANDARD_DEDUCTION,&#xD;&#xA;    t1.TOTAL_ALLOWANCE_AMOUNT,&#xD;&#xA;    t2.TAXABLE_AMOUNT,&#xD;&#xA;    sd.FLAT_TAX_RATE,&#xD;&#xA;    t3.TAX_WITHHOLDING_AMOUNT&#xD;&#xA;from dbo.SGT_FED_STATE_DEDUCTION sd&#xD;&#xA;cross apply(&#xD;&#xA;    select max(sd.EFFECTIVE_DATE) LATEST_EFFECTIVE_DATE&#xD;&#xA;    from dbo.SGT_FED_STATE_DEDUCTION sd&#xD;&#xA;    where 1=1&#xD;&#xA;        and sd.TAX_IDENTIFIER_VALUE = 'NCST'&#xD;&#xA;        and sd.MARITAL_STATUS_VALUE = @MARITAL_STATUS&#xD;&#xA;) ed&#xD;&#xA;cross apply(select sd.ALLOWANCE_AMOUNT * @ALLOWANCE as TOTAL_ALLOWANCE_AMOUNT) t1&#xD;&#xA;cross apply(select iif(@ANNUAL_GROSS_AMOUNT - sd.STANDARD_DEDUCTION - t1.TOTAL_ALLOWANCE_AMOUNT &gt; 0, @ANNUAL_GROSS_AMOUNT - sd.STANDARD_DEDUCTION - t1.TOTAL_ALLOWANCE_AMOUNT, 0) as TAXABLE_AMOUNT) t2&#xD;&#xA;cross apply(select cast(round((t2.TAXABLE_AMOUNT * sd.FLAT_TAX_RATE)/12, 2) as numeric(11, 2)) + @ADDITIONAL_TAX_AMOUNT as TAX_WITHHOLDING_AMOUNT) t3&#xD;&#xA;where 1=1&#xD;&#xA;    and sd.TAX_IDENTIFIER_VALUE = 'NCST'&#xD;&#xA;    and sd.EFFECTIVE_DATE = ed.LATEST_EFFECTIVE_DATE&#xD;&#xA;    and sd.MARITAL_STATUS_VALUE = @MARITAL_STATUS">
      <parameters>
        <parameter ID="@MARITAL_STATUS" sfwDataType="varchar" />
        <parameter ID="@MONTHLY_GROSS_AMOUNT" sfwDataType="decimal" />
        <parameter ID="@MONTHLY_EXCLUSION_AMOUNT" sfwDataType="decimal" />
        <parameter ID="@ADDITIONAL_TAX_AMOUNT" sfwDataType="decimal" />
        <parameter ID="@ALLOWANCE" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetStateTaxWithHoldingCalculationForVAST" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="set @PERSONAL_EXEMPTIONS = isnull(@PERSONAL_EXEMPTIONS, 0)&#xD;&#xA;set @AGE_AND_BLINDNESS_EXEMPTIONS = isnull(@AGE_AND_BLINDNESS_EXEMPTIONS, 0)&#xD;&#xA;set @MONTHLY_GROSS_AMOUNT = @MONTHLY_GROSS_AMOUNT - @MONTHLY_EXCLUSION_AMOUNT &#xD;&#xA;declare @ANNUAL_GROSS_AMOUNT UDT_AMT  =  @MONTHLY_GROSS_AMOUNT * 12&#xD;&#xA;&#xD;&#xA;select &#xD;&#xA;    sd.STANDARD_DEDUCTION,&#xD;&#xA;    t1.TAXABLE_AMOUNT,&#xD;&#xA;    t2.SLAB_TAXABLE_AMOUNT,&#xD;&#xA;    tr.SLAB_TAX_RATE,&#xD;&#xA;    tr.BASE_TAX_AMOUNT,&#xD;&#xA;    t3.SLAB_TAX_AMOUNT,&#xD;&#xA;    t4.TAX_WITHHOLDING_AMOUNT&#xD;&#xA;from dbo.SGT_FED_STATE_DEDUCTION sd&#xD;&#xA;cross apply(&#xD;&#xA;    select max(sd.EFFECTIVE_DATE) LATEST_EFFECTIVE_DATE&#xD;&#xA;    from dbo.SGT_FED_STATE_DEDUCTION sd&#xD;&#xA;    where 1=1&#xD;&#xA;        and sd.TAX_IDENTIFIER_VALUE = 'VAST'&#xD;&#xA;) ed&#xD;&#xA;cross apply(select @ANNUAL_GROSS_AMOUNT - sd.STANDARD_DEDUCTION - sd.ALLOWANCE_AMOUNT * @PERSONAL_EXEMPTIONS - sd.AGE_AND_BLINDNESS_AMOUNT * @AGE_AND_BLINDNESS_EXEMPTIONS as TAXABLE_AMOUNT) t1&#xD;&#xA;cross apply(&#xD;&#xA;    select tr.PERCENTAGE SLAB_TAX_RATE, tr.TAX_AMOUNT BASE_TAX_AMOUNT, tr.MINIMUM_AMOUNT - 0.01 as BASE_TAXABLE_AMOUNT&#xD;&#xA;    from dbo.SGT_FED_STATE_TAX_RATE tr&#xD;&#xA;    where 1=1&#xD;&#xA;        and year(tr.EFFECTIVE_DATE) = year(sd.EFFECTIVE_DATE)&#xD;&#xA;        and tr.TAX_IDENTIFIER_VALUE = sd.TAX_IDENTIFIER_VALUE&#xD;&#xA;        and t1.TAXABLE_AMOUNT between tr.MINIMUM_AMOUNT and tr.MAXIMUM_AMOUNT&#xD;&#xA;) tr&#xD;&#xA;cross apply(select t1.TAXABLE_AMOUNT - tr.BASE_TAXABLE_AMOUNT as SLAB_TAXABLE_AMOUNT) t2&#xD;&#xA;cross apply(select cast(round(t2.SLAB_TAXABLE_AMOUNT * tr.SLAB_TAX_RATE, 2) as numeric(11, 2)) as SLAB_TAX_AMOUNT) t3&#xD;&#xA;cross apply(select cast(round((tr.BASE_TAX_AMOUNT + t3.SLAB_TAX_AMOUNT)/12, 2) as numeric(11, 2)) + @ADDITIONAL_TAX_AMOUNT as TAX_WITHHOLDING_AMOUNT) t4&#xD;&#xA;where 1=1&#xD;&#xA;    and sd.TAX_IDENTIFIER_VALUE = 'VAST'&#xD;&#xA;    and sd.EFFECTIVE_DATE = ed.LATEST_EFFECTIVE_DATE">
      <parameters>
        <parameter ID="@MONTHLY_GROSS_AMOUNT" sfwDataType="decimal" />
        <parameter ID="@MONTHLY_EXCLUSION_AMOUNT" sfwDataType="decimal" />
        <parameter ID="@ADDITIONAL_TAX_AMOUNT" sfwDataType="decimal" />
        <parameter ID="@PERSONAL_EXEMPTIONS" sfwDataType="int" />
        <parameter ID="@AGE_AND_BLINDNESS_EXEMPTIONS" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetFedTaxWithHoldingAmount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select &#xD;&#xA;    tw.PAYEE_ACCOUNT_ID, tw.START_DATE, wd.AMOUNT&#xD;&#xA;from dbo.SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING tw&#xD;&#xA;inner join dbo.SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING_ITEM_DETAIL wd on wd.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID = tw.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID&#xD;&#xA;where 1=1&#xD;&#xA;    and tw.TAX_IDENTIFIER_VALUE = 'FDRL'&#xD;&#xA;    and tw.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF'&#xD;&#xA;    and wd.PAYMENT_ITEM_TYPE_ID = 13&#xD;&#xA;    and tw.END_DATE is null&#xD;&#xA;    and tw.PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetStateTaxWithHoldingRequiredInfo" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="declare @STATE_TAX_IDENTIFIER UDT_CODE_VALUE = case when @STATE_CODE = 'CA' then 'STAT' else @STATE_CODE + 'ST' end&#xD;&#xA;&#xD;&#xA;select cv.CODE_VALUE WITHHOLDING_STATE_CODE, cv.DESCRIPTION WITHHOLDING_STATE_NAME, cv1.STATE_TAX_WITHHOLDING_TYPE&#xD;&#xA;from dbo.SGS_CODE_VALUE cv&#xD;&#xA;outer apply(&#xD;&#xA;    select cv1.DATA1 STATE_TAX_WITHHOLDING_TYPE&#xD;&#xA;    from dbo.SGS_CODE_VALUE cv1 &#xD;&#xA;    where 1=1&#xD;&#xA;        and cv1.CODE_ID = 7004&#xD;&#xA;        and cv1.CODE_VALUE = @STATE_TAX_IDENTIFIER&#xD;&#xA;) cv1&#xD;&#xA;where 1=1&#xD;&#xA;    and cv.CODE_ID = 150&#xD;&#xA;    and cv.CODE_VALUE = @STATE_CODE">
      <parameters>
        <parameter ID="@STATE_CODE" sfwDataType="varchar" />
      </parameters>
    </query>
    <query ID="GetStateTaxWithholding" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="IF @RunForSpecificProcessDate ='Y' &#xD;&#xA;&#xD;&#xA;BEGIN&#xD;&#xA;&#xD;&#xA;&#x9;SELECT  &#xD;&#xA;&#x9;&#x9;pac.PAYEE_ACCOUNT_ID, p.PERSON_ID, p.MPI_PERSON_ID, (p.FIRST_NAME+ ' ' + p.LAST_NAME) PAYEE_NAME, cpa.MANDATORY_WITHHOLDING_STATE, ppa.PREV_MANDATORY_WITHHOLDING_STATE,&#xD;&#xA;&#x9;&#x9;ctw.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID,CASE WHEN  ctw.TAX_IDENTIFIER_VALUE = 'STAT' THEN 'CA' ELSE ctw.TAX_IDENTIFIER_VALUE END TAX_IDENTIFIER_VALUE , ctw.AMOUNT,&#xD;&#xA;&#x9;&#x9;CASE WHEN ptw.PREV_TAX_IDENTIFIER_VALUE = 'STAT' THEN 'CA' ELSE ptw.PREV_TAX_IDENTIFIER_VALUE END AS PREV_TAX_IDENTIFIER_VALUE , ptw.PREV_AMOUNT,&#xD;&#xA;&#x9;&#x9;concat_ws(' ', cpa.ADDR_LINE_1, cpa.ADDR_LINE_2, cpa.ADDR_CITY, cpa.ADDR_STATE_VALUE, cpa.ADDR_ZIP_CODE) NEW_ADDRESS,&#xD;&#xA;&#x9;&#x9;cpa.DESCRIPTION NEW_STATE, ppa.DESCRIPTION PREVIOUS_STATE,&#xD;&#xA;&#x9;&#x9;concat_ws(' ', ppa.PREV_ADDR_LINE_1, ppa.PREV_ADDR_LINE_2, ppa.PREV_ADDR_CITY,  ppa.PREV_ADDR_STATE_VALUE, ppa.PREV_ADDR_ZIP_CODE) PREVIOUS_ADDRESS,      &#xD;&#xA;&#x9;&#x9;CASE &#xD;&#xA;&#x9;&#x9;&#x9;WHEN cpa.ADDR_STATE_VALUE ='CA' THEN 'STAT' &#xD;&#xA;&#x9;&#x9;&#x9;ELSE cpa.ADDR_STATE_VALUE+'ST'&#xD;&#xA;&#x9;&#x9;END NEWTAXIDENT,&#xD;&#xA;&#x9;&#x9;CASE &#xD;&#xA;&#x9;&#x9;&#x9;WHEN cpa.ADDR_STATE_VALUE = 'CA'  THEN 'S'&#xD;&#xA;&#x9;&#x9;&#x9;WHEN CPA.ADDR_STATE_VALUE = 'GA' THEN 'GAS'&#xD;&#xA;&#x9;&#x9;&#x9;WHEN CPA.ADDR_STATE_VALUE = 'OR' THEN 'ORS'&#xD;&#xA;&#x9;&#x9;&#x9;WHEN CPA.ADDR_STATE_VALUE = 'NC' THEN 'NCS'&#xD;&#xA;&#x9;&#x9;&#x9;WHEN CPA.ADDR_STATE_VALUE = 'VA' THEN  NULL &#xD;&#xA;&#x9;&#x9;END MARITAL_STATUS&#xD;&#xA;&#x9;from dbo.SGT_PAYEE_ACCOUNT pac&#xD;&#xA;&#x9;inner join dbo.SGT_PERSON p on p.PERSON_ID = pac.PERSON_ID&#xD;&#xA;&#x9;inner join SGT_PLAN_BENEFIT_XR XR on pac.PLAN_BENEFIT_ID = xr.PLAN_BENEFIT_ID&#xD;&#xA;&#x9;inner join SGT_PLAN pl on xr.PLAN_ID = pl.PLAN_ID and pl.PLAN_ID=2 and xr.BENEFIT_OPTION_VALUE  &lt;&gt; 'LUMP'&#xD;&#xA;&#x9;cross apply(&#xD;&#xA;&#x9;&#x9;   select top 1 with ties pas.STATUS_VALUE PAYEE_ACCOUNT_STATUS, pas.STATUS_EFFECTIVE_DATE&#xD;&#xA;&#x9;&#x9;   from dbo.SGT_PAYEE_ACCOUNT_STATUS pas&#xD;&#xA;&#x9;&#x9;   where 1=1&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  and pas.PAYEE_ACCOUNT_ID = pac.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;   order by pas.STATUS_EFFECTIVE_DATE desc&#xD;&#xA;&#x9;) pas&#xD;&#xA;&#x9;cross apply(&#xD;&#xA;&#x9;&#x9;&#x9;select top 1 with ties &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;pa.START_DATE, pa.ADDR_LINE_1, pa.ADDR_LINE_2, pa.ADDR_CITY, pa.ADDR_STATE_VALUE, pa.ADDR_ZIP_CODE,  pa.ADDR_ZIP_4_CODE, cvv.DESCRIPTION,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;case when cv.DATA1 is null then 'N' when cv.DATA1 = 'MWS' then 'Y' else 'N' end MANDATORY_WITHHOLDING_STATE, cv.CODE_VALUE TAX_IDENTIFIER_VALUE&#xD;&#xA;&#x9;&#x9;&#x9;from dbo.SGT_PERSON_ADDRESS pa&#xD;&#xA;&#x9;&#x9;&#x9;inner join dbo.SGS_CODE_VALUE cvv on pa.ADDR_STATE_VALUE = cvv.CODE_VALUE and cvv.CODE_ID =150&#xD;&#xA;&#x9;&#x9;&#x9;left join dbo.SGS_CODE_VALUE cv on case when cv.CODE_VALUE = 'STAT' then 'CA' else substring(cv.CODE_VALUE, 1, 2) end = pa.ADDR_STATE_VALUE and cv.CODE_ID = 7004&#xD;&#xA;&#x9;&#x9;&#x9;where 1=1&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;and pa.PERSON_ID = pac.PERSON_ID &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;and pa.END_DATE is null&#xD;&#xA;&#x9;&#x9;   order by pa.START_DATE desc&#xD;&#xA;&#x9;) cpa&#xD;&#xA;&#x9;cross apply(&#xD;&#xA;&#x9;&#x9;&#x9;select top 1 with ties &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;pa.ADDR_LINE_1 PREV_ADDR_LINE_1, pa.ADDR_LINE_2 PREV_ADDR_LINE_2, pa.ADDR_CITY PREV_ADDR_CITY, pa.ADDR_STATE_VALUE PREV_ADDR_STATE_VALUE,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;pa.ADDR_ZIP_CODE PREV_ADDR_ZIP_CODE,  pa.ADDR_ZIP_4_CODE PREV_ADDR_ZIP_4_CODE, cvv.DESCRIPTION,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;case when cv.DATA1 is null then 'N' when cv.DATA1 = 'MWS' then 'Y' else 'N' end PREV_MANDATORY_WITHHOLDING_STATE, cv.CODE_VALUE PREV_TAX_IDENTIFIER_VALUE&#xD;&#xA;&#x9;&#x9;&#x9;from dbo.SGT_PERSON_ADDRESS pa&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;inner join dbo.SGS_CODE_VALUE cvv on pa.ADDR_STATE_VALUE = cvv.CODE_VALUE and cvv.CODE_ID =150&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;left join dbo.SGS_CODE_VALUE cv on case when cv.CODE_VALUE = 'STAT' then 'CA' else substring(cv.CODE_VALUE, 1, 2) end = pa.ADDR_STATE_VALUE and cv.CODE_ID = 7004&#xD;&#xA;&#x9;&#x9;&#x9;where 1=1&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;and pa.PERSON_ID = pac.PERSON_ID &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;and pa.END_DATE is not null&#xD;&#xA;&#x9;&#x9;   order by pa.START_DATE desc&#xD;&#xA;&#x9;) ppa &#xD;&#xA;&#x9;outer apply(&#xD;&#xA;&#x9;&#x9;select top 1 with ties &#xD;&#xA;&#x9;&#x9;&#x9;tw.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID, tw.TAX_IDENTIFIER_VALUE, wd.AMOUNT&#xD;&#xA;&#x9;&#x9;from dbo.SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING tw&#xD;&#xA;&#x9;&#x9;left join dbo.SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING_ITEM_DETAIL wd on wd.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID = tw.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID&#xD;&#xA;&#x9;&#x9;where 1=1&#xD;&#xA;&#x9;&#x9;&#x9;and tw.PAYEE_ACCOUNT_ID = pac.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;and tw.TAX_IDENTIFIER_VALUE = cpa.TAX_IDENTIFIER_VALUE&#xD;&#xA;&#x9;&#x9;&#x9;and tw.END_DATE is null&#xD;&#xA;&#x9;&#x9;order by tw.START_DATE desc&#xD;&#xA;&#x9;) ctw&#xD;&#xA;&#x9;outer apply(&#xD;&#xA;&#x9;&#x9;select top 1 with ties &#xD;&#xA;&#x9;&#x9;&#x9;tw.TAX_IDENTIFIER_VALUE PREV_TAX_IDENTIFIER_VALUE, wd.AMOUNT PREV_AMOUNT&#xD;&#xA;&#x9;&#x9;from dbo.SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING tw&#xD;&#xA;&#x9;&#x9;left join dbo.SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING_ITEM_DETAIL wd on wd.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID = tw.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID&#xD;&#xA;&#x9;&#x9;where 1=1&#xD;&#xA;&#x9;&#x9;&#x9;and tw.PAYEE_ACCOUNT_ID = pac.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;and tw.TAX_IDENTIFIER_VALUE = ppa.PREV_TAX_IDENTIFIER_VALUE&#xD;&#xA;&#x9;&#x9;&#x9;and tw.END_DATE is not null&#xD;&#xA;&#x9;&#x9;order by tw.START_DATE desc&#xD;&#xA;&#x9;) ptw&#xD;&#xA;&#x9;cross apply(&#xD;&#xA;&#x9;&#x9;select top 1 with ties ps.PROCESS_DATE LAST_PROCESS_DATE&#xD;&#xA;&#x9;&#x9;from dbo.SGT_PAYMENT_SCHEDULE ps&#xD;&#xA;&#x9;&#x9;where 1=1&#xD;&#xA;&#x9;&#x9;&#x9;and ps.SCHEDULE_TYPE_VALUE = 'MTLY'&#xD;&#xA;&#x9;&#x9;&#x9;and ps.PROCESS_DATE is not null&#xD;&#xA;&#x9;&#x9;&#x9;and ps.status_value ='PRCD'&#xD;&#xA;&#x9;&#x9;order by ps.PAYMENT_SCHEDULE_ID desc&#xD;&#xA;&#x9;) ps&#xD;&#xA;&#x9;where 1=1&#xD;&#xA;&#x9;&#x9;and pas.PAYEE_ACCOUNT_STATUS in ('SPND', 'REVW', 'RECV', 'APRD')&#xD;&#xA;&#x9;&#x9;and cpa.ADDR_STATE_VALUE &lt;&gt; ppa.PREV_ADDR_STATE_VALUE&#xD;&#xA;&#x9;&#x9;and cpa.START_DATE &gt;= ps.LAST_PROCESS_DATE&#xD;&#xA;&#x9;&#x9;--and p.MPI_PERSON_ID = 'M01388634'&#xD;&#xA;&#x9;END&#xD;&#xA;&#xD;&#xA;ELSE&#xD;&#xA;&#xD;&#xA;BEGIN&#xD;&#xA;&#xD;&#xA;&#x9;SELECT &#xD;&#xA;&#x9;&#x9;pac.PAYEE_ACCOUNT_ID, p.PERSON_ID, p.MPI_PERSON_ID, (p.FIRST_NAME+ ' ' + p.LAST_NAME) PAYEE_NAME, cpa.MANDATORY_WITHHOLDING_STATE, ppa.PREV_MANDATORY_WITHHOLDING_STATE,&#xD;&#xA;&#x9;&#x9;ctw.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID,CASE WHEN  ctw.TAX_IDENTIFIER_VALUE = 'STAT' THEN 'CA' ELSE ctw.TAX_IDENTIFIER_VALUE END TAX_IDENTIFIER_VALUE , ctw.AMOUNT,&#xD;&#xA;&#x9;&#x9;CASE WHEN ptw.PREV_TAX_IDENTIFIER_VALUE = 'STAT' THEN 'CA' ELSE ptw.PREV_TAX_IDENTIFIER_VALUE END AS PREV_TAX_IDENTIFIER_VALUE , ptw.PREV_AMOUNT,&#xD;&#xA;&#x9;&#x9;concat_ws(' ', cpa.ADDR_LINE_1, cpa.ADDR_LINE_2, cpa.ADDR_CITY, cpa.ADDR_STATE_VALUE, cpa.ADDR_ZIP_CODE) NEW_ADDRESS,&#xD;&#xA;&#x9;&#x9;cpa.DESCRIPTION NEW_STATE, ppa.DESCRIPTION PREVIOUS_STATE,&#xD;&#xA;&#x9;&#x9;concat_ws(' ', ppa.PREV_ADDR_LINE_1, ppa.PREV_ADDR_LINE_2, ppa.PREV_ADDR_CITY,  ppa.PREV_ADDR_STATE_VALUE, ppa.PREV_ADDR_ZIP_CODE) PREVIOUS_ADDRESS,      &#xD;&#xA;&#x9;&#x9;CASE &#xD;&#xA;&#x9;&#x9;&#x9;WHEN cpa.ADDR_STATE_VALUE ='CA' THEN 'STAT' &#xD;&#xA;&#x9;&#x9;&#x9;ELSE cpa.ADDR_STATE_VALUE+'ST'&#xD;&#xA;&#x9;&#x9;END NEWTAXIDENT,&#xD;&#xA;&#x9;&#x9;CASE &#xD;&#xA;&#x9;&#x9;&#x9;WHEN cpa.ADDR_STATE_VALUE = 'CA'  THEN 'S'&#xD;&#xA;&#x9;&#x9;&#x9;WHEN CPA.ADDR_STATE_VALUE = 'GA' THEN 'GAS'&#xD;&#xA;&#x9;&#x9;&#x9;WHEN CPA.ADDR_STATE_VALUE = 'OR' THEN 'ORS'&#xD;&#xA;&#x9;&#x9;&#x9;WHEN CPA.ADDR_STATE_VALUE = 'NC' THEN 'NCS'&#xD;&#xA;&#x9;&#x9;&#x9;WHEN CPA.ADDR_STATE_VALUE = 'VA' THEN  NULL &#xD;&#xA;&#x9;&#x9;END MARITAL_STATUS&#xD;&#xA;&#x9;from dbo.SGT_PAYEE_ACCOUNT pac&#xD;&#xA;&#x9;inner join dbo.SGT_PERSON p on p.PERSON_ID = pac.PERSON_ID&#xD;&#xA;&#x9;inner join SGT_PLAN_BENEFIT_XR XR on pac.PLAN_BENEFIT_ID = xr.PLAN_BENEFIT_ID&#xD;&#xA;&#x9;inner join SGT_PLAN pl on xr.PLAN_ID = pl.PLAN_ID and pl.PLAN_ID=2 and xr.BENEFIT_OPTION_VALUE  &lt;&gt; 'LUMP'&#xD;&#xA;&#x9;cross apply(&#xD;&#xA;&#x9;&#x9;   select top 1 with ties pas.STATUS_VALUE PAYEE_ACCOUNT_STATUS, pas.STATUS_EFFECTIVE_DATE&#xD;&#xA;&#x9;&#x9;   from dbo.SGT_PAYEE_ACCOUNT_STATUS pas&#xD;&#xA;&#x9;&#x9;   where 1=1&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  and pas.PAYEE_ACCOUNT_ID = pac.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;   order by pas.STATUS_EFFECTIVE_DATE desc&#xD;&#xA;&#x9;) pas&#xD;&#xA;&#x9;cross apply(&#xD;&#xA;&#x9;&#x9;&#x9;select top 1 with ties &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;pa.START_DATE, pa.ADDR_LINE_1, pa.ADDR_LINE_2, pa.ADDR_CITY, pa.ADDR_STATE_VALUE, pa.ADDR_ZIP_CODE,  pa.ADDR_ZIP_4_CODE, cvv.DESCRIPTION,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;case when cv.DATA1 is null then 'N' when cv.DATA1 = 'MWS' then 'Y' else 'N' end MANDATORY_WITHHOLDING_STATE, cv.CODE_VALUE TAX_IDENTIFIER_VALUE&#xD;&#xA;&#x9;&#x9;&#x9;from dbo.SGT_PERSON_ADDRESS pa&#xD;&#xA;&#x9;&#x9;&#x9;inner join dbo.SGS_CODE_VALUE cvv on pa.ADDR_STATE_VALUE = cvv.CODE_VALUE and cvv.CODE_ID =150&#xD;&#xA;&#x9;&#x9;&#x9;left join dbo.SGS_CODE_VALUE cv on case when cv.CODE_VALUE = 'STAT' then 'CA' else substring(cv.CODE_VALUE, 1, 2) end = pa.ADDR_STATE_VALUE and cv.CODE_ID = 7004&#xD;&#xA;&#x9;&#x9;&#x9;where 1=1&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;and pa.PERSON_ID = pac.PERSON_ID &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;and pa.END_DATE is null&#xD;&#xA;&#x9;&#x9;   order by pa.START_DATE desc&#xD;&#xA;&#x9;) cpa&#xD;&#xA;&#x9;cross apply(&#xD;&#xA;&#x9;&#x9;&#x9;select top 1 with ties &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;pa.ADDR_LINE_1 PREV_ADDR_LINE_1, pa.ADDR_LINE_2 PREV_ADDR_LINE_2, pa.ADDR_CITY PREV_ADDR_CITY, pa.ADDR_STATE_VALUE PREV_ADDR_STATE_VALUE,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;pa.ADDR_ZIP_CODE PREV_ADDR_ZIP_CODE,  pa.ADDR_ZIP_4_CODE PREV_ADDR_ZIP_4_CODE, cvv.DESCRIPTION,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;case when cv.DATA1 is null then 'N' when cv.DATA1 = 'MWS' then 'Y' else 'N' end PREV_MANDATORY_WITHHOLDING_STATE, cv.CODE_VALUE PREV_TAX_IDENTIFIER_VALUE&#xD;&#xA;&#x9;&#x9;&#x9;from dbo.SGT_PERSON_ADDRESS pa&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;inner join dbo.SGS_CODE_VALUE cvv on pa.ADDR_STATE_VALUE = cvv.CODE_VALUE and cvv.CODE_ID =150&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;left join dbo.SGS_CODE_VALUE cv on case when cv.CODE_VALUE = 'STAT' then 'CA' else substring(cv.CODE_VALUE, 1, 2) end = pa.ADDR_STATE_VALUE and cv.CODE_ID = 7004&#xD;&#xA;&#x9;&#x9;&#x9;where 1=1&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;and pa.PERSON_ID = pac.PERSON_ID &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;and pa.END_DATE is not null&#xD;&#xA;&#x9;&#x9;   order by pa.START_DATE desc&#xD;&#xA;&#x9;) ppa &#xD;&#xA;&#x9;outer apply(&#xD;&#xA;&#x9;&#x9;select top 1 with ties &#xD;&#xA;&#x9;&#x9;&#x9;tw.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID, tw.TAX_IDENTIFIER_VALUE, wd.AMOUNT&#xD;&#xA;&#x9;&#x9;from dbo.SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING tw&#xD;&#xA;&#x9;&#x9;left join dbo.SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING_ITEM_DETAIL wd on wd.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID = tw.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID&#xD;&#xA;&#x9;&#x9;where 1=1&#xD;&#xA;&#x9;&#x9;&#x9;and tw.PAYEE_ACCOUNT_ID = pac.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;and tw.TAX_IDENTIFIER_VALUE = cpa.TAX_IDENTIFIER_VALUE&#xD;&#xA;&#x9;&#x9;&#x9;and tw.END_DATE is null&#xD;&#xA;&#x9;&#x9;order by tw.START_DATE desc&#xD;&#xA;&#x9;) ctw&#xD;&#xA;&#x9;outer apply(&#xD;&#xA;&#x9;&#x9;select top 1 with ties &#xD;&#xA;&#x9;&#x9;&#x9;tw.TAX_IDENTIFIER_VALUE PREV_TAX_IDENTIFIER_VALUE, wd.AMOUNT PREV_AMOUNT&#xD;&#xA;&#x9;&#x9;from dbo.SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING tw&#xD;&#xA;&#x9;&#x9;left join dbo.SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING_ITEM_DETAIL wd on wd.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID = tw.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID&#xD;&#xA;&#x9;&#x9;where 1=1&#xD;&#xA;&#x9;&#x9;&#x9;and tw.PAYEE_ACCOUNT_ID = pac.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;and tw.TAX_IDENTIFIER_VALUE = ppa.PREV_TAX_IDENTIFIER_VALUE&#xD;&#xA;&#x9;&#x9;&#x9;and tw.END_DATE is not null&#xD;&#xA;&#x9;&#x9;order by tw.START_DATE desc&#xD;&#xA;&#x9;) ptw&#xD;&#xA;&#x9;cross apply(&#xD;&#xA;&#x9;&#x9;select top 1 with ties ps.PROCESS_DATE LAST_PROCESS_DATE&#xD;&#xA;&#x9;&#x9;from dbo.SGT_PAYMENT_SCHEDULE ps&#xD;&#xA;&#x9;&#x9;where 1=1&#xD;&#xA;&#x9;&#x9;&#x9;and ps.SCHEDULE_TYPE_VALUE = 'MTLY'&#xD;&#xA;&#x9;&#x9;&#x9;and ps.PROCESS_DATE is not null&#xD;&#xA;&#x9;&#x9;&#x9;and ps.status_value ='PRCD'&#xD;&#xA;&#x9;&#x9;order by ps.PAYMENT_SCHEDULE_ID desc&#xD;&#xA;&#x9;) ps&#xD;&#xA;&#x9;where 1=1&#xD;&#xA;&#x9;&#x9;and pas.PAYEE_ACCOUNT_STATUS in ('SPND', 'REVW', 'RECV', 'APRD')&#xD;&#xA;&#x9;&#x9;and cpa.ADDR_STATE_VALUE &lt;&gt; ppa.PREV_ADDR_STATE_VALUE&#xD;&#xA;&#x9;    AND pac.PAYEE_ACCOUNT_ID  = case when @RunFromTempTable = 'Y' then  (SELECT&#xD;&#xA;&#x9; PAYEE_ACCOUNT_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; dbo.TEMP_TABLE_FOR_STATE_TAX_BATCH &#xD;&#xA;WHERE&#xD;&#xA;&#x9; PAYEE_ACCOUNT_ID = pac.PAYEE_ACCOUNT_ID) &#xD;&#xA;&#x9; else pac.PAYEE_ACCOUNT_ID end &#xD;&#xA;&#x9; order by pac.PAYEE_ACCOUNT_ID&#xD;&#xA;END">
      <parameters>
        <parameter ID="@RunForSpecificProcessDate" sfwDataType="string" />
        <parameter ID="@RunFromTempTable" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="DeleteTempTableForStateTax" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Delete from TEMP_TABLE_FOR_STATE_TAX_BATCH">
      <parameters />
    </query>
  </queries>
  <attributes>
    <attribute sfwValue="payee_account_tax_withholding_id" sfwType="Column" sfwKeyNo="1" sfwIsIdentity="True" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="PayeeAccountTaxWithholdingId" sfwIsSequence="False" sfwCaption="ID" />
    <attribute sfwValue="payee_account_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="PayeeAccountId" sfwIsSequence="False" sfwCaption="Payee Account Id" />
    <attribute sfwType="Description" ID="TaxIdentifierDescription" sfwCaption="Tax Identifier" sfwValue="tax_identifier_description" />
    <attribute sfwValue="tax_identifier_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="TaxIdentifierId" sfwCodeID="7004" sfwIsSequence="False" sfwCaption="Tax Identifier" />
    <attribute sfwValue="tax_identifier_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="TaxIdentifierValue" sfwIsSequence="False" sfwCaption="Tax Identifier" />
    <attribute sfwType="Description" ID="BenefitDistributionTypeDescription" sfwCaption="Benefit Distribution Type" sfwValue="benefit_distribution_type_description" />
    <attribute sfwValue="benefit_distribution_type_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="BenefitDistributionTypeId" sfwCodeID="7005" sfwIsSequence="False" sfwCaption="Benefit Distribution Type" />
    <attribute sfwValue="benefit_distribution_type_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="BenefitDistributionTypeValue" sfwIsSequence="False" sfwCaption="Benefit Distribution Type" />
    <attribute sfwValue="start_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="StartDate" sfwIsSequence="False" sfwCaption="Start Date" />
    <attribute sfwValue="end_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="EndDate" sfwIsSequence="False" sfwCaption="End Date" />
    <attribute sfwType="Description" ID="TaxOptionDescription" sfwCaption="Tax Option" sfwValue="tax_option_description" />
    <attribute sfwValue="tax_option_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="TaxOptionId" sfwCodeID="7006" sfwIsSequence="False" sfwCaption="Tax Option" />
    <attribute sfwValue="tax_option_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="TaxOptionValue" sfwIsSequence="False" sfwCaption="Tax Option" />
    <attribute sfwValue="tax_allowance" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="TaxAllowance" sfwIsSequence="False" sfwCaption="Tax Allowance" />
    <attribute sfwType="Description" ID="MaritalStatusDescription" sfwCaption="Marital Status" sfwValue="marital_status_description" />
    <attribute sfwValue="marital_status_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="MaritalStatusId" sfwCodeID="7032" sfwIsSequence="False" sfwCaption="Marital Status" />
    <attribute sfwValue="marital_status_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="MaritalStatusValue" sfwIsSequence="False" sfwCaption="Marital Status" />
    <attribute sfwValue="additional_tax_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="AdditionalTaxAmount" sfwIsSequence="False" sfwCaption="Additional Tax Amount" />
    <attribute sfwValue="created_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="CreatedBy" sfwIsSequence="False" sfwCaption="Created By" />
    <attribute sfwValue="created_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="CreatedDate" sfwIsSequence="False" sfwCaption="Created Date" />
    <attribute sfwValue="modified_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="ModifiedBy" sfwIsSequence="False" sfwCaption="Modified By" />
    <attribute sfwValue="modified_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="ModifiedDate" sfwIsSequence="False" sfwCaption="Modified Date" />
    <attribute sfwValue="update_seq" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="UpdateSeq" sfwIsSequence="False" sfwCaption="Update Seq" />
    <attribute sfwValue="tax_percentage" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="7,4" sfwIsNull="True" ID="TaxPercentage" sfwIsSequence="False" sfwCaption="Tax Percentage" />
    <attribute sfwValue="step_2_b_3" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="Step2B3" sfwIsSequence="False" sfwCaption="Step 2 B 3" />
    <attribute sfwValue="step_3_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="Step3Amount" sfwIsSequence="False" sfwCaption="Step 3 Amount" />
    <attribute sfwValue="step_4_a" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="Step4A" sfwIsSequence="False" sfwCaption="Step 4 A" />
    <attribute sfwValue="step_4_b" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="Step4B" sfwIsSequence="False" sfwCaption="Step 4 B" />
    <attribute sfwValue="step_4_c" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="Step4C" sfwIsSequence="False" sfwCaption="Step 4 C" />
    <attribute sfwValue="personal_exemptions" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="PersonlExemption" sfwIsSequence="False" sfwCaption="PersonlExemption" />
    <attribute sfwValue="age_and_blindness_exemptions" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="AgeandBlindnessExemptions" sfwIsSequence="False" sfwCaption="AgeandBlindnessExemptions" />
    <attribute sfwValue="voluntary_withholding" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="Voluntary_Withholding" sfwIsSequence="False" sfwCaption="Voluntary_Withholding" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecCalculatedTaxAmount" sfwValue="icdoPayeeAccountTaxWithholding.idecCalculatedTaxAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMonthlyGrossAmount" sfwValue="idecMonthlyGrossAmount" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrTaxYear" sfwValue="istrTaxYear" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecExclusionAmount" sfwValue="idecExclusionAmount" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrFedStatus" sfwValue="istrFedStatus" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrStateStatus" sfwValue="istrStateStatus" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrMtlStatus" sfwValue="istrMtlStatus" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintFedAllowanceNumber" sfwValue="iintFedAllowanceNumber" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintStateAllowanceNumber" sfwValue="iintStateAllowanceNumber" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecFedAdditionalTaxAmount" sfwValue="idecFedAdditionalTaxAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecStateAdditionalTaxAmount" sfwValue="idecStateAdditionalTaxAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecFedExemptionAmount" sfwValue="idecFedExemptionAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecStateTaxAmount" sfwValue="idecStateTaxAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecAmtWithHolding" sfwValue="idecAmtWithHolding" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecStateAmtWithHolding" sfwValue="idecStateAmtWithHolding" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecFerdralTaxAmount" sfwValue="idecFerdralTaxAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTaxAmount" sfwValue="idecTaxAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecStatePTaxAmount" sfwValue="idecStatePTaxAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecFedTaxRateAmount" sfwValue="idecFedTaxRateAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecFedPercentage" sfwValue="idecFedPercentage" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecFedNewAdjustableTaxableAmount" sfwValue="idecFedNewAdjustableTaxableAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecStatePercentage" sfwValue="idecStatePercentage" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecStatePNewAdjustableTaxableAmount" sfwValue="idecStatePNewAdjustableTaxableAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecStateExemptionAmount" sfwValue="idecStateExemptionAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecFedFinalTaxAmount" sfwValue="idecFedFinalTaxAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecStatePFinalTaxAmount" sfwValue="idecStatePFinalTaxAmount" />
    <attribute ID="IdecStep2b3" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecStep2b3" sfwType="Property" />
    <attribute ID="IdecStep4C" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecStep4C" sfwType="Property" />
    <attribute ID="IdecStep3" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecStep3" sfwType="Property" />
    <attribute ID="IdecStep4A" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecStep4A" sfwType="Property" />
    <attribute ID="IdecStep4B" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecStep4B" sfwType="Property" />
    <attribute sfwDataType="int" sfwType="Property" ID="Iintpersonal_exemptions" sfwValue="iintpersonal_exemptions" />
    <attribute sfwDataType="int" sfwType="Property" ID="Iintage_and_blindness_exemptions" sfwValue="iintage_and_blindness_exemptions" />
    <attribute ID="Idecvoluntary_withholding" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecvoluntary_withholding" sfwType="Property" />
  </attributes>
  <objectmethods>
    <method ID="btn_CalculatingTaxWithHolding" sfwReturnType="ArrayList" />
    <method ID="GetTaxIdentifierStatesandFedral" sfwReturnType="Collection" sfwEntity="entCodeValue">
      <parameters />
    </method>
  </objectmethods>
  <constraint />
  <methods />
  <lifecycle />
  <ExtraFields />
</entity>