<entity asp="ASPControl" swc="SagitecWebControls" xsi="http://www.w3.org/2001/XMLSchema-instance" di="http://www.omg.org/spec/DD/20100524/DI" bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" dc="http://www.omg.org/spec/DD/20100524/DC" semantic="http://www.omg.org/spec/BPMN/20100524/MODEL" ID="entBpmActivityInstance" sfwMainCDO="icdoBpmActivityInstance" sfwType="BusinessRule" sfwActive="True" sfwStatus="Review" sfwObjectID="busBpmActivityInstance" sfwTableName="sgw_bpm_activity_instance" sfwView="False" sfwDataObjectID="doBpmActivityInstance">
  <rules>
    <rule ID="IsActivityInstanceInProgressStatus" sfwExpression="((this.icdoBpmActivityInstance.status_value == &quot;INPC&quot;) || &#xA;(this.icdoBpmActivityInstance.status_value == &quot;RESU&quot;))" sfwObjectBased="True" />
    <rule ID="VisibleReturnButton" sfwExpression="True" sfwObjectBased="True" />
    <rule ID="VisibleCancelButton" sfwExpression="!(this.icdoBpmActivityInstance.status_value == &quot;PROC&quot;) &amp;&amp; &#xA;((this.icdoBpmActivityInstance.status_value == &quot;INPC&quot;) || &#xA;(this.icdoBpmActivityInstance.status_value == &quot;SUSP&quot;) || &#xA;(this.icdoBpmActivityInstance.status_value == &quot;RESU&quot;))" sfwObjectBased="True" />
    <rule ID="VisibleCheckoutButton" sfwExpression="!(this.icdoBpmActivityInstance.status_value == &quot;PROC&quot;) &amp;&amp; &#xA;((this.icdoBpmActivityInstance.status_value == &quot;UNPC&quot;) || &#xA;(this.icdoBpmActivityInstance.status_value == &quot;RTRN&quot;) ||&#xA;(this.icdoBpmActivityInstance.status_value == &quot;RELE&quot;))" sfwObjectBased="True" />
    <rule ID="VisibleCompleteButton" sfwExpression="!(this.icdoBpmActivityInstance.status_value == &quot;PROC&quot;) &amp;&amp; &#xD;&#xA;((this.icdoBpmActivityInstance.status_value == &quot;INPC&quot;) || &#xD;&#xA;(this.icdoBpmActivityInstance.status_value == &quot;RESU&quot;))" sfwObjectBased="True" />
    <rule ID="VisibleRegerateButton" sfwExpression="((this.icdoBpmActivityInstance.status_value == &quot;INPC&quot;) || (this.icdoBpmActivityInstance.status_value == &quot;RESU&quot;))" sfwObjectBased="True" />
    <rule ID="VisibleReleaseButton" sfwExpression="!(this.icdoBpmActivityInstance.status_value == &quot;PROC&quot;) &amp;&amp; &#xA;((this.icdoBpmActivityInstance.status_value == &quot;INPC&quot;) || &#xA;(this.icdoBpmActivityInstance.status_value == &quot;RESU&quot;))" sfwObjectBased="True" />
    <rule ID="VisibleResumeButton" sfwExpression="(this.icdoBpmActivityInstance.status_value == &quot;SUSP&quot;) &amp;&amp; &#xA;!(this.icdoBpmActivityInstance.status_value == &quot;PROC&quot;)" sfwObjectBased="True" />
    <rule ID="IsNoteExist" sfwExpression="(!string.IsNullOrEmpty(this.istrNewNotes))" sfwObjectBased="True" />
    <rule ID="VisibleReturnToAuditButton" sfwExpression="(&quot;Y&quot; == &quot;Y&quot;) &amp;&amp; &#xA;((this.icdoBpmActivityInstance.status_value == &quot;INPC&quot;) || &#xA;(this.icdoBpmActivityInstance.status_value == &quot;RESU&quot;)) &amp;&amp; &#xA;(True)" sfwObjectBased="True" />
    <rule ID="VisibleSendButton" sfwExpression="True" sfwObjectBased="True" />
    <rule ID="VisibleSuspendButton" sfwExpression="!(this.icdoBpmActivityInstance.status_value == &quot;PROC&quot;) &amp;&amp; &#xA;((this.icdoBpmActivityInstance.status_value == &quot;INPC&quot;) || &#xA;(this.icdoBpmActivityInstance.status_value == &quot;RESU&quot;))" sfwObjectBased="True" />
    <rule ID="VisibleCompleteLink" sfwRuleType="Validation" sfwExpression="(this.ibusBpmActivity != null &amp;&amp; this.ibusBpmActivity.icdoBpmActivity.activity_type_value == &quot;MATK&quot; &amp;&amp; this.icdoBpmActivityInstance.status_value == &quot;INPC&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleLaunchLink" sfwRuleType="Validation" sfwExpression="!String.IsNullOrEmpty(this.icdoBpmActivityInstance.checked_out_user) &amp;&amp; (this.icdoBpmActivityInstance.status_value == &quot;INPC&quot; || this.icdoBpmActivityInstance.status_value == &quot;RESU&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleCheckoutLink" sfwRuleType="Validation" sfwExpression="String.IsNullOrEmpty(this.icdoBpmActivityInstance.checked_out_user)" sfwObjectBased="True" />
    <rule ID="VisibleProcessHistoryTab" sfwRuleType="Validation" sfwExpression="False" sfwObjectBased="True" />
  </rules>
  <delete>
    <property ID="lstBpmActivityInstanceUsers" sfwMethodName="LoadBpmActivityInstanceEligibleUsers" />
    <property ID="lstBpmProcessInstanceAttachments" />
    <property ID="lstBpmEscalationInstances" sfwMethodName="LoadBpmEscalationInstances" />
    <property ID="lstbpmTimerActivityInstanceDetails" sfwMethodName="LoadTimerActivityInstances" />
  </delete>
  <checklist />
  <initialload>
    <item ID="IsNoteExist" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleCheckoutButton" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleSuspendButton" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleReleaseButton" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleReturnToAuditButton" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleCancelButton" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleCompleteButton" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleResumeButton" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleReturnButton" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRegerateButton" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleSendButton" sfwMode="All" sfwStatus="Active" />
    <item ID="IsActivityInstanceInProgressStatus" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleCompleteLink" sfwStatus="Active" sfwMode="All" />
    <item ID="VisibleProcessHistoryTab" sfwStatus="Active" sfwMode="All" />
  </initialload>
  <softerror />
  <harderror />
  <validatedelete />
  <groupslist />
  <updateablecdo />
  <commonproperties />
  <expressionfields />
  <reference />
  <rulelist />
  <conditionlist />
  <compoundconditionlist />
  <Constraint />
  <constraint />
  <queries>
    <query ID="MyBasketBaseQuery" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT TOP 300 SA.PROCESS_ID, SA.NAME,SA.ACTIVITY_TYPE_VALUE, SAI.*,&#xD;&#xA;SPI.PROCESS_INSTANCE_ID,PMI.PERSON_ID,PMI.ORG_ID,&#xD;&#xA;P.PERSON_ID,P.FIRST_NAME,P.LAST_NAME,P.MIDDLE_NAME, O.ORG_NAME, O.MPI_ORG_ID ,&#xD;&#xA;SP.DESCRIPTION AS PROCESS_DESCRIPTION,&#xD;&#xA;SP.NAME AS PROCESS_NAME,&#xD;&#xA;CV.DESCRIPTION AS SOURCE_DESCRIPTION, SWR.PERSON_ID,&#xD;&#xA;(CASE&#xD;&#xA;&#x9;&#x9;WHEN SAI.DUE_DATE IS NULL THEN 1&#xD;&#xA;&#x9;&#x9;ELSE 0&#xD;&#xA;&#x9;END) NULLS_LAST&#xD;&#xA;FROM SGW_BPM_ACTIVITY_INSTANCE SAI WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGW_BPM_PROCESS_INSTANCE AS SPI WITH(NOLOCK) ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID&#xD;&#xA;INNER JOIN SGW_BPM_PROCESS AS SP WITH(NOLOCK) ON SPI.PROCESS_ID = SP.PROCESS_ID&#xD;&#xA;INNER JOIN SGW_BPM_ACTIVITY AS SA WITH(NOLOCK) ON SPI.PROCESS_ID = SA.PROCESS_ID AND SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND SA.ACTIVITY_TYPE_VALUE = 'USTK'&#xD;&#xA;INNER JOIN SGW_BPM_case_INSTANCE AS PMI ON PMI.case_INSTANCE_ID = SPI.case_INSTANCE_ID&#xD;&#xA;INNER JOIN SGW_BPM_REQUEST SWR WITH(NOLOCK) ON PMI.REQUEST_ID = SWR.REQUEST_ID&#xD;&#xA;LEFT JOIN SGT_PERSON P WITH(NOLOCK) ON P.PERSON_ID = PMI.PERSON_ID&#xD;&#xA;LEFT JOIN SGT_ORGANIZATION O WITH(NOLOCK) ON O.ORG_ID = PMI.ORG_ID&#xD;&#xA;INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON SWR.SOURCE_ID = CV.CODE_ID AND SWR.SOURCE_VALUE = CV.CODE_VALUE&#xD;&#xA;ORDER BY NULLS_LAST, SAI.DUE_DATE ASC" sfwOracle="SELECT DISTINCT SA.PROCESS_ID, SA.NAME,SA.ACTIVITY_TYPE_VALUE, SAI.*,&#xD;&#xA;                SPI.PROCESS_INSTANCE_ID,PMI.PERSON_ID,PMI.ORG_ID, &#xD;&#xA;                P.PERSON_ID,P.FIRST_NAME,P.LAST_NAME,P.MIDDLE_NAME,  O.ORG_NAME, O.ORG_CODE ,&#xD;&#xA;                SP.DESCRIPTION AS PROCESS_DESCRIPTION,&#xD;&#xA;                SP.NAME AS PROCESS_NAME,&#xD;&#xA;                CV.DESCRIPTION AS SOURCE_DESCRIPTION, SWR.PERSON_ID&#xD;&#xA;  FROM SGW_BPM_ACTIVITY_INSTANCE SAI  &#xD;&#xA; INNER JOIN SGW_BPM_PROCESS_INSTANCE  SPI   ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID &#xD;&#xA; INNER JOIN SGW_BPM_PROCESS  SP   ON SPI.PROCESS_ID = SP.PROCESS_ID &#xD;&#xA; INNER JOIN SGW_BPM_ACTIVITY  SA   ON SPI.PROCESS_ID = SA.PROCESS_ID AND SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND SA.ACTIVITY_TYPE_VALUE = 'USTK'&#xD;&#xA; INNER JOIN SGW_BPM_case_INSTANCE  PMI ON PMI.case_INSTANCE_ID = SPI.case_INSTANCE_ID&#xD;&#xA; INNER JOIN SGW_BPM_REQUEST SWR   ON PMI.REQUEST_ID = SWR.REQUEST_ID&#xD;&#xA;  LEFT JOIN SGT_PERSON P   ON P.PERSON_ID = PMI.PERSON_ID&#xD;&#xA;  LEFT JOIN SGT_ORGANIZATION O   ON O.ORG_ID = PMI.ORG_ID&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV   ON SWR.SOURCE_ID = CV.CODE_ID AND SWR.SOURCE_VALUE = CV.CODE_VALUE where  rownum &lt;= 300&#xD;&#xA; ORDER BY SAI.DUE_DATE ASC NULLS LAST" sfwPostgre="SELECT&#xD;&#xA;DISTINCT sa.process_id,&#xD;&#xA;sa.name,&#xD;&#xA;sa.activity_type_value,&#xD;&#xA;sai.*,&#xD;&#xA;spi.process_instance_id,&#xD;&#xA;pmi.person_id,&#xD;&#xA;pmi.org_id,&#xD;&#xA;p.person_id,&#xD;&#xA;p.first_name,&#xD;&#xA;p.last_name,&#xD;&#xA;p.middle_name,&#xD;&#xA;o.org_name,&#xD;&#xA;o.org_code,&#xD;&#xA;sp.description AS process_description,&#xD;&#xA;sp.name AS process_name,&#xD;&#xA;cv.description AS source_description,&#xD;&#xA;swr.person_id&#xD;&#xA;FROM&#xD;&#xA;dbo.sgw_bpm_activity_instance AS sai&#xD;&#xA;INNER&#xD;&#xA;JOIN dbo.sgw_bpm_process_instance AS spi&#xD;&#xA;ON sai.process_instance_id = spi.process_instance_id&#xD;&#xA;INNER&#xD;&#xA;JOIN dbo.sgw_bpm_process AS sp&#xD;&#xA;ON spi.process_id = sp.process_id&#xD;&#xA;INNER&#xD;&#xA;JOIN dbo.sgw_bpm_activity AS sa&#xD;&#xA;ON spi.process_id = sa.process_id AND&#xD;&#xA;sai.activity_id = sa.activity_id AND&#xD;&#xA;sa.activity_type_value = 'USTK'&#xD;&#xA;INNER&#xD;&#xA;JOIN dbo.sgw_bpm_case_instance AS pmi&#xD;&#xA;ON pmi.case_instance_id = spi.case_instance_id&#xD;&#xA;INNER&#xD;&#xA;JOIN dbo.sgw_bpm_request AS swr&#xD;&#xA;ON pmi.request_id = swr.request_id&#xD;&#xA;LEFT OUTER JOIN dbo.sgt_person AS p&#xD;&#xA;ON p.person_id = pmi.person_id&#xD;&#xA;LEFT OUTER JOIN dbo.sgt_organization AS o&#xD;&#xA;ON o.org_id = pmi.org_id&#xD;&#xA;INNER&#xD;&#xA;JOIN dbo.sgs_code_value AS cv&#xD;&#xA;ON swr.source_id = cv.code_id AND&#xD;&#xA;swr.source_value = cv.code_value&#xD;&#xA;ORDER BY SAI.DUE_DATE ASC NULLS LAST">
      <parameters />
    </query>
    <query ID="UserRole" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; SUR.*,&#xA;&#x9;USR.USER_ID   &#xA;FROM&#xA;&#x9; SGS_USER_ROLES SUR WITH(NOLOCK) ,&#xA;&#x9;SGS_USER USR WITH(NOLOCK)  &#xA;WHERE&#xA;&#x9; USR.USER_SERIAL_ID = SUR.USER_SERIAL_ID   AND&#xA;&#x9;       ((EFFECTIVE_START_DATE IS NULL) OR        (EFFECTIVE_START_DATE &lt; =  GETDATE() AND&#xA;&#x9; EFFECTIVE_END_DATE IS NULL) OR       (GETDATE() BETWEEN EFFECTIVE_START_DATE AND&#xA;&#x9; EFFECTIVE_END_DATE))" sfwOracle="SELECT&#xD;&#xA;&#x9; SUR.*,&#xD;&#xA;&#x9;USR.USER_ID   &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGS_USER_ROLES SUR  ,&#xD;&#xA;&#x9;SGS_USER USR   &#xD;&#xA;WHERE&#xD;&#xA;&#x9; USR.USER_SERIAL_ID = SUR.USER_SERIAL_ID   AND&#xD;&#xA;&#x9;       ((EFFECTIVE_START_DATE IS NULL) OR        (EFFECTIVE_START_DATE &lt; =  UDF_GETAPPLICATIONDATE() AND&#xD;&#xA;&#x9; EFFECTIVE_END_DATE IS NULL) OR       (UDF_GETAPPLICATIONDATE() BETWEEN EFFECTIVE_START_DATE AND&#xD;&#xA;&#x9; EFFECTIVE_END_DATE))" sfwPostgre="SELECT&#xD;&#xA;&#x9; SUR.*,&#xD;&#xA;&#x9;USR.USER_ID   &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGS_USER_ROLES SUR  ,&#xD;&#xA;&#x9;SGS_USER USR   &#xD;&#xA;WHERE&#xD;&#xA;&#x9; USR.USER_SERIAL_ID = SUR.USER_SERIAL_ID   AND&#xD;&#xA;&#x9;       ((EFFECTIVE_START_DATE IS NULL) OR        (EFFECTIVE_START_DATE &lt;=  now() AND&#xD;&#xA;&#x9; EFFECTIVE_END_DATE IS NULL) OR       (now() BETWEEN EFFECTIVE_START_DATE AND&#xD;&#xA;&#x9; EFFECTIVE_END_DATE))">
      <parameters />
    </query>
    <query ID="GetListOfRoles" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select a.role_id, role_description&#xD;&#xA;  from sgs_roles a,&#xD;&#xA;       sgs_user_roles b&#xD;&#xA; where a.role_id = b.role_id&#xD;&#xA;   and b.user_serial_id = @user_serial_id" sfwPostgre="select a.role_id, role_description&#xD;&#xA;  from sgs_roles a,&#xD;&#xA;       sgs_user_roles b&#xD;&#xA; where a.role_id = b.role_id&#xD;&#xA;   and b.user_serial_id = @user_serial_id">
      <parameters>
        <parameter ID="@user_serial_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetNotesForProcessInstanceIdAndRequestId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xD;&#xA;&#x9; * &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGT_NOTES WITH(NOLOCK) &#xD;&#xA;WHERE&#xD;&#xA;&#x9; ((TABLE_NAME = 'SGW_BPM_PROCESS_INSTANCE' AND&#xD;&#xA;&#x9; PRIMARY_KEY_ID = @PROCESS_INSTANCE_ID) OR (TABLE_NAME = 'SGW_BPM_REQUEST' AND&#xD;&#xA;&#x9; PRIMARY_KEY_ID  = @REQUEST_ID))  AND&#xD;&#xA;&#x9; CATEGORY_ID = 93 AND&#xD;&#xA;&#x9; CATEGORY_VALUE = 'BPNT' &#xD;&#xA;ORDER BY   CREATED_DATE DESC" sfwPostgre="SELECT&#xD;&#xA;&#x9; * &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGT_NOTES &#xD;&#xA;WHERE&#xD;&#xA;&#x9; ((TABLE_NAME = 'SGW_BPM_PROCESS_INSTANCE' AND&#xD;&#xA;&#x9; PRIMARY_KEY_ID = @PROCESS_INSTANCE_ID) OR (TABLE_NAME = 'SGW_BPM_REQUEST' AND&#xD;&#xA;&#x9; PRIMARY_KEY_ID  = @REQUEST_ID))  AND&#xD;&#xA;&#x9; CATEGORY_ID = 93 AND&#xD;&#xA;&#x9; CATEGORY_VALUE = 'BPNT' &#xD;&#xA;ORDER BY   CREATED_DATE DESC">
      <parameters>
        <parameter ID="@PROCESS_INSTANCE_ID" sfwDataType="int" />
        <parameter ID="@REQUEST_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="SearchAndLoadReassignWork" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT TOP(@iintMaxSearchCount)&#xD;&#xA;    SP.PROCESS_ID,&#xD;&#xA;    SA.NAME,&#xD;&#xA;    SA.ACTIVITY_TYPE_VALUE,&#xD;&#xA;    SAI.*,&#xD;&#xA;    SPI.PROCESS_INSTANCE_ID AS PRO_INSTANCE_ID,&#xD;&#xA;    SP.NAME AS PROCESS_NAME,&#xD;&#xA;    SP.DESCRIPTION AS PROCESS_DESCRIPTION,&#xD;&#xA;    SWR.REQUEST_ID,&#xD;&#xA;    SWR.ORG_ID,&#xD;&#xA;    SWR.PERSON_ID,&#xD;&#xA;    P.MPI_PERSON_ID,&#xD;&#xA;    SWR.SOURCE_VALUE,&#xD;&#xA;    SWR.PRIORITY_CODE_VALUE,&#xD;&#xA;    SPI.CREATED_DATE AS PI_CREATED_DATE,&#xD;&#xA;    SAI.START_DATE AS AI_START_DATE,&#xD;&#xA;    SAI.END_DATE AS AI_END_DATE,&#xD;&#xA;    O.ORG_NAME,&#xD;&#xA;    CONCAT (P.LAST_NAME,&#xD;&#xA;    ' ',&#xD;&#xA;    P.FIRST_NAME) AS PERSON_NAME,&#xD;&#xA;    Count(*) OVER () TotalRecords&#xD;&#xA;FROM&#xD;&#xA;SGW_BPM_ACTIVITY_INSTANCE AS SAI WITH(NOLOCK)&#xD;&#xA;    INNER JOIN SGW_BPM_PROCESS_INSTANCE AS SPI WITH(NOLOCK)&#xD;&#xA;ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID&#xD;&#xA;    INNER JOIN SGW_BPM_PROCESS AS SP WITH(NOLOCK)&#xD;&#xA;ON SPI.PROCESS_ID = SP.PROCESS_ID&#xD;&#xA;    INNER JOIN SGW_BPM_ACTIVITY AS SA WITH(NOLOCK)&#xD;&#xA;ON  SPI.PROCESS_ID = SA.PROCESS_ID AND&#xD;&#xA;    SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND&#xD;&#xA;SA.ACTIVITY_TYPE_VALUE = 'USTK'&#xD;&#xA;    INNER JOIN SGW_BPM_CASE_INSTANCE AS PMI WITH(NOLOCK)&#xD;&#xA;ON PMI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID&#xD;&#xA;    INNER JOIN SGW_BPM_REQUEST AS SWR WITH(NOLOCK)&#xD;&#xA;ON PMI.REQUEST_ID = SWR.REQUEST_ID&#xD;&#xA;    LEFT JOIN SGT_PERSON AS P WITH(NOLOCK)&#xD;&#xA;ON P.PERSON_ID = PMI.PERSON_ID &#xD;&#xA;    LEFT JOIN SGT_ORGANIZATION AS O WITH(NOLOCK)&#xD;&#xA;ON O.ORG_ID = PMI.ORG_ID&#xD;&#xA;    INNER JOIN SGS_CODE_VALUE AS CV WITH(NOLOCK)&#xD;&#xA;ON SWR.SOURCE_ID = CV.CODE_ID AND&#xD;&#xA;SWR.SOURCE_VALUE = CV.CODE_VALUE&#xD;&#xA;    LEFT JOIN SGW_BPM_ACTIVITY_INST_USERS AS AIU WITH(NOLOCK)&#xD;&#xA;ON AIU.ACTIVITY_INSTANCE_ID = SAI.ACTIVITY_INSTANCE_ID AND AIU.USER_ID=SAI.CHECKED_OUT_USER&#xD;&#xA;WHERE&#xD;&#xA;(SAI.STATUS_VALUE IN ('INPC',&#xD;&#xA;&#x9;'UNPC', 'RELE', 'RESU', 'SUSP')) AND&#xD;&#xA;(SPI.STATUS_VALUE = 'INPC')" sfwOracle="SELECT&#xD;&#xA;    SP.PROCESS_ID,&#xD;&#xA;    SA.NAME,&#xD;&#xA;    SA.ACTIVITY_TYPE_VALUE,&#xD;&#xA;    SAI.*,&#xD;&#xA;    SPI.PROCESS_INSTANCE_ID PRO_INSTANCE_ID,&#xD;&#xA;    SP.NAME PROCESS_NAME,&#xD;&#xA;    SP.DESCRIPTION PROCESS_DESCRIPTION,&#xD;&#xA;    SWR.REQUEST_ID,&#xD;&#xA;    SWR.ORG_ID,&#xD;&#xA;    SWR.PERSON_ID,&#xD;&#xA;    SWR.SOURCE_VALUE,&#xD;&#xA;    SWR.PRIORITY_CODE_VALUE,&#xD;&#xA;    SPI.CREATED_DATE PI_CREATED_DATE,&#xD;&#xA;    SAI.START_DATE AI_START_DATE,&#xD;&#xA;    SAI.END_DATE AI_END_DATE,&#xD;&#xA;    O.ORG_NAME,&#xD;&#xA;    P.LAST_NAME|| ',' ||P.FIRST_NAME AS PERSON_NAME,&#xD;&#xA;    Count(*) OVER () TotalRecords&#xD;&#xA;FROM&#xD;&#xA;SGW_BPM_ACTIVITY_INSTANCE SAI &#xD;&#xA;    INNER JOIN SGW_BPM_PROCESS_INSTANCE SPI &#xD;&#xA;ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID&#xD;&#xA;    INNER JOIN SGW_BPM_PROCESS SP &#xD;&#xA;ON SPI.PROCESS_ID = SP.PROCESS_ID&#xD;&#xA;    INNER JOIN SGW_BPM_ACTIVITY SA &#xD;&#xA;ON  SPI.PROCESS_ID = SA.PROCESS_ID AND&#xD;&#xA;    SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND&#xD;&#xA;SA.ACTIVITY_TYPE_VALUE = 'USTK'&#xD;&#xA;    INNER JOIN SGW_BPM_CASE_INSTANCE PMI&#xD;&#xA;ON PMI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID&#xD;&#xA;    INNER JOIN SGW_BPM_REQUEST SWR&#xD;&#xA;ON PMI.REQUEST_ID = SWR.REQUEST_ID&#xD;&#xA;    LEFT JOIN SGT_PERSON P&#xD;&#xA;ON P.PERSON_ID = PMI.PERSON_ID &#xD;&#xA;    LEFT JOIN SGT_ORGANIZATION O&#xD;&#xA;ON O.ORG_ID = PMI.ORG_ID&#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;ON SWR.SOURCE_ID = CV.CODE_ID AND&#xD;&#xA;SWR.SOURCE_VALUE = CV.CODE_VALUE&#xD;&#xA;    LEFT JOIN SGW_BPM_ACTIVITY_INST_USERS AIU&#xD;&#xA;ON AIU.ACTIVITY_INSTANCE_ID = SAI.ACTIVITY_INSTANCE_ID AND AIU.USER_ID=SAI.CHECKED_OUT_USER&#xD;&#xA;WHERE&#xD;&#xA;(SAI.STATUS_VALUE IN ('INPC',&#xD;&#xA;'UNPC')) AND&#xD;&#xA;(SPI.STATUS_VALUE = 'INPC')" sfwPostgre="SELECT&#xD;&#xA;    SP.PROCESS_ID,&#xD;&#xA;    SA.NAME,&#xD;&#xA;    SA.ACTIVITY_TYPE_VALUE,&#xD;&#xA;    SAI.*,&#xD;&#xA;    SPI.PROCESS_INSTANCE_ID PRO_INSTANCE_ID,&#xD;&#xA;    SP.NAME PROCESS_NAME,&#xD;&#xA;    SP.DESCRIPTION PROCESS_DESCRIPTION,&#xD;&#xA;    SWR.REQUEST_ID,&#xD;&#xA;    SWR.ORG_ID,&#xD;&#xA;    SWR.PERSON_ID,&#xD;&#xA;    SWR.SOURCE_VALUE,&#xD;&#xA;    SWR.PRIORITY_CODE_VALUE,&#xD;&#xA;    SPI.CREATED_DATE PI_CREATED_DATE,&#xD;&#xA;    SAI.START_DATE AI_START_DATE,&#xD;&#xA;    SAI.END_DATE AI_END_DATE,&#xD;&#xA;    O.ORG_NAME,&#xD;&#xA;    P.LAST_NAME|| ',' ||P.FIRST_NAME AS PERSON_NAME,&#xD;&#xA;    Count(*) OVER () TotalRecords&#xD;&#xA;FROM&#xD;&#xA;SGW_BPM_ACTIVITY_INSTANCE SAI &#xD;&#xA;    INNER JOIN SGW_BPM_PROCESS_INSTANCE SPI &#xD;&#xA;ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID&#xD;&#xA;    INNER JOIN SGW_BPM_PROCESS SP &#xD;&#xA;ON SPI.PROCESS_ID = SP.PROCESS_ID&#xD;&#xA;    INNER JOIN SGW_BPM_ACTIVITY SA &#xD;&#xA;ON  SPI.PROCESS_ID = SA.PROCESS_ID AND&#xD;&#xA;    SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND&#xD;&#xA;SA.ACTIVITY_TYPE_VALUE = 'USTK'&#xD;&#xA;    INNER JOIN SGW_BPM_CASE_INSTANCE PMI&#xD;&#xA;ON PMI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID&#xD;&#xA;    INNER JOIN SGW_BPM_REQUEST SWR&#xD;&#xA;ON PMI.REQUEST_ID = SWR.REQUEST_ID&#xD;&#xA;    LEFT JOIN SGT_PERSON P&#xD;&#xA;ON P.PERSON_ID = PMI.PERSON_ID &#xD;&#xA;    LEFT JOIN SGT_ORGANIZATION O&#xD;&#xA;ON O.ORG_ID = PMI.ORG_ID&#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;ON SWR.SOURCE_ID = CV.CODE_ID AND&#xD;&#xA;SWR.SOURCE_VALUE = CV.CODE_VALUE&#xD;&#xA;    LEFT JOIN SGW_BPM_ACTIVITY_INST_USERS AIU&#xD;&#xA;ON AIU.ACTIVITY_INSTANCE_ID = SAI.ACTIVITY_INSTANCE_ID AND AIU.USER_ID=SAI.CHECKED_OUT_USER&#xD;&#xA;WHERE&#xD;&#xA;(SAI.STATUS_VALUE IN ('INPC',&#xD;&#xA;'UNPC')) AND&#xD;&#xA;(SPI.STATUS_VALUE = 'INPC')">
      <parameters>
        <parameter ID="@iintMaxSearchCount" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadBpmProcessInstanceHistory" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9;  SBAIH.ACTIVITY_INSTANCE_HISTORY_ID,&#xA;&#x9;SBAIH.ACTIVITY_INSTANCE_ID,&#xA;&#x9;SBA.NAME  AS ACTIVITY_NAME,&#xA;&#x9;SCV.DESCRIPTION  AS STATUS_DESCRIPTION,&#xA;&#x9;SBAIH.START_TIME,&#xA;&#x9;SBAIH.END_TIME,&#xA;&#x9;SBAIH.ACTION_USER_ID,&#xA;&#x9;SBAIH.COMMENTS &#xA;FROM&#xA;&#x9;  SGW_BPM_ACTIVITY_INST_HISTORY SBAIH WITH(NOLOCK)   &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE SBAI WITH(NOLOCK) &#xA;&#x9; ON SBAIH.ACTIVITY_INSTANCE_ID = SBAI.ACTIVITY_INSTANCE_ID   &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE SBPI WITH(NOLOCK) &#xA;&#x9; ON SBAI.PROCESS_INSTANCE_ID = SBPI.PROCESS_INSTANCE_ID   &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_ACTIVITY SBA WITH(NOLOCK) &#xA;&#x9; ON SBAI.ACTIVITY_ID = SBA.ACTIVITY_ID   &#xA;&#x9;INNER &#xA;&#x9; JOIN SGS_CODE_VALUE SCV WITH(NOLOCK) &#xA;&#x9; ON SBAIH.STATUS_ID = SCV.CODE_ID AND&#xA;&#x9;  SBAIH.STATUS_VALUE = SCV.CODE_VALUE   &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_PROCESS SBP WITH(NOLOCK) &#xA;&#x9; ON SBPI.PROCESS_ID = SBP.PROCESS_ID &#xA;WHERE&#xA;&#x9;  SBPI.PROCESS_INSTANCE_ID = @PROCESS_INSTANCE_ID ORDER  BY   SBAIH.CREATED_DATE DESC" sfwPostgre="SELECT&#xD;&#xA;&#x9;  SBAIH.ACTIVITY_INSTANCE_HISTORY_ID,&#xD;&#xA;&#x9;SBAIH.ACTIVITY_INSTANCE_ID,&#xD;&#xA;&#x9;SBA.NAME  AS ACTIVITY_NAME,&#xD;&#xA;&#x9;SCV.DESCRIPTION  AS STATUS_DESCRIPTION,&#xD;&#xA;&#x9;SBAIH.START_TIME,&#xD;&#xA;&#x9;SBAIH.END_TIME,&#xD;&#xA;&#x9;SBAIH.ACTION_USER_ID,&#xD;&#xA;&#x9;SBAIH.COMMENTS &#xD;&#xA;FROM&#xD;&#xA;&#x9;  SGW_BPM_ACTIVITY_INST_HISTORY SBAIH &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE SBAI &#xD;&#xA;&#x9; ON SBAIH.ACTIVITY_INSTANCE_ID = SBAI.ACTIVITY_INSTANCE_ID   &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE SBPI &#xD;&#xA;&#x9; ON SBAI.PROCESS_INSTANCE_ID = SBPI.PROCESS_INSTANCE_ID   &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY SBA &#xD;&#xA;&#x9; ON SBAI.ACTIVITY_ID = SBA.ACTIVITY_ID   &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGS_CODE_VALUE SCV &#xD;&#xA;&#x9; ON SBAIH.STATUS_ID = SCV.CODE_ID AND&#xD;&#xA;&#x9;  SBAIH.STATUS_VALUE = SCV.CODE_VALUE   &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS SBP &#xD;&#xA;&#x9; ON SBPI.PROCESS_ID = SBP.PROCESS_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9;  SBPI.PROCESS_INSTANCE_ID = @PROCESS_INSTANCE_ID ORDER  BY   SBAIH.CREATED_DATE DESC">
      <parameters>
        <parameter ID="@PROCESS_INSTANCE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetMaxActivityInstanceHistoryByBpmActivityInstance" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9;  * &#xA;FROM&#xA;&#x9;  SGW_BPM_ACTIVITY_INST_HISTORY WITH(NOLOCK) &#xA;WHERE&#xA;&#x9;  ACTIVITY_INSTANCE_HISTORY_ID IN  (SELECT&#xA;&#x9;  MAX(ACTIVITY_INSTANCE_HISTORY_ID)   &#xA;FROM&#xA;&#x9;  SGW_BPM_ACTIVITY_INST_HISTORY WITH(NOLOCK) &#xA;WHERE&#xA;&#x9;  ACTIVITY_INSTANCE_ID = @ACTIVITYINSTANCEID)" sfwPostgre="SELECT&#xD;&#xA;&#x9;  * &#xD;&#xA;FROM&#xD;&#xA;&#x9;  SGW_BPM_ACTIVITY_INST_HISTORY &#xD;&#xA;WHERE&#xD;&#xA;&#x9;  ACTIVITY_INSTANCE_HISTORY_ID IN  (SELECT&#xD;&#xA;&#x9;  MAX(ACTIVITY_INSTANCE_HISTORY_ID)   &#xD;&#xA;FROM&#xD;&#xA;&#x9;  SGW_BPM_ACTIVITY_INST_HISTORY &#xD;&#xA;WHERE&#xD;&#xA;&#x9;  ACTIVITY_INSTANCE_ID = @ACTIVITYINSTANCEID)">
      <parameters>
        <parameter ID="@ACTIVITYINSTANCEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadProcessInstanceAttachments" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9;   EV.EVENT_DESC,&#xA;&#x9;spia.* &#xA;FROM&#xA;&#x9;  SGW_BPM_PRCS_INST_ATTACHMENTS SPIA WITH(NOLOCK) INNER   &#xA;&#x9; JOIN SGW_BPM_EVENT EV WITH(NOLOCK) &#xA;&#x9; ON SPIA.DOC_TYPE = ev.DOC_TYPE &#xA;WHERE&#xA;&#x9;  SPIA.BPM_PROCESS_INSTANCE_ID  = @PROCESS_INSTANCE_ID" sfwPostgre="SELECT&#xD;&#xA;&#x9;   EV.EVENT_DESC,&#xD;&#xA;&#x9;spia.* &#xD;&#xA;FROM&#xD;&#xA;&#x9;  SGW_BPM_PRCS_INST_ATTACHMENTS SPIA  INNER   &#xD;&#xA;&#x9; JOIN SGW_BPM_EVENT EV &#xD;&#xA;&#x9; ON SPIA.DOC_TYPE = ev.DOC_TYPE &#xD;&#xA;WHERE&#xD;&#xA;&#x9;  SPIA.BPM_PROCESS_INSTANCE_ID  = @PROCESS_INSTANCE_ID">
      <parameters>
        <parameter ID="@PROCESS_INSTANCE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="MyBasketWorkPoolQuery" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; DISTINCT TOP 300 SA.PROCESS_ID,&#xA;&#x9;SA.NAME,&#xA;&#x9;SA.ACTIVITY_TYPE_VALUE,&#xA;&#x9;SAI.*,&#xA;&#x9;SPI.PROCESS_INSTANCE_ID,&#xA;&#x9;PMI.PERSON_ID,&#xA;&#x9;PMI.ORG_ID,&#xA;&#x9;P.PERSON_ID,&#xA;&#x9;P.MPI_PERSON_ID,&#xA;&#x9;P.FIRST_NAME,&#xA;&#x9;P.LAST_NAME,&#xA;&#x9;P.MIDDLE_NAME,&#xA;&#x9;O.ORG_NAME,&#xA;&#x9;O.MPI_ORG_ID ,&#xA;&#x9;SWR.SOURCE_VALUE,&#xA;&#x9;SP.DESCRIPTION AS PROCESS_DESCRIPTION,&#xA;&#x9;SP.NAME AS PROCESS_NAME,&#xA;&#x9;CV.DESCRIPTION AS SOURCE_DESCRIPTION,&#xA;&#x9;SWR.PERSON_ID,&#xA;&#x9;SWR.REFERENCE_ID as BENEFIT_APPLICATION_DETAIL_ID,&#xA;&#x9;CIP1.PARAMETER_VALUE AS INSTANCEINFO1, &#xA;&#x9;CIP2.PARAMETER_VALUE AS INSTANCEINFO2,&#xA;&#x9;PMI.PRIORITY_CODE_VALUE,&#xA;&#x9;PRICV.DESCRIPTION AS PRIORITY_DESCRIPTION,&#xA;(CASE&#xA;&#x9;&#x9;WHEN SAI.DUE_DATE IS NULL THEN 1&#xA;&#x9;&#x9;ELSE 0&#xA;&#x9;END) NULLS_LAST&#xA;FROM&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE AS SAI WITH(NOLOCK)  &#xA;&#x9; INNER JOIN SGW_BPM_PROCESS_INSTANCE  AS SPI WITH(NOLOCK) ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID INNER     &#xA;&#x9; JOIN SGW_BPM_PROCESS  AS SP WITH(NOLOCK) ON SPI.PROCESS_ID = SP.PROCESS_ID INNER     &#xA;&#x9; JOIN SGW_BPM_ACTIVITY  AS SA WITH(NOLOCK) ON SPI.PROCESS_ID = SA.PROCESS_ID AND SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND SA.ACTIVITY_TYPE_VALUE = 'USTK' INNER           &#xA;&#x9; JOIN SGW_BPM_CASE_INSTANCE  AS PMI WITH(NOLOCK) ON PMI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xA;&#x9; INNER JOIN SGW_BPM_REQUEST AS SWR WITH(NOLOCK) ON PMI.REQUEST_ID = SWR.REQUEST_ID  LEFT           &#xA;&#x9; JOIN SGT_PERSON AS P WITH(NOLOCK) ON P.PERSON_ID = PMI.PERSON_ID  &#xA;&#x9; LEFT JOIN SGT_ORGANIZATION AS O WITH(NOLOCK) ON O.ORG_ID = PMI.ORG_ID &#xA;&#x9; INNER JOIN SGV_Code_id_2021_3008 AS CV WITH(NOLOCK) ON SWR.SOURCE_ID = CV.CODE_ID AND SWR.SOURCE_VALUE = CV.CODE_VALUE &#xA;&#x9; INNER JOIN SGV_Code_id_2021_3008 AS PRICV WITH(NOLOCK) ON PRICV.CODE_ID = PMI.PRIORITY_CODE_ID AND PRICV.CODE_VALUE = PMI.PRIORITY_CODE_VALUE &#xA;&#x9; LEFT OUTER JOIN SGW_BPM_ACTIVITY_INST_USERS AS AIU WITH(NOLOCK) ON AIU.ACTIVITY_INSTANCE_ID = SAI.ACTIVITY_INSTANCE_ID &#xA;&#x9; LEFT OUTER JOIN SGW_BPM_CASE_INST_PARAMETER CIP1 ON (CIP1.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID AND CIP1.PARAMETER_NAME ='INS TANCEINFO1') &#xA;&#x9; LEFT OUTER JOIN SGW_BPM_CASE_INST_PARAMETER CIP2 ON (CIP2.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID AND CIP2.PARAMETER_NAME ='INS TANCEINFO2') &#xA;WHERE (SAI.CHECKED_OUT_USER IS NULL OR SAI.CHECKED_OUT_USER = 'BPM Service') AND (SAI.STATUS_VALUE IN ('UNPC','INPC','RESU','SUSP','RELE')) AND (SPI.STATUS_VALUE = 'INPC')&#xA;ORDER BY NULLS_LAST , SAI.DUE_DATE ASC" sfwOracle="SELECT&#xD;&#xA;&#x9; DISTINCT SA.PROCESS_ID,&#xD;&#xA;&#x9;SA.NAME,&#xD;&#xA;&#x9;SA.ACTIVITY_TYPE_VALUE,&#xD;&#xA;&#x9;SAI.*,&#xD;&#xA;&#x9;SPI.PROCESS_INSTANCE_ID,&#xD;&#xA;&#x9;PMI.PERSON_ID,&#xD;&#xA;&#x9;PMI.ORG_ID,&#xD;&#xA;&#x9;P.PERSON_ID,&#xD;&#xA;&#x9;P.FIRST_NAME,&#xD;&#xA;&#x9;P.LAST_NAME,&#xD;&#xA;&#x9;P.MIDDLE_NAME,&#xD;&#xA;&#x9;O.ORG_NAME,&#xD;&#xA;&#x9;O.ORG_CODE ,&#xD;&#xA;&#x9;SP.DESCRIPTION AS PROCESS_DESCRIPTION,&#xD;&#xA;&#x9;SP.NAME AS PROCESS_NAME,&#xD;&#xA;&#x9;CV.DESCRIPTION AS SOURCE_DESCRIPTION,&#xD;&#xA;&#x9;SWR.PERSON_ID,&#xD;&#xA;&#x9;CIP1.PARAMETER_VALUE AS INSTANCEINFO1, &#xD;&#xA;&#x9;CIP2.PARAMETER_VALUE AS INSTANCEINFO2,&#xD;&#xA;&#x9;PMI.PRIORITY_CODE_VALUE,&#xD;&#xA;&#x9;PRICV.DESCRIPTION AS PRIORITY_DESCRIPTION&#xD;&#xA;&#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE  SAI   &#xD;&#xA;&#x9; INNER JOIN SGW_BPM_PROCESS_INSTANCE   SPI ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID INNER     &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS   SP  ON SPI.PROCESS_ID = SP.PROCESS_ID INNER     &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY   SA  ON SPI.PROCESS_ID = SA.PROCESS_ID AND SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND SA.ACTIVITY_TYPE_VALUE = 'USTK' INNER           &#xD;&#xA;&#x9; JOIN SGW_BPM_CASE_INSTANCE   PMI ON PMI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xD;&#xA;&#x9; INNER JOIN SGW_BPM_REQUEST  SWR  ON PMI.REQUEST_ID = SWR.REQUEST_ID  LEFT           &#xD;&#xA;&#x9; JOIN SGT_PERSON  P   ON P.PERSON_ID = PMI.PERSON_ID  &#xD;&#xA;&#x9; LEFT JOIN SGT_ORGANIZATION  O   ON O.ORG_ID = PMI.ORG_ID &#xD;&#xA;&#x9; INNER JOIN SGS_CODE_VALUE  CV   ON SWR.SOURCE_ID = CV.CODE_ID AND SWR.SOURCE_VALUE = CV.CODE_VALUE&#xD;&#xA;&#x9; INNER JOIN SGS_CODE_VALUE  PRICV   ON PRICV.CODE_ID = PMI.PRIORITY_CODE_ID AND PRICV.CODE_VALUE = PMI.PRIORITY_CODE_VALUE&#xD;&#xA;&#x9; LEFT OUTER JOIN SGW_BPM_ACTIVITY_INST_USERS  AIU   ON AIU.ACTIVITY_INSTANCE_ID = SAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;&#x9; LEFT OUTER JOIN SGW_BPM_CASE_INST_PARAMETER CIP1 ON (CIP1.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID AND CIP1.PARAMETER_NAME ='INS TANCEINFO1') &#xD;&#xA;&#x9; LEFT OUTER JOIN SGW_BPM_CASE_INST_PARAMETER CIP2 ON (CIP2.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID AND CIP2.PARAMETER_NAME ='INS TANCEINFO2') &#xD;&#xA;&#xD;&#xA;WHERE&#xD;&#xA;&#x9; (AIU.USER_SERIAL_ID = @USER_SERIAL_ID OR (SAI.CHECKED_OUT_USER = @CHECKED_OUT_USER AND SAI.STATUS_VALUE IN ('INPC','RESU','SUSP'))) AND (SPI.STATUS_VALUE = 'INPC')&#xD;&#xA;   and  rownum &lt;= 300&#xD;&#xA;ORDER BY SAI.DUE_DATE ASC NULLS LAST" sfwPostgre="SELECT DISTINCT sa.process_id,&#xA;sa.name,&#xA;sa.activity_type_value,&#xA;sai.*,&#xA;spi.process_instance_id,&#xA;pmi.person_id,&#xA;pmi.org_id,&#xA;p.person_id,&#xA;p.first_name,&#xA;p.last_name,&#xA;p.middle_name,&#xA;o.org_name,&#xA;o.org_code,&#xA;sp.description AS process_description,&#xA;sp.name AS process_name,&#xA;cv.description AS source_description,&#xA;swr.person_id,&#xA;cip1.parameter_value AS instanceinfo1,&#xA;cip2.parameter_value AS instanceinfo2,&#xA;pmi.priority_code_value,&#xA;pricv.description AS priority_description&#xA;FROM dbo.sgw_bpm_activity_instance AS sai&#xA;INNER JOIN dbo.sgw_bpm_process_instance AS spi ON sai.process_instance_id = spi.process_instance_id&#xA;INNER JOIN dbo.sgw_bpm_process AS sp ON spi.process_id = sp.process_id&#xA;INNER JOIN dbo.sgw_bpm_activity AS sa ON spi.process_id = sa.process_id&#xA;AND sai.activity_id = sa.activity_id&#xA;AND sa.activity_type_value = 'USTK'&#xA;INNER JOIN dbo.sgw_bpm_case_instance AS pmi ON pmi.case_instance_id = spi.case_instance_id&#xA;INNER JOIN dbo.sgw_bpm_request AS swr ON pmi.request_id = swr.request_id&#xA;LEFT OUTER JOIN dbo.sgt_person AS p ON p.person_id = pmi.person_id&#xA;LEFT OUTER JOIN dbo.sgt_organization AS o ON o.org_id = pmi.org_id&#xA;INNER JOIN dbo.sgs_code_value AS cv ON swr.source_id = cv.code_id&#xA;AND swr.source_value = cv.code_value&#xA;INNER JOIN dbo.sgs_code_value AS pricv ON pricv.code_id = pmi.priority_code_id&#xA;AND pricv.code_value = pmi.priority_code_value::VARCHAR&#xA;LEFT OUTER JOIN dbo.sgw_bpm_activity_inst_users AS aiu ON aiu.activity_instance_id = sai.activity_instance_id&#xA;LEFT OUTER JOIN dbo.sgw_bpm_case_inst_parameter AS cip1 ON (cip1.case_instance_id = spi.case_instance_id&#xA;AND cip1.parameter_name = 'INS TANCEINFO1')&#xA;LEFT OUTER JOIN dbo.sgw_bpm_case_inst_parameter AS cip2 ON (cip2.case_instance_id = spi.case_instance_id&#xA;AND cip2.parameter_name = 'INS TANCEINFO2')&#xA;WHERE (aiu.user_serial_id = @USER_SERIAL_ID&#xA;OR (sai.checked_out_user = @CHECKED_OUT_USER&#xA;AND sai.status_value IN ('INPC',&#xA;'RESU',&#xA;'SUSP')))&#xA;AND (spi.status_value = 'INPC')&#xA;ORDER BY SAI.DUE_DATE ASC NULLS LAST">
      <parameters>
        <parameter ID="@USER_SERIAL_ID" sfwDataType="int" />
        <parameter ID="@CHECKED_OUT_USER" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="MyBasketAssingedWorkQuery" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; DISTINCT TOP 300 SA.PROCESS_ID,&#xA;&#x9;SA.NAME,&#xA;&#x9;SA.ACTIVITY_TYPE_VALUE,&#xA;&#x9;SAI.*,&#xA;&#x9;SPI.PROCESS_INSTANCE_ID,&#xA;&#x9;PMI.PERSON_ID,&#xA;&#x9;PMI.ORG_ID,&#xA;&#x9;P.PERSON_ID,&#xA;&#x9;P.MPI_PERSON_ID,&#xA;&#x9;P.FIRST_NAME,&#xA;&#x9;P.LAST_NAME,&#xA;&#x9;P.MIDDLE_NAME,&#xA;&#x9;O.ORG_NAME,&#xA;&#x9;O.MPI_ORG_ID ,&#xA;&#x9;SWR.SOURCE_VALUE,&#xA;&#x9;SP.DESCRIPTION AS PROCESS_DESCRIPTION,&#xA;&#x9;SP.NAME AS PROCESS_NAME,&#xA;&#x9;CV.DESCRIPTION AS SOURCE_DESCRIPTION,&#xA;&#x9;SWR.PERSON_ID,&#xA;    SWR.REFERENCE_ID as BENEFIT_APPLICATION_DETAIL_ID,&#xA;&#x9;CIP1.PARAMETER_VALUE AS INSTANCEINFO1, &#xA;&#x9;CIP2.PARAMETER_VALUE AS INSTANCEINFO2,&#xA;&#x9;PMI.PRIORITY_CODE_VALUE,&#xA;&#x9;PRICV.DESCRIPTION AS PRIORITY_DESCRIPTION,&#xA;(CASE&#xA;&#x9;&#x9;WHEN SAI.DUE_DATE IS NULL THEN 1&#xA;&#x9;&#x9;ELSE 0&#xA;&#x9;END) NULLS_LAST&#xA;FROM&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE AS SAI WITH(NOLOCK)  &#xA;&#x9; INNER JOIN SGW_BPM_PROCESS_INSTANCE  AS SPI WITH(NOLOCK) ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID INNER     &#xA;&#x9; JOIN SGW_BPM_PROCESS  AS SP WITH(NOLOCK) ON SPI.PROCESS_ID = SP.PROCESS_ID INNER     &#xA;&#x9; JOIN SGW_BPM_ACTIVITY  AS SA WITH(NOLOCK) ON SPI.PROCESS_ID = SA.PROCESS_ID AND SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND SA.ACTIVITY_TYPE_VALUE = 'USTK' INNER           &#xA;&#x9; JOIN SGW_BPM_CASE_INSTANCE  AS PMI WITH(NOLOCK) ON PMI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xA;&#x9; INNER JOIN SGW_BPM_REQUEST AS SWR WITH(NOLOCK) ON PMI.REQUEST_ID = SWR.REQUEST_ID  LEFT           &#xA;&#x9; JOIN SGT_PERSON AS P WITH(NOLOCK) ON P.PERSON_ID = PMI.PERSON_ID  &#xA;&#x9; LEFT JOIN SGT_ORGANIZATION AS O WITH(NOLOCK) ON O.ORG_ID = PMI.ORG_ID &#xA;&#x9; INNER JOIN SGV_Code_id_2021_3008 AS CV WITH(NOLOCK) ON SWR.SOURCE_ID = CV.CODE_ID AND SWR.SOURCE_VALUE = CV.CODE_VALUE &#xA;&#x9; INNER JOIN SGV_Code_id_2021_3008 AS PRICV WITH(NOLOCK) ON PRICV.CODE_ID = PMI.PRIORITY_CODE_ID AND PRICV.CODE_VALUE = PMI.PRIORITY_CODE_VALUE &#xA;&#x9; LEFT OUTER JOIN SGW_BPM_ACTIVITY_INST_USERS AS AIU WITH(NOLOCK) ON AIU.ACTIVITY_INSTANCE_ID = SAI.ACTIVITY_INSTANCE_ID &#xA;&#x9; LEFT OUTER JOIN SGW_BPM_CASE_INST_PARAMETER CIP1 ON (CIP1.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID AND CIP1.PARAMETER_NAME ='INS TANCEINFO1') &#xA;&#x9; LEFT OUTER JOIN SGW_BPM_CASE_INST_PARAMETER CIP2 ON (CIP2.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID AND CIP2.PARAMETER_NAME ='INS TANCEINFO2') &#xA;WHERE SAI.CHECKED_OUT_USER = @CHECKED_OUT_USER AND SAI.STATUS_VALUE IN ('INPC','RESU') AND SPI.STATUS_VALUE = 'INPC'&#xA;ORDER BY NULLS_LAST , SAI.DUE_DATE ASC" sfwOracle="SELECT&#xD;&#xA;&#x9; DISTINCT SA.PROCESS_ID,&#xD;&#xA;&#x9;SA.NAME,&#xD;&#xA;&#x9;SA.ACTIVITY_TYPE_VALUE,&#xD;&#xA;&#x9;SAI.*,&#xD;&#xA;&#x9;SPI.PROCESS_INSTANCE_ID,&#xD;&#xA;&#x9;PMI.PERSON_ID,&#xD;&#xA;&#x9;PMI.ORG_ID,&#xD;&#xA;&#x9;P.PERSON_ID,&#xD;&#xA;&#x9;P.FIRST_NAME,&#xD;&#xA;&#x9;P.LAST_NAME,&#xD;&#xA;&#x9;P.MIDDLE_NAME,&#xD;&#xA;&#x9;O.ORG_NAME,&#xD;&#xA;&#x9;O.ORG_CODE ,&#xD;&#xA;&#x9;SP.DESCRIPTION AS PROCESS_DESCRIPTION,&#xD;&#xA;&#x9;SP.NAME AS PROCESS_NAME,&#xD;&#xA;&#x9;CV.DESCRIPTION AS SOURCE_DESCRIPTION,&#xD;&#xA;&#x9;SWR.PERSON_ID,&#xD;&#xA;&#x9;CIP1.PARAMETER_VALUE AS INSTANCEINFO1, &#xD;&#xA;&#x9;CIP2.PARAMETER_VALUE AS INSTANCEINFO2,&#xD;&#xA;&#x9;PMI.PRIORITY_CODE_VALUE,&#xD;&#xA;&#x9;PRICV.DESCRIPTION AS PRIORITY_DESCRIPTION&#xD;&#xA;&#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE  SAI   &#xD;&#xA;&#x9; INNER JOIN SGW_BPM_PROCESS_INSTANCE   SPI ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID INNER     &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS   SP  ON SPI.PROCESS_ID = SP.PROCESS_ID INNER     &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY   SA  ON SPI.PROCESS_ID = SA.PROCESS_ID AND SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND SA.ACTIVITY_TYPE_VALUE = 'USTK' INNER           &#xD;&#xA;&#x9; JOIN SGW_BPM_CASE_INSTANCE   PMI ON PMI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xD;&#xA;&#x9; INNER JOIN SGW_BPM_REQUEST  SWR  ON PMI.REQUEST_ID = SWR.REQUEST_ID  LEFT           &#xD;&#xA;&#x9; JOIN SGT_PERSON  P   ON P.PERSON_ID = PMI.PERSON_ID  &#xD;&#xA;&#x9; LEFT JOIN SGT_ORGANIZATION  O   ON O.ORG_ID = PMI.ORG_ID &#xD;&#xA;&#x9; INNER JOIN SGS_CODE_VALUE  CV   ON SWR.SOURCE_ID = CV.CODE_ID AND SWR.SOURCE_VALUE = CV.CODE_VALUE&#xD;&#xA;&#x9; INNER JOIN SGS_CODE_VALUE  PRICV   ON PRICV.CODE_ID = PMI.PRIORITY_CODE_ID AND PRICV.CODE_VALUE = PMI.PRIORITY_CODE_VALUE&#xD;&#xA;&#x9; LEFT OUTER JOIN SGW_BPM_ACTIVITY_INST_USERS  AIU   ON AIU.ACTIVITY_INSTANCE_ID = SAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;&#x9; LEFT OUTER JOIN SGW_BPM_CASE_INST_PARAMETER CIP1 ON (CIP1.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID AND CIP1.PARAMETER_NAME ='INS TANCEINFO1') &#xD;&#xA;&#x9; LEFT OUTER JOIN SGW_BPM_CASE_INST_PARAMETER CIP2 ON (CIP2.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID AND CIP2.PARAMETER_NAME ='INS TANCEINFO2') &#xD;&#xA;&#xD;&#xA;WHERE&#xD;&#xA;&#x9; (AIU.USER_SERIAL_ID = @USER_SERIAL_ID OR (SAI.CHECKED_OUT_USER = @CHECKED_OUT_USER AND SAI.STATUS_VALUE IN ('INPC','RESU','SUSP'))) AND (SPI.STATUS_VALUE = 'INPC')&#xD;&#xA;   and  rownum &lt;= 300&#xD;&#xA;ORDER BY SAI.DUE_DATE ASC NULLS LAST" sfwPostgre="SELECT DISTINCT sa.process_id,&#xA;sa.name,&#xA;sa.activity_type_value,&#xA;sai.*,&#xA;spi.process_instance_id,&#xA;pmi.person_id,&#xA;pmi.org_id,&#xA;p.person_id,&#xA;p.first_name,&#xA;p.last_name,&#xA;p.middle_name,&#xA;o.org_name,&#xA;o.org_code,&#xA;sp.description AS process_description,&#xA;sp.name AS process_name,&#xA;cv.description AS source_description,&#xA;swr.person_id,&#xA;cip1.parameter_value AS instanceinfo1,&#xA;cip2.parameter_value AS instanceinfo2,&#xA;pmi.priority_code_value,&#xA;pricv.description AS priority_description&#xA;FROM dbo.sgw_bpm_activity_instance AS sai&#xA;INNER JOIN dbo.sgw_bpm_process_instance AS spi ON sai.process_instance_id = spi.process_instance_id&#xA;INNER JOIN dbo.sgw_bpm_process AS sp ON spi.process_id = sp.process_id&#xA;INNER JOIN dbo.sgw_bpm_activity AS sa ON spi.process_id = sa.process_id&#xA;AND sai.activity_id = sa.activity_id&#xA;AND sa.activity_type_value = 'USTK'&#xA;INNER JOIN dbo.sgw_bpm_case_instance AS pmi ON pmi.case_instance_id = spi.case_instance_id&#xA;INNER JOIN dbo.sgw_bpm_request AS swr ON pmi.request_id = swr.request_id&#xA;LEFT OUTER JOIN dbo.sgt_person AS p ON p.person_id = pmi.person_id&#xA;LEFT OUTER JOIN dbo.sgt_organization AS o ON o.org_id = pmi.org_id&#xA;INNER JOIN dbo.sgs_code_value AS cv ON swr.source_id = cv.code_id&#xA;AND swr.source_value = cv.code_value&#xA;INNER JOIN dbo.sgs_code_value AS pricv ON pricv.code_id = pmi.priority_code_id&#xA;AND pricv.code_value = pmi.priority_code_value::VARCHAR&#xA;LEFT OUTER JOIN dbo.sgw_bpm_activity_inst_users AS aiu ON aiu.activity_instance_id = sai.activity_instance_id&#xA;LEFT OUTER JOIN dbo.sgw_bpm_case_inst_parameter AS cip1 ON (cip1.case_instance_id = spi.case_instance_id&#xA;AND cip1.parameter_name = 'INS TANCEINFO1')&#xA;LEFT OUTER JOIN dbo.sgw_bpm_case_inst_parameter AS cip2 ON (cip2.case_instance_id = spi.case_instance_id&#xA;AND cip2.parameter_name = 'INS TANCEINFO2')&#xA;WHERE (aiu.user_serial_id = @USER_SERIAL_ID&#xA;OR (sai.checked_out_user = @CHECKED_OUT_USER&#xA;AND sai.status_value IN ('INPC',&#xA;'RESU',&#xA;'SUSP')))&#xA;AND (spi.status_value = 'INPC')&#xA;ORDER BY SAI.DUE_DATE ASC NULLS LAST">
      <parameters>
        <parameter ID="@USER_SERIAL_ID" sfwDataType="int" />
        <parameter ID="@CHECKED_OUT_USER" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="MyBasketSuspendedWorkQuery" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; DISTINCT TOP 300 SA.PROCESS_ID,&#xA;&#x9;SA.NAME,&#xA;&#x9;SA.ACTIVITY_TYPE_VALUE,&#xA;&#x9;SAI.*,&#xA;&#x9;SPI.PROCESS_INSTANCE_ID,&#xA;&#x9;PMI.PERSON_ID,&#xA;&#x9;PMI.ORG_ID,&#xA;&#x9;P.PERSON_ID,&#xA;&#x9;P.MPI_PERSON_ID,&#xA;&#x9;P.FIRST_NAME,&#xA;&#x9;P.LAST_NAME,&#xA;&#x9;P.MIDDLE_NAME,&#xA;&#x9;O.ORG_NAME,&#xA;&#x9;O.MPI_ORG_ID ,&#xA;&#x9;SWR.SOURCE_VALUE,&#xA;&#x9;SP.DESCRIPTION AS PROCESS_DESCRIPTION,&#xA;&#x9;SP.NAME AS PROCESS_NAME,&#xA;&#x9;CV.DESCRIPTION AS SOURCE_DESCRIPTION,&#xA;&#x9;SWR.PERSON_ID,&#xA;&#x9;SWR.REFERENCE_ID as BENEFIT_APPLICATION_DETAIL_ID,&#xA;&#x9;CIP1.PARAMETER_VALUE AS INSTANCEINFO1, &#xA;&#x9;CIP2.PARAMETER_VALUE AS INSTANCEINFO2,&#xA;&#x9;PMI.PRIORITY_CODE_VALUE,&#xA;&#x9;PRICV.DESCRIPTION AS PRIORITY_DESCRIPTION,&#xA;(CASE&#xA;&#x9;&#x9;WHEN SAI.DUE_DATE IS NULL THEN 1&#xA;&#x9;&#x9;ELSE 0&#xA;&#x9;END) NULLS_LAST&#xA;FROM&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE AS SAI WITH(NOLOCK)  &#xA;&#x9; INNER JOIN SGW_BPM_PROCESS_INSTANCE  AS SPI WITH(NOLOCK) ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID INNER     &#xA;&#x9; JOIN SGW_BPM_PROCESS  AS SP WITH(NOLOCK) ON SPI.PROCESS_ID = SP.PROCESS_ID INNER     &#xA;&#x9; JOIN SGW_BPM_ACTIVITY  AS SA WITH(NOLOCK) ON SPI.PROCESS_ID = SA.PROCESS_ID AND SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND SA.ACTIVITY_TYPE_VALUE = 'USTK' INNER           &#xA;&#x9; JOIN SGW_BPM_CASE_INSTANCE  AS PMI WITH(NOLOCK) ON PMI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xA;&#x9; INNER JOIN SGW_BPM_REQUEST AS SWR WITH(NOLOCK) ON PMI.REQUEST_ID = SWR.REQUEST_ID  LEFT           &#xA;&#x9; JOIN SGT_PERSON AS P WITH(NOLOCK) ON P.PERSON_ID = PMI.PERSON_ID  &#xA;&#x9; LEFT JOIN SGT_ORGANIZATION AS O WITH(NOLOCK) ON O.ORG_ID = PMI.ORG_ID &#xA;&#x9; INNER JOIN SGV_Code_id_2021_3008 AS CV WITH(NOLOCK) ON SWR.SOURCE_ID = CV.CODE_ID AND SWR.SOURCE_VALUE = CV.CODE_VALUE &#xA;&#x9; INNER JOIN SGV_Code_id_2021_3008 AS PRICV WITH(NOLOCK) ON PRICV.CODE_ID = PMI.PRIORITY_CODE_ID AND PRICV.CODE_VALUE = PMI.PRIORITY_CODE_VALUE &#xA;&#x9; LEFT OUTER JOIN SGW_BPM_ACTIVITY_INST_USERS AS AIU WITH(NOLOCK) ON AIU.ACTIVITY_INSTANCE_ID = SAI.ACTIVITY_INSTANCE_ID &#xA;&#x9; LEFT OUTER JOIN SGW_BPM_CASE_INST_PARAMETER CIP1 ON (CIP1.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID AND CIP1.PARAMETER_NAME ='INS TANCEINFO1') &#xA;&#x9; LEFT OUTER JOIN SGW_BPM_CASE_INST_PARAMETER CIP2 ON (CIP2.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID AND CIP2.PARAMETER_NAME ='INS TANCEINFO2') &#xA;WHERE SAI.CHECKED_OUT_USER = @CHECKED_OUT_USER AND SAI.STATUS_VALUE IN ('SUSP') AND SPI.STATUS_VALUE = 'INPC'&#xA;ORDER BY NULLS_LAST , SAI.DUE_DATE ASC" sfwOracle="SELECT&#xD;&#xA;&#x9; DISTINCT SA.PROCESS_ID,&#xD;&#xA;&#x9;SA.NAME,&#xD;&#xA;&#x9;SA.ACTIVITY_TYPE_VALUE,&#xD;&#xA;&#x9;SAI.*,&#xD;&#xA;&#x9;SPI.PROCESS_INSTANCE_ID,&#xD;&#xA;&#x9;PMI.PERSON_ID,&#xD;&#xA;&#x9;PMI.ORG_ID,&#xD;&#xA;&#x9;P.PERSON_ID,&#xD;&#xA;&#x9;P.FIRST_NAME,&#xD;&#xA;&#x9;P.LAST_NAME,&#xD;&#xA;&#x9;P.MIDDLE_NAME,&#xD;&#xA;&#x9;O.ORG_NAME,&#xD;&#xA;&#x9;O.ORG_CODE ,&#xD;&#xA;&#x9;SP.DESCRIPTION AS PROCESS_DESCRIPTION,&#xD;&#xA;&#x9;SP.NAME AS PROCESS_NAME,&#xD;&#xA;&#x9;CV.DESCRIPTION AS SOURCE_DESCRIPTION,&#xD;&#xA;&#x9;SWR.PERSON_ID,&#xD;&#xA;&#x9;CIP1.PARAMETER_VALUE AS INSTANCEINFO1, &#xD;&#xA;&#x9;CIP2.PARAMETER_VALUE AS INSTANCEINFO2,&#xD;&#xA;&#x9;PMI.PRIORITY_CODE_VALUE,&#xD;&#xA;&#x9;PRICV.DESCRIPTION AS PRIORITY_DESCRIPTION&#xD;&#xA;&#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE  SAI   &#xD;&#xA;&#x9; INNER JOIN SGW_BPM_PROCESS_INSTANCE   SPI ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID INNER     &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS   SP  ON SPI.PROCESS_ID = SP.PROCESS_ID INNER     &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY   SA  ON SPI.PROCESS_ID = SA.PROCESS_ID AND SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND SA.ACTIVITY_TYPE_VALUE = 'USTK' INNER           &#xD;&#xA;&#x9; JOIN SGW_BPM_CASE_INSTANCE   PMI ON PMI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xD;&#xA;&#x9; INNER JOIN SGW_BPM_REQUEST  SWR  ON PMI.REQUEST_ID = SWR.REQUEST_ID  LEFT           &#xD;&#xA;&#x9; JOIN SGT_PERSON  P   ON P.PERSON_ID = PMI.PERSON_ID  &#xD;&#xA;&#x9; LEFT JOIN SGT_ORGANIZATION  O   ON O.ORG_ID = PMI.ORG_ID &#xD;&#xA;&#x9; INNER JOIN SGS_CODE_VALUE  CV   ON SWR.SOURCE_ID = CV.CODE_ID AND SWR.SOURCE_VALUE = CV.CODE_VALUE&#xD;&#xA;&#x9; INNER JOIN SGS_CODE_VALUE  PRICV   ON PRICV.CODE_ID = PMI.PRIORITY_CODE_ID AND PRICV.CODE_VALUE = PMI.PRIORITY_CODE_VALUE&#xD;&#xA;&#x9; LEFT OUTER JOIN SGW_BPM_ACTIVITY_INST_USERS  AIU   ON AIU.ACTIVITY_INSTANCE_ID = SAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;&#x9; LEFT OUTER JOIN SGW_BPM_CASE_INST_PARAMETER CIP1 ON (CIP1.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID AND CIP1.PARAMETER_NAME ='INS TANCEINFO1') &#xD;&#xA;&#x9; LEFT OUTER JOIN SGW_BPM_CASE_INST_PARAMETER CIP2 ON (CIP2.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID AND CIP2.PARAMETER_NAME ='INS TANCEINFO2') &#xD;&#xA;&#xD;&#xA;WHERE&#xD;&#xA;&#x9; (AIU.USER_SERIAL_ID = @USER_SERIAL_ID OR (SAI.CHECKED_OUT_USER = @CHECKED_OUT_USER AND SAI.STATUS_VALUE IN ('INPC','RESU','SUSP'))) AND (SPI.STATUS_VALUE = 'INPC')&#xD;&#xA;   and  rownum &lt;= 300&#xD;&#xA;ORDER BY SAI.DUE_DATE ASC NULLS LAST" sfwPostgre="SELECT DISTINCT sa.process_id,&#xA;sa.name,&#xA;sa.activity_type_value,&#xA;sai.*,&#xA;spi.process_instance_id,&#xA;pmi.person_id,&#xA;pmi.org_id,&#xA;p.person_id,&#xA;p.first_name,&#xA;p.last_name,&#xA;p.middle_name,&#xA;o.org_name,&#xA;o.org_code,&#xA;sp.description AS process_description,&#xA;sp.name AS process_name,&#xA;cv.description AS source_description,&#xA;swr.person_id,&#xA;cip1.parameter_value AS instanceinfo1,&#xA;cip2.parameter_value AS instanceinfo2,&#xA;pmi.priority_code_value,&#xA;pricv.description AS priority_description&#xA;FROM dbo.sgw_bpm_activity_instance AS sai&#xA;INNER JOIN dbo.sgw_bpm_process_instance AS spi ON sai.process_instance_id = spi.process_instance_id&#xA;INNER JOIN dbo.sgw_bpm_process AS sp ON spi.process_id = sp.process_id&#xA;INNER JOIN dbo.sgw_bpm_activity AS sa ON spi.process_id = sa.process_id&#xA;AND sai.activity_id = sa.activity_id&#xA;AND sa.activity_type_value = 'USTK'&#xA;INNER JOIN dbo.sgw_bpm_case_instance AS pmi ON pmi.case_instance_id = spi.case_instance_id&#xA;INNER JOIN dbo.sgw_bpm_request AS swr ON pmi.request_id = swr.request_id&#xA;LEFT OUTER JOIN dbo.sgt_person AS p ON p.person_id = pmi.person_id&#xA;LEFT OUTER JOIN dbo.sgt_organization AS o ON o.org_id = pmi.org_id&#xA;INNER JOIN dbo.sgs_code_value AS cv ON swr.source_id = cv.code_id&#xA;AND swr.source_value = cv.code_value&#xA;INNER JOIN dbo.sgs_code_value AS pricv ON pricv.code_id = pmi.priority_code_id&#xA;AND pricv.code_value = pmi.priority_code_value::VARCHAR&#xA;LEFT OUTER JOIN dbo.sgw_bpm_activity_inst_users AS aiu ON aiu.activity_instance_id = sai.activity_instance_id&#xA;LEFT OUTER JOIN dbo.sgw_bpm_case_inst_parameter AS cip1 ON (cip1.case_instance_id = spi.case_instance_id&#xA;AND cip1.parameter_name = 'INS TANCEINFO1')&#xA;LEFT OUTER JOIN dbo.sgw_bpm_case_inst_parameter AS cip2 ON (cip2.case_instance_id = spi.case_instance_id&#xA;AND cip2.parameter_name = 'INS TANCEINFO2')&#xA;WHERE (aiu.user_serial_id = @USER_SERIAL_ID&#xA;OR (sai.checked_out_user = @CHECKED_OUT_USER&#xA;AND sai.status_value IN ('INPC',&#xA;'RESU',&#xA;'SUSP')))&#xA;AND (spi.status_value = 'INPC')&#xA;ORDER BY SAI.DUE_DATE ASC NULLS LAST">
      <parameters>
        <parameter ID="@USER_SERIAL_ID" sfwDataType="int" />
        <parameter ID="@CHECKED_OUT_USER" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="MyBasketCompletedWorkQuery" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; DISTINCT TOP 300 SA.PROCESS_ID,&#xA;&#x9;SA.NAME,&#xA;&#x9;SA.ACTIVITY_TYPE_VALUE,&#xA;&#x9;SAI.*,&#xA;&#x9;SPI.PROCESS_INSTANCE_ID,&#xA;&#x9;PMI.PERSON_ID,&#xA;&#x9;PMI.ORG_ID,&#xA;&#x9;P.PERSON_ID,&#xA;&#x9;P.MPI_PERSON_ID,&#xA;&#x9;P.FIRST_NAME,&#xA;&#x9;P.LAST_NAME,&#xA;&#x9;P.MIDDLE_NAME,&#xA;&#x9;O.ORG_NAME,&#xA;&#x9;O.MPI_ORG_ID ,&#xA;&#x9;SWR.SOURCE_VALUE,&#xA;&#x9;SP.DESCRIPTION AS PROCESS_DESCRIPTION,&#xA;&#x9;SP.NAME AS PROCESS_NAME,&#xA;&#x9;CV.DESCRIPTION AS SOURCE_DESCRIPTION,&#xA;&#x9;SWR.PERSON_ID,&#xA;&#x9;SWR.REFERENCE_ID as BENEFIT_APPLICATION_DETAIL_ID,&#xA;&#x9;CIP1.PARAMETER_VALUE AS INSTANCEINFO1, &#xA;&#x9;CIP2.PARAMETER_VALUE AS INSTANCEINFO2,&#xA;&#x9;PMI.PRIORITY_CODE_VALUE,&#xA;&#x9;PRICV.DESCRIPTION AS PRIORITY_DESCRIPTION,&#xA;(CASE&#xA;&#x9;&#x9;WHEN SAI.DUE_DATE IS NULL THEN 1&#xA;&#x9;&#x9;ELSE 0&#xA;&#x9;END) NULLS_LAST&#xA;FROM&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE AS SAI WITH(NOLOCK)  &#xA;&#x9; INNER JOIN SGW_BPM_PROCESS_INSTANCE  AS SPI WITH(NOLOCK) ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID INNER     &#xA;&#x9; JOIN SGW_BPM_PROCESS  AS SP WITH(NOLOCK) ON SPI.PROCESS_ID = SP.PROCESS_ID INNER     &#xA;&#x9; JOIN SGW_BPM_ACTIVITY  AS SA WITH(NOLOCK) ON SPI.PROCESS_ID = SA.PROCESS_ID AND SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND SA.ACTIVITY_TYPE_VALUE = 'USTK' INNER           &#xA;&#x9; JOIN SGW_BPM_CASE_INSTANCE  AS PMI WITH(NOLOCK) ON PMI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xA;&#x9; INNER JOIN SGW_BPM_REQUEST AS SWR WITH(NOLOCK) ON PMI.REQUEST_ID = SWR.REQUEST_ID  LEFT           &#xA;&#x9; JOIN SGT_PERSON AS P WITH(NOLOCK) ON P.PERSON_ID = PMI.PERSON_ID  &#xA;&#x9; LEFT JOIN SGT_ORGANIZATION AS O WITH(NOLOCK) ON O.ORG_ID = PMI.ORG_ID &#xA;&#x9; INNER JOIN SGV_Code_id_2021_3008 AS CV WITH(NOLOCK) ON SWR.SOURCE_ID = CV.CODE_ID AND SWR.SOURCE_VALUE = CV.CODE_VALUE &#xA;&#x9; INNER JOIN SGV_Code_id_2021_3008 AS PRICV WITH(NOLOCK) ON PRICV.CODE_ID = PMI.PRIORITY_CODE_ID AND PRICV.CODE_VALUE = PMI.PRIORITY_CODE_VALUE &#xA;&#x9; LEFT OUTER JOIN SGW_BPM_ACTIVITY_INST_USERS AS AIU WITH(NOLOCK) ON AIU.ACTIVITY_INSTANCE_ID = SAI.ACTIVITY_INSTANCE_ID &#xA;&#x9; LEFT OUTER JOIN SGW_BPM_CASE_INST_PARAMETER CIP1 ON (CIP1.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID AND CIP1.PARAMETER_NAME ='INS TANCEINFO1') &#xA;&#x9; LEFT OUTER JOIN SGW_BPM_CASE_INST_PARAMETER CIP2 ON (CIP2.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID AND CIP2.PARAMETER_NAME ='INS TANCEINFO2') &#xA;WHERE SAI.CHECKED_OUT_USER = @CHECKED_OUT_USER AND SAI.STATUS_VALUE IN ('PROC','CANC') AND SPI.STATUS_VALUE = 'INPC'&#xA;ORDER BY NULLS_LAST , SAI.DUE_DATE ASC" sfwOracle="SELECT&#xD;&#xA;&#x9; DISTINCT SA.PROCESS_ID,&#xD;&#xA;&#x9;SA.NAME,&#xD;&#xA;&#x9;SA.ACTIVITY_TYPE_VALUE,&#xD;&#xA;&#x9;SAI.*,&#xD;&#xA;&#x9;SPI.PROCESS_INSTANCE_ID,&#xD;&#xA;&#x9;PMI.PERSON_ID,&#xD;&#xA;&#x9;PMI.ORG_ID,&#xD;&#xA;&#x9;P.PERSON_ID,&#xD;&#xA;&#x9;P.FIRST_NAME,&#xD;&#xA;&#x9;P.LAST_NAME,&#xD;&#xA;&#x9;P.MIDDLE_NAME,&#xD;&#xA;&#x9;O.ORG_NAME,&#xD;&#xA;&#x9;O.ORG_CODE ,&#xD;&#xA;&#x9;SP.DESCRIPTION AS PROCESS_DESCRIPTION,&#xD;&#xA;&#x9;SP.NAME AS PROCESS_NAME,&#xD;&#xA;&#x9;CV.DESCRIPTION AS SOURCE_DESCRIPTION,&#xD;&#xA;&#x9;SWR.PERSON_ID,&#xD;&#xA;&#x9;CIP1.PARAMETER_VALUE AS INSTANCEINFO1, &#xD;&#xA;&#x9;CIP2.PARAMETER_VALUE AS INSTANCEINFO2,&#xD;&#xA;&#x9;PMI.PRIORITY_CODE_VALUE,&#xD;&#xA;&#x9;PRICV.DESCRIPTION AS PRIORITY_DESCRIPTION&#xD;&#xA;&#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE  SAI   &#xD;&#xA;&#x9; INNER JOIN SGW_BPM_PROCESS_INSTANCE   SPI ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID INNER     &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS   SP  ON SPI.PROCESS_ID = SP.PROCESS_ID INNER     &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY   SA  ON SPI.PROCESS_ID = SA.PROCESS_ID AND SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND SA.ACTIVITY_TYPE_VALUE = 'USTK' INNER           &#xD;&#xA;&#x9; JOIN SGW_BPM_CASE_INSTANCE   PMI ON PMI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xD;&#xA;&#x9; INNER JOIN SGW_BPM_REQUEST  SWR  ON PMI.REQUEST_ID = SWR.REQUEST_ID  LEFT           &#xD;&#xA;&#x9; JOIN SGT_PERSON  P   ON P.PERSON_ID = PMI.PERSON_ID  &#xD;&#xA;&#x9; LEFT JOIN SGT_ORGANIZATION  O   ON O.ORG_ID = PMI.ORG_ID &#xD;&#xA;&#x9; INNER JOIN SGS_CODE_VALUE  CV   ON SWR.SOURCE_ID = CV.CODE_ID AND SWR.SOURCE_VALUE = CV.CODE_VALUE&#xD;&#xA;&#x9; INNER JOIN SGS_CODE_VALUE  PRICV   ON PRICV.CODE_ID = PMI.PRIORITY_CODE_ID AND PRICV.CODE_VALUE = PMI.PRIORITY_CODE_VALUE&#xD;&#xA;&#x9; LEFT OUTER JOIN SGW_BPM_ACTIVITY_INST_USERS  AIU   ON AIU.ACTIVITY_INSTANCE_ID = SAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;&#x9; LEFT OUTER JOIN SGW_BPM_CASE_INST_PARAMETER CIP1 ON (CIP1.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID AND CIP1.PARAMETER_NAME ='INS TANCEINFO1') &#xD;&#xA;&#x9; LEFT OUTER JOIN SGW_BPM_CASE_INST_PARAMETER CIP2 ON (CIP2.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID AND CIP2.PARAMETER_NAME ='INS TANCEINFO2') &#xD;&#xA;&#xD;&#xA;WHERE&#xD;&#xA;&#x9; (AIU.USER_SERIAL_ID = @USER_SERIAL_ID OR (SAI.CHECKED_OUT_USER = @CHECKED_OUT_USER AND SAI.STATUS_VALUE IN ('INPC','RESU','SUSP'))) AND (SPI.STATUS_VALUE = 'INPC')&#xD;&#xA;   and  rownum &lt;= 300&#xD;&#xA;ORDER BY SAI.DUE_DATE ASC NULLS LAST" sfwPostgre="SELECT DISTINCT sa.process_id,&#xA;sa.name,&#xA;sa.activity_type_value,&#xA;sai.*,&#xA;spi.process_instance_id,&#xA;pmi.person_id,&#xA;pmi.org_id,&#xA;p.person_id,&#xA;p.first_name,&#xA;p.last_name,&#xA;p.middle_name,&#xA;o.org_name,&#xA;o.org_code,&#xA;sp.description AS process_description,&#xA;sp.name AS process_name,&#xA;cv.description AS source_description,&#xA;swr.person_id,&#xA;cip1.parameter_value AS instanceinfo1,&#xA;cip2.parameter_value AS instanceinfo2,&#xA;pmi.priority_code_value,&#xA;pricv.description AS priority_description&#xA;FROM dbo.sgw_bpm_activity_instance AS sai&#xA;INNER JOIN dbo.sgw_bpm_process_instance AS spi ON sai.process_instance_id = spi.process_instance_id&#xA;INNER JOIN dbo.sgw_bpm_process AS sp ON spi.process_id = sp.process_id&#xA;INNER JOIN dbo.sgw_bpm_activity AS sa ON spi.process_id = sa.process_id&#xA;AND sai.activity_id = sa.activity_id&#xA;AND sa.activity_type_value = 'USTK'&#xA;INNER JOIN dbo.sgw_bpm_case_instance AS pmi ON pmi.case_instance_id = spi.case_instance_id&#xA;INNER JOIN dbo.sgw_bpm_request AS swr ON pmi.request_id = swr.request_id&#xA;LEFT OUTER JOIN dbo.sgt_person AS p ON p.person_id = pmi.person_id&#xA;LEFT OUTER JOIN dbo.sgt_organization AS o ON o.org_id = pmi.org_id&#xA;INNER JOIN dbo.sgs_code_value AS cv ON swr.source_id = cv.code_id&#xA;AND swr.source_value = cv.code_value&#xA;INNER JOIN dbo.sgs_code_value AS pricv ON pricv.code_id = pmi.priority_code_id&#xA;AND pricv.code_value = pmi.priority_code_value::VARCHAR&#xA;LEFT OUTER JOIN dbo.sgw_bpm_activity_inst_users AS aiu ON aiu.activity_instance_id = sai.activity_instance_id&#xA;LEFT OUTER JOIN dbo.sgw_bpm_case_inst_parameter AS cip1 ON (cip1.case_instance_id = spi.case_instance_id&#xA;AND cip1.parameter_name = 'INS TANCEINFO1')&#xA;LEFT OUTER JOIN dbo.sgw_bpm_case_inst_parameter AS cip2 ON (cip2.case_instance_id = spi.case_instance_id&#xA;AND cip2.parameter_name = 'INS TANCEINFO2')&#xA;WHERE (aiu.user_serial_id = @USER_SERIAL_ID&#xA;OR (sai.checked_out_user = @CHECKED_OUT_USER&#xA;AND sai.status_value IN ('INPC',&#xA;'RESU',&#xA;'SUSP')))&#xA;AND (spi.status_value = 'INPC')&#xA;ORDER BY SAI.DUE_DATE ASC NULLS LAST">
      <parameters>
        <parameter ID="@USER_SERIAL_ID" sfwDataType="int" />
        <parameter ID="@CHECKED_OUT_USER" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="MyBasketOverdueWorkQuery" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xD;&#xA;&#x9; DISTINCT TOP 300 SA.PROCESS_ID,&#xD;&#xA;&#x9;SA.NAME,&#xD;&#xA;&#x9;SA.ACTIVITY_TYPE_VALUE,&#xD;&#xA;&#x9;SAI.*,&#xD;&#xA;&#x9;SPI.PROCESS_INSTANCE_ID,&#xD;&#xA;&#x9;PMI.PERSON_ID,&#xD;&#xA;&#x9;PMI.ORG_ID,&#xD;&#xA;&#x9;P.MPI_PERSON_ID,&#xD;&#xA;&#x9;P.FIRST_NAME,&#xD;&#xA;&#x9;P.LAST_NAME,&#xD;&#xA;&#x9;P.MIDDLE_NAME,&#xD;&#xA;&#x9;O.ORG_NAME,&#xD;&#xA;&#x9;O.MPI_ORG_ID ,&#xD;&#xA;&#x9;SWR.SOURCE_VALUE,&#xD;&#xA;&#x9;SP.DESCRIPTION AS PROCESS_DESCRIPTION,&#xD;&#xA;&#x9;SP.NAME AS PROCESS_NAME,&#xD;&#xA;&#x9;CV.DESCRIPTION AS SOURCE_DESCRIPTION,&#xD;&#xA;&#x9;SWR.PERSON_ID,&#xD;&#xA;&#x9;CIP1.PARAMETER_VALUE AS INSTANCEINFO1, &#xD;&#xA;&#x9;CIP2.PARAMETER_VALUE AS INSTANCEINFO2,&#xD;&#xA;&#x9;PMI.PRIORITY_CODE_VALUE,&#xD;&#xA;&#x9;PRICV.DESCRIPTION AS PRIORITY_DESCRIPTION,&#xD;&#xA;(CASE&#xD;&#xA;&#x9;&#x9;WHEN SAI.DUE_DATE IS NULL THEN 1&#xD;&#xA;&#x9;&#x9;ELSE 0&#xD;&#xA;&#x9;END) NULLS_LAST&#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE AS SAI WITH(NOLOCK)  &#xD;&#xA;&#x9; INNER JOIN SGW_BPM_PROCESS_INSTANCE  AS SPI WITH(NOLOCK) ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID INNER     &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS  AS SP WITH(NOLOCK) ON SPI.PROCESS_ID = SP.PROCESS_ID INNER     &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY  AS SA WITH(NOLOCK) ON SPI.PROCESS_ID = SA.PROCESS_ID AND SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND SA.ACTIVITY_TYPE_VALUE = 'USTK' INNER           &#xD;&#xA;&#x9; JOIN SGW_BPM_CASE_INSTANCE  AS PMI WITH(NOLOCK) ON PMI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xD;&#xA;&#x9; INNER JOIN SGW_BPM_REQUEST AS SWR WITH(NOLOCK) ON PMI.REQUEST_ID = SWR.REQUEST_ID  LEFT           &#xD;&#xA;&#x9; JOIN SGT_PERSON AS P WITH(NOLOCK) ON P.PERSON_ID = PMI.PERSON_ID  &#xD;&#xA;&#x9; LEFT JOIN SGT_ORGANIZATION AS O WITH(NOLOCK) ON O.ORG_ID = PMI.ORG_ID &#xD;&#xA;&#x9; INNER JOIN SGV_Code_id_2021_3008 AS CV WITH(NOLOCK) ON SWR.SOURCE_ID = CV.CODE_ID AND SWR.SOURCE_VALUE = CV.CODE_VALUE &#xD;&#xA;&#x9; INNER JOIN SGV_Code_id_2021_3008 AS PRICV WITH(NOLOCK) ON PRICV.CODE_ID = PMI.PRIORITY_CODE_ID AND PRICV.CODE_VALUE = PMI.PRIORITY_CODE_VALUE &#xD;&#xA;&#x9; LEFT OUTER JOIN SGW_BPM_ACTIVITY_INST_USERS AS AIU WITH(NOLOCK) ON AIU.ACTIVITY_INSTANCE_ID = SAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;&#x9; LEFT OUTER JOIN SGW_BPM_CASE_INST_PARAMETER CIP1 ON (CIP1.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID AND CIP1.PARAMETER_NAME ='INS TANCEINFO1') &#xD;&#xA;&#x9; LEFT OUTER JOIN SGW_BPM_CASE_INST_PARAMETER CIP2 ON (CIP2.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID AND CIP2.PARAMETER_NAME ='INS TANCEINFO2') &#xD;&#xA;WHERE SAI.CHECKED_OUT_USER = @CHECKED_OUT_USER AND SAI.STATUS_VALUE IN ('INPC','SUSP','RESU') AND SPI.STATUS_VALUE = 'INPC'&#xD;&#xA;&#x9;&#x9;AND  SAI.DUE_DATE &lt; GETDATE()&#xD;&#xA;ORDER BY NULLS_LAST , SAI.DUE_DATE ASC" sfwOracle="SELECT&#xD;&#xA;&#x9; DISTINCT SA.PROCESS_ID,&#xD;&#xA;&#x9;SA.NAME,&#xD;&#xA;&#x9;SA.ACTIVITY_TYPE_VALUE,&#xD;&#xA;&#x9;SAI.*,&#xD;&#xA;&#x9;SPI.PROCESS_INSTANCE_ID,&#xD;&#xA;&#x9;PMI.PERSON_ID,&#xD;&#xA;&#x9;PMI.ORG_ID,&#xD;&#xA;&#x9;P.PERSON_ID,&#xD;&#xA;&#x9;P.FIRST_NAME,&#xD;&#xA;&#x9;P.LAST_NAME,&#xD;&#xA;&#x9;P.MIDDLE_NAME,&#xD;&#xA;&#x9;O.ORG_NAME,&#xD;&#xA;&#x9;O.ORG_CODE ,&#xD;&#xA;&#x9;SP.DESCRIPTION AS PROCESS_DESCRIPTION,&#xD;&#xA;&#x9;SP.NAME AS PROCESS_NAME,&#xD;&#xA;&#x9;CV.DESCRIPTION AS SOURCE_DESCRIPTION,&#xD;&#xA;&#x9;SWR.PERSON_ID,&#xD;&#xA;&#x9;CIP1.PARAMETER_VALUE AS INSTANCEINFO1, &#xD;&#xA;&#x9;CIP2.PARAMETER_VALUE AS INSTANCEINFO2,&#xD;&#xA;&#x9;PMI.PRIORITY_CODE_VALUE,&#xD;&#xA;&#x9;PRICV.DESCRIPTION AS PRIORITY_DESCRIPTION&#xD;&#xA;&#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE  SAI   &#xD;&#xA;&#x9; INNER JOIN SGW_BPM_PROCESS_INSTANCE   SPI ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID INNER     &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS   SP  ON SPI.PROCESS_ID = SP.PROCESS_ID INNER     &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY   SA  ON SPI.PROCESS_ID = SA.PROCESS_ID AND SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND SA.ACTIVITY_TYPE_VALUE = 'USTK' INNER           &#xD;&#xA;&#x9; JOIN SGW_BPM_CASE_INSTANCE   PMI ON PMI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xD;&#xA;&#x9; INNER JOIN SGW_BPM_REQUEST  SWR  ON PMI.REQUEST_ID = SWR.REQUEST_ID  LEFT           &#xD;&#xA;&#x9; JOIN SGT_PERSON  P   ON P.PERSON_ID = PMI.PERSON_ID  &#xD;&#xA;&#x9; LEFT JOIN SGT_ORGANIZATION  O   ON O.ORG_ID = PMI.ORG_ID &#xD;&#xA;&#x9; INNER JOIN SGS_CODE_VALUE  CV   ON SWR.SOURCE_ID = CV.CODE_ID AND SWR.SOURCE_VALUE = CV.CODE_VALUE&#xD;&#xA;&#x9; INNER JOIN SGS_CODE_VALUE  PRICV   ON PRICV.CODE_ID = PMI.PRIORITY_CODE_ID AND PRICV.CODE_VALUE = PMI.PRIORITY_CODE_VALUE&#xD;&#xA;&#x9; LEFT OUTER JOIN SGW_BPM_ACTIVITY_INST_USERS  AIU   ON AIU.ACTIVITY_INSTANCE_ID = SAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;&#x9; LEFT OUTER JOIN SGW_BPM_CASE_INST_PARAMETER CIP1 ON (CIP1.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID AND CIP1.PARAMETER_NAME ='INS TANCEINFO1') &#xD;&#xA;&#x9; LEFT OUTER JOIN SGW_BPM_CASE_INST_PARAMETER CIP2 ON (CIP2.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID AND CIP2.PARAMETER_NAME ='INS TANCEINFO2') &#xD;&#xA;&#xD;&#xA;WHERE&#xD;&#xA;&#x9; (AIU.USER_SERIAL_ID = @USER_SERIAL_ID OR (SAI.CHECKED_OUT_USER = @CHECKED_OUT_USER AND SAI.STATUS_VALUE IN ('INPC','RESU','SUSP'))) AND (SPI.STATUS_VALUE = 'INPC')&#xD;&#xA;   and  rownum &lt;= 300&#xD;&#xA;ORDER BY SAI.DUE_DATE ASC NULLS LAST" sfwPostgre="SELECT DISTINCT sa.process_id,&#xA;sa.name,&#xA;sa.activity_type_value,&#xA;sai.*,&#xA;spi.process_instance_id,&#xA;pmi.person_id,&#xA;pmi.org_id,&#xA;p.person_id,&#xA;p.first_name,&#xA;p.last_name,&#xA;p.middle_name,&#xA;o.org_name,&#xA;o.org_code,&#xA;sp.description AS process_description,&#xA;sp.name AS process_name,&#xA;cv.description AS source_description,&#xA;swr.person_id,&#xA;cip1.parameter_value AS instanceinfo1,&#xA;cip2.parameter_value AS instanceinfo2,&#xA;pmi.priority_code_value,&#xA;pricv.description AS priority_description&#xA;FROM dbo.sgw_bpm_activity_instance AS sai&#xA;INNER JOIN dbo.sgw_bpm_process_instance AS spi ON sai.process_instance_id = spi.process_instance_id&#xA;INNER JOIN dbo.sgw_bpm_process AS sp ON spi.process_id = sp.process_id&#xA;INNER JOIN dbo.sgw_bpm_activity AS sa ON spi.process_id = sa.process_id&#xA;AND sai.activity_id = sa.activity_id&#xA;AND sa.activity_type_value = 'USTK'&#xA;INNER JOIN dbo.sgw_bpm_case_instance AS pmi ON pmi.case_instance_id = spi.case_instance_id&#xA;INNER JOIN dbo.sgw_bpm_request AS swr ON pmi.request_id = swr.request_id&#xA;LEFT OUTER JOIN dbo.sgt_person AS p ON p.person_id = pmi.person_id&#xA;LEFT OUTER JOIN dbo.sgt_organization AS o ON o.org_id = pmi.org_id&#xA;INNER JOIN dbo.sgs_code_value AS cv ON swr.source_id = cv.code_id&#xA;AND swr.source_value = cv.code_value&#xA;INNER JOIN dbo.sgs_code_value AS pricv ON pricv.code_id = pmi.priority_code_id&#xA;AND pricv.code_value = pmi.priority_code_value::VARCHAR&#xA;LEFT OUTER JOIN dbo.sgw_bpm_activity_inst_users AS aiu ON aiu.activity_instance_id = sai.activity_instance_id&#xA;LEFT OUTER JOIN dbo.sgw_bpm_case_inst_parameter AS cip1 ON (cip1.case_instance_id = spi.case_instance_id&#xA;AND cip1.parameter_name = 'INS TANCEINFO1')&#xA;LEFT OUTER JOIN dbo.sgw_bpm_case_inst_parameter AS cip2 ON (cip2.case_instance_id = spi.case_instance_id&#xA;AND cip2.parameter_name = 'INS TANCEINFO2')&#xA;WHERE (aiu.user_serial_id = @USER_SERIAL_ID&#xA;OR (sai.checked_out_user = @CHECKED_OUT_USER&#xA;AND sai.status_value IN ('INPC',&#xA;'RESU',&#xA;'SUSP')))&#xA;AND (spi.status_value = 'INPC')&#xA;ORDER BY SAI.DUE_DATE ASC NULLS LAST">
      <parameters>
        <parameter ID="@USER_SERIAL_ID" sfwDataType="int" />
        <parameter ID="@CHECKED_OUT_USER" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetCaseInstanceIdFromActivityInstance" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9;    case_instance_id   &#xA;FROM&#xA;&#x9;    sgw_bpm_activity_instance a WITH(NOLOCK) ,&#xA;&#x9;  sgw_bpm_process_instance b WITH(NOLOCK)   &#xA;WHERE&#xA;&#x9;    a.process_instance_id = b.process_instance_id AND&#xA;&#x9;    a.activity_instance_id = @activity_instance_id" sfwPostgre="SELECT&#xD;&#xA;&#x9;    case_instance_id   &#xD;&#xA;FROM&#xD;&#xA;&#x9;    sgw_bpm_activity_instance a  ,&#xD;&#xA;&#x9;  sgw_bpm_process_instance b  &#xD;&#xA;WHERE&#xD;&#xA;&#x9;    a.process_instance_id = b.process_instance_id AND&#xD;&#xA;&#x9;    a.activity_instance_id = @activity_instance_id">
      <parameters>
        <parameter ID="@activity_instance_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadActivityInstanceByProcessEventAndPerson" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  SAI.*&#xD;&#xA;FROM SGW_BPM_ACTIVITY_INSTANCE SAI&#xD;&#xA;INNER JOIN SGW_BPM_PROCESS_INSTANCE SPI ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID &#xD;&#xA;INNER JOIN SGW_BPM_CASE_INSTANCE SCI ON SCI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xD;&#xA;INNER JOIN SGW_BPM_PROCESS SP ON SPI.PROCESS_ID = SP.PROCESS_ID &#xD;&#xA;LEFT JOIN SGT_PERSON P ON P.PERSON_ID = SCI.PERSON_ID&#xD;&#xA;INNER JOIN SGW_BPM_EVENT SE ON SE.DOC_TYPE = @DOC_TYPE &#xD;&#xA;AND SCI.PERSON_ID = @PERSON_ID&#xD;&#xA;AND SPI.STATUS_VALUE = 'INPC'&#xD;&#xA;AND SP.PROCESS_ID = @PROCESS_ID&#xD;&#xA;AND SAI.ACTIVITY_ID = @ACTIVITY_ID &#xD;&#xA;WHERE SAI.STATUS_VALUE NOT IN ('CANC','PROC','FAIL','RWRK','RCHK', 'INPC')" sfwOracle="SELECT  SAI.*&#xD;&#xA;FROM SGW_BPM_ACTIVITY_INSTANCE SAI &#xD;&#xA;INNER JOIN SGW_BPM_PROCESS_INSTANCE SPI  ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID &#xD;&#xA;INNER JOIN SGW_BPM_CASE_INSTANCE SCI  ON SCI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xD;&#xA;INNER JOIN SGW_BPM_PROCESS SP  ON SPI.PROCESS_ID = SP.PROCESS_ID &#xD;&#xA;LEFT JOIN SGT_PERSON P  ON P.PERSON_ID = SCI.PERSON_ID&#xD;&#xA;INNER JOIN SGW_BPM_EVENT SE  ON SE.DOC_TYPE = @DOC_TYPE &#xD;&#xA;AND SCI.PERSON_ID = @PERSON_ID&#xD;&#xA;AND SPI.STATUS_VALUE = 'INPC'&#xD;&#xA;AND SP.PROCESS_ID = @PROCESS_ID&#xD;&#xA;AND SAI.ACTIVITY_ID = @ACTIVITY_ID &#xD;&#xA;WHERE SAI.STATUS_VALUE NOT IN ('CANC','PROC','FAIL','RWRK','RCHK', 'INPC')" sfwPostgre="SELECT  SAI.*&#xD;&#xA;FROM SGW_BPM_ACTIVITY_INSTANCE SAI&#xD;&#xA;INNER JOIN SGW_BPM_PROCESS_INSTANCE SPI ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID &#xD;&#xA;INNER JOIN SGW_BPM_CASE_INSTANCE SCI ON SCI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xD;&#xA;INNER JOIN SGW_BPM_PROCESS SP ON SPI.PROCESS_ID = SP.PROCESS_ID &#xD;&#xA;LEFT JOIN SGT_PERSON P ON P.PERSON_ID = SCI.PERSON_ID&#xD;&#xA;INNER JOIN SGW_BPM_EVENT SE ON SE.DOC_TYPE = @DOC_TYPE &#xD;&#xA;AND SCI.PERSON_ID = @PERSON_ID&#xD;&#xA;AND SPI.STATUS_VALUE = 'INPC'&#xD;&#xA;AND SP.PROCESS_ID = @PROCESS_ID&#xD;&#xA;AND SAI.ACTIVITY_ID = @ACTIVITY_ID &#xD;&#xA;WHERE SAI.STATUS_VALUE NOT IN ('CANC','PROC','FAIL','RWRK','RCHK', 'INPC')">
      <parameters>
        <parameter ID="@DOC_TYPE" sfwDataType="string" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PROCESS_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadActivityInstanceByProcessEventAndOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9;  SAI.* &#xA;FROM&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE SAI WITH(NOLOCK) &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE SPI WITH(NOLOCK)&#xA;&#x9; ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_CASE_INSTANCE SCI WITH(NOLOCK)&#xA;&#x9; ON SCI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_PROCESS SP WITH(NOLOCK)&#xA;&#x9; ON SPI.PROCESS_ID = SP.PROCESS_ID LEFT &#xA;&#x9; JOIN SGT_ORGANIZATION O WITH(NOLOCK)&#xA;&#x9; ON O.ORG_ID = SCI.ORG_ID &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_EVENT SE WITH(NOLOCK)&#xA;&#x9; ON SE.DOC_TYPE = @DOC_TYPE AND&#xA;&#x9; SCI.ORG_ID = @ORG_ID AND&#xA;&#x9; SPI.STATUS_VALUE = 'INPC' AND&#xA;&#x9; SP.PROCESS_ID = @PROCESS_ID AND&#xA;&#x9; SAI.ACTIVITY_ID = @ACTIVITY_ID &#xA;WHERE&#xA;&#x9; SAI.STATUS_VALUE NOT IN ('CANC',&#xA;&#x9;'PROC',&#xA;&#x9;'FAIL',&#xA;&#x9;'RWRK',&#xA;&#x9;'RCHK',&#xA;&#x9;'INPC')" sfwOracle="SELECT  SAI.*&#xD;&#xA;FROM SGW_BPM_ACTIVITY_INSTANCE SAI &#xD;&#xA;INNER JOIN SGW_BPM_PROCESS_INSTANCE SPI  ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID &#xD;&#xA;INNER JOIN SGW_BPM_CASE_INSTANCE SCI  ON SCI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xD;&#xA;INNER JOIN SGW_BPM_PROCESS SP  ON SPI.PROCESS_ID = SP.PROCESS_ID &#xD;&#xA;LEFT JOIN SGT_ORGANIZATION O  ON O.ORG_ID = SCI.ORG_ID&#xD;&#xA;INNER JOIN SGW_BPM_EVENT SE  ON SE.DOC_TYPE = @DOC_TYPE &#xD;&#xA;AND SCI.ORG_ID = @ORG_ID&#xD;&#xA;AND SPI.STATUS_VALUE = 'INPC'&#xD;&#xA;AND SP.PROCESS_ID = @PROCESS_ID&#xD;&#xA;AND SAI.ACTIVITY_ID = @ACTIVITY_ID&#xD;&#xA;WHERE SAI.STATUS_VALUE NOT IN ('CANC','PROC','FAIL','RWRK','RCHK', 'INPC')" sfwPostgre="SELECT&#xD;&#xA;&#x9;  SAI.* &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE SAI &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE SPI &#xD;&#xA;&#x9; ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_CASE_INSTANCE SCI &#xD;&#xA;&#x9; ON SCI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS SP &#xD;&#xA;&#x9; ON SPI.PROCESS_ID = SP.PROCESS_ID LEFT &#xD;&#xA;&#x9; JOIN SGT_ORGANIZATION O &#xD;&#xA;&#x9; ON O.ORG_ID = SCI.ORG_ID &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_EVENT SE &#xD;&#xA;&#x9; ON SE.DOC_TYPE = @DOC_TYPE AND&#xD;&#xA;&#x9; SCI.ORG_ID = @ORG_ID AND&#xD;&#xA;&#x9; SPI.STATUS_VALUE = 'INPC' AND&#xD;&#xA;&#x9; SP.PROCESS_ID = @PROCESS_ID AND&#xD;&#xA;&#x9; SAI.ACTIVITY_ID = @ACTIVITY_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; SAI.STATUS_VALUE NOT IN ('CANC',&#xD;&#xA;&#x9;'PROC',&#xD;&#xA;&#x9;'FAIL',&#xD;&#xA;&#x9;'RWRK',&#xD;&#xA;&#x9;'RCHK',&#xD;&#xA;&#x9;'INPC')">
      <parameters>
        <parameter ID="@DOC_TYPE" sfwDataType="string" />
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@PROCESS_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadIDBWorkFlowInstancesForPerson" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xD;&#xA;&#x9;   DISTINCT TOP (@MAX_RECORDS) SP.DESCRIPTION,&#xD;&#xA;&#x9;   SA.NAME,&#xD;&#xA;&#x9;   SAI.DUE_DATE,&#xD;&#xA;&#x9;   SAI.STATUS_ID,&#xD;&#xA;&#x9;   SAI.STATUS_VALUE,&#xD;&#xA;&#x9;   SAI.SUSPENSION_REASON_ID,&#xD;&#xA;&#x9;   SAI.SUSPENSION_REASON_VALUE,&#xD;&#xA;&#x9;   SAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE &#x9;AS SAI WITH(NOLOCK)  &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE  &#x9;AS SPI WITH(NOLOCK) &#xD;&#xA;&#x9; ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS  &#x9;AS SP WITH(NOLOCK) &#xD;&#xA;&#x9; ON SPI.PROCESS_ID = SP.PROCESS_ID &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY  &#x9;AS SA WITH(NOLOCK) &#xD;&#xA;&#x9; ON SPI.PROCESS_ID = SA.PROCESS_ID AND&#xD;&#xA;&#x9;   SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND&#xD;&#xA;&#x9;   SA.ACTIVITY_TYPE_VALUE = 'USTK' INNER       &#xD;&#xA;&#x9; JOIN SGW_BPM_CASE_INSTANCE  &#x9;AS PMI WITH(NOLOCK)     &#xD;&#xA;&#x9; ON PMI.CASE_INSTANCE_ID = SPI.case_INSTANCE_ID INNER       &#xD;&#xA;&#x9; JOIN SGW_BPM_REQUEST &#x9;AS SWR WITH(NOLOCK)      &#xD;&#xA;&#x9; ON PMI.REQUEST_ID = SWR.REQUEST_ID  LEFT       &#xD;&#xA;&#x9; JOIN SGT_PERSON &#x9;AS P WITH(NOLOCK)      &#xD;&#xA;&#x9; ON P.PERSON_ID = PMI.PERSON_ID  LEFT       &#xD;&#xA;&#x9; JOIN SGT_ORGANIZATION &#x9;AS O WITH(NOLOCK)      &#xD;&#xA;&#x9; ON O.ORG_ID = PMI.ORG_ID INNER       &#xD;&#xA;&#x9; JOIN SGS_CODE_VALUE &#x9;AS CV WITH(NOLOCK)      &#xD;&#xA;&#x9; ON SWR.SOURCE_ID = CV.CODE_ID AND&#xD;&#xA;&#x9;   SWR.SOURCE_VALUE = CV.CODE_VALUE &#xD;&#xA;WHERE&#xD;&#xA;&#x9;   ((SAI.CHECKED_OUT_USER = @CHECKED_OUT_USER OR SAI.CHECKED_OUT_USER IS NULL) AND&#xD;&#xA;&#x9;   SAI.STATUS_VALUE IN ('INPC','RESU','RWRK','RCHK','UNPC'))&#xD;&#xA;&#x9;    AND&#xD;&#xA;&#x9; (SPI.STATUS_VALUE = 'INPC') &#xD;&#xA;&#x9; AND PMI.PERSON_ID = @PERSON_ID" sfwOracle="SELECT DISTINCT SP.DESCRIPTION, SA.NAME,SAI.DUE_DATE, SAI.STATUS_ID, SAI.STATUS_VALUE, SAI.SUSPENSION_REASON_ID, SAI.SUSPENSION_REASON_VALUE, SAI.ACTIVITY_INSTANCE_ID&#xD;&#xA;FROM SGW_BPM_ACTIVITY_INSTANCE SAI&#xD;&#xA;&#x9;INNER JOIN SGW_BPM_PROCESS_INSTANCE SPI  ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID &#xD;&#xA;&#x9;INNER JOIN SGW_BPM_PROCESS SP  ON SPI.PROCESS_ID = SP.PROCESS_ID &#xD;&#xA;&#x9;INNER JOIN SGW_BPM_ACTIVITY SA  ON SPI.PROCESS_ID = SA.PROCESS_ID AND SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND SA.ACTIVITY_TYPE_VALUE = 'USTK' &#xD;&#xA;&#x9;INNER JOIN SGW_BPM_CASE_INSTANCE PMI   ON PMI.CASE_INSTANCE_ID = SPI.case_INSTANCE_ID &#xD;&#xA;&#x9;INNER JOIN SGW_BPM_REQUEST SWR   ON PMI.REQUEST_ID = SWR.REQUEST_ID  &#xD;&#xA;&#x9;LEFT JOIN SGT_PERSON P  ON P.PERSON_ID = PMI.PERSON_ID  &#xD;&#xA;&#x9;LEFT JOIN SGT_ORGANIZATION &#x9;O  ON O.ORG_ID = PMI.ORG_ID &#xD;&#xA;&#x9;INNER JOIN SGS_CODE_VALUE &#x9;CV  ON SWR.SOURCE_ID = CV.CODE_ID AND SWR.SOURCE_VALUE = CV.CODE_VALUE &#xD;&#xA;WHERE ((SAI.CHECKED_OUT_USER = @CHECKED_OUT_USER OR SAI.CHECKED_OUT_USER IS NULL) AND SAI.STATUS_VALUE IN ('INPC','RESU','RWRK','RCHK','UNPC')) &#xD;&#xA;&#x9;AND (SPI.STATUS_VALUE = 'INPC') AND PMI.PERSON_ID = @PERSON_ID&#xD;&#xA;FETCH NEXT @MAX_RECORDS ROWS ONLY" sfwPostgre="SELECT&#xD;&#xA;&#x9;   DISTINCT  SP.DESCRIPTION,&#xD;&#xA;&#x9;   SA.NAME,&#xD;&#xA;&#x9;   SAI.DUE_DATE,&#xD;&#xA;&#x9;   SAI.STATUS_ID,&#xD;&#xA;&#x9;   SAI.STATUS_VALUE,&#xD;&#xA;&#x9;   SAI.SUSPENSION_REASON_ID,&#xD;&#xA;&#x9;   SAI.SUSPENSION_REASON_VALUE,&#xD;&#xA;&#x9;   SAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE &#x9;AS SAI  &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE  &#x9;AS SPI  &#xD;&#xA;&#x9; ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS  &#x9;AS SP &#xD;&#xA;&#x9; ON SPI.PROCESS_ID = SP.PROCESS_ID &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY  &#x9;AS SA &#xD;&#xA;&#x9; ON SPI.PROCESS_ID = SA.PROCESS_ID AND&#xD;&#xA;&#x9;   SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND&#xD;&#xA;&#x9;   SA.ACTIVITY_TYPE_VALUE = 'USTK' INNER       &#xD;&#xA;&#x9; JOIN SGW_BPM_CASE_INSTANCE  &#x9;AS PMI      &#xD;&#xA;&#x9; ON PMI.CASE_INSTANCE_ID = SPI.case_INSTANCE_ID INNER       &#xD;&#xA;&#x9; JOIN SGW_BPM_REQUEST &#x9;AS SWR    &#xD;&#xA;&#x9; ON PMI.REQUEST_ID = SWR.REQUEST_ID  LEFT       &#xD;&#xA;&#x9; JOIN SGT_PERSON &#x9;AS P      &#xD;&#xA;&#x9; ON P.PERSON_ID = PMI.PERSON_ID  LEFT       &#xD;&#xA;&#x9; JOIN SGT_ORGANIZATION &#x9;AS O    &#xD;&#xA;&#x9; ON O.ORG_ID = PMI.ORG_ID INNER       &#xD;&#xA;&#x9; JOIN SGS_CODE_VALUE &#x9;AS CV     &#xD;&#xA;&#x9; ON SWR.SOURCE_ID = CV.CODE_ID AND&#xD;&#xA;&#x9;   SWR.SOURCE_VALUE = CV.CODE_VALUE &#xD;&#xA;WHERE&#xD;&#xA;&#x9;   ((SAI.CHECKED_OUT_USER = @CHECKED_OUT_USER OR SAI.CHECKED_OUT_USER IS NULL) AND&#xD;&#xA;&#x9;   SAI.STATUS_VALUE IN ('INPC','RESU','RWRK','RCHK','UNPC'))&#xD;&#xA;&#x9;    AND&#xD;&#xA;&#x9; (SPI.STATUS_VALUE = 'INPC') &#xD;&#xA;&#x9; AND PMI.PERSON_ID = @PERSON_ID limit  (@MAX_RECORDS)">
      <parameters>
        <parameter ID="@MAX_RECORDS" sfwDataType="int" />
        <parameter ID="@CHECKED_OUT_USER" sfwDataType="string" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetCountOfIDBWorkFlowInstancesForPerson" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; count(*) &#xA;FROM&#xA;&#x9; (SELECT&#xA;&#x9;   DISTINCT SP.DESCRIPTION,&#xA;&#x9;  SA.NAME,&#xA;&#x9;  SAI.DUE_DATE,&#xA;&#x9;  SAI.STATUS_ID,&#xA;&#x9;  SAI.STATUS_VALUE,&#xA;&#x9;  SAI.SUSPENSION_REASON_ID,&#xA;&#x9;  SAI.SUSPENSION_REASON_VALUE,&#xA;&#x9;  SAI.ACTIVITY_INSTANCE_ID &#xA;FROM&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE SAI WITH(NOLOCK) INNER  &#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE SPI WITH(NOLOCK)&#xA;&#x9; ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID INNER  &#xA;&#x9; JOIN SGW_BPM_PROCESS SP WITH(NOLOCK)&#xA;&#x9; ON SPI.PROCESS_ID = SP.PROCESS_ID INNER  &#xA;&#x9; JOIN SGW_BPM_ACTIVITY SA WITH(NOLOCK) &#xA;&#x9; ON SPI.PROCESS_ID = SA.PROCESS_ID AND&#xA;&#x9;   SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND&#xA;&#x9;   SA.ACTIVITY_TYPE_VALUE = 'USTK' INNER        &#xA;&#x9; JOIN SGW_BPM_CASE_INSTANCE PMI WITH(NOLOCK)    &#xA;&#x9; ON PMI.CASE_INSTANCE_ID = SPI.case_INSTANCE_ID INNER        &#xA;&#x9; JOIN SGW_BPM_REQUEST SWR WITH(NOLOCK)       &#xA;&#x9; ON PMI.REQUEST_ID = SWR.REQUEST_ID LEFT        &#xA;&#x9; JOIN SGT_PERSON P WITH(NOLOCK)      &#xA;&#x9; ON P.PERSON_ID = PMI.PERSON_ID  LEFT        &#xA;&#x9; JOIN SGT_ORGANIZATION O WITH(NOLOCK)      &#xA;&#x9; ON O.ORG_ID = PMI.ORG_ID INNER        &#xA;&#x9; JOIN SGS_CODE_VALUE CV WITH(NOLOCK)      &#xA;&#x9; ON SWR.SOURCE_ID = CV.CODE_ID AND&#xA;&#x9;   SWR.SOURCE_VALUE = CV.CODE_VALUE &#xA;WHERE&#xA;&#x9;   ((SAI.CHECKED_OUT_USER = @CHECKED_OUT_USER OR SAI.CHECKED_OUT_USER IS NULL) AND&#xA;&#x9;   SAI.STATUS_VALUE IN ('INPC',&#xA;&#x9;'RESU',&#xA;&#x9;'RWRK',&#xA;&#x9;'RCHK',&#xA;&#x9;'UNPC'))    AND&#xA;&#x9; (SPI.STATUS_VALUE = 'INPC')  AND&#xA;&#x9; PMI.PERSON_ID = @PERSON_ID ) BPM_ACTIVITY_INSTANCE" sfwOracle="SELECT count(*)&#xD;&#xA; FROM&#xD;&#xA; (SELECT&#xD;&#xA;&#x9;   DISTINCT SP.DESCRIPTION,&#xD;&#xA;&#x9;   SA.NAME,&#xD;&#xA;&#x9;   SAI.DUE_DATE,&#xD;&#xA;&#x9;   SAI.STATUS_ID,&#xD;&#xA;&#x9;   SAI.STATUS_VALUE,&#xD;&#xA;&#x9;   SAI.SUSPENSION_REASON_ID,&#xD;&#xA;&#x9;   SAI.SUSPENSION_REASON_VALUE,&#xD;&#xA;&#x9;   SAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE SAI   &#xD;&#xA;&#x9;INNER JOIN SGW_BPM_PROCESS_INSTANCE SPI  &#xD;&#xA;&#x9; ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID &#xD;&#xA;&#x9;INNER JOIN SGW_BPM_PROCESS SP  &#xD;&#xA;&#x9; ON SPI.PROCESS_ID = SP.PROCESS_ID &#xD;&#xA;&#x9;INNER JOIN SGW_BPM_ACTIVITY SA  &#xD;&#xA;&#x9; ON SPI.PROCESS_ID = SA.PROCESS_ID AND&#xD;&#xA;&#x9;   SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND&#xD;&#xA;&#x9;   SA.ACTIVITY_TYPE_VALUE = 'USTK' &#xD;&#xA;  INNER JOIN SGW_BPM_CASE_INSTANCE PMI      &#xD;&#xA;&#x9; ON PMI.CASE_INSTANCE_ID = SPI.case_INSTANCE_ID &#xD;&#xA;   INNER JOIN SGW_BPM_REQUEST SWR       &#xD;&#xA;&#x9; ON PMI.REQUEST_ID = SWR.REQUEST_ID &#xD;&#xA;   LEFT JOIN SGT_PERSON P&#xD;&#xA;&#x9; ON P.PERSON_ID = PMI.PERSON_ID&#xD;&#xA;   LEFT JOIN SGT_ORGANIZATION O&#xD;&#xA;&#x9; ON O.ORG_ID = PMI.ORG_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;&#x9; ON SWR.SOURCE_ID = CV.CODE_ID AND&#xD;&#xA;&#x9;   SWR.SOURCE_VALUE = CV.CODE_VALUE &#xD;&#xA;WHERE&#xD;&#xA;&#x9;   ((SAI.CHECKED_OUT_USER = @CHECKED_OUT_USER OR SAI.CHECKED_OUT_USER IS NULL) AND&#xD;&#xA;&#x9;   SAI.STATUS_VALUE IN ('INPC','RESU','RWRK','RCHK','UNPC'))&#xD;&#xA;&#x9;    AND&#xD;&#xA;&#x9; (SPI.STATUS_VALUE = 'INPC') &#xD;&#xA;&#x9; AND PMI.PERSON_ID = @PERSON_ID&#xD;&#xA;&#x9; ) BPM_ACTIVITY_INSTANCE" sfwPostgre="SELECT&#xD;&#xA;&#x9; count(*) &#xD;&#xA;FROM&#xD;&#xA;&#x9; (SELECT&#xD;&#xA;&#x9;   DISTINCT SP.DESCRIPTION,&#xD;&#xA;&#x9;  SA.NAME,&#xD;&#xA;&#x9;  SAI.DUE_DATE,&#xD;&#xA;&#x9;  SAI.STATUS_ID,&#xD;&#xA;&#x9;  SAI.STATUS_VALUE,&#xD;&#xA;&#x9;  SAI.SUSPENSION_REASON_ID,&#xD;&#xA;&#x9;  SAI.SUSPENSION_REASON_VALUE,&#xD;&#xA;&#x9;  SAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE SAI  INNER  &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE SPI &#xD;&#xA;&#x9; ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID INNER  &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS SP &#xD;&#xA;&#x9; ON SPI.PROCESS_ID = SP.PROCESS_ID INNER  &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY SA  &#xD;&#xA;&#x9; ON SPI.PROCESS_ID = SA.PROCESS_ID AND&#xD;&#xA;&#x9;   SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND&#xD;&#xA;&#x9;   SA.ACTIVITY_TYPE_VALUE = 'USTK' INNER        &#xD;&#xA;&#x9; JOIN SGW_BPM_CASE_INSTANCE PMI   &#xD;&#xA;&#x9; ON PMI.CASE_INSTANCE_ID = SPI.case_INSTANCE_ID INNER        &#xD;&#xA;&#x9; JOIN SGW_BPM_REQUEST SWR        &#xD;&#xA;&#x9; ON PMI.REQUEST_ID = SWR.REQUEST_ID LEFT        &#xD;&#xA;&#x9; JOIN SGT_PERSON P      &#xD;&#xA;&#x9; ON P.PERSON_ID = PMI.PERSON_ID  LEFT        &#xD;&#xA;&#x9; JOIN SGT_ORGANIZATION O      &#xD;&#xA;&#x9; ON O.ORG_ID = PMI.ORG_ID INNER        &#xD;&#xA;&#x9; JOIN SGS_CODE_VALUE CV     &#xD;&#xA;&#x9; ON SWR.SOURCE_ID = CV.CODE_ID AND&#xD;&#xA;&#x9;   SWR.SOURCE_VALUE = CV.CODE_VALUE &#xD;&#xA;WHERE&#xD;&#xA;&#x9;   ((SAI.CHECKED_OUT_USER = @CHECKED_OUT_USER OR SAI.CHECKED_OUT_USER IS NULL) AND&#xD;&#xA;&#x9;   SAI.STATUS_VALUE IN ('INPC',&#xD;&#xA;&#x9;'RESU',&#xD;&#xA;&#x9;'RWRK',&#xD;&#xA;&#x9;'RCHK',&#xD;&#xA;&#x9;'UNPC'))    AND&#xD;&#xA;&#x9; (SPI.STATUS_VALUE = 'INPC')  AND&#xD;&#xA;&#x9; PMI.PERSON_ID = @PERSON_ID ) BPM_ACTIVITY_INSTANCE">
      <parameters>
        <parameter ID="@CHECKED_OUT_USER" sfwDataType="string" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="BAMDetailsForAllCases" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9;ACTIVITY_INSTANCE_ID,&#xA;&#x9;PROCESS_NAME,&#xA;&#x9;ACTIVITY_NAME,&#xA;&#x9;DATEDIFF(day,START_DATE,END_DATE) &#x9;AS ELAPSED_DAYS,&#xA;&#x9;DATEDIFF(day,CHECKED_OUT_DATE,END_DATE) &#x9;AS USER_UTILIZED_DAYS,&#xA;&#x9;DATEDIFF(minute,START_DATE,END_DATE) &#x9;AS ELAPSED_TIME_IN_MINUTES,&#xA;&#x9;DATEDIFF(minute,CHECKED_OUT_DATE,END_DATE) &#x9;AS USER_UTILIZED_TIME_IN_MINUTES,&#xA;&#x9;DUE_DATE,&#xA;&#x9;CASE WHEN FIRST_NAME IS NULL THEN 'Un-Assigned' ELSE FIRST_NAME END &#x9;AS FIRST_NAME &#xA;FROM&#xA;&#x9; (SELECT&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID,&#xA;&#x9;BP.DESCRIPTION + '(Ver.' + CONVERT(VARCHAR,BC.VERSION) + ')' AS PROCESS_NAME ,&#xA;&#x9;BA.NAME &#x9;AS ACTIVITY_NAME,&#xA;&#x9;BAI.START_DATE &#x9;AS START_DATE,&#xA;&#x9;CASE WHEN BAI.END_DATE IS NULL THEN GETDATE() ELSE BAI.END_DATE END &#x9;AS END_DATE,&#xA;&#x9;BAI.CHECKED_OUT_DATE &#x9;AS CHECKED_OUT_DATE,&#xA;&#x9;BAI.DUE_DATE AS DUE_DATE,&#xA;&#x9;SU.FIRST_NAME &#xA;FROM&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE BAI WITH(NOLOCK) &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_ACTIVITY BA WITH(NOLOCK)&#xA;&#x9; ON BAI.ACTIVITY_ID = BA.ACTIVITY_ID AND&#xA;&#x9; BA.ACTIVITY_TYPE_VALUE IN ('USTK') &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI WITH(NOLOCK)&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID AND&#xA;&#x9; BPI.STATUS_VALUE = 'INPC' &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_PROCESS BP WITH(NOLOCK)&#xA;&#x9; ON BPI.PROCESS_ID = BP.PROCESS_ID &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_CASE BC WITH(NOLOCK)&#xA;&#x9; ON BP.CASE_ID = BC.CASE_ID LEFT &#xA;&#x9; JOIN SGS_USER SU WITH(NOLOCK)&#xA;&#x9; ON BAI.CHECKED_OUT_USER = SU.USER_ID &#xA;WHERE&#xA;&#x9; BAI.STATUS_VALUE IN ('INPC',&#xA;&#x9;'UNPC',&#xA;&#x9;'SUSP') ) &#x9;AS DATA" sfwOracle="SELECT ACTIVITY_INSTANCE_ID, PROCESS_NAME, ACTIVITY_NAME&#xD;&#xA;&#x9;, END_DATE - START_DATE AS ELAPSED_DAYS&#xD;&#xA;&#x9;, END_DATE-CHECKED_OUT_DATE AS USER_UTILIZED_DAYS&#xD;&#xA;&#x9;, ROUND(TO_NUMBER(END_DATE-START_DATE)*1440) AS ELAPSED_TIME_IN_MINUTES&#xD;&#xA;&#x9;, ROUND(TO_NUMBER(END_DATE - CHECKED_OUT_DATE)*1440) AS USER_UTILIZED_TIME_IN_MINUTES&#xD;&#xA;&#x9;, DUE_DATE, CASE WHEN FIRST_NAME IS NULL THEN 'Un-Assigned' ELSE FIRST_NAME END AS FIRST_NAME &#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA;&#x9;SELECT BAI.ACTIVITY_INSTANCE_ID, BP.DESCRIPTION || '(Ver.' || CAST(BC.VERSION AS VARCHAR(10)) || ')' AS PROCESS_NAME &#xD;&#xA;    , BA.NAME AS ACTIVITY_NAME, BAI.START_DATE AS START_DATE&#xD;&#xA;&#x9;, CASE WHEN BAI.END_DATE IS NULL THEN SYSDT ELSE BAI.END_DATE END AS END_DATE&#xD;&#xA;&#x9;, BAI.CHECKED_OUT_DATE &#x9;AS CHECKED_OUT_DATE, BAI.DUE_DATE AS DUE_DATE, SU.FIRST_NAME &#xD;&#xA;&#x9;FROM SGW_BPM_ACTIVITY_INSTANCE BAI  &#xD;&#xA;&#x9;&#x9;JOIN &#xD;&#xA;&#x9;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;SELECT TO_DATE(UDF_GET_SYSTEM_DATE('Y'),'MM-DD-YYYY') AS SYSDT FROM DUAL&#xD;&#xA;&#x9;&#x9;) DT ON 1=1&#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_ACTIVITY BA  ON BAI.ACTIVITY_ID = BA.ACTIVITY_ID AND BA.ACTIVITY_TYPE_VALUE IN ('USTK') &#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS_INSTANCE BPI  ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID AND BPI.STATUS_VALUE = 'INPC' &#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS BP  ON BPI.PROCESS_ID = BP.PROCESS_ID &#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_CASE BC  ON BP.CASE_ID = BC.CASE_ID &#xD;&#xA;&#x9;&#x9;LEFT JOIN SGS_USER SU  ON BAI.CHECKED_OUT_USER = SU.USER_ID &#xD;&#xA;&#x9;WHERE BAI.STATUS_VALUE IN ('INPC', &#x9;'UNPC', &#x9;'SUSP') &#xD;&#xA;)A" sfwPostgre="SELECT&#xD;&#xA;&#x9;ACTIVITY_INSTANCE_ID,&#xD;&#xA;&#x9;PROCESS_NAME,&#xD;&#xA;&#x9;ACTIVITY_NAME,&#xD;&#xA;&#x9;DATE_PART('day',END_DATE-START_DATE) &#x9;AS ELAPSED_DAYS,&#xD;&#xA;&#x9;DATE_PART('day',END_DATE-CHECKED_OUT_DATE) &#x9;AS USER_UTILIZED_DAYS,&#xD;&#xA;&#x9;DATE_PART('minute',END_DATE-START_DATE) &#x9;AS ELAPSED_TIME_IN_MINUTES,&#xD;&#xA;&#x9;DATE_PART('minute',END_DATE-CHECKED_OUT_DATE) &#x9;AS USER_UTILIZED_TIME_IN_MINUTES,&#xD;&#xA;&#x9;DUE_DATE,&#xD;&#xA;&#x9;CASE WHEN FIRST_NAME IS NULL THEN 'Un-Assigned' ELSE FIRST_NAME END &#x9;AS FIRST_NAME &#xD;&#xA;FROM&#xD;&#xA;&#x9; (SELECT&#xD;&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID,&#xD;&#xA;&#x9;bp.description || '(Ver.' || CAST (bc.version AS VARCHAR(30)) || ')' AS process_name, &#xD;&#xA;&#x9;BA.NAME &#x9;AS ACTIVITY_NAME,&#xD;&#xA;&#x9;BAI.START_DATE &#x9;AS START_DATE,&#xD;&#xA;&#x9;CASE WHEN BAI.END_DATE IS NULL THEN now() ELSE BAI.END_DATE END &#x9;AS END_DATE,&#xD;&#xA;&#x9;BAI.CHECKED_OUT_DATE &#x9;AS CHECKED_OUT_DATE,&#xD;&#xA;&#x9;BAI.DUE_DATE AS DUE_DATE,&#xD;&#xA;&#x9;SU.FIRST_NAME &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE BAI &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY BA &#xD;&#xA;&#x9; ON BAI.ACTIVITY_ID = BA.ACTIVITY_ID AND&#xD;&#xA;&#x9; BA.ACTIVITY_TYPE_VALUE IN ('USTK') &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI &#xD;&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID AND&#xD;&#xA;&#x9; BPI.STATUS_VALUE = 'INPC' &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS BP &#xD;&#xA;&#x9; ON BPI.PROCESS_ID = BP.PROCESS_ID &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_CASE BC &#xD;&#xA;&#x9; ON BP.CASE_ID = BC.CASE_ID LEFT &#xD;&#xA;&#x9; JOIN SGS_USER SU &#xD;&#xA;&#x9; ON BAI.CHECKED_OUT_USER = SU.USER_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; BAI.STATUS_VALUE IN ('INPC',&#xD;&#xA;&#x9;'UNPC',&#xD;&#xA;&#x9;'SUSP') ) &#x9;AS DATA">
      <parameters />
    </query>
    <query ID="BAMDetailsForCaseId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9;ACTIVITY_INSTANCE_ID,&#xA;&#x9;PROCESS_NAME,&#xA;&#x9;ACTIVITY_NAME,&#xA;&#x9;DATEDIFF(day,START_DATE,END_DATE) &#x9;AS ELAPSED_DAYS,&#xA;&#x9;DATEDIFF(day,CHECKED_OUT_DATE,END_DATE) &#x9;AS USER_UTILIZED_DAYS,&#xA;&#x9;DATEDIFF(minute,START_DATE,END_DATE) &#x9;AS ELAPSED_TIME_IN_MINUTES,&#xA;&#x9;DATEDIFF(minute,CHECKED_OUT_DATE,END_DATE) &#x9;AS USER_UTILIZED_TIME_IN_MINUTES,&#xA;&#x9;DUE_DATE,&#xA;&#x9;CASE WHEN FIRST_NAME IS NULL THEN 'Un-Assigned' ELSE FIRST_NAME END &#x9;AS FIRST_NAME  &#xA;FROM&#xA;&#x9; (SELECT&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID,&#xA;&#x9;BP.DESCRIPTION + '(Ver.' + CONVERT(VARCHAR,BC.VERSION) + ')' AS PROCESS_NAME ,&#xA;&#x9;BA.NAME &#x9;AS ACTIVITY_NAME,&#xA;&#x9;BAI.START_DATE &#x9;AS START_DATE,&#xA;&#x9;CASE WHEN BAI.END_DATE IS NULL THEN GETDATE() ELSE BAI.END_DATE END &#x9;AS END_DATE,&#xA;&#x9;BAI.CHECKED_OUT_DATE &#x9;AS CHECKED_OUT_DATE,&#xA;&#x9;BAI.DUE_DATE AS DUE_DATE,&#xA;&#x9;SU.FIRST_NAME &#xA;FROM&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE BAI WITH(NOLOCK) &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_ACTIVITY BA WITH(NOLOCK)&#xA;&#x9; ON BAI.ACTIVITY_ID = BA.ACTIVITY_ID AND&#xA;&#x9; BA.ACTIVITY_TYPE_VALUE IN ('USTK') &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI WITH(NOLOCK)&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID AND&#xA;&#x9; BPI.STATUS_VALUE = 'INPC' &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_PROCESS BP WITH(NOLOCK)&#xA;&#x9; ON BPI.PROCESS_ID = BP.PROCESS_ID &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_CASE BC WITH(NOLOCK)&#xA;&#x9; ON BP.CASE_ID = BC.CASE_ID LEFT &#xA;&#x9; JOIN SGS_USER SU WITH(NOLOCK)&#xA;&#x9; ON BAI.CHECKED_OUT_USER = SU.USER_ID &#xA;WHERE&#xA;&#x9; BAI.STATUS_VALUE IN ('INPC',&#xA;&#x9;'UNPC',&#xA;&#x9;'SUSP') AND&#xA;&#x9; BC.CASE_ID = @CASE_ID ) &#x9;AS DATA" sfwOracle="SELECT ACTIVITY_INSTANCE_ID, PROCESS_NAME, ACTIVITY_NAME&#xD;&#xA;&#x9;, END_DATE - START_DATE AS ELAPSED_DAYS&#xD;&#xA;&#x9;, END_DATE-CHECKED_OUT_DATE AS USER_UTILIZED_DAYS&#xD;&#xA;&#x9;, ROUND(TO_NUMBER(END_DATE-START_DATE)*1440) AS ELAPSED_TIME_IN_MINUTES&#xD;&#xA;&#x9;, ROUND(TO_NUMBER(END_DATE - CHECKED_OUT_DATE)*1440) AS USER_UTILIZED_TIME_IN_MINUTES&#xD;&#xA;&#x9;, DUE_DATE, CASE WHEN FIRST_NAME IS NULL THEN 'Un-Assigned' ELSE FIRST_NAME END AS FIRST_NAME &#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA;&#x9;SELECT BAI.ACTIVITY_INSTANCE_ID, BP.DESCRIPTION || '(Ver.' || CAST(BC.VERSION AS VARCHAR(10)) || ')' AS PROCESS_NAME &#xD;&#xA;    , BA.NAME AS ACTIVITY_NAME, BAI.START_DATE AS START_DATE&#xD;&#xA;&#x9;, CASE WHEN BAI.END_DATE IS NULL THEN SYSDT ELSE BAI.END_DATE END AS END_DATE&#xD;&#xA;&#x9;, BAI.CHECKED_OUT_DATE &#x9;AS CHECKED_OUT_DATE, BAI.DUE_DATE AS DUE_DATE, SU.FIRST_NAME &#xD;&#xA;&#x9;FROM SGW_BPM_ACTIVITY_INSTANCE BAI  &#xD;&#xA;&#x9;&#x9;JOIN &#xD;&#xA;&#x9;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;SELECT TO_DATE(UDF_GET_SYSTEM_DATE('Y'),'MM-DD-YYYY') AS SYSDT FROM DUAL&#xD;&#xA;&#x9;&#x9;) DT ON 1=1&#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_ACTIVITY BA  ON BAI.ACTIVITY_ID = BA.ACTIVITY_ID AND BA.ACTIVITY_TYPE_VALUE IN ('USTK') &#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS_INSTANCE BPI  ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID AND BPI.STATUS_VALUE = 'INPC' &#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS BP  ON BPI.PROCESS_ID = BP.PROCESS_ID &#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_CASE BC  ON BP.CASE_ID = BC.CASE_ID &#xD;&#xA;&#x9;&#x9;LEFT JOIN SGS_USER SU  ON BAI.CHECKED_OUT_USER = SU.USER_ID &#xD;&#xA;&#x9;WHERE BAI.STATUS_VALUE IN ('INPC', &#x9;'UNPC', &#x9;'SUSP') AND  BC.CASE_ID = COALESCE(@CASE_ID, BC.CASE_ID)&#xD;&#xA;)A" sfwPostgre="SELECT&#xD;&#xA;&#x9;ACTIVITY_INSTANCE_ID,&#xD;&#xA;&#x9;PROCESS_NAME,&#xD;&#xA;&#x9;ACTIVITY_NAME,&#x9;&#xD;&#xA;&#x9;DATE_PART('day',END_DATE-START_DATE) &#x9;AS ELAPSED_DAYS,&#xD;&#xA;&#x9;DATE_PART('day',END_DATE-CHECKED_OUT_DATE) &#x9;AS USER_UTILIZED_DAYS,&#xD;&#xA;&#x9;DATE_PART('minute',END_DATE-START_DATE) &#x9;AS ELAPSED_TIME_IN_MINUTES,&#xD;&#xA;&#x9;DATE_PART('minute',END_DATE-CHECKED_OUT_DATE) &#x9;AS USER_UTILIZED_TIME_IN_MINUTES,&#xD;&#xA;&#x9;DUE_DATE,&#xD;&#xA;&#x9;CASE WHEN FIRST_NAME IS NULL THEN 'Un-Assigned' ELSE FIRST_NAME END &#x9;AS FIRST_NAME  &#xD;&#xA;FROM&#xD;&#xA;&#x9; (SELECT&#xD;&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID,&#xD;&#xA;&#x9;bp.description || '(Ver.' || CAST (bc.version AS VARCHAR(30)) || ')' AS process_name,  &#xD;&#xA;&#x9;BA.NAME &#x9;AS ACTIVITY_NAME,&#xD;&#xA;&#x9;BAI.START_DATE &#x9;AS START_DATE,&#xD;&#xA;&#x9;CASE WHEN BAI.END_DATE IS NULL THEN now() ELSE BAI.END_DATE END &#x9;AS END_DATE,&#xD;&#xA;&#x9;BAI.CHECKED_OUT_DATE &#x9;AS CHECKED_OUT_DATE,&#xD;&#xA;&#x9;BAI.DUE_DATE AS DUE_DATE,&#xD;&#xA;&#x9;SU.FIRST_NAME &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE BAI &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY BA &#xD;&#xA;&#x9; ON BAI.ACTIVITY_ID = BA.ACTIVITY_ID AND&#xD;&#xA;&#x9; BA.ACTIVITY_TYPE_VALUE IN ('USTK') &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI &#xD;&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID AND&#xD;&#xA;&#x9; BPI.STATUS_VALUE = 'INPC' &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS BP &#xD;&#xA;&#x9; ON BPI.PROCESS_ID = BP.PROCESS_ID &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_CASE BC &#xD;&#xA;&#x9; ON BP.CASE_ID = BC.CASE_ID LEFT &#xD;&#xA;&#x9; JOIN SGS_USER SU &#xD;&#xA;&#x9; ON BAI.CHECKED_OUT_USER = SU.USER_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; BAI.STATUS_VALUE IN ('INPC',&#xD;&#xA;&#x9;'UNPC',&#xD;&#xA;&#x9;'SUSP') AND&#xD;&#xA;&#x9; BC.CASE_ID = @CASE_ID ) &#x9;AS DATA">
      <parameters>
        <parameter ID="@CASE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="BAMDetailsForCaseIdAndProcessId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9;ACTIVITY_INSTANCE_ID,&#xA;&#x9;PROCESS_NAME,&#xA;&#x9;ACTIVITY_NAME,&#xA;&#x9;DATEDIFF(day,START_DATE,END_DATE) &#x9;AS ELAPSED_DAYS,&#xA;&#x9;DATEDIFF(day,CHECKED_OUT_DATE,END_DATE) &#x9;AS USER_UTILIZED_DAYS,&#xA;&#x9;DATEDIFF(minute,START_DATE,END_DATE) &#x9;AS ELAPSED_TIME_IN_MINUTES,&#xA;&#x9;DATEDIFF(minute,CHECKED_OUT_DATE,END_DATE) &#x9;AS USER_UTILIZED_TIME_IN_MINUTES,&#xA;&#x9;DUE_DATE,&#xA;&#x9;CASE WHEN FIRST_NAME IS NULL THEN 'Un-Assigned' ELSE FIRST_NAME END &#x9;AS FIRST_NAME &#xA;FROM&#xA;&#x9; (SELECT&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID,&#xA;&#x9;BP.DESCRIPTION + '(Ver.' + CONVERT(VARCHAR,BC.VERSION) + ')' AS PROCESS_NAME ,&#xA;&#x9;BA.NAME &#x9;AS ACTIVITY_NAME,&#xA;&#x9;BAI.START_DATE &#x9;AS START_DATE,&#xA;&#x9;CASE WHEN BAI.END_DATE IS NULL THEN GETDATE() ELSE BAI.END_DATE END &#x9;AS END_DATE,&#xA;&#x9;BAI.CHECKED_OUT_DATE &#x9;AS CHECKED_OUT_DATE,&#xA;&#x9;BAI.DUE_DATE AS DUE_DATE,&#xA;&#x9;SU.FIRST_NAME &#xA;FROM&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE BAI WITH(NOLOCK) &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_ACTIVITY BA WITH(NOLOCK)&#xA;&#x9; ON BAI.ACTIVITY_ID = BA.ACTIVITY_ID AND&#xA;&#x9; BA.ACTIVITY_TYPE_VALUE IN ('USTK') &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI WITH(NOLOCK)&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID AND&#xA;&#x9; BPI.STATUS_VALUE = 'INPC' &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_PROCESS BP WITH(NOLOCK)&#xA;&#x9; ON BPI.PROCESS_ID = BP.PROCESS_ID &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_CASE BC WITH(NOLOCK)&#xA;&#x9; ON BP.CASE_ID = BC.CASE_ID LEFT &#xA;&#x9; JOIN SGS_USER SU WITH(NOLOCK)&#xA;&#x9; ON BAI.CHECKED_OUT_USER = SU.USER_ID &#xA;WHERE&#xA;&#x9; BAI.STATUS_VALUE IN ('INPC',&#xA;&#x9;'UNPC',&#xA;&#x9;'SUSP') AND&#xA;&#x9; BC.CASE_ID = @CASE_ID AND&#xA;&#x9; BP.PROCESS_ID = @PROCESS_ID ) &#x9;AS DATA" sfwOracle="SELECT ACTIVITY_INSTANCE_ID, PROCESS_NAME, ACTIVITY_NAME&#xD;&#xA;&#x9;, END_DATE - START_DATE AS ELAPSED_DAYS&#xD;&#xA;&#x9;, END_DATE-CHECKED_OUT_DATE AS USER_UTILIZED_DAYS&#xD;&#xA;&#x9;, ROUND(TO_NUMBER(END_DATE-START_DATE)*1440) AS ELAPSED_TIME_IN_MINUTES&#xD;&#xA;&#x9;, ROUND(TO_NUMBER(END_DATE - CHECKED_OUT_DATE)*1440) AS USER_UTILIZED_TIME_IN_MINUTES&#xD;&#xA;&#x9;, DUE_DATE, CASE WHEN FIRST_NAME IS NULL THEN 'Un-Assigned' ELSE FIRST_NAME END AS FIRST_NAME &#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA;&#x9;SELECT BAI.ACTIVITY_INSTANCE_ID, BP.DESCRIPTION || '(Ver.' || CAST(BC.VERSION AS VARCHAR(10)) || ')' AS PROCESS_NAME &#xD;&#xA;    , BA.NAME AS ACTIVITY_NAME, BAI.START_DATE AS START_DATE&#xD;&#xA;&#x9;, CASE WHEN BAI.END_DATE IS NULL THEN SYSDT ELSE BAI.END_DATE END AS END_DATE&#xD;&#xA;&#x9;, BAI.CHECKED_OUT_DATE &#x9;AS CHECKED_OUT_DATE, BAI.DUE_DATE AS DUE_DATE, SU.FIRST_NAME &#xD;&#xA;&#x9;FROM SGW_BPM_ACTIVITY_INSTANCE BAI  &#xD;&#xA;&#x9;&#x9;JOIN &#xD;&#xA;&#x9;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;SELECT TO_DATE(UDF_GET_SYSTEM_DATE('Y'),'MM-DD-YYYY') AS SYSDT FROM DUAL&#xD;&#xA;&#x9;&#x9;) DT ON 1=1&#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_ACTIVITY BA  ON BAI.ACTIVITY_ID = BA.ACTIVITY_ID AND BA.ACTIVITY_TYPE_VALUE IN ('USTK') &#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS_INSTANCE BPI  ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID AND BPI.STATUS_VALUE = 'INPC' &#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS BP  ON BPI.PROCESS_ID = BP.PROCESS_ID &#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_CASE BC  ON BP.CASE_ID = BC.CASE_ID &#xD;&#xA;&#x9;&#x9;LEFT JOIN SGS_USER SU  ON BAI.CHECKED_OUT_USER = SU.USER_ID &#xD;&#xA;&#x9;WHERE BAI.STATUS_VALUE IN ('INPC', &#x9;'UNPC', &#x9;'SUSP') &#xD;&#xA;&#x9;    AND  BC.CASE_ID = COALESCE(@CASE_ID, BC.CASE_ID) AND BP.PROCESS_ID = COALESCE(@PROCESS_ID, BP.PROCESS_ID)&#xD;&#xA;)A" sfwPostgre="SELECT&#xD;&#xA;&#x9;ACTIVITY_INSTANCE_ID,&#xD;&#xA;&#x9;PROCESS_NAME,&#xD;&#xA;&#x9;ACTIVITY_NAME,&#x9;&#xD;&#xA;&#x9;DATE_PART('day',END_DATE-START_DATE) &#x9;AS ELAPSED_DAYS,&#xD;&#xA;&#x9;DATE_PART('day',END_DATE-CHECKED_OUT_DATE) &#x9;AS USER_UTILIZED_DAYS,&#xD;&#xA;&#x9;DATE_PART('minute',END_DATE-START_DATE) &#x9;AS ELAPSED_TIME_IN_MINUTES,&#xD;&#xA;&#x9;DATE_PART('minute',END_DATE-CHECKED_OUT_DATE) &#x9;AS USER_UTILIZED_TIME_IN_MINUTES,&#xD;&#xA;&#x9;DUE_DATE,&#xD;&#xA;&#x9;CASE WHEN FIRST_NAME IS NULL THEN 'Un-Assigned' ELSE FIRST_NAME END &#x9;AS FIRST_NAME &#xD;&#xA;FROM&#xD;&#xA;&#x9; (SELECT&#xD;&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID,&#xD;&#xA;&#x9;bp.description || '(Ver.' || CAST (bc.version AS VARCHAR(30)) || ')' AS process_name,&#xD;&#xA;&#x9;BA.NAME &#x9;AS ACTIVITY_NAME,&#xD;&#xA;&#x9;BAI.START_DATE &#x9;AS START_DATE,&#xD;&#xA;&#x9;CASE WHEN BAI.END_DATE IS NULL THEN now() ELSE BAI.END_DATE END &#x9;AS END_DATE,&#xD;&#xA;&#x9;BAI.CHECKED_OUT_DATE &#x9;AS CHECKED_OUT_DATE,&#xD;&#xA;&#x9;BAI.DUE_DATE AS DUE_DATE,&#xD;&#xA;&#x9;SU.FIRST_NAME &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE BAI &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY BA &#xD;&#xA;&#x9; ON BAI.ACTIVITY_ID = BA.ACTIVITY_ID AND&#xD;&#xA;&#x9; BA.ACTIVITY_TYPE_VALUE IN ('USTK') &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI &#xD;&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID AND&#xD;&#xA;&#x9; BPI.STATUS_VALUE = 'INPC' &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS BP &#xD;&#xA;&#x9; ON BPI.PROCESS_ID = BP.PROCESS_ID &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_CASE BC &#xD;&#xA;&#x9; ON BP.CASE_ID = BC.CASE_ID LEFT &#xD;&#xA;&#x9; JOIN SGS_USER SU &#xD;&#xA;&#x9; ON BAI.CHECKED_OUT_USER = SU.USER_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; BAI.STATUS_VALUE IN ('INPC',&#xD;&#xA;&#x9;'UNPC',&#xD;&#xA;&#x9;'SUSP') AND&#xD;&#xA;&#x9; BC.CASE_ID = @CASE_ID AND&#xD;&#xA;&#x9; BP.PROCESS_ID = @PROCESS_ID ) &#x9;AS DATA">
      <parameters>
        <parameter ID="@CASE_ID" sfwDataType="int" />
        <parameter ID="@PROCESS_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="BAMDetailsForUserId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; ACTIVITY_INSTANCE_ID,&#xA;&#x9;PROCESS_NAME,&#xA;&#x9;PROCESS_ID,&#xA;&#x9;ACTIVITY_NAME,&#xA;&#x9;ACTIVITY_ID,&#xA;&#x9;DATEDIFF(day,&#xA;&#x9;START_DATE,&#xA;&#x9;END_DATE) &#x9;AS ELAPSED_DAYS,&#xA;&#x9;DATEDIFF(day,&#xA;&#x9;CHECKED_OUT_DATE,&#xA;&#x9;END_DATE) &#x9;AS USER_UTILIZED_DAYS,&#xA;&#x9;DATEDIFF(minute,&#xA;&#x9;START_DATE,&#xA;&#x9;END_DATE) &#x9;AS ELAPSED_TIME_IN_MINUTES,&#xA;&#x9;DATEDIFF(minute,&#xA;&#x9;CHECKED_OUT_DATE,&#xA;&#x9;END_DATE) &#x9;AS USER_UTILIZED_TIME_IN_MINUTES,&#xA;&#x9;DUE_DATE,&#xA;&#x9;CASE WHEN FIRST_NAME IS NULL THEN 'Un-Assigned' ELSE FIRST_NAME END &#x9;AS FIRST_NAME &#xA;FROM&#xA;&#x9; (SELECT&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID,&#xA;&#x9;BP.DESCRIPTION + '(Ver.' + CONVERT(VARCHAR,&#xA;&#x9;BC.VERSION) + ')' &#x9;AS PROCESS_NAME ,&#xA;&#x9;BP.PROCESS_ID,&#xA;&#x9;BA.ACTIVITY_ID,&#xA;&#x9;BA.NAME &#x9;AS ACTIVITY_NAME,&#xA;&#x9;BAI.START_DATE &#x9;AS START_DATE,&#xA;&#x9;CASE WHEN BAI.END_DATE IS NULL THEN GETDATE() ELSE BAI.END_DATE END &#x9;AS END_DATE,&#xA;&#x9;BAI.CHECKED_OUT_DATE &#x9;AS CHECKED_OUT_DATE,&#xA;&#x9;BAI.DUE_DATE &#x9;AS DUE_DATE,&#xA;&#x9;SU.FIRST_NAME &#xA;FROM&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE BAI WITH(NOLOCK)  INNER  &#xA;&#x9; JOIN SGW_BPM_ACTIVITY BA WITH(NOLOCK) &#xA;&#x9; ON BAI.ACTIVITY_ID = BA.ACTIVITY_ID AND&#xA;&#x9; BA.ACTIVITY_TYPE_VALUE IN ('USTK') INNER  &#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI WITH(NOLOCK) &#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID AND&#xA;&#x9; BPI.STATUS_VALUE = 'INPC' INNER  &#xA;&#x9; JOIN SGW_BPM_PROCESS BP WITH(NOLOCK) &#xA;&#x9; ON BPI.PROCESS_ID = BP.PROCESS_ID INNER  &#xA;&#x9; JOIN SGW_BPM_CASE BC WITH(NOLOCK) &#xA;&#x9; ON BP.CASE_ID = BC.CASE_ID LEFT  &#xA;&#x9; JOIN SGS_USER SU WITH(NOLOCK) &#xA;&#x9; ON BAI.CHECKED_OUT_USER = SU.USER_ID &#xA;WHERE&#xA;&#x9; BAI.STATUS_VALUE IN ('INPC',&#xA;&#x9;'UNPC',&#xA;&#x9;'SUSP') AND&#xA;&#x9; SU.USER_ID = @USER_ID ) &#x9;AS DATA &#xA;order&#x9; BY  PROCESS_ID;" sfwOracle="SELECT ACTIVITY_INSTANCE_ID, PROCESS_NAME, ACTIVITY_NAME&#xD;&#xA;&#x9;, END_DATE - START_DATE AS ELAPSED_DAYS&#xD;&#xA;&#x9;, END_DATE-CHECKED_OUT_DATE AS USER_UTILIZED_DAYS&#xD;&#xA;&#x9;, ROUND(TO_NUMBER(END_DATE-START_DATE)*1440) AS ELAPSED_TIME_IN_MINUTES&#xD;&#xA;&#x9;, ROUND(TO_NUMBER(END_DATE - CHECKED_OUT_DATE)*1440) AS USER_UTILIZED_TIME_IN_MINUTES&#xD;&#xA;&#x9;, DUE_DATE, CASE WHEN FIRST_NAME IS NULL THEN 'Un-Assigned' ELSE FIRST_NAME END AS FIRST_NAME &#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA;&#x9;SELECT BAI.ACTIVITY_INSTANCE_ID, BP.DESCRIPTION || '(Ver.' || CAST(BC.VERSION AS VARCHAR(10)) || ')' AS PROCESS_NAME &#xD;&#xA;    , BA.NAME AS ACTIVITY_NAME, BAI.START_DATE AS START_DATE&#xD;&#xA;&#x9;, CASE WHEN BAI.END_DATE IS NULL THEN SYSDT ELSE BAI.END_DATE END AS END_DATE&#xD;&#xA;&#x9;, BAI.CHECKED_OUT_DATE &#x9;AS CHECKED_OUT_DATE, BAI.DUE_DATE AS DUE_DATE, SU.FIRST_NAME &#xD;&#xA;&#x9;FROM SGW_BPM_ACTIVITY_INSTANCE BAI  &#xD;&#xA;&#x9;&#x9;JOIN &#xD;&#xA;&#x9;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;SELECT TO_DATE(UDF_GET_SYSTEM_DATE('Y'),'MM-DD-YYYY') AS SYSDT FROM DUAL&#xD;&#xA;&#x9;&#x9;) DT ON 1=1&#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_ACTIVITY BA  ON BAI.ACTIVITY_ID = BA.ACTIVITY_ID AND BA.ACTIVITY_TYPE_VALUE IN ('USTK') &#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS_INSTANCE BPI  ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID AND BPI.STATUS_VALUE = 'INPC' &#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS BP  ON BPI.PROCESS_ID = BP.PROCESS_ID &#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_CASE BC  ON BP.CASE_ID = BC.CASE_ID &#xD;&#xA;&#x9;&#x9;LEFT JOIN SGS_USER SU  ON BAI.CHECKED_OUT_USER = SU.USER_ID &#xD;&#xA;&#x9;WHERE BAI.STATUS_VALUE IN ('INPC', &#x9;'UNPC', &#x9;'SUSP') AND  SU.USER_ID = @USER_ID&#xD;&#xA;)A" sfwPostgre="SELECT&#xD;&#xA;&#x9; ACTIVITY_INSTANCE_ID,&#xD;&#xA;&#x9;PROCESS_NAME,&#xD;&#xA;&#x9;PROCESS_ID,&#xD;&#xA;&#x9;ACTIVITY_NAME,&#xD;&#xA;&#x9;ACTIVITY_ID,&#xD;&#xA;&#x9;DATE_PART('day',END_DATE-START_DATE) &#x9;AS ELAPSED_DAYS,&#xD;&#xA;&#x9;DATE_PART('day',END_DATE-CHECKED_OUT_DATE) &#x9;AS USER_UTILIZED_DAYS,&#xD;&#xA;&#x9;DATE_PART('minute',END_DATE-START_DATE) &#x9;AS ELAPSED_TIME_IN_MINUTES,&#xD;&#xA;&#x9;DATE_PART('minute',END_DATE-CHECKED_OUT_DATE) &#x9;AS USER_UTILIZED_TIME_IN_MINUTES,&#xD;&#xA;&#x9;DUE_DATE,&#xD;&#xA;&#x9;CASE WHEN FIRST_NAME IS NULL THEN 'Un-Assigned' ELSE FIRST_NAME END &#x9;AS FIRST_NAME &#xD;&#xA;FROM&#xD;&#xA;&#x9; (SELECT&#xD;&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID,&#xD;&#xA;&#x9;bp.description || '(Ver.' || CAST (bc.version AS VARCHAR(30)) || ')' AS process_name,&#xD;&#xA;&#x9;BP.PROCESS_ID,&#xD;&#xA;&#x9;BA.ACTIVITY_ID,&#xD;&#xA;&#x9;BA.NAME &#x9;AS ACTIVITY_NAME,&#xD;&#xA;&#x9;BAI.START_DATE &#x9;AS START_DATE,&#xD;&#xA;&#x9;CASE WHEN BAI.END_DATE IS NULL THEN now() ELSE BAI.END_DATE END &#x9;AS END_DATE,&#xD;&#xA;&#x9;BAI.CHECKED_OUT_DATE &#x9;AS CHECKED_OUT_DATE,&#xD;&#xA;&#x9;BAI.DUE_DATE &#x9;AS DUE_DATE,&#xD;&#xA;&#x9;SU.FIRST_NAME &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE BAI   INNER  &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY BA &#xD;&#xA;&#x9; ON BAI.ACTIVITY_ID = BA.ACTIVITY_ID AND&#xD;&#xA;&#x9; BA.ACTIVITY_TYPE_VALUE IN ('USTK') INNER  &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI &#xD;&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID AND&#xD;&#xA;&#x9; BPI.STATUS_VALUE = 'INPC' INNER  &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS BP &#xD;&#xA;&#x9; ON BPI.PROCESS_ID = BP.PROCESS_ID INNER  &#xD;&#xA;&#x9; JOIN SGW_BPM_CASE BC &#xD;&#xA;&#x9; ON BP.CASE_ID = BC.CASE_ID LEFT  &#xD;&#xA;&#x9; JOIN SGS_USER SU &#xD;&#xA;&#x9; ON BAI.CHECKED_OUT_USER = SU.USER_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; BAI.STATUS_VALUE IN ('INPC',&#xD;&#xA;&#x9;'UNPC',&#xD;&#xA;&#x9;'SUSP') AND&#xD;&#xA;&#x9; SU.USER_ID = @USER_ID ) &#x9;AS DATA &#xD;&#xA;order&#x9; BY  PROCESS_ID">
      <parameters>
        <parameter ID="@USER_ID" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="TaskBAMByProcessId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xD;&#xA;&#x9;ACTIVITY_INSTANCE_ID,&#xD;&#xA;&#x9;PROCESS_NAME,&#xD;&#xA;&#x9;ACTIVITY_NAME,&#xD;&#xA;&#x9;DATEDIFF(day,START_DATE,END_DATE) &#x9;AS ELAPSED_DAYS,&#xD;&#xA;&#x9;DATEDIFF(day,CHECKED_OUT_DATE,END_DATE) &#x9;AS USER_UTILIZED_DAYS,&#xD;&#xA;&#x9;DATEDIFF(minute,START_DATE,END_DATE) &#x9;AS ELAPSED_TIME_IN_MINUTES,&#xD;&#xA;&#x9;DATEDIFF(minute,CHECKED_OUT_DATE,END_DATE) &#x9;AS USER_UTILIZED_TIME_IN_MINUTES,&#xD;&#xA;&#x9;CASE WHEN FIRST_NAME IS NULL THEN 'Un-Assigned' ELSE FIRST_NAME END &#x9;AS FIRST_NAME &#xD;&#xA;FROM&#xD;&#xA;&#x9; (SELECT&#xD;&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID,&#xD;&#xA;&#x9;BP.DESCRIPTION + '(Ver.' + CONVERT(VARCHAR,BC.VERSION) + ')' AS PROCESS_NAME ,&#xD;&#xA;&#x9;BA.NAME &#x9;AS ACTIVITY_NAME,&#xD;&#xA;&#x9;BAI.START_DATE &#x9;AS START_DATE,&#xD;&#xA;&#x9;CASE WHEN BAI.END_DATE IS NULL THEN GETDATE() ELSE BAI.END_DATE END &#x9;AS END_DATE,&#xD;&#xA;&#x9;BAI.CHECKED_OUT_DATE &#x9;AS CHECKED_OUT_DATE,&#xD;&#xA;&#x9;SU.FIRST_NAME &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE BAI WITH(NOLOCK) &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY BA WITH(NOLOCK)&#xD;&#xA;&#x9; ON BAI.ACTIVITY_ID = BA.ACTIVITY_ID AND&#xD;&#xA;&#x9; BA.ACTIVITY_TYPE_VALUE IN ('USTK') &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI WITH(NOLOCK)&#xD;&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID AND&#xD;&#xA;&#x9; BPI.STATUS_VALUE = 'INPC' &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS BP WITH(NOLOCK)&#xD;&#xA;&#x9; ON BPI.PROCESS_ID = BP.PROCESS_ID &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_CASE BC WITH(NOLOCK)&#xD;&#xA;&#x9; ON BP.CASE_ID = BC.CASE_ID LEFT &#xD;&#xA;&#x9; JOIN SGS_USER SU WITH(NOLOCK)&#xD;&#xA;&#x9; ON BAI.CHECKED_OUT_USER = SU.USER_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; BAI.STATUS_VALUE IN ('INPC',&#xD;&#xA;&#x9;'UNPC',&#xD;&#xA;&#x9;'SUSP') AND&#xD;&#xA;&#x9; BP.PROCESS_ID = @PROCESS_ID ) &#x9;AS DATA" sfwOracle="SELECT ACTIVITY_INSTANCE_ID, PROCESS_NAME, ACTIVITY_NAME&#xD;&#xA;&#x9;, END_DATE - START_DATE AS ELAPSED_DAYS&#xD;&#xA;&#x9;, END_DATE-CHECKED_OUT_DATE AS USER_UTILIZED_DAYS&#xD;&#xA;&#x9;, ROUND(TO_NUMBER(END_DATE-START_DATE)*1440) AS ELAPSED_TIME_IN_MINUTES&#xD;&#xA;&#x9;, ROUND(TO_NUMBER(END_DATE - CHECKED_OUT_DATE)*1440) AS USER_UTILIZED_TIME_IN_MINUTES&#xD;&#xA;&#x9;, DUE_DATE, CASE WHEN FIRST_NAME IS NULL THEN 'Un-Assigned' ELSE FIRST_NAME END AS FIRST_NAME &#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA;&#x9;SELECT BAI.ACTIVITY_INSTANCE_ID, BP.DESCRIPTION || '(Ver.' || CAST(BC.VERSION AS VARCHAR(10)) || ')' AS PROCESS_NAME &#xD;&#xA;    , BA.NAME AS ACTIVITY_NAME, BAI.START_DATE AS START_DATE&#xD;&#xA;&#x9;, CASE WHEN BAI.END_DATE IS NULL THEN SYSDT ELSE BAI.END_DATE END AS END_DATE&#xD;&#xA;&#x9;, BAI.CHECKED_OUT_DATE &#x9;AS CHECKED_OUT_DATE, BAI.DUE_DATE AS DUE_DATE, SU.FIRST_NAME &#xD;&#xA;&#x9;FROM SGW_BPM_ACTIVITY_INSTANCE BAI  &#xD;&#xA;&#x9;&#x9;JOIN &#xD;&#xA;&#x9;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;SELECT TO_DATE(UDF_GET_SYSTEM_DATE('Y'),'MM-DD-YYYY') AS SYSDT FROM DUAL&#xD;&#xA;&#x9;&#x9;) DT ON 1=1&#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_ACTIVITY BA  ON BAI.ACTIVITY_ID = BA.ACTIVITY_ID AND BA.ACTIVITY_TYPE_VALUE IN ('USTK') &#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS_INSTANCE BPI  ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID AND BPI.STATUS_VALUE = 'INPC' &#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS BP  ON BPI.PROCESS_ID = BP.PROCESS_ID &#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_CASE BC  ON BP.CASE_ID = BC.CASE_ID &#xD;&#xA;&#x9;&#x9;LEFT JOIN SGS_USER SU  ON BAI.CHECKED_OUT_USER = SU.USER_ID &#xD;&#xA;&#x9;WHERE BAI.STATUS_VALUE IN ('INPC', &#x9;'UNPC', &#x9;'SUSP') &#xD;&#xA;&#x9;    AND BP.PROCESS_ID = COALESCE(@PROCESS_ID, BP.PROCESS_ID)&#xD;&#xA;)A" sfwPostgre="SELECT&#xD;&#xA;&#x9;ACTIVITY_INSTANCE_ID,&#xD;&#xA;&#x9;PROCESS_NAME,&#xD;&#xA;&#x9;ACTIVITY_NAME,&#x9;&#xD;&#xA;&#x9;DATE_PART('day',END_DATE-START_DATE) &#x9;AS ELAPSED_DAYS,&#xD;&#xA;&#x9;DATE_PART('day',END_DATE-CHECKED_OUT_DATE) &#x9;AS USER_UTILIZED_DAYS,&#xD;&#xA;&#x9;DATE_PART('minute',END_DATE-START_DATE) &#x9;AS ELAPSED_TIME_IN_MINUTES,&#xD;&#xA;&#x9;DATE_PART('minute',END_DATE-CHECKED_OUT_DATE) &#x9;AS USER_UTILIZED_TIME_IN_MINUTES,&#xD;&#xA;&#x9;CASE WHEN FIRST_NAME IS NULL THEN 'Un-Assigned' ELSE FIRST_NAME END &#x9;AS FIRST_NAME &#xD;&#xA;FROM&#xD;&#xA;&#x9; (SELECT&#xD;&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID,&#xD;&#xA;&#x9;bp.description || '(Ver.' || CAST (bc.version AS VARCHAR(30)) || ')' AS process_name,&#xD;&#xA;&#x9;BA.NAME &#x9;AS ACTIVITY_NAME,&#xD;&#xA;&#x9;BAI.START_DATE &#x9;AS START_DATE,&#xD;&#xA;&#x9;CASE WHEN BAI.END_DATE IS NULL THEN now() ELSE BAI.END_DATE END &#x9;AS END_DATE,&#xD;&#xA;&#x9;BAI.CHECKED_OUT_DATE &#x9;AS CHECKED_OUT_DATE,&#xD;&#xA;&#x9;SU.FIRST_NAME &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE BAI &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY BA &#xD;&#xA;&#x9; ON BAI.ACTIVITY_ID = BA.ACTIVITY_ID AND&#xD;&#xA;&#x9; BA.ACTIVITY_TYPE_VALUE IN ('USTK') &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI &#xD;&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID AND&#xD;&#xA;&#x9; BPI.STATUS_VALUE = 'INPC' &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS BP &#xD;&#xA;&#x9; ON BPI.PROCESS_ID = BP.PROCESS_ID &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_CASE BC &#xD;&#xA;&#x9; ON BP.CASE_ID = BC.CASE_ID LEFT &#xD;&#xA;&#x9; JOIN SGS_USER SU &#xD;&#xA;&#x9; ON BAI.CHECKED_OUT_USER = SU.USER_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; BAI.STATUS_VALUE IN ('INPC',&#xD;&#xA;&#x9;'UNPC',&#xD;&#xA;&#x9;'SUSP') AND&#xD;&#xA;&#x9; BP.PROCESS_ID = @PROCESS_ID ) &#x9;AS DATA">
      <parameters>
        <parameter ID="@PROCESS_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="BAMProcessLoadAnalysis" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; PROCESS_NAME,&#xA;&#x9;DATEDIFF(day,&#xA;&#x9;START_DATE,&#xA;&#x9;END_DATE) &#x9;AS ELAPSED_DAYS,&#xA;&#x9;DATEDIFF(minute,&#xA;&#x9;START_DATE,&#xA;&#x9;END_DATE) &#x9;AS ELAPSED_TIME_IN_MINUTES,&#xA;&#x9;PROCESS_INSTANCE_ID&#x9;&#xA;FROM&#xA;&#x9; (SELECT&#xA;&#x9; BP.DESCRIPTION + '(Ver.' + CONVERT(VARCHAR,&#xA;&#x9;BC.VERSION) + ')' &#x9;AS PROCESS_NAME ,&#xA;&#x9;BPI.CREATED_DATE &#x9;AS START_DATE,&#xA;&#x9;CASE WHEN BPI.END_DATE IS NULL THEN GETDATE() ELSE BPI.END_DATE END &#x9;AS END_DATE,&#xA;&#x9;BPI.PROCESS_INSTANCE_ID&#x9; &#xA;FROM&#xA;&#x9; SGW_BPM_PROCESS_INSTANCE BPI WITH(NOLOCK)  INNER  &#xA;&#x9; JOIN SGW_BPM_PROCESS BP WITH(NOLOCK) &#xA;&#x9; ON BPI.PROCESS_ID = BP.PROCESS_ID INNER  &#xA;&#x9; JOIN SGW_BPM_CASE BC WITH(NOLOCK) &#xA;&#x9; ON BP.CASE_ID = BC.CASE_ID &#xA;WHERE&#xA;&#x9; BPI.STATUS_VALUE = 'INPC') &#x9;AS DATA" sfwOracle="SELECT PROCESS_NAME, END_DATE-START_DATE AS ELAPSED_DAYS, END_DATE-START_DATE AS ELAPSED_TIME_IN_MINUTES, PROCESS_INSTANCE_ID&#x9;&#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA;&#x9;SELECT BP.DESCRIPTION || '(Ver.' || CAST(BC.VERSION AS VARCHAR(10)) || ')' AS PROCESS_NAME &#xD;&#xA;&#x9;, BPI.CREATED_DATE &#x9;AS START_DATE, CASE WHEN BPI.END_DATE IS NULL THEN SYSDT ELSE BPI.END_DATE END &#x9;AS END_DATE&#xD;&#xA;&#x9;, BPI.PROCESS_INSTANCE_ID&#x9; &#xD;&#xA;&#x9;FROM SGW_BPM_PROCESS_INSTANCE BPI   &#xD;&#xA;&#x9;&#x9;JOIN&#xD;&#xA;&#x9;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;SELECT TO_DATE(UDF_GET_SYSTEM_DATE('Y'),'MM-DD-YYYY') AS SYSDT FROM DUAL&#xD;&#xA;&#x9;&#x9;)DT ON 1=1&#xD;&#xA;&#x9;&#x9;INNER  JOIN SGW_BPM_PROCESS BP  ON BPI.PROCESS_ID = BP.PROCESS_ID &#xD;&#xA;&#x9;&#x9;INNER  JOIN SGW_BPM_CASE BC  ON BP.CASE_ID = BC.CASE_ID &#xD;&#xA;&#x9;WHERE BPI.STATUS_VALUE = 'INPC'&#xD;&#xA;)DATA" sfwPostgre="SELECT&#xD;&#xA;&#x9; PROCESS_NAME,&#xD;&#xA;&#x9;DATE_PART('day',END_DATE-START_DATE) &#x9;AS ELAPSED_DAYS,&#xD;&#xA;&#x9;DATE_PART('minute',END_DATE-START_DATE) &#x9;AS ELAPSED_TIME_IN_MINUTES,&#xD;&#xA;&#x9;PROCESS_INSTANCE_ID&#x9;&#xD;&#xA;FROM&#xD;&#xA;&#x9; (SELECT&#xD;&#xA;&#x9; bp.description || '(Ver.' || CAST (bc.version AS VARCHAR(30)) || ')' AS process_name,&#xD;&#xA;&#x9;BPI.CREATED_DATE &#x9;AS START_DATE,&#xD;&#xA;&#x9;CASE WHEN BPI.END_DATE IS NULL THEN now() ELSE BPI.END_DATE END &#x9;AS END_DATE,&#xD;&#xA;&#x9;BPI.PROCESS_INSTANCE_ID&#x9; &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_PROCESS_INSTANCE BPI   INNER  &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS BP &#xD;&#xA;&#x9; ON BPI.PROCESS_ID = BP.PROCESS_ID INNER  &#xD;&#xA;&#x9; JOIN SGW_BPM_CASE BC &#xD;&#xA;&#x9; ON BP.CASE_ID = BC.CASE_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; BPI.STATUS_VALUE = 'INPC') &#x9;AS DATA">
      <parameters />
    </query>
    <query ID="BAMProcessLoadAnalysisByProcessId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xD;&#xA;&#x9;PROCESS_NAME,&#xD;&#xA;&#x9;DATEDIFF(day,START_DATE,END_DATE) &#x9;AS ELAPSED_DAYS,&#xD;&#xA;&#x9;DATEDIFF(minute,START_DATE,END_DATE) &#x9;AS ELAPSED_TIME_IN_MINUTES,&#xD;&#xA;&#x9;PROCESS_INSTANCE_ID&#xD;&#xA;FROM&#xD;&#xA;&#x9; (SELECT&#xD;&#xA;&#x9;BP.DESCRIPTION + '(Ver.' + CONVERT(VARCHAR,BC.VERSION) + ')' AS PROCESS_NAME ,&#xD;&#xA;&#x9;BPI.CREATED_DATE &#x9;AS START_DATE,&#xD;&#xA;&#x9;CASE WHEN BPI.END_DATE IS NULL THEN GETDATE() ELSE BPI.END_DATE END &#x9;AS END_DATE,&#xD;&#xA;&#x9;BPI.PROCESS_INSTANCE_ID&#x9;&#xD;&#xA;FROM&#xD;&#xA;&#x9;SGW_BPM_PROCESS_INSTANCE BPI WITH(NOLOCK) &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS BP WITH(NOLOCK)&#xD;&#xA;&#x9; ON BPI.PROCESS_ID = BP.PROCESS_ID &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_CASE BC WITH(NOLOCK)&#xD;&#xA;&#x9; ON BP.CASE_ID = BC.CASE_ID&#xD;&#xA;WHERE&#xD;&#xA;&#x9; BPI.STATUS_VALUE = 'INPC' AND BP.PROCESS_ID = @PROCESS_ID) &#x9;AS DATA" sfwOracle="SELECT PROCESS_NAME, END_DATE-START_DATE AS ELAPSED_DAYS, END_DATE-START_DATE AS ELAPSED_TIME_IN_MINUTES, PROCESS_INSTANCE_ID&#x9;&#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA;&#x9;SELECT BP.DESCRIPTION || '(Ver.' || CAST(BC.VERSION AS VARCHAR(10)) || ')' AS PROCESS_NAME &#xD;&#xA;&#x9;, BPI.CREATED_DATE &#x9;AS START_DATE, CASE WHEN BPI.END_DATE IS NULL THEN SYSDT ELSE BPI.END_DATE END &#x9;AS END_DATE&#xD;&#xA;&#x9;, BPI.PROCESS_INSTANCE_ID&#x9; &#xD;&#xA;&#x9;FROM SGW_BPM_PROCESS_INSTANCE BPI   &#xD;&#xA;&#x9;&#x9;JOIN&#xD;&#xA;&#x9;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;SELECT TO_DATE(UDF_GET_SYSTEM_DATE('Y'),'MM-DD-YYYY') AS SYSDT FROM DUAL&#xD;&#xA;&#x9;&#x9;)DT ON 1=1&#xD;&#xA;&#x9;&#x9;INNER  JOIN SGW_BPM_PROCESS BP  ON BPI.PROCESS_ID = BP.PROCESS_ID &#xD;&#xA;&#x9;&#x9;INNER  JOIN SGW_BPM_CASE BC  ON BP.CASE_ID = BC.CASE_ID &#xD;&#xA;&#x9;WHERE BPI.STATUS_VALUE = 'INPC' AND BP.PROCESS_ID = @PROCESS_ID&#xD;&#xA;)DATA" sfwPostgre="SELECT&#xD;&#xA;&#x9;PROCESS_NAME,&#xD;&#xA;&#x9;DATE_PART('day',END_DATE-START_DATE) &#x9;AS ELAPSED_DAYS,&#xD;&#xA;&#x9;DATE_PART('minute',END_DATE-START_DATE) &#x9;AS ELAPSED_TIME_IN_MINUTES,&#xD;&#xA;&#x9;PROCESS_INSTANCE_ID&#xD;&#xA;FROM&#xD;&#xA;&#x9; (SELECT&#xD;&#xA;&#x9;bp.description || '(Ver.' || CAST (bc.version AS VARCHAR(30)) || ')' AS process_name,&#xD;&#xA;&#x9;BPI.CREATED_DATE &#x9;AS START_DATE,&#xD;&#xA;&#x9;CASE WHEN BPI.END_DATE IS NULL THEN now() ELSE BPI.END_DATE END &#x9;AS END_DATE,&#xD;&#xA;&#x9;BPI.PROCESS_INSTANCE_ID&#x9;&#xD;&#xA;FROM&#xD;&#xA;&#x9;SGW_BPM_PROCESS_INSTANCE BPI  &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS BP &#xD;&#xA;&#x9; ON BPI.PROCESS_ID = BP.PROCESS_ID &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_CASE BC &#xD;&#xA;&#x9; ON BP.CASE_ID = BC.CASE_ID&#xD;&#xA;WHERE&#xD;&#xA;&#x9; BPI.STATUS_VALUE = 'INPC' AND BP.PROCESS_ID = @PROCESS_ID) &#x9;AS DATA">
      <parameters>
        <parameter ID="@PROCESS_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetDashboardStatisticsPerActivityByUserId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; sum(case when AI.DUE_DATE &gt; getdate() then 1 else 0 end) &#x9;AS OnTime,&#xA;&#x9;sum(case when AI.DUE_DATE &lt; getdate() then 1 else 0 end) &#x9;AS OverDue,&#xA;&#x9;A.NAME &#x9;AS ActivityName &#xA;FROM&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE AI WITH(NOLOCK) INNER  &#xA;&#x9; JOIN SGW_BPM_ACTIVITY A WITH(NOLOCK)&#xA;&#x9; ON AI.ACTIVITY_ID = A.ACTIVITY_ID &#xA;WHERE&#xA;&#x9; CHECKED_OUT_USER = @CHECKED_OUT_USER AND&#xA;&#x9; AI.STATUS_VALUE = 'INPC' &#xA;GROUP&#x9; BY   A.NAME" sfwOracle="SELECT&#xD;&#xA;&#x9; sum(case when AI.DUE_DATE &gt; (SELECT UDF_GET_SYSTEM_DATE('Y')from dual) then 1 else 0 end) &#x9;AS OnTime,&#xD;&#xA;&#x9;sum(case when AI.DUE_DATE &lt; (SELECT UDF_GET_SYSTEM_DATE('Y') from dual) then 1 else 0 end) &#x9;AS OverDue,&#xD;&#xA;&#x9;A.NAME &#x9;AS ActivityName &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE AI  INNER  &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY A &#xD;&#xA;&#x9; ON AI.ACTIVITY_ID = A.ACTIVITY_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; CHECKED_OUT_USER = @CHECKED_OUT_USER AND&#xD;&#xA;&#x9; AI.STATUS_VALUE = 'INPC' &#xD;&#xA;GROUP&#x9; BY   A.NAME" sfwPostgre="SELECT&#xD;&#xA;&#x9; sum(case when AI.DUE_DATE &gt; now() then 1 else 0 end) &#x9;AS OnTime,&#xD;&#xA;&#x9;sum(case when AI.DUE_DATE &lt; now() then 1 else 0 end) &#x9;AS OverDue,&#xD;&#xA;&#x9;A.NAME &#x9;AS ActivityName &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE AI  INNER  &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY A &#xD;&#xA;&#x9; ON AI.ACTIVITY_ID = A.ACTIVITY_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; CHECKED_OUT_USER = @CHECKED_OUT_USER AND&#xD;&#xA;&#x9; AI.STATUS_VALUE = 'INPC' &#xD;&#xA;GROUP&#x9; BY   A.NAME">
      <parameters>
        <parameter ID="@CHECKED_OUT_USER" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetUserAssignedActivitiesByUserId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; ACTIVITY_INSTANCE_ID &#xA;FROM&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE AI WITH(NOLOCK) &#xA;WHERE&#xA;&#x9; CHECKED_OUT_USER = @CHECKED_OUT_USER AND&#xA;&#x9; AI.STATUS_VALUE = 'INPC'" sfwPostgre="SELECT&#xD;&#xA;&#x9; ACTIVITY_INSTANCE_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE AI &#xD;&#xA;WHERE&#xD;&#xA;&#x9; CHECKED_OUT_USER = @CHECKED_OUT_USER AND&#xD;&#xA;&#x9; AI.STATUS_VALUE = 'INPC'">
      <parameters>
        <parameter ID="@CHECKED_OUT_USER" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="MyBasketAssignedAndWorkPoolItemsByUserId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xA;FROM&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE BAI WITH(NOLOCK) INNER  &#xA;&#x9; JOIN SGW_BPM_ACTIVITY BA WITH(NOLOCK)&#xA;&#x9; ON BAI.ACTIVITY_ID = BA.ACTIVITY_ID LEFT  &#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INST_USERS BAIU WITH(NOLOCK)&#xA;&#x9; ON BAI.ACTIVITY_INSTANCE_ID = BAIU.ACTIVITY_INSTANCE_ID &#xA;WHERE&#xA;&#x9; BA.ACTIVITY_TYPE_VALUE = 'USTK' AND&#xA;&#x9; ((BAI.STATUS_VALUE = 'INPC' AND&#xA;&#x9; BAI.CHECKED_OUT_USER = @CHECKED_OUT_USER) OR (BAI.STATUS_VALUE = 'UNPC' AND&#xA;&#x9; BAIU.USER_ID = @CHECKED_OUT_USER))" sfwPostgre="SELECT&#xD;&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE BAI  INNER  &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY BA &#xD;&#xA;&#x9; ON BAI.ACTIVITY_ID = BA.ACTIVITY_ID LEFT  &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INST_USERS BAIU &#xD;&#xA;&#x9; ON BAI.ACTIVITY_INSTANCE_ID = BAIU.ACTIVITY_INSTANCE_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; BA.ACTIVITY_TYPE_VALUE = 'USTK' AND&#xD;&#xA;&#x9; ((BAI.STATUS_VALUE = 'INPC' AND&#xD;&#xA;&#x9; BAI.CHECKED_OUT_USER = @CHECKED_OUT_USER) OR (BAI.STATUS_VALUE = 'UNPC' AND&#xD;&#xA;&#x9; BAIU.USER_ID = @CHECKED_OUT_USER))">
      <parameters>
        <parameter ID="@CHECKED_OUT_USER" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetActiveOrSuspendedActivitiesByProcessIdAndActivityNameAndReferenceId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; SAI.ACTIVITY_INSTANCE_ID &#xA;FROM&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE SAI WITH(NOLOCK) INNER  &#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE SPI WITH(NOLOCK)&#xA;&#x9; ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID INNER  &#xA;&#x9; JOIN SGW_BPM_ACTIVITY SA WITH(NOLOCK)&#xA;&#x9; ON SA.ACTIVITY_ID = SAI.ACTIVITY_ID AND&#xA;&#x9; SA.PROCESS_ID = @PROCESS_ID &#xA;WHERE&#xA;&#x9; SPI.PROCESS_ID = @PROCESS_ID AND&#xA;&#x9; SAI.REFERENCE_ID = @REFERENCE_ID AND&#xA;&#x9; SA.NAME = @ACTIVITY_NAME AND&#xA;&#x9; SAI.STATUS_VALUE IN ('INPC',&#xA;&#x9;'SUSP')" sfwOracle="SELECT&#xD;&#xA;&#x9; SAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE SAI  &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE SPI &#xD;&#xA;&#x9; ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY SA &#xD;&#xA;&#x9; ON SA.ACTIVITY_ID = SAI.ACTIVITY_ID AND&#xD;&#xA;&#x9; SA.PROCESS_ID = @PROCESS_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; SPI.PROCESS_ID = @PROCESS_ID AND&#xD;&#xA;&#x9; SAI.REFERENCE_ID = @REFERENCE_ID AND&#xD;&#xA;&#x9; SA.NAME = @ACTIVITY_NAME AND&#xD;&#xA;&#x9; SAI.STATUS_VALUE IN ('INPC','SUSP')" sfwPostgre="SELECT&#xD;&#xA;&#x9; SAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE SAI  INNER  &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE SPI &#xD;&#xA;&#x9; ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID INNER  &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY SA &#xD;&#xA;&#x9; ON SA.ACTIVITY_ID = SAI.ACTIVITY_ID AND&#xD;&#xA;&#x9; SA.PROCESS_ID = @PROCESS_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; SPI.PROCESS_ID = @PROCESS_ID AND&#xD;&#xA;&#x9; SAI.REFERENCE_ID = @REFERENCE_ID AND&#xD;&#xA;&#x9; SA.NAME = @ACTIVITY_NAME AND&#xD;&#xA;&#x9; SAI.STATUS_VALUE IN ('INPC',&#xD;&#xA;&#x9;'SUSP')">
      <parameters>
        <parameter ID="@PROCESS_ID" sfwDataType="int" />
        <parameter ID="@REFERENCE_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_NAME" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="LoadActivityInstanceByProcessEventAndReferenceId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9;  SAI.* &#xA;FROM&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE SAI WITH(NOLOCK) &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE SPI WITH(NOLOCK)&#xA;&#x9; ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_CASE_INSTANCE SCI WITH(NOLOCK)&#xA;&#x9; ON SCI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_PROCESS SP WITH(NOLOCK)&#xA;&#x9; ON SPI.PROCESS_ID = SP.PROCESS_ID LEFT &#xA;&#x9; JOIN SGT_PERSON P WITH(NOLOCK)&#xA;&#x9; ON P.PERSON_ID = SCI.PERSON_ID &#xA;&#x9;INNER &#xA;&#x9; JOIN SGW_BPM_EVENT SE WITH(NOLOCK)&#xA;&#x9; ON SE.DOC_TYPE = @DOC_TYPE AND&#xA;&#x9; SCI.REFERENCE_ID = @REFERENCE_ID AND&#xA;&#x9; SPI.STATUS_VALUE = 'INPC' AND&#xA;&#x9; SP.PROCESS_ID = @PROCESS_ID AND&#xA;&#x9; SAI.ACTIVITY_ID = @ACTIVITY_ID &#xA;WHERE&#xA;&#x9; SAI.STATUS_VALUE NOT IN ('CANC',&#xA;&#x9;'PROC',&#xA;&#x9;'FAIL',&#xA;&#x9;'RWRK',&#xA;&#x9;'RCHK',&#xA;&#x9;'INPC')" sfwOracle="SELECT  SAI.*&#xD;&#xA;FROM SGW_BPM_ACTIVITY_INSTANCE SAI &#xD;&#xA;INNER JOIN SGW_BPM_PROCESS_INSTANCE SPI  ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID &#xD;&#xA;INNER JOIN SGW_BPM_CASE_INSTANCE SCI  ON SCI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xD;&#xA;INNER JOIN SGW_BPM_PROCESS SP  ON SPI.PROCESS_ID = SP.PROCESS_ID &#xD;&#xA;LEFT JOIN SGT_PERSON P  ON P.PERSON_ID = SCI.PERSON_ID&#xD;&#xA;INNER JOIN SGW_BPM_EVENT SE  ON SE.DOC_TYPE = @DOC_TYPE &#xD;&#xA;AND SCI.REFERENCE_ID = @REFERENCE_ID&#xD;&#xA;AND SPI.STATUS_VALUE = 'INPC'&#xD;&#xA;AND SP.PROCESS_ID = @PROCESS_ID&#xD;&#xA;AND SAI.ACTIVITY_ID = @ACTIVITY_ID&#xD;&#xA;WHERE SAI.STATUS_VALUE NOT IN ('CANC','PROC','FAIL','RWRK','RCHK', 'INPC')" sfwPostgre="SELECT&#xD;&#xA;&#x9;  SAI.* &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE SAI &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE SPI &#xD;&#xA;&#x9; ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_CASE_INSTANCE SCI &#xD;&#xA;&#x9; ON SCI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS SP &#xD;&#xA;&#x9; ON SPI.PROCESS_ID = SP.PROCESS_ID LEFT &#xD;&#xA;&#x9; JOIN SGT_PERSON P &#xD;&#xA;&#x9; ON P.PERSON_ID = SCI.PERSON_ID &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_EVENT SE &#xD;&#xA;&#x9; ON SE.DOC_TYPE = @DOC_TYPE AND&#xD;&#xA;&#x9; SCI.REFERENCE_ID = @REFERENCE_ID AND&#xD;&#xA;&#x9; SPI.STATUS_VALUE = 'INPC' AND&#xD;&#xA;&#x9; SP.PROCESS_ID = @PROCESS_ID AND&#xD;&#xA;&#x9; SAI.ACTIVITY_ID = @ACTIVITY_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; SAI.STATUS_VALUE NOT IN ('CANC',&#xD;&#xA;&#x9;'PROC',&#xD;&#xA;&#x9;'FAIL',&#xD;&#xA;&#x9;'RWRK',&#xD;&#xA;&#x9;'RCHK',&#xD;&#xA;&#x9;'INPC')">
      <parameters>
        <parameter ID="@DOC_TYPE" sfwDataType="string" />
        <parameter ID="@REFERENCE_ID" sfwDataType="int" />
        <parameter ID="@PROCESS_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetUserActivitiesToResume" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; SAI.ACTIVITY_INSTANCE_ID &#xA;FROM&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE SAI WITH(NOLOCK) INNER  &#xA;&#x9; JOIN SGW_BPM_ACTIVITY SA WITH(NOLOCK)&#xA;&#x9; ON SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND&#xA;&#x9; SA.ACTIVITY_TYPE_VALUE = 'USTK' &#xA;WHERE&#xA;&#x9; SAI.STATUS_VALUE  = 'SUSP' AND&#xA;&#x9;  SAI.SUSPENSION_END_DATE &lt; =  @NOW" sfwOracle="SELECT&#xD;&#xA;&#x9; SAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE SAI     &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY SA &#xD;&#xA;&#x9; ON SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND&#xD;&#xA;&#x9; SA.ACTIVITY_TYPE_VALUE = 'USTK' &#xD;&#xA;WHERE&#xD;&#xA;&#x9; SAI.STATUS_VALUE  = 'SUSP' AND&#xD;&#xA;&#x9;  SAI.SUSPENSION_END_DATE &lt; =  @NOW" sfwPostgre="SELECT&#xD;&#xA;&#x9; SAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE SAI  INNER  &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY SA &#xD;&#xA;&#x9; ON SAI.ACTIVITY_ID = SA.ACTIVITY_ID AND&#xD;&#xA;&#x9; SA.ACTIVITY_TYPE_VALUE = 'USTK' &#xD;&#xA;WHERE&#xD;&#xA;&#x9; SAI.STATUS_VALUE  = 'SUSP' AND&#xD;&#xA;&#x9;  SAI.SUSPENSION_END_DATE &lt;=  @NOW">
      <parameters>
        <parameter ID="@NOW" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="FailedActivityInstances" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xD;&#xA;&#x9; DISTINCT &#xD;&#xA;&#x9;SA.PROCESS_ID,&#xD;&#xA;&#x9;SA.NAME,&#xD;&#xA;&#x9;SA.ACTIVITY_TYPE_VALUE,&#xD;&#xA;&#x9;SAI.*,&#xD;&#xA;&#x9;SPI.PROCESS_INSTANCE_ID,&#xD;&#xA;&#x9;PMI.PERSON_ID,&#xD;&#xA;&#x9;PMI.case_instance_id,&#xD;&#xA;&#x9;PMI.ORG_ID,&#xD;&#xA;&#x9;P.PERSON_ID,&#xD;&#xA;&#x9;p.MPI_PERSON_ID,&#xD;&#xA;&#x9;P.FIRST_NAME,&#xD;&#xA;&#xD;&#xA;&#x9;P.LAST_NAME,&#xD;&#xA;&#x9;P.MIDDLE_NAME,&#xD;&#xA;&#x9;O.ORG_NAME,&#xD;&#xA;&#x9;O.MPI_ORG_ID ,&#xD;&#xA;&#x9;SP.DESCRIPTION  AS PROCESS_DESCRIPTION,&#xD;&#xA;&#x9;SP.NAME  AS PROCESS_NAME,&#xD;&#xA;&#x9;CV.DESCRIPTION  AS SOURCE_DESCRIPTION,&#xD;&#xA;&#x9;SWR.PERSON_ID,&#xD;&#xA;&#x9;C.CASE_ID,&#xD;&#xA;&#x9;C.VERSION&#xD;&#xA;FROM SGW_BPM_ACTIVITY_INSTANCE AS SAI WITH (NOLOCK)&#xD;&#xA;INNER JOIN SGW_BPM_PROCESS_INSTANCE AS SPI WITH (NOLOCK) ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID&#xD;&#xA;INNER JOIN SGW_BPM_PROCESS AS SP WITH (NOLOCK) ON SPI.PROCESS_ID = SP.PROCESS_ID&#xD;&#xA;INNER JOIN SGW_BPM_ACTIVITY AS SA WITH (NOLOCK) ON SPI.PROCESS_ID = SA.PROCESS_ID&#xD;&#xA;&#x9;AND SAI.ACTIVITY_ID = SA.ACTIVITY_ID&#xD;&#xA;INNER JOIN SGW_BPM_case_INSTANCE AS PMI WITH (NOLOCK) ON PMI.case_INSTANCE_ID = SPI.case_INSTANCE_ID&#xD;&#xA;INNER JOIN SGW_BPM_REQUEST AS SWR WITH (NOLOCK) ON PMI.REQUEST_ID = SWR.REQUEST_ID&#xD;&#xA;LEFT JOIN SGT_PERSON AS P WITH (NOLOCK) ON P.PERSON_ID = PMI.PERSON_ID&#xD;&#xA;LEFT JOIN SGT_ORGANIZATION AS O WITH (NOLOCK) ON O.ORG_ID = PMI.ORG_ID&#xD;&#xA;INNER JOIN SGS_CODE_VALUE AS CV WITH (NOLOCK) ON SWR.SOURCE_ID = CV.CODE_ID&#xD;&#xA;&#x9;AND SWR.SOURCE_VALUE = CV.CODE_VALUE&#xD;&#xA;&#x9;LEFT JOIN SGW_BPM_CASE C ON SP.CASE_ID = C.CASE_ID&#xD;&#xA;WHERE SPI.STATUS_VALUE = 'INPC'&#xD;&#xA;&#x9;AND (&#xD;&#xA;&#x9;&#x9;SAI.STATUS_VALUE IN ('FAIL')&#xD;&#xA;&#x9;&#x9;OR (&#xD;&#xA;&#x9;&#x9;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SA.ACTIVITY_TYPE_VALUE IN (&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;'SRTK'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;,'RUTK'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND SAI.STATUS_VALUE = 'INPC'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND SAI.MODIFIED_DATE &lt; (dateadd(MINUTE, - 60, getdate()))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;&#x9;)" sfwOracle="SELECT&#xD;&#xA;&#x9; DISTINCT &#xD;&#xA;&#x9;SA.PROCESS_ID,&#xD;&#xA;&#x9;SA.NAME,&#xD;&#xA;&#x9;SA.ACTIVITY_TYPE_VALUE,&#xD;&#xA;&#x9;SAI.*,&#xD;&#xA;&#x9;SPI.PROCESS_INSTANCE_ID,&#xD;&#xA;&#x9;PMI.PERSON_ID,&#xD;&#xA;&#x9;PMI.case_instance_id,&#xD;&#xA;&#x9;PMI.ORG_ID,&#xD;&#xA;&#x9;P.PERSON_ID,&#xD;&#xA;&#x9;P.FIRST_NAME,&#xD;&#xA;&#x9;P.LAST_NAME,&#xD;&#xA;&#x9;P.MIDDLE_NAME,&#xD;&#xA;&#x9;O.ORG_NAME,&#xD;&#xA;&#x9;O.MPI_ORG_ID ,&#xD;&#xA;&#x9;SP.DESCRIPTION PROCESS_DESCRIPTION,&#xD;&#xA;&#x9;SP.NAME PROCESS_NAME,&#xD;&#xA;&#x9;CV.DESCRIPTION SOURCE_DESCRIPTION,&#xD;&#xA;&#x9;SWR.PERSON_ID,&#xD;&#xA;&#x9;C.CASE_ID,&#xD;&#xA;&#x9;C.VERSION&#xD;&#xA;FROM SGW_BPM_ACTIVITY_INSTANCE SAI &#xD;&#xA;INNER JOIN SGW_BPM_PROCESS_INSTANCE SPI ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID&#xD;&#xA;INNER JOIN SGW_BPM_PROCESS SP ON SPI.PROCESS_ID = SP.PROCESS_ID&#xD;&#xA;INNER JOIN SGW_BPM_ACTIVITY SA ON SPI.PROCESS_ID = SA.PROCESS_ID AND SAI.ACTIVITY_ID = SA.ACTIVITY_ID&#xD;&#xA;INNER JOIN SGW_BPM_case_INSTANCE PMI ON PMI.case_INSTANCE_ID = SPI.case_INSTANCE_ID&#xD;&#xA;INNER JOIN SGW_BPM_REQUEST SWR ON PMI.REQUEST_ID = SWR.REQUEST_ID&#xD;&#xA;LEFT JOIN SGT_PERSON P ON P.PERSON_ID = PMI.PERSON_ID&#xD;&#xA;LEFT JOIN SGT_ORGANIZATION O ON O.ORG_ID = PMI.ORG_ID&#xD;&#xA;INNER JOIN SGS_CODE_VALUE CV ON SWR.SOURCE_ID = CV.CODE_ID AND SWR.SOURCE_VALUE = CV.CODE_VALUE&#xD;&#xA;LEFT JOIN SGW_BPM_CASE C ON SP.CASE_ID = C.CASE_ID&#xD;&#xA;WHERE SPI.STATUS_VALUE = 'INPC'&#xD;&#xA;&#x9;AND (&#xD;&#xA;&#x9;&#x9;SAI.STATUS_VALUE IN ('FAIL')&#xD;&#xA;&#x9;&#x9;OR (&#xD;&#xA;&#x9;&#x9;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SA.ACTIVITY_TYPE_VALUE IN (&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;'SRTK'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;,'RUTK'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND SAI.STATUS_VALUE = 'INPC'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND SAI.MODIFIED_DATE &lt; SYSDATE - interval '60' MINUTE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;&#x9;&#x9;)&#xD;&#xA;      )" sfwPostgre="SELECT&#xD;&#xA;&#x9; DISTINCT &#xD;&#xA;&#x9;SA.PROCESS_ID,&#xD;&#xA;&#x9;SA.NAME,&#xD;&#xA;&#x9;SA.ACTIVITY_TYPE_VALUE,&#xD;&#xA;&#x9;SAI.*,&#xD;&#xA;&#x9;SPI.PROCESS_INSTANCE_ID,&#xD;&#xA;&#x9;PMI.PERSON_ID,&#xD;&#xA;&#x9;PMI.case_instance_id,&#xD;&#xA;&#x9;PMI.ORG_ID,&#xD;&#xA;&#x9;P.PERSON_ID,&#xD;&#xA;&#x9;P.FIRST_NAME,&#xD;&#xA;&#x9;P.LAST_NAME,&#xD;&#xA;&#x9;P.MIDDLE_NAME,&#xD;&#xA;&#x9;O.ORG_NAME,&#xD;&#xA;&#x9;O.MPI_ORG_ID ,&#xD;&#xA;&#x9;SP.DESCRIPTION PROCESS_DESCRIPTION,&#xD;&#xA;&#x9;SP.NAME PROCESS_NAME,&#xD;&#xA;&#x9;CV.DESCRIPTION SOURCE_DESCRIPTION,&#xD;&#xA;&#x9;SWR.PERSON_ID,&#xD;&#xA;&#x9;C.CASE_ID,&#xD;&#xA;&#x9;C.VERSION&#xD;&#xA;FROM SGW_BPM_ACTIVITY_INSTANCE SAI &#xD;&#xA;INNER JOIN SGW_BPM_PROCESS_INSTANCE SPI ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID&#xD;&#xA;INNER JOIN SGW_BPM_PROCESS SP ON SPI.PROCESS_ID = SP.PROCESS_ID&#xD;&#xA;INNER JOIN SGW_BPM_ACTIVITY SA ON SPI.PROCESS_ID = SA.PROCESS_ID AND SAI.ACTIVITY_ID = SA.ACTIVITY_ID&#xD;&#xA;INNER JOIN SGW_BPM_case_INSTANCE PMI ON PMI.case_INSTANCE_ID = SPI.case_INSTANCE_ID&#xD;&#xA;INNER JOIN SGW_BPM_REQUEST SWR ON PMI.REQUEST_ID = SWR.REQUEST_ID&#xD;&#xA;LEFT JOIN SGT_PERSON P ON P.PERSON_ID = PMI.PERSON_ID&#xD;&#xA;LEFT JOIN SGT_ORGANIZATION O ON O.ORG_ID = PMI.ORG_ID&#xD;&#xA;INNER JOIN SGS_CODE_VALUE CV ON SWR.SOURCE_ID = CV.CODE_ID AND SWR.SOURCE_VALUE = CV.CODE_VALUE&#xD;&#xA;LEFT JOIN SGW_BPM_CASE C ON SP.CASE_ID = C.CASE_ID&#xD;&#xA;WHERE SPI.STATUS_VALUE = 'INPC'&#xD;&#xA;&#x9;AND (&#xD;&#xA;&#x9;&#x9;SAI.STATUS_VALUE IN ('FAIL')&#xD;&#xA;&#x9;&#x9;OR (&#xD;&#xA;&#x9;&#x9;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SA.ACTIVITY_TYPE_VALUE IN (&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;'SRTK'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;,'RUTK'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND SAI.STATUS_VALUE = 'INPC'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND SAI.MODIFIED_DATE &lt; NOW() - interval'60 minutes'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;&#x9;&#x9;)&#xD;&#xA;      )">
      <parameters />
      <mappedcolumns>
        <column ID="name" sfwEntityField="objBpmActivity.Name" />
        <column ID="case_instance_id" sfwEntityField="objCaseInstance.CaseInstanceId" />
        <column ID="process_name" sfwEntityField="objBpmProcessInstance.objBpmProcess.Name" />
        <column ID="version" sfwEntityField="objBpmCase.Version" />
      </mappedcolumns>
    </query>
    <query ID="GetBpmActivityInstanceIdByPersonId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xA;FROM&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI WITH(NOLOCK) INNER     &#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI WITH(NOLOCK)&#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER     &#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI WITH(NOLOCK)&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xA;WHERE&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xA;&#x9; BCI.PERSON_ID = @PERSON_ID AND&#xA;&#x9; BCI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; (BAI.ACTIVITY_ID = @ACTIVITY_ID AND&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS)" sfwPostgre="SELECT&#xD;&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI  INNER     &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI &#xD;&#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER     &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI &#xD;&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xD;&#xA;&#x9; BCI.PERSON_ID = @PERSON_ID AND&#xD;&#xA;&#x9; BCI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; (BAI.ACTIVITY_ID = @ACTIVITY_ID AND&#xD;&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS)">
      <parameters>
        <parameter ID="@CASE_ID" sfwDataType="int" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_INSTANCE_STATUS" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetBpmActivityInstanceIdsByPersonId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xA;FROM&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI WITH(NOLOCK) INNER       &#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI WITH(NOLOCK)&#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER       &#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI WITH(NOLOCK) &#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xA;WHERE&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xA;&#x9; BCI.PERSON_ID = @PERSON_ID AND&#xA;&#x9; BCI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS" sfwPostgre="SELECT&#xD;&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI  INNER       &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI &#xD;&#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER       &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI &#xD;&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xD;&#xA;&#x9; BCI.PERSON_ID = @PERSON_ID AND&#xD;&#xA;&#x9; BCI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS">
      <parameters>
        <parameter ID="@CASE_ID" sfwDataType="int" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_INSTANCE_STATUS" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetBpmActivityInstanceIdByPersonIdAndReferenceId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xA;FROM&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI WITH(NOLOCK) INNER      &#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI WITH(NOLOCK)&#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER      &#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI WITH(NOLOCK)&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xA;WHERE&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xA;&#x9; BCI.PERSON_ID = @PERSON_ID AND&#xA;&#x9; BCI.REFERENCE_ID = @REFERENCE_ID AND&#xA;&#x9; BCI.STATUS_VALUE = 'INPC')AND&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; (BAI.ACTIVITY_ID = @ACTIVITY_ID AND&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS)" sfwPostgre="SELECT&#xD;&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI  INNER      &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI &#xD;&#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER      &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI &#xD;&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xD;&#xA;&#x9; BCI.PERSON_ID = @PERSON_ID AND&#xD;&#xA;&#x9; BCI.REFERENCE_ID = @REFERENCE_ID AND&#xD;&#xA;&#x9; BCI.STATUS_VALUE = 'INPC')AND&#xD;&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; (BAI.ACTIVITY_ID = @ACTIVITY_ID AND&#xD;&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS)">
      <parameters>
        <parameter ID="@CASE_ID" sfwDataType="int" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_INSTANCE_STATUS" sfwDataType="string" />
        <parameter ID="@REFERENCE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetBpmActivityInstanceIdsByPersonIdAndReferenceId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xA;FROM&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI WITH(NOLOCK) INNER          &#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI WITH(NOLOCK) &#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER          &#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI WITH(NOLOCK)   &#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xA;WHERE&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xA;&#x9; BCI.PERSON_ID = @PERSON_ID AND&#xA;&#x9; BCI.REFERENCE_ID = @REFERENCE_ID AND&#xA;&#x9; BCI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS" sfwPostgre="SELECT&#xD;&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI  INNER          &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI &#xD;&#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER          &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI &#xD;&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xD;&#xA;&#x9; BCI.PERSON_ID = @PERSON_ID AND&#xD;&#xA;&#x9; BCI.REFERENCE_ID = @REFERENCE_ID AND&#xD;&#xA;&#x9; BCI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS">
      <parameters>
        <parameter ID="@CASE_ID" sfwDataType="int" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_INSTANCE_STATUS" sfwDataType="string" />
        <parameter ID="@REFERENCE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetBpmActivityInstanceIdByOrganizationId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xA;FROM&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI WITH(NOLOCK) INNER       &#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI WITH(NOLOCK)   &#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER       &#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI WITH(NOLOCK)&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xA;WHERE&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xA;&#x9; BCI.ORG_ID = @ORG_ID AND&#xA;&#x9; BCI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; (BAI.ACTIVITY_ID = @ACTIVITY_ID AND&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS)" sfwPostgre="SELECT&#xD;&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI  INNER       &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI &#xD;&#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER       &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI &#xD;&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xD;&#xA;&#x9; BCI.ORG_ID = @ORG_ID AND&#xD;&#xA;&#x9; BCI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; (BAI.ACTIVITY_ID = @ACTIVITY_ID AND&#xD;&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS)">
      <parameters>
        <parameter ID="@CASE_ID" sfwDataType="int" />
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_INSTANCE_STATUS" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetBpmActivityInstanceIdsByOrganizationId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xA;FROM&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI WITH(NOLOCK) INNER         &#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI WITH(NOLOCK) &#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER         &#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI WITH(NOLOCK)   &#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xA;WHERE&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xA;&#x9; BCI.ORG_ID = @ORG_ID AND&#xA;&#x9; BCI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS" sfwPostgre="SELECT&#xD;&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI  INNER         &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI &#xD;&#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER         &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI   &#xD;&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xD;&#xA;&#x9; BCI.ORG_ID = @ORG_ID AND&#xD;&#xA;&#x9; BCI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS">
      <parameters>
        <parameter ID="@CASE_ID" sfwDataType="int" />
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_INSTANCE_STATUS" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetBpmActivityInstanceIdByOrganizationIdAndReferenceId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xA;FROM&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI WITH(NOLOCK) INNER        &#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI WITH(NOLOCK) &#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER        &#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI WITH(NOLOCK)  &#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xA;WHERE&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xA;&#x9; BCI.ORG_ID = @ORG_ID AND&#xA;&#x9; BCI.REFERENCE_ID = @REFERENCE_ID AND&#xA;&#x9; BCI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; (BAI.ACTIVITY_ID = @ACTIVITY_ID AND&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS)" sfwPostgre="SELECT&#xD;&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI  INNER        &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI &#xD;&#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER        &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI &#xD;&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xD;&#xA;&#x9; BCI.ORG_ID = @ORG_ID AND&#xD;&#xA;&#x9; BCI.REFERENCE_ID = @REFERENCE_ID AND&#xD;&#xA;&#x9; BCI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; (BAI.ACTIVITY_ID = @ACTIVITY_ID AND&#xD;&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS)">
      <parameters>
        <parameter ID="@CASE_ID" sfwDataType="int" />
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_INSTANCE_STATUS" sfwDataType="string" />
        <parameter ID="@REFERENCE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetBpmActivityInstanceIdsByOrganizationIdAndReferenceId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xA;FROM&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI WITH(NOLOCK) INNER          &#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI WITH(NOLOCK)    &#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER          &#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI WITH(NOLOCK)   &#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xA;WHERE&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xA;&#x9; BCI.ORG_ID = @ORG_ID AND&#xA;&#x9; BCI.REFERENCE_ID = @REFERENCE_ID AND&#xA;&#x9; BCI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS" sfwPostgre="SELECT&#xD;&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI  INNER          &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI    &#xD;&#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER          &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI  &#xD;&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xD;&#xA;&#x9; BCI.ORG_ID = @ORG_ID AND&#xD;&#xA;&#x9; BCI.REFERENCE_ID = @REFERENCE_ID AND&#xD;&#xA;&#x9; BCI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS">
      <parameters>
        <parameter ID="@CASE_ID" sfwDataType="int" />
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_INSTANCE_STATUS" sfwDataType="string" />
        <parameter ID="@REFERENCE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetBpmActivityInstanceIdByPersonIdAndOrganizationId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xA;FROM&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI WITH(NOLOCK) INNER       &#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI WITH(NOLOCK) &#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER       &#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI WITH(NOLOCK) &#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xA;WHERE&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xA;&#x9; BCI.PERSON_ID = @PERSON_ID AND&#xA;&#x9; BCI.ORG_ID = @ORG_ID AND&#xA;&#x9; BCI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; (BAI.ACTIVITY_ID = @ACTIVITY_ID AND&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS)" sfwPostgre="SELECT&#xD;&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI  INNER       &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI &#xD;&#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER       &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI &#xD;&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xD;&#xA;&#x9; BCI.PERSON_ID = @PERSON_ID AND&#xD;&#xA;&#x9; BCI.ORG_ID = @ORG_ID AND&#xD;&#xA;&#x9; BCI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; (BAI.ACTIVITY_ID = @ACTIVITY_ID AND&#xD;&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS)">
      <parameters>
        <parameter ID="@CASE_ID" sfwDataType="int" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_INSTANCE_STATUS" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetBpmActivityInstanceIdsByPersonIdAndOrganizationId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xA;FROM&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI WITH(NOLOCK) INNER        &#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI WITH(NOLOCK)  &#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER        &#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI WITH(NOLOCK)  &#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xA;WHERE&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xA;&#x9; BCI.PERSON_ID = @PERSON_ID AND&#xA;&#x9; BCI.ORG_ID = @ORG_ID AND&#xA;&#x9; BCI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS" sfwPostgre="SELECT&#xD;&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI  INNER        &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI &#xD;&#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER        &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI   &#xD;&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xD;&#xA;&#x9; BCI.PERSON_ID = @PERSON_ID AND&#xD;&#xA;&#x9; BCI.ORG_ID = @ORG_ID AND&#xD;&#xA;&#x9; BCI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS">
      <parameters>
        <parameter ID="@CASE_ID" sfwDataType="int" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_INSTANCE_STATUS" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetBpmActivityInstanceIdByPersonIdAndOrganizationIdAndReferenceId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xA;FROM&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI WITH(NOLOCK)  INNER        &#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI WITH(NOLOCK) &#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER        &#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI WITH(NOLOCK)&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xA;WHERE&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xA;&#x9; BCI.PERSON_ID = @PERSON_ID AND&#xA;&#x9; BCI.ORG_ID = @ORG_ID AND&#xA;&#x9;  BCI.REFERENCE_ID = @REFERENCE_ID AND&#xA;&#x9; BCI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; (BAI.ACTIVITY_ID = @ACTIVITY_ID AND&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS)" sfwPostgre="SELECT&#xD;&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI   INNER        &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI  &#xD;&#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER        &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI &#xD;&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xD;&#xA;&#x9; BCI.PERSON_ID = @PERSON_ID AND&#xD;&#xA;&#x9; BCI.ORG_ID = @ORG_ID AND&#xD;&#xA;&#x9;  BCI.REFERENCE_ID = @REFERENCE_ID AND&#xD;&#xA;&#x9; BCI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; (BAI.ACTIVITY_ID = @ACTIVITY_ID AND&#xD;&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS)">
      <parameters>
        <parameter ID="@CASE_ID" sfwDataType="int" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@REFERENCE_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_INSTANCE_STATUS" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetBpmActivityInstanceIdsByPersonIdAndOrganizationIdAndReferenceId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xA;FROM&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI WITH(NOLOCK) INNER          &#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI WITH(NOLOCK)   &#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER          &#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI WITH(NOLOCK)   &#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xA;WHERE&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xA;&#x9; BCI.PERSON_ID = @PERSON_ID AND&#xA;&#x9;  BCI.ORG_ID = @ORG_ID AND&#xA;&#x9; BCI.REFERENCE_ID = @REFERENCE_ID AND&#xA;&#x9; BCI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS" sfwPostgre="SELECT&#xD;&#xA;&#x9; BAI.ACTIVITY_INSTANCE_ID &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_CASE_INSTANCE BCI  INNER          &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE BPI &#xD;&#xA;&#x9; ON BCI.CASE_INSTANCE_ID = BPI.CASE_INSTANCE_ID INNER          &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE BAI    &#xD;&#xA;&#x9; ON BAI.PROCESS_INSTANCE_ID = BPI.PROCESS_INSTANCE_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; (BCI.CASE_ID = @CASE_ID AND&#xD;&#xA;&#x9; BCI.PERSON_ID = @PERSON_ID AND&#xD;&#xA;&#x9;  BCI.ORG_ID = @ORG_ID AND&#xD;&#xA;&#x9; BCI.REFERENCE_ID = @REFERENCE_ID AND&#xD;&#xA;&#x9; BCI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; (BPI.STATUS_VALUE = 'INPC') AND&#xD;&#xA;&#x9; BAI.STATUS_VALUE = @ACTIVITY_INSTANCE_STATUS">
      <parameters>
        <parameter ID="@CASE_ID" sfwDataType="int" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@REFERENCE_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_INSTANCE_STATUS" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetUserIdList" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; USER_ID,&#xA;&#x9;FIRST_NAME,&#xA;&#x9;LAST_NAME &#xA;FROM&#xA;&#x9; SGS_USER" sfwPostgre="SELECT&#xD;&#xA;&#x9; USER_ID,&#xD;&#xA;&#x9;FIRST_NAME,&#xD;&#xA;&#x9;LAST_NAME &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGS_USER">
      <parameters />
    </query>
    <query ID="GetUserDetailsIfActive" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; * &#xA;FROM&#xA;&#x9; SGS_USER WITH(NOLOCK) &#xA;WHERE&#xA;&#x9; USER_ID = @USER_ID AND&#xA;&#x9; USER_STATUS_VALUE  = 'A'" sfwPostgre="SELECT&#xD;&#xA;&#x9; * &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGS_USER &#xD;&#xA;WHERE&#xD;&#xA;&#x9; USER_ID = @USER_ID AND&#xD;&#xA;&#x9; USER_STATUS_VALUE  = 'A'">
      <parameters>
        <parameter ID="@USER_ID" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="DeleteTempTableUserWorkflow" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DELETE TMP_REP_OUTPUT_USER_SNAPSHOT" sfwOracle="DELETE TMP_REP_OUTPUT_USER_SNAPSHOT" sfwPostgre="DELETE TMP_REP_OUTPUT_USER_SNAPSHOT">
      <parameters />
    </query>
    <query ID="LoadActivityInstanceStatusValuebycodeID" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select  DESCRIPTION,CODE_VALUE from SGS_CODE_VALUE  where CODE_ID=2007 and CODE_VALUE in ('INPC','RELE','RESU','SUSP','UNPC')">
      <parameters />
    </query>
  </queries>
  <methods />
  <lifecycle />
  <attributes>
    <attribute ID="objBpmActivity" sfwType="Object" sfwEntity="entBpmActivity" sfwValue="ibusBpmActivity" />
    <attribute sfwType="Collection" sfwEntity="entBpmActivityInstanceUsers" ID="lstBpmActivityInstanceUsers" sfwValue="iclbBpmActivityInstanceUsers" />
    <attribute sfwType="Collection" sfwEntity="entBpmProcessInstanceAttachments" ID="lstBpmProcessInstanceAttachments" sfwValue="iclbBpmProcessInstanceAttachments" />
    <attribute sfwType="Collection" sfwEntity="entBpmEscalationInstance" ID="lstBpmEscalationInstances" sfwValue="icolBpmEscalationInstances" />
    <attribute ID="objBpmProcessInstance" sfwType="Object" sfwEntity="entBpmProcessInstance" sfwValue="ibusBpmProcessInstance" />
    <attribute sfwType="Collection" sfwEntity="entBpmActivityInstanceChecklist" ID="lstBpmActivityInstanceChecklist" sfwValue="iclbBpmActivityInstanceChecklist" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsSuspended" sfwValue="istrIsSuspended" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrActiveNotes" sfwValue="istrActiveNotes" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrResumeActionValue" sfwValue="istrResumeActionValue" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrNewNotes" sfwValue="istrNewNotes" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsActivitySelected" sfwValue="istrIsActivitySelected" />
    <attribute sfwValue="activity_instance_id" sfwType="Column" sfwKeyNo="1" sfwIsIdentity="True" sfwDataType="int" sfwIsNull="False" ID="ActivityInstanceId" sfwCaption="ID" />
    <attribute sfwValue="process_instance_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwIsNull="False" ID="ProcessInstanceId" sfwCaption="Process Instance Id" />
    <attribute sfwValue="activity_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwIsNull="False" ID="ActivityId" sfwCaption="Activity Id" />
    <attribute sfwValue="checked_out_user" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="50" sfwIsNull="True" ID="CheckedOutUser" sfwCaption="Checked Out User" />
    <attribute sfwValue="reference_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="bigint" sfwIsNull="True" ID="ReferenceId" sfwCaption="Reference Id" />
    <attribute sfwValue="status_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwIsNull="False" ID="StatusId" sfwCodeID="2007" sfwCaption="Status" />
    <attribute sfwValue="status_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="4" sfwIsNull="True" ID="StatusValue" sfwCaption="Status" />
    <attribute sfwValue="suspension_start_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsNull="True" ID="SuspensionStartDate" sfwCaption="Suspension Start Date" />
    <attribute sfwValue="suspension_minutes" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwIsNull="True" ID="SuspensionMinutes" sfwCaption="Suspension Minutes" />
    <attribute sfwValue="suspension_end_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsNull="True" ID="SuspensionEndDate" sfwCaption="Suspension End Date" />
    <attribute sfwValue="return_from_audit_ind" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="1" sfwIsNull="True" ID="ReturnFromAuditInd" sfwCaption="Return From Audit Ind" />
    <attribute sfwValue="resume_action_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwIsNull="False" ID="ResumeActionId" sfwCodeID="2006" sfwCaption="Resume Action" />
    <attribute sfwValue="resume_action_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="4" sfwIsNull="True" ID="ResumeActionValue" sfwCaption="Resume Action" />
    <attribute sfwValue="suspension_reason_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwIsNull="False" ID="SuspensionReasonId" sfwCodeID="2011" sfwCaption="Suspension Reason" />
    <attribute sfwValue="suspension_reason_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="4" sfwIsNull="True" ID="SuspensionReasonValue" sfwCaption="Suspension Reason" />
    <attribute sfwValue="comments" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="2000" sfwIsNull="True" ID="Comments" sfwCaption="Comments" />
    <attribute sfwValue="due_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsNull="True" ID="DueDate" sfwCaption="Due Date" />
    <attribute sfwValue="start_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsNull="True" ID="StartDate" sfwCaption="Start Date" />
    <attribute sfwValue="end_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsNull="True" ID="EndDate" sfwCaption="End Date" />
    <attribute sfwValue="initiator_instance_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwIsNull="True" ID="InitiatorInstanceId" sfwCaption="Initiator Instance Id" />
    <attribute sfwValue="created_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="50" sfwIsNull="False" ID="CreatedBy" sfwCaption="Created By" />
    <attribute sfwValue="created_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsNull="False" ID="CreatedDate" sfwCaption="Created Date" />
    <attribute sfwValue="modified_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="50" sfwIsNull="False" ID="ModifiedBy" sfwCaption="Modified By" />
    <attribute sfwValue="modified_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsNull="False" ID="ModifiedDate" sfwCaption="Modified Date" />
    <attribute sfwValue="update_seq" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwIsNull="True" ID="UpdateSeq" sfwCaption="Update Seq" />
    <attribute sfwValue="checked_out_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsNull="True" ID="CheckedOutDate" sfwCaption="Checked Out Date" />
    <attribute sfwValue="assigned_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="50" sfwIsNull="False" ID="AssignedBy" sfwCaption="Assigned By" />
    <attribute sfwValue="sla_minutes" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwIsNull="True" ID="SlaMinutes" sfwCaption="Sla Minutes" />
    <attribute sfwValue="sla_hours" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwIsNull="True" ID="SlaHours" sfwCaption="Sla Hours" />
    <attribute sfwValue="sla_days" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwIsNull="True" ID="SlaDays" sfwCaption="Sla Days" />
    <attribute sfwValue="action_control" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="100" sfwIsNull="True" ID="ActionControl" sfwCaption="Action Control" />
    <attribute sfwType="Description" ID="StatusDescription" sfwCaption="Status" sfwValue="status_description" />
    <attribute sfwType="Description" ID="ResumeActionDescription" sfwCaption="Resume Action" sfwValue="resume_action_description" />
    <attribute sfwType="Description" ID="SuspensionReasonDescription" sfwCaption="Suspension Reason" sfwValue="suspension_reason_description" />
    <attribute ID="lstrTerminationReason" sfwDataType="string" sfwPrivate="False" sfwValue="istrTerminationReason" sfwType="Property" />
    <attribute ID="lstbpmTimerActivityInstanceDetails" sfwType="Collection" sfwEntity="entBpmTimerActivityInstanceDetails" sfwValue="iclbTimerActivityInstances" sfwPrivate="False" />
    <attribute ID="istrProcessName" sfwDataType="string" sfwPrivate="False" sfwValue="istrName" sfwType="Property" />
    <attribute ID="lstrName" sfwDataType="string" sfwValue="ibusBpmActivity.icdoBpmActivity.name" sfwType="Property" />
    <attribute sfwValue="rejection_reason_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="RejectionReasonId" sfwCaption="Rejection Reason" />
    <attribute sfwValue="rejection_reason_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="RejectionReasonValue" sfwCaption="Rejection Reason" />
    <attribute sfwValue="launch_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="LaunchDate" sfwCaption="Launch Date" />
    <attribute ID="lstBpmDocumentUpload" sfwType="Collection" sfwValue="iclbBpmDocumentUplaod" sfwEntity="entBpmDocumentUpload" sfwPrivate="False" />
    <attribute ID="objCaseInstance" sfwType="Object" sfwEntity="entBpmCaseInstance" sfwPrivate="False" sfwValue="ibusBpmProcessInstance.ibusBpmCaseInstance" />
    <attribute ID="objBpmCase" sfwType="Object" sfwEntity="entBpmCase" sfwPrivate="False" sfwValue="ibusBpmProcessInstance.ibusBpmProcess.ibusBpmCase" />
    <attribute ID="objRoles" sfwType="Object" sfwEntity="entRoles" sfwPrivate="False" sfwValue="ibusBpmActivity.ibusRoles" />
  </attributes>
  <objectmethods>
    <method ID="LoadBpmActivityInstanceEligibleUsers" sfwReturnType="Void" />
    <method ID="LoadBpmEscalationInstances" sfwReturnType="Void" />
    <method ID="UploadBPMDocument" />
    <method ID="DeleteBPMDocument" sfwReturnType="Void">
      <parameters>
        <parameter ID="aarrSelectedObjects" sfwDataType="arraylist" />
      </parameters>
    </method>
    <method ID="LoadDocumentUpload" sfwReturnType="Void" />
  </objectmethods>
  <ExtraFields />
</entity>