<entity ID="entMssBenefitCalculationHeader" sfwView="False" sfwActive="True" sfwType="EntityRule" sfwStatus="Review" CreateWithClass="False">
  <ExtraFields />
  <queries>
    <query ID="GetPlanForMember" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select sp.*,SPA.SPECIAL_ACCOUNT from SGT_PERSON_ACCOUNT spa WITH(NOLOCK)&#xD;&#xA;join sgt_plan sp WITH(NOLOCK) on sp.PLAN_ID = spa.PLAN_ID&#xD;&#xA;where spa.PERSON_ID = @PERSON_ID and sp.PLAN_CODE &lt;&gt; 'LIFE'">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetCountOfQualifiedDRO" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select count(*) from SGT_DRO_APPLICATION SDA JOIN SGT_DRO_BENEFIT_DETAILS SDBD ON SDA.DRO_APPLICATION_ID = SDBD.DRO_APPLICATION_ID&#xD;&#xA;where (DRO_STATUS_VALUE = 'QLFD' or DRO_STATUS_VALUE = 'AMQL') and person_id=@person_id">
      <parameters>
        <parameter ID="@person_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetAlternatePayeeID" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select distinct SPA.* from SGT_DRO_APPLICATION SDA WITH(NOLOCK) JOIN SGT_PERSON SPA WITH(NOLOCK) ON &#xD;&#xA;SPA.PERSON_ID = SDA.ALTERNATE_PAYEE_ID &#xD;&#xA;JOIN SGT_DRO_BENEFIT_DETAILS SDBD WITH(NOLOCK) &#xD;&#xA;ON SDBD.DRO_APPLICATION_ID = SDA.DRO_APPLICATION_ID&#xD;&#xA;where (DRO_STATUS_VALUE = 'QLFD' or DRO_STATUS_VALUE = 'AMQL') &#xD;&#xA;and SDA.PERSON_ID = @PERSON_ID AND SDBD.PLAN_ID = @PLAN_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetApplicationForDRO" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select SDA.* from SGT_DRO_APPLICATION SDA WITH(NOLOCK) JOIN SGT_DRO_BENEFIT_DETAILS SDBD WITH(NOLOCK) ON SDA.DRO_APPLICATION_ID = SDBD.DRO_APPLICATION_ID &#xD;&#xA;where SDBD.PLAN_ID = @PLAN_ID and &#xD;&#xA;SDA.PERSON_ID = @PERSON_ID and &#xD;&#xA;SDA.ALTERNATE_PAYEE_ID = @ALTERNATE_ID &#xD;&#xA;and (DRO_STATUS_VALUE = 'QLFD' or DRO_STATUS_VALUE = 'AMQL')">
      <parameters>
        <parameter ID="@PLAN_ID" sfwDataType="int" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@ALTERNATE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="MssCalcHeaderLookup" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT HDR.BENEFIT_CALCULATION_HEADER_ID,DTL.BENEFIT_SUBTYPE_ID,DTL.BENEFIT_SUBTYPE_VALUE, HDR.BENEFIT_APPLICATION_ID, CALCULATION_TYPE_ID, HDR.CALCULATION_TYPE_VALUE, HDR.BENEFIT_TYPE_ID,&#xD;&#xA;  HDR.BENEFIT_TYPE_VALUE, HDR.STATUS_ID, HDR.STATUS_VALUE, HDR.RETIREMENT_DATE, HDR.AGE, HDR.CREATED_BY, HDR.MODIFIED_BY, HDR.CREATED_DATE,&#xD;&#xA;  DTL.PLAN_ID, DTL.VESTED_DATE, DTL.BENEFIT_SUBTYPE_ID, DTL.BENEFIT_SUBTYPE_VALUE, &#xD;&#xA;  SP.PERSON_ID, SP.MPI_PERSON_ID, SP.FIRST_NAME, SP.MIDDLE_NAME, SP.LAST_NAME,&#xD;&#xA;  SP1.PERSON_ID, SP1.MPI_PERSON_ID, SP1.FIRST_NAME, SP1.MIDDLE_NAME, SP1.LAST_NAME,HDR.DRO_APPLICATION_ID,&#xD;&#xA;  PLN.PLAN_NAME as istrPlanDescription,HDR.Benefit_Commencement_Date, HDR.AWARDED_ON_DATE, HDR.SSA_APPROVAL_DATE,&#xD;&#xA;  CASE WHEN HDR.STATUS_VALUE = 'APPR' THEN HDR.MODIFIED_BY ELSE NUll END AS istrApprovedBy,&#xD;&#xA;  istrRelativeVipFlag =(&#xD;&#xA;        SELECT CASE WHEN (COUNT(*) &gt; 0 OR SP.VIP_FLAG='Y') THEN 'Y' ELSE 'N' END FROM SGT_RELATIONSHIP SR&#xD;&#xA;        INNER JOIN SGT_PERSON SPP ON SPP.PERSON_ID = SR.PERSON_ID WHERE (SR.BENEFICIARY_PERSON_ID = SP.PERSON_ID OR SR.DEPENDENT_PERSON_ID = SP.PERSON_ID) &#xD;&#xA;        AND SPP.VIP_FLAG = 'Y'&#xD;&#xA;            )&#xD;&#xA;FROM SGT_BENEFIT_CALCULATION_HEADER HDR WITH(NOLOCK) &#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_DETAIL DTL WITH(NOLOCK) ON DTL.BENEFIT_CALCULATION_HEADER_ID = HDR.BENEFIT_CALCULATION_HEADER_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_CALCULATION_OPTIONS OPT WITH(NOLOCK) ON OPT.BENEFIT_CALCULATION_DETAIL_ID = DTL.BENEFIT_CALCULATION_DETAIL_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBX WITH(NOLOCK) ON PBX.PLAN_BENEFIT_ID = OPT.PLAN_BENEFIT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON SP WITH(NOLOCK) ON SP.PERSON_ID = HDR.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON SP1 WITH(NOLOCK) ON SP1.PERSON_ID = HDR.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PLAN PLN WITH(NOLOCK) ON PLN.PLAN_ID = DTL.PLAN_ID&#xD;&#xA;where MSS_FLAG = 'Y' order by HDR.CREATED_DATE DESC">
      <parameters />
    </query>
    <query ID="GetAllWithdrawalsOfThePart" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT YEAR(SPARC.EFFECTIVE_DATE) AS WITHDRAWAL_YEAR, MAX(SPARC.EFFECTIVE_DATE) EFFECTIVE_DATE,SUM(SPARC.EE_CONTRIBUTION_AMOUNT)EE_CONTRIBUTION_AMOUNT,SUM(SPARC.EE_INT_AMOUNT)EE_INT_AMOUNT &#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH(NOLOCK) JOIN SGT_PERSON_ACCOUNT SPA WITH(NOLOCK) ON SPA.PERSON_ACCOUNT_ID = SPARC.PERSON_ACCOUNT_ID&#xD;&#xA;JOIN SGT_PLAN PL WITH(NOLOCK) ON PL.PLAN_ID = SPA.PLAN_ID&#xD;&#xA;JOIN SGT_PERSON SP WITH(NOLOCK) ON SP.PERSON_ID = SPA.PERSON_ID&#xD;&#xA;where CONTRIBUTION_TYPE_VALUE = 'EE' and TRANSACTION_TYPE_VALUE = 'PMNT'&#xD;&#xA;AND PL.PLAN_CODE IN  ('MPIPP') AND SP.PERSON_ID = @PERSON_ID&#xD;&#xA;GROUP BY YEAR(SPARC.EFFECTIVE_DATE)">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetAlternatePayeeForPersonAndPlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select distinct SPA.* from SGT_DRO_APPLICATION SDA WITH(NOLOCK) JOIN SGT_PERSON SPA WITH(NOLOCK) ON &#xD;&#xA;SPA.PERSON_ID = SDA.ALTERNATE_PAYEE_ID JOIN SGT_DRO_BENEFIT_DETAILS SDBD ON SDBD.DRO_APPLICATION_ID = SDA.DRO_APPLICATION_ID&#xD;&#xA;where (DRO_STATUS_VALUE = 'QLFD' or DRO_STATUS_VALUE = 'AMQL') &#xD;&#xA;and SDA.PERSON_ID = @PERSON_ID &#xD;&#xA;and SDBD.PLAN_ID = @PLAN_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="QdroCalcHeaderLookup" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT HDR.*,DTL.*,PLN.PLAN_NAME as istrPlanDescription,HDR.QDRO_APPLICATION_ID,&#xD;&#xA; hdr.DATE_OF_MARRIAGE, hdr.DATE_OF_SEPERATION,&#xD;&#xA;(sp.FIRST_NAME + ' ' + sp.LAST_NAME) as ParticipantName,&#xD;&#xA; (SP1.FIRST_NAME + ' ' + SP1.LAST_NAME) as AlternatePayeeName,&#xD;&#xA;  sp.MPI_PERSON_ID, sp1.MPI_PERSON_ID as AlternatePayeeMPIId, scv.description as QDROModelDescription,&#xD;&#xA;  sda.CASE_NUMBER, sda.RECEIVED_DATE,sda.QUALIFIED_DATE,&#xD;&#xA;    istrRelativeVipFlag =(&#xD;&#xA;        SELECT CASE WHEN (COUNT(*) &gt; 0 OR SP.VIP_FLAG='Y') THEN 'Y' ELSE 'N' END FROM SGT_RELATIONSHIP SR&#xD;&#xA;        INNER JOIN SGT_PERSON SPP ON SPP.PERSON_ID = SR.PERSON_ID WHERE (SR.BENEFICIARY_PERSON_ID = SP.PERSON_ID OR SR.DEPENDENT_PERSON_ID = SP.PERSON_ID) &#xD;&#xA;        AND SPP.VIP_FLAG = 'Y'&#xD;&#xA;            )&#xD;&#xA;FROM SGT_QDRO_CALCULATION_HEADER HDR WITH(NOLOCK) &#xD;&#xA;INNER JOIN SGT_QDRO_CALCULATION_DETAIL DTL WITH(NOLOCK) &#xD;&#xA;ON DTL.QDRO_CALCULATION_HEADER_ID = HDR.QDRO_CALCULATION_HEADER_ID&#xD;&#xA;left outer join sgt_dro_application sda on sda.DRO_APPLICATION_ID = HDR.QDRO_APPLICATION_ID&#xD;&#xA;INNER JOIN SGT_PERSON SP WITH(NOLOCK) ON SP.PERSON_ID = HDR.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PERSON SP1 WITH(NOLOCK) ON SP1.PERSON_ID = HDR.ALTERNATE_PAYEE_ID&#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK)  ON PLN.PLAN_ID = DTL.PLAN_ID&#xD;&#xA;left outer join sgs_code_value scv on scv.code_id = dtl.qdro_model_id and scv.code_value = dtl.qdro_model_value&#xD;&#xA;where HDR.MSS_FLAG = 'Y'">
      <parameters />
    </query>
    <query ID="MssPaymentHistoryHeaderLookup" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PHH.PAYMENT_HISTORY_HEADER_ID, PA.PAYEE_ACCOUNT_ID, PHH.PLAN_ID,P.PLAN_CODE,&#xD;&#xA; PHH.PAYMENT_DATE, PHH.PAYMENT_DATE AS PAYMENT_DATE1,PARTI_PER.MPI_PERSON_ID Part_MPID,&#xD;&#xA; PER.MPI_PERSON_ID,(PER.FIRST_NAME + ' ' + PER.LAST_NAME) AS PAYEENAME,&#xD;&#xA;    O.MPI_ORG_ID, O.ORG_NAME,&#xD;&#xA; SPHD.PAYMENT_METHOD_ID, SPHD.PAYMENT_METHOD_VALUE,&#xD;&#xA; SPHD.CHECK_NUMBER,&#xD;&#xA; SPHD.BANK_NAME, &#xD;&#xA; PHD.GROSS_AMOUNT,&#xD;&#xA; PHD.RETRO_AMOUNT,&#xD;&#xA; PHD.NET_AMOUNT,&#xD;&#xA; PHD.DEDUCTION_AMOUNT,&#xD;&#xA; PHD.STATE_TAX,&#xD;&#xA; PHD.FEDERAL_TAX AS FEDRAL_TAX,&#xD;&#xA; PHH.PAYMENT_SCHEDULE_ID,&#xD;&#xA; SPHD.CHECK_ACH_EFFECTIVE_DATE,SPHD.CHECK_ACH_EFFECTIVE_DATE AS CHECK_ACH_EFFECTIVE_DATE1,&#xD;&#xA; SPHD.DISTRIBUTION_STATUS_ID, SPHD.DISTRIBUTION_STATUS_VALUE,&#xD;&#xA; PHD.PAYMENT_TYPE,&#xD;&#xA; PA.BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA; PHD.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA; PHD.PLAN_YEAR,&#xD;&#xA;  (case WHEN PBACC.FUNDS_TYPE_VALUE IS NOT NULL THEN (Select SCVD.DESCRIPTION FROM SGS_CODE_VALUE SCVD where SCVD.CODE_ID = PBACC.FUNDS_TYPE_ID AND SCVD.CODE_VALUE=PBACC.FUNDS_TYPE_VALUE)&#xD;&#xA; ELSE PBACC.FUNDS_TYPE_VALUE END ) AS FUNDS_TYPE_VALUE,&#xD;&#xA; CASE WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DSBL' OR (BADSBL.BENEFIT_APPLICATION_ID IS NOT NULL AND BADSBL.DISABILITY_CONVERSION_DATE IS NOT NULL AND BADSBL.RETIREMENT_DATE&lt;=PHH.PAYMENT_DATE)&#xD;&#xA;         OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' AND DAPP.IS_PARTICIPANT_DISABLED_FLAG='Y') OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL AND DRO.IS_PARTICIPANT_DISABLED_FLAG='Y')))&#xD;&#xA;          THEN '3' -- IAP CASE PENDING HERE&#xD;&#xA;          &#xD;&#xA;          &#xD;&#xA;    WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DDPR' OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DDPT') &#xD;&#xA;          THEN '4' + CASE WHEN (PBXR.BENEFIT_OPTION_VALUE = 'LUMP' AND dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH) &lt;= '01/01/1936')   &#xD;&#xA;                          THEN 'A'&#xD;&#xA;                          WHEN PHD.ROLLOVER_FLAG ='Y'&#xD;&#xA;                          THEN 'G'&#xD;&#xA;                          ELSE ''&#xD;&#xA;                          END&#xD;&#xA;     &#xD;&#xA;       WHEN (((((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' AND BA.DRO_APPLICATION_ID IS NULL ) OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT') AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &gt;= 59.5)&#xD;&#xA;                    OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL)) AND DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE)/365.25 &gt;= 59.5))&#xD;&#xA;              AND PHD.ROLLOVER_FLAG ='N') &#xD;&#xA;        THEN '7' +  CASE WHEN (PBXR.BENEFIT_OPTION_VALUE = 'LUMP' AND  ((((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' AND BA.DRO_APPLICATION_ID IS NULL) OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT') AND dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH) &lt;= '01/01/1936') &#xD;&#xA;                              OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL)) AND dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH) &lt;= '01/01/1936')))&#xD;&#xA;                   THEN 'A'&#xD;&#xA;                   ELSE ''&#xD;&#xA;                   END                    &#xD;&#xA;          &#xD;&#xA;    WHEN (((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NULL AND PBXR.BENEFIT_OPTION_VALUE!='LUMP') AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &lt; 59.5)  &#xD;&#xA;     OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL AND PBXR.BENEFIT_OPTION_VALUE!='LUMP')) AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &lt; 59.5)&#xD;&#xA;           OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND (SELECT COUNT(*)  FROM SGT_PAYEE_ACCOUNT B INNER JOIN SGT_PLAN_BENEFIT_XR A ON A.PLAN_BENEFIT_ID=B.PLAN_BENEFIT_ID&#xD;&#xA;                                                               WHERE B.PERSON_ID=PA.PERSON_ID AND B.PAYEE_ACCOUNT_ID!=PA.PAYEE_ACCOUNT_ID AND A.PLAN_ID = PBXR.PLAN_ID AND B.BENEFIT_ACCOUNT_TYPE_VALUE!=PA.BENEFIT_ACCOUNT_TYPE_VALUE) &gt; 0)) &#xD;&#xA;           AND PHD.ROLLOVER_FLAG='N')&#xD;&#xA;          THEN '2'&#xD;&#xA;         &#xD;&#xA;    WHEN PHD.ROLLOVER_FLAG='Y'      &#xD;&#xA;         THEN 'G'&#xD;&#xA;     &#xD;&#xA;    WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND PBXR.BENEFIT_OPTION_VALUE='LUMP' AND PHD.ROLLOVER_FLAG='N' AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &lt; 59.5)     &#xD;&#xA;          THEN '1'      &#xD;&#xA;                   &#xD;&#xA;    ELSE 'ZZ'                                                     &#xD;&#xA;    END &#xD;&#xA; AS istrDistributionCode,&#xD;&#xA; istrRelativeVipFlag = ( SELECT CASE WHEN (COUNT(*) &gt; 0 OR PER.VIP_FLAG='Y') THEN 'Y' ELSE 'N' END FROM SGT_RELATIONSHIP SR&#xD;&#xA;                            INNER JOIN SGT_PERSON SPP ON SPP.PERSON_ID = SR.PERSON_ID WHERE (SR.BENEFICIARY_PERSON_ID = PER.PERSON_ID OR SR.DEPENDENT_PERSON_ID = PER.PERSON_ID) &#xD;&#xA;                            AND SPP.VIP_FLAG = 'Y')&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA; INNER JOIN &#xD;&#xA; (&#xD;&#xA;  SELECT PHD.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;  &#xD;&#xA;   SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 OR ALLOW_ROLLOVER_CODE_VALUE='RRED'   &#xD;&#xA;      THEN &#xD;&#xA;      ISNULL(PHD.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;      ELSE 0 &#xD;&#xA;      END&#xD;&#xA;    )  AS GROSS_AMOUNT,&#xD;&#xA;    SUM(CASE WHEN (PIT.ITEM_TYPE_DIRECTION = 1 OR ALLOW_ROLLOVER_CODE_VALUE='RRED') AND (SRIT.FROM_ITEM_TYPE = 'ITEM1' OR  SRIT.FROM_ITEM_TYPE='ITEM2') &#xD;&#xA;      THEN &#xD;&#xA;      ISNULL(PHD.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;      ELSE 0 &#xD;&#xA;      END&#xD;&#xA;    )  AS RETRO_AMOUNT,&#xD;&#xA;      SUM(ISNULL(PHD.AMOUNT,0.0) * PIT.ITEM_TYPE_DIRECTION)  AS NET_AMOUNT,&#xD;&#xA;   &#xD;&#xA;      SUM(CASE WHEN PIT.CHECK_GROUP_CODE_VALUE = 'DEDT' AND PIT.ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'RRED' AND PIT.PAYEE_DETAIL_GROUP_VALUE &lt;&gt; 'FEDX' AND PIT.PAYEE_DETAIL_GROUP_VALUE &lt;&gt; 'STTX' &#xD;&#xA;              THEN (PIT.ITEM_TYPE_DIRECTION * PHD.AMOUNT) &#xD;&#xA;              ELSE 0 &#xD;&#xA;              END&#xD;&#xA;         ) AS DEDUCTION_AMOUNT,&#xD;&#xA;    &#xD;&#xA;   SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'FEDX'&#xD;&#xA;      THEN &#xD;&#xA;      ISNULL(PHD.AMOUNT,0.0) &#xD;&#xA;      ELSE 0 &#xD;&#xA;      END&#xD;&#xA;    )  AS FEDERAL_TAX,&#xD;&#xA;    &#xD;&#xA;   SUM(CASE WHEN &#xD;&#xA;      PIT.ACH_CHECK_GROUP_VALUE = 'STTX'&#xD;&#xA;      THEN &#xD;&#xA;      ISNULL(PHD.AMOUNT,0.0) &#xD;&#xA;      ELSE 0 &#xD;&#xA;      END&#xD;&#xA;    )  AS STATE_TAX,&#xD;&#xA;    &#xD;&#xA;   CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET' &#xD;&#xA;     THEN 'Y' &#xD;&#xA;     ELSE 'N' &#xD;&#xA;     END &#xD;&#xA;     AS ROLLOVER_FLAG,&#xD;&#xA;     &#xD;&#xA;      CASE WHEN PIT.ITEM_USAGE_VALUE = 'MNTP' THEN 'Pension Payment' WHEN PIT.ITEM_USAGE_VALUE = 'ONTP' AND PA.RETIREE_INCR_FLAG = 'Y' THEN '13 &amp; 14 check' ELSE 'One Time' END AS PAYMENT_TYPE,&#xD;&#xA;   PA.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;  DATEPART(YYYY,PHH.PAYMENT_DATE) PLAN_YEAR &#xD;&#xA;  &#xD;&#xA;  FROM SGT_PAYMENT_HISTORY_DETAIL PHD    &#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT PA ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PLAN_BENEFIT_XR PBXR ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA;  LEFT JOIN SGT_RETRO_ITEM_TYPE SRIT ON PIT.ITEM_TYPE_CODE = SRIT.TO_ITEM_TYPE&#xD;&#xA;  GROUP BY PHD.PAYMENT_HISTORY_HEADER_ID, PA.BENEFIT_ACCOUNT_TYPE_VALUE,PHH.PAYMENT_DATE,&#xD;&#xA;  CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET' THEN 'Y' ELSE 'N' END,&#xD;&#xA;  CASE WHEN PIT.ITEM_USAGE_VALUE = 'MNTP' THEN 'Pension Payment' WHEN PIT.ITEM_USAGE_VALUE = 'ONTP' AND PA.RETIREE_INCR_FLAG = 'Y' THEN '13 &amp; 14 check' ELSE 'One Time' END&#xD;&#xA; )AS PHD ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA; &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBACC WITH(NOLOCK) ON PBACC.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PERSON PARTI_PER WITH(NOLOCK) ON PARTI_PER.PERSON_ID = PBACC.PERSON_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION SPHD WITH(NOLOCK) ON  SPHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BADSBL WITH(NOLOCK) ON BADSBL.PERSON_ID = PA.PERSON_ID AND BADSBL.BENEFIT_TYPE_VALUE='DSBL' AND BADSBL.APPLICATION_STATUS_VALUE='APRD'&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_DETAIL BAD WITH(NOLOCK) ON BAD.BENEFIT_APPLICATION_DETAIL_ID = PA.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) ON BAD.BENEFIT_APPLICATION_ID = BA.BENEFIT_APPLICATION_ID AND BA.APPLICATION_STATUS_VALUE='APRD'&#xD;&#xA; LEFT OUTER JOIN SGT_DRO_BENEFIT_DETAILS DBD WITH(NOLOCK) ON DBD.DRO_BENEFIT_ID = PA.DRO_APPLICATION_DETAIL_ID&#xD;&#xA; LEFT OUTER JOIN SGT_DRO_APPLICATION DAPP WITH(NOLOCK) ON DAPP.DRO_APPLICATION_ID = DBD.DRO_APPLICATION_ID AND DAPP.DRO_STATUS_VALUE='QLFD'&#xD;&#xA; LEFT OUTER JOIN SGT_DRO_APPLICATION DRO WITH(NOLOCK) ON DRO.DRO_APPLICATION_ID=BA.DRO_APPLICATION_ID AND DRO.DRO_STATUS_VALUE='QLFD'&#xD;&#xA; LEFT OUTER JOIN SGT_PERSON PER WITH(NOLOCK) ON PHH.PERSON_ID = PER.PERSON_ID &#xD;&#xA; LEFT OUTER JOIN SGT_ORGANIZATION O WITH(NOLOCK) ON PHH.ORG_ID = O.ORG_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PLAN P WITH(NOLOCK) ON P.PLAN_ID=PHH.PLAN_ID&#xD;&#xA; WHERE SPHD.DISTRIBUTION_STATUS_VALUE IN ('OUTS','CLRD')&#xD;&#xA; AND DATEPART(YYYY,PHH.PAYMENT_DATE) IN (DATEPART(YYYY,GETDATE())-2, DATEPART(YYYY,GETDATE())-1, DATEPART(YYYY,GETDATE())) &#xD;&#xA; ORDER BY PHH.PAYMENT_DATE DESC">
      <parameters />
    </query>
    <query ID="GetLastThreeYearDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @THREE INT = 3&#xD;&#xA;DECLARE @TO INT = 0&#xD;&#xA;DECLARE @YEAR TABLE (THREE_YEAR Varchar(10), VALUE Varchar(10)) &#xD;&#xA;&#xD;&#xA;WHILE (@THREE &gt; @TO) &#xD;&#xA;BEGIN&#xD;&#xA;INSERT INTO @YEAR (THREE_YEAR, VALUE)&#xD;&#xA;SELECT DATEPART(YYYY,GETDATE()) - @TO, @TO + 1&#xD;&#xA;SET @TO = @TO + 1&#xD;&#xA;END&#xD;&#xA;&#xD;&#xA;SELECT * FROM @YEAR">
      <parameters />
    </query>
    <query ID="GetProcessForPerson" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from SGW_PROCESS SWP WITH(NOLOCK) &#xD;&#xA;JOIN SGW_PROCESS_INSTANCE SWPI WITH(NOLOCK) ON SWPI.PROCESS_ID = SWP.PROCESS_ID&#xD;&#xA;where SWP.PROCESS_ID in (1,5,9,10,12) and SWPI.PERSON_ID = @PERSON_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetActivitiesInitiatedForPerson" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select SWI.*,SA.*,SCV.DESCRIPTION, &#xD;&#xA;(select TOP 1 swih.START_TIME from SGW_ACTIVITY_INSTANCE_HISTORY SWIH  &#xD;&#xA;where swih.ACTIVITY_INSTANCE_ID = SWI.ACTIVITY_INSTANCE_ID order by SWIH.START_TIME) START_TIME&#xD;&#xA;from SGW_ACTIVITY_INSTANCE SWI JOIN SGW_ACTIVITY SA ON SA.ACTIVITY_ID = SWI.ACTIVITY_ID&#xD;&#xA;JOIN SGW_PROCESS_INSTANCE SPI ON SPI.PROCESS_INSTANCE_ID = SWI.PROCESS_INSTANCE_ID JOIN SGS_CODE_VALUE SCV&#xD;&#xA;ON SCV.CODE_ID = SWI.STATUS_ID and SCV.CODE_VALUE = SWI.STATUS_VALUE&#xD;&#xA;where SPI.PROCESS_INSTANCE_ID = @PROCESS_INSTANCE_ID&#xD;&#xA;order by START_TIME">
      <parameters>
        <parameter ID="@PROCESS_INSTANCE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPendingActivitiesForProcess" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from SGW_ACTIVITY WITH(NOLOCK) where ACTIVITY_ID NOT IN &#xD;&#xA;(select ACTIVITY_ID from SGW_ACTIVITY_INSTANCE SAI WITH(NOLOCK) JOIN SGW_PROCESS_INSTANCE SPI WITH(NOLOCK) &#xD;&#xA;ON SPI.PROCESS_INSTANCE_ID = SAI.PROCESS_INSTANCE_ID&#xD;&#xA;JOIN SGW_PROCESS SP WITH(NOLOCK) ON SP.PROCESS_ID = SPI.PROCESS_ID&#xD;&#xA;where SPI.PROCESS_INSTANCE_ID = @PROCESS_INSTANCE_ID&#xD;&#xA;) and PROCESS_ID = &#xD;&#xA;(select PROCESS_ID from SGW_PROCESS_INSTANCE WITH(NOLOCK) where PROCESS_INSTANCE_ID = @PROCESS_INSTANCE_ID)">
      <parameters>
        <parameter ID="@PROCESS_INSTANCE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPlanFromDROApplication" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select distinct PLN.*,SDBD.DRO_APPLICATION_ID from SGT_DRO_APPLICATION SDA WITH(NOLOCK) JOIN SGT_PERSON SPA WITH(NOLOCK) ON &#xD;&#xA;SPA.PERSON_ID = SDA.PERSON_ID JOIN SGT_DRO_BENEFIT_DETAILS SDBD ON SDBD.DRO_APPLICATION_ID = SDA.DRO_APPLICATION_ID&#xD;&#xA;JOIN SGT_PLAN PLN ON PLN.PLAN_ID = SDBD.PLAN_ID&#xD;&#xA;where (DRO_STATUS_VALUE = 'QLFD' or DRO_STATUS_VALUE = 'AMQL') and SDA.PERSON_ID = @PERSON_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPlansFromApplication" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select  SP.*,SBA.RETIREMENT_DATE from SGT_BENEFIT_APPLICATION SBA JOIN SGT_BENEFIT_APPLICATION_DETAIL SBAD&#xD;&#xA;ON SBA.BENEFIT_APPLICATION_ID = SBAD.BENEFIT_APPLICATION_ID&#xD;&#xA;JOIN SGT_PLAN_BENEFIT_XR SPBX ON SPBX.PLAN_BENEFIT_ID = SBAD.PLAN_BENEFIT_ID JOIN&#xD;&#xA;SGT_PLAN SP ON SP.PLAN_ID = SPBX.PLAN_ID&#xD;&#xA;where SBA.BENEFIT_APPLICATION_ID = @BENEFIT_APPLICATION_ID">
      <parameters>
        <parameter ID="@BENEFIT_APPLICATION_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPlansFromWithdrawalApplication" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select  SP.*, SBAD.EE_FLAG,SBAD.UVHP_FLAG,SBAD.L161_SPL_ACC_FLAG,SBAD.L52_SPL_ACC_FLAG from SGT_BENEFIT_APPLICATION SBA JOIN SGT_BENEFIT_APPLICATION_DETAIL SBAD&#xD;&#xA;ON SBA.BENEFIT_APPLICATION_ID = SBAD.BENEFIT_APPLICATION_ID&#xD;&#xA;JOIN SGT_PLAN_BENEFIT_XR SPBX ON SPBX.PLAN_BENEFIT_ID = SBAD.PLAN_BENEFIT_ID JOIN&#xD;&#xA;SGT_PLAN SP ON SP.PLAN_ID = SPBX.PLAN_ID&#xD;&#xA;where SBA.BENEFIT_APPLICATION_ID = @BENEFIT_APPLICATION_ID">
      <parameters>
        <parameter ID="@BENEFIT_APPLICATION_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetBenefitTypesForMss" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from SGS_CODE_VALUE WITH(NOLOCK) where CODE_ID = 1502 and&#xD;&#xA;CODE_VALUE in ('DSBL','RTMT','WDRL')">
      <parameters />
    </query>
    <query ID="GetBenefitTypesForMssPlusQDRO" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from SGS_CODE_VALUE WITH(NOLOCK) where CODE_ID = 1502 and&#xD;&#xA;CODE_VALUE in ('DSBL','RTMT','WDRL','QDRO')">
      <parameters />
    </query>
    <query ID="GetApprovedApplications" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT *&#xD;&#xA;FROM SGT_BENEFIT_APPLICATION WITH(NOLOCK) &#xD;&#xA;WHERE PERSON_ID = @PERSON_ID &#xD;&#xA;AND BENEFIT_TYPE_VALUE IN ('RTMT','DSBL') &#xD;&#xA;AND APPLICATION_STATUS_VALUE = 'APPR'">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckReemploymentStatus" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from SGT_PAYEE_ACCOUNT SPA WITH(NOLOCK) JOIN SGT_PAYEE_BENEFIT_ACCOUNT SPBA WITH(NOLOCK) &#xD;&#xA;ON SPA.PAYEE_BENEFIT_ACCOUNT_ID = SPBA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;where&#xD;&#xA;SPBA.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID  and  BENEFIT_ACCOUNT_TYPE_VALUE  in ('RTMT', 'DSBL')&#xD;&#xA;and (RETIREE_INCR_FLAG = 'N' OR RETIREE_INCR_FLAG IS NULL) and REEMPLOYED_FLAG = 'Y' and REEMPLOYED_FLAG_AS_OF_DATE is not null">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetBeneficiariesForPlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select spb.PERSON_RELATIONSHIP_ID,spa.PERSON_ID, sp.PERSON_ID,sp.FIRST_NAME + ' ' + sp.LAST_NAME istrBenFullName,sp.LAST_NAME istrBenLastName,sp.NAME_PREFIX_VALUE istrNamePrefixValue,&#xD;&#xA;sp.DATE_OF_DEATH idtBenDateOfDeath,spl.PLAN_NAME istrPlan,spb.RELATIONSHIP_VALUE,scv.DESCRIPTION istrRelationShipValue ,spab.*,sp.MPI_PERSON_ID as istrBenMPID,spl.PLAN_ID iaintPlan&#xD;&#xA;from SGT_PERSON_ACCOUNT_BENEFICIARY spab WITH(NOLOCK) &#xD;&#xA;join SGT_PERSON_ACCOUNT spa WITH(NOLOCK)  on spa.PERSON_ACCOUNT_ID = spab.PERSON_ACCOUNT_ID&#xD;&#xA;join SGT_PLAN spl WITH(NOLOCK) on spa.PLAN_ID = spl.PLAN_ID&#xD;&#xA;join SGT_RELATIONSHIP spb WITH(NOLOCK) on spab.PERSON_RELATIONSHIP_ID = spb.PERSON_RELATIONSHIP_ID&#xD;&#xA;join SGT_PERSON sp WITH(NOLOCK) on sp.PERSON_ID = spb.BENEFICIARY_PERSON_ID &#xD;&#xA;join SGS_CODE_VALUE SCV ON SCV.CODE_ID = spb.RELATIONSHIP_ID and scv.CODE_VALUE = spb.RELATIONSHIP_VALUE&#xD;&#xA;where spb.BENEFICIARY_PERSON_ID is NOT NULL and spa.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;union&#xD;&#xA;select spb.PERSON_RELATIONSHIP_ID,spa.PERSON_ID, spb.BENEFICIARY_ORG_ID ,so.ORG_NAME istrBenFullName,'' istrBenLastName,'' istrNamePrefixValue,'' idtBenDateOfDeath,&#xD;&#xA;spl.PLAN_NAME istrPlan,spb.RELATIONSHIP_VALUE,scv.DESCRIPTION istrRelationShipValue ,spab.*,so.MPI_ORG_ID as istrBenMPID,spl.PLAN_ID iaintPlan&#xD;&#xA; from SGT_PERSON_ACCOUNT_BENEFICIARY spab WITH(NOLOCK) &#xD;&#xA;join SGT_PERSON_ACCOUNT spa WITH(NOLOCK)  on spa.PERSON_ACCOUNT_ID = spab.PERSON_ACCOUNT_ID&#xD;&#xA;join SGT_PLAN spl WITH(NOLOCK) on spa.PLAN_ID = spl.PLAN_ID&#xD;&#xA;join SGT_RELATIONSHIP spb WITH(NOLOCK) on spab.PERSON_RELATIONSHIP_ID = spb.PERSON_RELATIONSHIP_ID&#xD;&#xA;join SGT_ORGANIZATION so WITH(NOLOCK) on so.ORG_ID = spb.BENEFICIARY_ORG_ID&#xD;&#xA;join SGS_CODE_VALUE SCV ON SCV.CODE_ID = spb.RELATIONSHIP_ID and scv.CODE_VALUE = spb.RELATIONSHIP_VALUE&#xD;&#xA;where spb.BENEFICIARY_ORG_ID is NOT NULL and spa.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;order by PLAN_NAME, BENEFICIARY_TYPE_VALUE">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetActivePlansForRetCalculation" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select sp.*,SPA.SPECIAL_ACCOUNT from SGT_PERSON_ACCOUNT spa WITH(NOLOCK)&#xD;&#xA;join sgt_plan sp WITH(NOLOCK) on sp.PLAN_ID = spa.PLAN_ID&#xD;&#xA;where spa.PERSON_ID = @PERSON_ID and sp.PLAN_CODE &lt;&gt; 'LIFE'&#xD;&#xA;and spa.status_value = 'ACTV'">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPensionPayeeAccountForParticipant" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SPA.* FROM SGT_PAYEE_ACCOUNT SPA WITH(NOLOCK) JOIN SGT_PLAN_BENEFIT_XR SPBX WITH(NOLOCK)&#xD;&#xA;ON SPBX.PLAN_BENEFIT_ID = SPA.PLAN_BENEFIT_ID &#xD;&#xA;WHERE SPA.PERSON_ID = @PERSON_ID and SPBX.PLAN_ID = @PLAN_ID&#xD;&#xA;AND (SELECT TOP 1 Q.STATUS_VALUE FROM SGT_PAYEE_ACCOUNT_STATUS Q WITH(NOLOCK) &#xD;&#xA;WHERE Q.PAYEE_ACCOUNT_ID = SPA.PAYEE_ACCOUNT_ID ORDER BY &#xD;&#xA;Q.STATUS_EFFECTIVE_DATE DESC) NOT IN  ('CMPL','CNCL')&#xD;&#xA;AND (SPA.RETIREE_INCR_FLAG IS NULL OR SPA.RETIREE_INCR_FLAG = 'N')">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetCalculationForDRO" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select SQCH.* from SGT_QDRO_CALCULATION_HEADER SQCH join SGT_QDRO_CALCULATION_DETAIL SQCD ON SQCH.QDRO_CALCULATION_HEADER_ID = SQCD.QDRO_CALCULATION_HEADER_ID&#xD;&#xA; where SQCH.QDRO_APPLICATION_ID = @QDRO_APPLICATION_ID and SQCH.CALCULATION_TYPE_VALUE = 'FINL' &#xD;&#xA;and SQCH.STATUS_VALUE = 'APPR' and SQCD.PLAN_ID = @PLAN_ID">
      <parameters>
        <parameter ID="@QDRO_APPLICATION_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetQualifiedDROs" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select SDBD.* from SGT_DRO_APPLICATION SDA JOIN SGT_DRO_BENEFIT_DETAILS SDBD ON SDA.DRO_APPLICATION_ID = SDBD.DRO_APPLICATION_ID&#xD;&#xA;where (DRO_STATUS_VALUE = 'QLFD' or DRO_STATUS_VALUE = 'AMQL') and person_id=@person_id ">
      <parameters>
        <parameter ID="@person_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetGrossAmountPartForIAP" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select  PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;  PHD.NET_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS'  THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Gross_Amount,&#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS' and TAXABLE_ITEM_FLAG = 'Y' and ITEM_TYPE_DIRECTION = 1 THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Taxable_Amount, &#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS' and TAXABLE_ITEM_FLAG = 'N' and ITEM_TYPE_DIRECTION = 1 THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Non_Taxable_Amount,&#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'GROS'  and ITEM_TYPE_DIRECTION = -1 THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Rollover_Amount,  &#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS State_Tax_Amount,   &#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Federal_Tax_Amount,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'RECV' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Pension_Receivable,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'CHLD' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS ChildORSpousal_Support,&#xD;&#xA;        SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'LAVY' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS Tax_Levy,&#xD;&#xA;        PHD.CHECK_NUMBER AS Cheque_Number,&#xD;&#xA;PHH.PAYMENT_DATE&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;JOIN SGT_PERSON P ON PHH.PERSON_ID=P.PERSON_ID&#xD;&#xA;JOIN SGT_PAYEE_ACCOUNT TPA ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID AND PHH.PERSON_ID=TPA.PERSON_ID&#xD;&#xA;JOIN  SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PHDE.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;JOIN SGT_DRO_BENEFIT_DETAILS SDBD on SDBD.DRO_BENEFIT_ID = TPA.DRO_APPLICATION_DETAIL_ID&#xD;&#xA;where PHD.DISTRIBUTION_STATUS_VALUE IN ('OUTS','CLRD','RSUD') and&#xD;&#xA; SDBD.DRO_BENEFIT_ID = @DRO_BENEFIT_ID&#xD;&#xA; AND PHD.OLD_DISTRIBUTION_ID IS NULL AND PHH.OLD_PAYMENT_HISTORY_HEADER_ID IS NULL AND (TPA.RETIREE_INCR_FLAG IS NULL OR TPA.RETIREE_INCR_FLAG = 'N')&#xD;&#xA;GROUP BY PHH.PAYMENT_HISTORY_HEADER_ID, TPA.PAYEE_ACCOUNT_ID,&#xD;&#xA;  PHD.NET_AMOUNT,PHH.PERSON_ID,P.MPI_PERSON_ID,P.LAST_NAME,P.FIRST_NAME,P.MIDDLE_NAME,PHD.PAYMENT_METHOD_VALUE,FBO_CO,&#xD;&#xA;  PHD.CHECK_NUMBER,PHH.PAYMENT_DATE &#xD;&#xA;order by PHH.PAYMENT_DATE">
      <parameters>
        <parameter ID="@DRO_BENEFIT_ID" sfwDataType="int" />
      </parameters>
    </query>
  </queries>
  <constraint />
  <rules />
  <attributes />
  <initialload />
  <softerror />
  <harderror />
  <validatedelete />
  <delete />
  <groupslist />
  <checklist />
  <methods />
  <lifecycle />
</entity>