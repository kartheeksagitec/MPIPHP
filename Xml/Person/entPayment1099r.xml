<entity ID="entPayment1099r" sfwActive="True" sfwStatus="Review" sfwType="BusinessRule" sfwMainCDO="icdoPayment1099r" sfwObjectID="busPayment1099r" sfwTableName="sgt_payment_1099r" sfwView="False" sfwDataObjectID="doPayment1099r">
  <rules />
  <delete />
  <checklist />
  <initialload />
  <softerror />
  <harderror />
  <validatedelete />
  <groupslist />
  <aliaslist />
  <updateablecdo />
  <commonproperties />
  <logicalrulelist />
  <expressionfields />
  <queries>
    <query ID="GetPersonForEdd" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SET @STATE_CODE = CASE WHEN @STATE_CODE = 'All' THEN '' ELSE @STATE_CODE END &#xD;&#xA;&#xD;&#xA;SELECT distinct * &#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;SELECT  &#xD;&#xA;   P.LAST_NAME,P.FIRST_NAME,P.MIDDLE_NAME,tpa.PERSON_ID,ISNULL(PHH1.TAXWITHHOLDING_STATE, ISNULL(PA.ADDR_STATE_VALUE, '')) AS STATE_CODE,ISNULL(DBO.fn_GET_DECRYPTED_TEXT(P.SSN),'I') as SSN,&#xD;&#xA;   SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;   AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' &#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' &#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS GROSS_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' THEN (PHDE.AMOUNT) ELSE 0 END) AS STATE_TAX_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' THEN (PHDE.AMOUNT) ELSE 0 END) AS FED_TAX_AMOUNT,&#xD;&#xA;            @PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;            'N' AS WDRL_FLAG,&#xD;&#xA;            SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;   AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' AND PIT.TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) AND &#xD;&#xA;                                                     TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' AND PIT.TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS TAXABLE_AMOUNT,&#xD;&#xA;            Payment.MONTH1_EMPLOYEE AS MONTH1_EMPLOYEE,&#xD;&#xA;            Payment.MONTH2_EMPLOYEE AS MONTH2_EMPLOYEE,&#xD;&#xA;            Payment.MONTH3_EMPLOYEE AS MONTH3_EMPLOYEE          &#xD;&#xA;      FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE WITH(NOLOCK) ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE&#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)&#xD;&#xA;      LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;      &#xD;&#xA;       LEFT OUTER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT H.PAYEE_ACCOUNT_ID,D.OLD_DISTRIBUTION_ID,HD.DISTRIBUTION_STATUS_VALUE FROM SGT_PAYMENT_HISTORY_HEADER H&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION D WITH(NOLOCK) ON H.PAYMENT_HISTORY_HEADER_ID=D.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY HD ON HD.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE H.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE&#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)     &#xD;&#xA;  WHERE D.OLD_DISTRIBUTION_ID IS NOT NULL  AND HD.DISTRIBUTION_STATUS_VALUE IN ('CNLD','RCMD')    &#xD;&#xA;  )RS ON PHD.OLD_DISTRIBUTION_ID IS NULL AND PHH.PAYEE_ACCOUNT_ID = RS.PAYEE_ACCOUNT_ID AND PHDSH.DISTRIBUTION_STATUS_VALUE = 'RSUD' AND PHD.PAYMENT_HISTORY_DISTRIBUTION_ID = RS.OLD_DISTRIBUTION_ID&#xD;&#xA;      --LEFT OUTER JOIN SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WITH(NOLOCK) ON OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID=OLD_HEADER.PAYMENT_HISTORY_HEADER_ID and OLD_HEADER.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;      --LEFT OUTER JOIN SGT_ORGANIZATION ORG WITH(NOLOCK) ON PHH.ORG_ID=ORG.ORG_ID&#xD;&#xA;      LEFT OUTER JOIN SGS_CODE_VALUE CVACCOUNTTYPEVALUE WITH(NOLOCK)  ON PHD.ACCOUNT_TYPE_ID= CVACCOUNTTYPEVALUE.CODE_ID AND PHD.ACCOUNT_TYPE_VALUE = CVACCOUNTTYPEVALUE.CODE_VALUE&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  --AND TPA.PERSON_ID=PHH.PERSON_ID&#xD;&#xA;      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;      LEFT OUTER JOIN SGT_PERSON P WITH(NOLOCK) ON tpa.PERSON_ID=P.PERSON_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHDE.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) ON PBXR.PLAN_BENEFIT_ID=TPA.PLAN_BENEFIT_ID &#xD;&#xA;      LEFT OUTER JOIN &#xD;&#xA;                     (SELECT TPA.PERSON_ID,&#xD;&#xA;                          SUM(CASE WHEN  PHH.PAYMENT_DATE BETWEEN @START_DATE AND DATEADD(MONTH,1,@START_DATE)-1  THEN 1 ELSE 0 END) AS MONTH1_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,1,@START_DATE)-1 AND DATEADD(MONTH,2,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH2_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,2,@START_DATE)-1 AND DATEADD(MONTH,3,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH3_EMPLOYEE     &#xD;&#xA;                          ,@PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE&#xD;&#xA;                          from SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;                      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  --AND TPA.PERSON_ID=PHH.PERSON_ID&#xD;&#xA;                      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;                      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;                      (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE&#xD;&#xA;                      ORDER BY SH.TRANSACTION_DATE DESC)&#xD;&#xA;                      LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;                                --LEFT OUTER JOIN SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WITH(NOLOCK) ON OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID=OLD_HEADER.PAYMENT_HISTORY_HEADER_ID and OLD_HEADER.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;                      WHERE &#xD;&#xA;                      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;                        OR&#xD;&#xA;                     (PHD.OLD_DISTRIBUTION_ID IS NOT NULL AND EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;                       --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;                       AND PHH.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;                      ) &#xD;&#xA;                      AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1) or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;                      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD') &#xD;&#xA;                      GROUP BY TPA.PERSON_ID) AS Payment ON Payment.PERSON_ID=TPA.PERSON_ID&#xD;&#xA;    OUTER APPLY(&#xD;&#xA;        SELECT DISTINCT CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END TAXWITHHOLDING_STATE&#xD;&#xA;        FROM DBO.SGT_PAYMENT_HISTORY_DETAIL PHDI&#xD;&#xA;        INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PHDI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;        INNER JOIN DBO.SGT_ORGANIZATION O ON O.ORG_ID = PHDI.VENDOR_ORG_ID&#xD;&#xA;        INNER JOIN DBO.SGS_CODE_VALUE CV ON CV.DATA1 = O.MPI_ORG_ID AND CV.CODE_ID = 52&#xD;&#xA;        WHERE 1=1&#xD;&#xA;            AND PHDI.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;            AND PIT.ACH_CHECK_GROUP_VALUE = 'STTX'&#xD;&#xA;    ) PHH1&#xD;&#xA;    OUTER APPLY(&#xD;&#xA;        SELECT TOP 1 WITH TIES CASE WHEN PA.ADDR_STATE_VALUE NOT IN ('CA', 'GA', 'NC', 'OR', 'VA') THEN '' ELSE PA.ADDR_STATE_VALUE END ADDR_STATE_VALUE&#xD;&#xA;        FROM DBO.SGT_PERSON_ADDRESS PA&#xD;&#xA;        WHERE 1=1&#xD;&#xA;            AND PA.PERSON_ID = TPA.PERSON_ID&#xD;&#xA;            AND PHH.PAYMENT_DATE BETWEEN PA.START_DATE AND ISNULL(PA.END_DATE, '12/31/9999')&#xD;&#xA;        ORDER BY PA.START_DATE DESC&#xD;&#xA;    ) PA&#xD;&#xA;&#xD;&#xA;      WHERE --P.SSN = '028700192' AND &#xD;&#xA;      RS.PAYEE_ACCOUNT_ID IS NULL AND&#xD;&#xA;      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;      OR&#xD;&#xA;      (PHD.OLD_DISTRIBUTION_ID IS NOT NULL AND EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;      --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;      AND PHH.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;                      )&#xD;&#xA;       and &#xD;&#xA;      TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1 AND PBXR.BENEFIT_OPTION_VALUE &lt;&gt; 'LIFE') or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD') AND  tpa.PERSON_ID IS NOT NULL &#xD;&#xA;&#x9;  AND CASE WHEN @STATE_CODE IS NULL THEN '' ELSE ISNULL(PHH1.TAXWITHHOLDING_STATE, ISNULL(PA.ADDR_STATE_VALUE, '')) END = ISNULL(@STATE_CODE, '')&#xD;&#xA;GROUP BY tpa.PERSON_ID,P.LAST_NAME,P.FIRST_NAME,P.MIDDLE_NAME,P.SSN,Payment.MONTH1_EMPLOYEE,Payment.MONTH2_EMPLOYEE,Payment.MONTH3_EMPLOYEE&#xD;&#xA;,Payment.PLAN_IDENTIFIER_VALUE,ISNULL(PHH1.TAXWITHHOLDING_STATE, ISNULL(PA.ADDR_STATE_VALUE, ''))&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT  &#xD;&#xA;            P.LAST_NAME,P.FIRST_NAME,P.MIDDLE_NAME,tpa.PERSON_ID,ISNULL(PHH1.TAXWITHHOLDING_STATE, ISNULL(PA.ADDR_STATE_VALUE, '')) AS STATE_CODE,ISNULL(DBO.fn_GET_DECRYPTED_TEXT(P.SSN),'I') as SSN,&#xD;&#xA;            SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56'))  &#xD;&#xA;            AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE ='WDRL' &#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' &#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS GROSS_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ( PHDE.AMOUNT) ELSE 0 END) AS STATE_TAX_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ( PHDE.AMOUNT) ELSE 0 END) AS FED_TAX_AMOUNT,&#xD;&#xA;            @PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;            'Y' AS WDRL_FLAG,&#xD;&#xA;            SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56'))  &#xD;&#xA;            AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE ='WDRL' AND PIT.TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) AND &#xD;&#xA;                                                     TPA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' AND PIT.TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS TAXABLE_AMOUNT,&#xD;&#xA;            Payment.MONTH1_EMPLOYEE AS MONTH1_EMPLOYEE,&#xD;&#xA;            Payment.MONTH2_EMPLOYEE AS MONTH2_EMPLOYEE,&#xD;&#xA;            Payment.MONTH3_EMPLOYEE AS MONTH3_EMPLOYEE        &#xD;&#xA;      FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE WITH(NOLOCK) ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE&#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)            &#xD;&#xA;     LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;       LEFT OUTER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT H.PAYEE_ACCOUNT_ID,D.OLD_DISTRIBUTION_ID,HD.DISTRIBUTION_STATUS_VALUE FROM SGT_PAYMENT_HISTORY_HEADER H&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION D WITH(NOLOCK) ON H.PAYMENT_HISTORY_HEADER_ID=D.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY HD ON HD.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE H.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE&#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)     &#xD;&#xA;  WHERE D.OLD_DISTRIBUTION_ID IS NOT NULL  AND HD.DISTRIBUTION_STATUS_VALUE IN ('CNLD','RCMD')    &#xD;&#xA;  )RS ON PHD.OLD_DISTRIBUTION_ID IS NULL AND PHH.PAYEE_ACCOUNT_ID = RS.PAYEE_ACCOUNT_ID AND PHDSH.DISTRIBUTION_STATUS_VALUE = 'RSUD' AND PHD.PAYMENT_HISTORY_DISTRIBUTION_ID = RS.OLD_DISTRIBUTION_ID&#xD;&#xA;      --LEFT OUTER JOIN SGT_ORGANIZATION ORG WITH(NOLOCK) ON PHH.ORG_ID=ORG.ORG_ID&#xD;&#xA;      LEFT OUTER JOIN SGS_CODE_VALUE CVACCOUNTTYPEVALUE WITH(NOLOCK)  ON PHD.ACCOUNT_TYPE_ID= CVACCOUNTTYPEVALUE.CODE_ID AND PHD.ACCOUNT_TYPE_VALUE = CVACCOUNTTYPEVALUE.CODE_VALUE&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  --AND TPA.PERSON_ID=PHH.PERSON_ID&#xD;&#xA;      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;      LEFT OUTER JOIN SGT_PERSON P WITH(NOLOCK) ON tpa.PERSON_ID=P.PERSON_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHDE.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) ON PBXR.PLAN_BENEFIT_ID=TPA.PLAN_BENEFIT_ID &#xD;&#xA;      LEFT OUTER JOIN &#xD;&#xA;                     (SELECT TPA.PERSON_ID,&#xD;&#xA;                          SUM(CASE WHEN  PHH.PAYMENT_DATE BETWEEN @START_DATE AND DATEADD(MONTH,1,@START_DATE)-1  THEN 1 ELSE 0 END) AS MONTH1_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,1,@START_DATE)-1 AND DATEADD(MONTH,2,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH2_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,2,@START_DATE)-1 AND DATEADD(MONTH,3,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH3_EMPLOYEE     &#xD;&#xA;                          ,@PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE&#xD;&#xA;                          from SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;                      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  --AND TPA.PERSON_ID=PHH.PERSON_ID&#xD;&#xA;                      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;                      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;                      (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE&#xD;&#xA;                        ORDER BY SH.TRANSACTION_DATE DESC)&#xD;&#xA;                      LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;                      WHERE &#xD;&#xA;                      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;                        OR&#xD;&#xA;                      (PHD.OLD_DISTRIBUTION_ID IS NOT NULL and  EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;                      --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;                      AND PHH.PAYMENT_DATE between @START_DATE AND @END_DATE))&#xD;&#xA;                      AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1) or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;                      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD')&#xD;&#xA;                      GROUP BY TPA.PERSON_ID ) AS Payment ON Payment.PERSON_ID=TPA.PERSON_ID&#xD;&#xA;    OUTER APPLY(&#xD;&#xA;        SELECT DISTINCT CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END TAXWITHHOLDING_STATE&#xD;&#xA;        FROM DBO.SGT_PAYMENT_HISTORY_DETAIL PHDI&#xD;&#xA;        INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PHDI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;        INNER JOIN DBO.SGT_ORGANIZATION O ON O.ORG_ID = PHDI.VENDOR_ORG_ID&#xD;&#xA;        INNER JOIN DBO.SGS_CODE_VALUE CV ON CV.DATA1 = O.MPI_ORG_ID AND CV.CODE_ID = 52&#xD;&#xA;        WHERE 1=1&#xD;&#xA;            AND PHDI.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;            AND PIT.ACH_CHECK_GROUP_VALUE = 'STTX'&#xD;&#xA;    ) PHH1&#xD;&#xA;    OUTER APPLY(&#xD;&#xA;        SELECT TOP 1 WITH TIES CASE WHEN PA.ADDR_STATE_VALUE NOT IN ('CA', 'GA', 'NC', 'OR', 'VA') THEN '' ELSE PA.ADDR_STATE_VALUE END ADDR_STATE_VALUE&#xD;&#xA;        FROM DBO.SGT_PERSON_ADDRESS PA&#xD;&#xA;        WHERE 1=1&#xD;&#xA;            AND PA.PERSON_ID = TPA.PERSON_ID&#xD;&#xA;            AND PHH.PAYMENT_DATE BETWEEN PA.START_DATE AND ISNULL(PA.END_DATE, '12/31/9999')&#xD;&#xA;        ORDER BY PA.START_DATE DESC&#xD;&#xA;    ) PA&#xD;&#xA;&#xD;&#xA;      WHERE  --P.SSN = '028700192' AND&#xD;&#xA;      RS.PAYEE_ACCOUNT_ID IS NULL AND &#xD;&#xA;      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;                        OR&#xD;&#xA;      (PHD.OLD_DISTRIBUTION_ID IS NOT NULL and  EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;      --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;      AND PHH.PAYMENT_DATE between @START_DATE AND @END_DATE))&#xD;&#xA;      AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1 AND PBXR.BENEFIT_OPTION_VALUE &lt;&gt; 'LIFE') or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD')  AND  tpa.PERSON_ID IS NOT NULL &#xD;&#xA;&#x9;  AND CASE WHEN @STATE_CODE IS NULL THEN '' ELSE ISNULL(PHH1.TAXWITHHOLDING_STATE, ISNULL(PA.ADDR_STATE_VALUE, '')) END = ISNULL(@STATE_CODE, '')&#xD;&#xA;GROUP BY tpa.PERSON_ID,P.LAST_NAME,P.FIRST_NAME,P.MIDDLE_NAME,P.SSN,Payment.MONTH1_EMPLOYEE,Payment.MONTH2_EMPLOYEE,Payment.MONTH3_EMPLOYEE&#xD;&#xA;,Payment.PLAN_IDENTIFIER_VALUE,ISNULL(PHH1.TAXWITHHOLDING_STATE, ISNULL(PA.ADDR_STATE_VALUE, ''))&#xD;&#xA;) TEMP&#xD;&#xA;WHERE PLAN_IDENTIFIER_VALUE=@PLANIDENTIFIERVALUE">
      <parameters>
        <parameter ID="@START_DATE" sfwDataType="DateTime" />
        <parameter ID="@END_DATE" sfwDataType="DateTime" />
        <parameter ID="@PLANIDENTIFIERVALUE" sfwDataType="string" />
        <parameter ID="@STATE_CODE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetRepaymentWithPerson" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @GOLIVEDATE  DATETIME&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;      TOP 1 @GOLIVEDATE = DATA1&#xD;&#xA;    FROM SGS_CODE_VALUE  WITH(NOLOCK) &#xD;&#xA;    WHERE CODE_ID = 52 and CODE_VALUE = 'GLDT'&#xD;&#xA;    &#xD;&#xA;SELECT &#xD;&#xA;* &#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;SELECT &#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.GROSS_AMOUNT,0) ELSE 0 END) AS AMOUNT_PAID,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.STATE_TAX,0) ELSE 0 END) AS STATE_TAX,&#xD;&#xA;      PA.PERSON_ID ,&#xD;&#xA;      CASE WHEN PBXR.PLAN_ID=1 THEN 'IAP' ELSE 'PENSION' END AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;      'N' AS WDRL_FLAG&#xD;&#xA;FROM SGT_REIMBURSEMENT_DETAILS RID&#xD;&#xA;INNER JOIN SGT_REPAYMENT_SCHEDULE RPS&#xD;&#xA;ON RID.REPAYMENT_SCHEDULE_ID=RPS.REPAYMENT_SCHEDULE_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RETRO&#xD;&#xA;ON RPS.PAYEE_ACCOUNT_RETRO_PAYMENT_ID=RETRO.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;ON RETRO.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON P ON P.PERSON_ID = PA.PERSON_ID --NEW&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA&#xD;&#xA;ON PBA.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) &#xD;&#xA;ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA;CROSS APPLY(&#xD;&#xA;    SELECT O.MPI_ORG_ID, O.ORG_ID, CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END STATE_CODE&#xD;&#xA;    FROM DBO.SGT_ORGANIZATION O&#xD;&#xA;    INNER JOIN DBO.SGS_CODE_VALUE CV ON CV.DATA1 = O.MPI_ORG_ID AND CV.CODE_ID = 52&#xD;&#xA;    WHERE 1=1&#xD;&#xA;        AND O.ORG_ID &gt; 1&#xD;&#xA;        AND CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END =&#xD;&#xA;            ISNULL(@STATE_CODE, CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END)&#xD;&#xA;) ST&#xD;&#xA;WHERE RID.POSTED_DATE between @START_DATE AND @END_DATE AND ((PBXR.PLAN_ID = 1 AND PBXR.BENEFIT_OPTION_VALUE &lt;&gt; 'LIFE') OR PBXR.PLAN_ID &lt;&gt; 1) &#xD;&#xA;AND&#xD;&#xA;(&#xD;&#xA; RID.REIMBURSEMENT_DETAILS_ID = &#xD;&#xA;&#x9;(&#xD;&#xA;&#x9;    &#x9;SELECT TOP(1) SRD.REIMBURSEMENT_DETAILS_ID FROM SGT_PERSON_ADDRESS ADDR&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ADDRESS_CHKLIST CHK ON ADDR.ADDRESS_ID = CHK.ADDRESS_ID AND CHK.ADDRESS_TYPE_VALUE = 'MAIL'&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON PER ON ADDR.PERSON_ID = PER.PERSON_ID AND PER.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT PAYA ON PAYA.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_REIMBURSEMENT_DETAILS SRD ON SRD.REIMBURSEMENT_DETAILS_ID = RID.REIMBURSEMENT_DETAILS_ID&#xD;&#xA;&#x9;&#x9;&#x9;WHERE P.PERSON_ID = ADDR.PERSON_ID AND ADDR.ADDR_STATE_VALUE = st.STATE_CODE AND RID.POSTED_DATE BETWEEN ADDR.START_DATE AND ISNULL(ADDR.END_DATE,'99991231')&#xD;&#xA;&#x9;&#x9;&#x9;UNION&#xD;&#xA;&#x9;&#x9;&#x9;SELECT TOP(1) SRD.REIMBURSEMENT_DETAILS_ID FROM SGT_PERSON_ADDRESS ADDR&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ADDRESS_CHKLIST CHK ON ADDR.ADDRESS_ID = CHK.ADDRESS_ID AND CHK.ADDRESS_TYPE_VALUE = 'MAIL'&#xD;&#xA;&#x9;&#x9;&#x9;LEFT OUTER JOIN SGT_PERSON_ADDRESS_HISTORY ah on ADDR.ADDRESS_ID = ah.ADDRESS_ID AND AH.END_DATE IS NOT NULL&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON PER ON ADDR.PERSON_ID = PER.PERSON_ID AND PER.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT PAYA ON PAYA.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_REIMBURSEMENT_DETAILS SRD ON SRD.REIMBURSEMENT_DETAILS_ID = RID.REIMBURSEMENT_DETAILS_ID&#xD;&#xA;&#x9;&#x9;&#x9;WHERE P.PERSON_ID = ADDR.PERSON_ID AND ADDR.ADDR_STATE_VALUE = ST.STATE_CODE AND RID.POSTED_DATE BETWEEN ah.START_DATE AND ISNULL(ah.END_DATE,'99991231')&#xD;&#xA;&#x9;&#x9;&#x9;AND RID.POSTED_DATE &lt; @GOLIVEDATE&#xD;&#xA;&#x9;) &#xD;&#xA;&#x9;&#x9;OR&#xD;&#xA;RID.REIMBURSEMENT_DETAILS_ID = (SELECT TOP(1) SRD.REIMBURSEMENT_DETAILS_ID FROM SGT_REIMBURSEMENT_DETAILS SRD &#xD;&#xA;        WHERE SRD.REIMBURSEMENT_DETAILS_ID = RID.REIMBURSEMENT_DETAILS_ID AND ISNULL(SRD.STATE_TAX,0) &gt; 0)&#xD;&#xA;)&#xD;&#xA;AND PA.ORG_ID IS  NULL AND RID.PAYMENT_OPTION_VALUE = 'CHEK'&#xD;&#xA;GROUP BY PA.PERSON_ID,PBXR.PLAN_ID&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT &#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.GROSS_AMOUNT,0) ELSE 0 END) AS AMOUNT_PAID,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.STATE_TAX,0) ELSE 0 END) AS STATE_TAX,&#xD;&#xA;      PA.PERSON_ID ,&#xD;&#xA;      CASE WHEN PBXR.PLAN_ID=1 THEN 'IAP' ELSE 'PENSION' END AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;      'N' AS WDRL_FLAG&#xD;&#xA;FROM SGT_REIMBURSEMENT_DETAILS RID&#xD;&#xA;INNER JOIN SGT_REPAYMENT_SCHEDULE RPS&#xD;&#xA;ON RID.REPAYMENT_SCHEDULE_ID=RPS.REPAYMENT_SCHEDULE_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;ON RPS.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON P ON P.PERSON_ID = PA.PERSON_ID --NEW&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA&#xD;&#xA;ON PBA.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) &#xD;&#xA;ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA;CROSS APPLY(&#xD;&#xA;    SELECT O.MPI_ORG_ID, O.ORG_ID, CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END STATE_CODE&#xD;&#xA;    FROM DBO.SGT_ORGANIZATION O&#xD;&#xA;    INNER JOIN DBO.SGS_CODE_VALUE CV ON CV.DATA1 = O.MPI_ORG_ID AND CV.CODE_ID = 52&#xD;&#xA;    WHERE 1=1&#xD;&#xA;        AND O.ORG_ID &gt; 1&#xD;&#xA;        AND CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END =&#xD;&#xA;            ISNULL(@STATE_CODE, CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END)&#xD;&#xA;) ST&#xD;&#xA;WHERE RID.POSTED_DATE between @START_DATE AND @END_DATE AND ((PBXR.PLAN_ID = 1 AND PBXR.BENEFIT_OPTION_VALUE &lt;&gt; 'LIFE') OR PBXR.PLAN_ID &lt;&gt; 1) &#xD;&#xA;AND&#xD;&#xA;(&#xD;&#xA; RID.REIMBURSEMENT_DETAILS_ID = &#xD;&#xA;&#x9;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;SELECT TOP(1) SRD.REIMBURSEMENT_DETAILS_ID FROM SGT_PERSON_ADDRESS ADDR&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ADDRESS_CHKLIST CHK ON ADDR.ADDRESS_ID = CHK.ADDRESS_ID AND CHK.ADDRESS_TYPE_VALUE = 'MAIL'&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON PER ON ADDR.PERSON_ID = PER.PERSON_ID AND PER.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT PAYA ON PAYA.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_REIMBURSEMENT_DETAILS SRD ON SRD.REIMBURSEMENT_DETAILS_ID = RID.REIMBURSEMENT_DETAILS_ID&#xD;&#xA;&#x9;&#x9;&#x9;WHERE P.PERSON_ID = ADDR.PERSON_ID AND ADDR.ADDR_STATE_VALUE = ST.STATE_CODE AND RID.POSTED_DATE BETWEEN ADDR.START_DATE AND ISNULL(ADDR.END_DATE,'99991231')&#xD;&#xA;&#x9;&#x9;&#x9;UNION&#xD;&#xA;&#x9;&#x9;&#x9;SELECT TOP(1) SRD.REIMBURSEMENT_DETAILS_ID FROM SGT_PERSON_ADDRESS ADDR&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ADDRESS_CHKLIST CHK ON ADDR.ADDRESS_ID = CHK.ADDRESS_ID AND CHK.ADDRESS_TYPE_VALUE = 'MAIL'&#xD;&#xA;&#x9;&#x9;&#x9;LEFT OUTER JOIN SGT_PERSON_ADDRESS_HISTORY ah on ADDR.ADDRESS_ID = ah.ADDRESS_ID AND AH.END_DATE IS NOT NULL&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON PER ON ADDR.PERSON_ID = PER.PERSON_ID AND PER.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT PAYA ON PAYA.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_REIMBURSEMENT_DETAILS SRD ON SRD.REIMBURSEMENT_DETAILS_ID = RID.REIMBURSEMENT_DETAILS_ID&#xD;&#xA;&#x9;&#x9;&#x9;WHERE P.PERSON_ID = ADDR.PERSON_ID AND ADDR.ADDR_STATE_VALUE = ST.STATE_CODE AND RID.POSTED_DATE BETWEEN ah.START_DATE AND ISNULL(ah.END_DATE,'99991231')&#xD;&#xA;&#x9;&#x9;&#x9;AND RID.POSTED_DATE &lt; @GOLIVEDATE&#xD;&#xA;&#x9;&#x9; ) &#xD;&#xA;&#x9;&#x9;OR&#xD;&#xA;RID.REIMBURSEMENT_DETAILS_ID = (SELECT TOP(1) SRD.REIMBURSEMENT_DETAILS_ID FROM SGT_REIMBURSEMENT_DETAILS SRD &#xD;&#xA;        WHERE SRD.REIMBURSEMENT_DETAILS_ID = RID.REIMBURSEMENT_DETAILS_ID AND ISNULL(SRD.STATE_TAX,0) &gt; 0)&#xD;&#xA;)&#xD;&#xA;AND RPS.PAYEE_ACCOUNT_RETRO_PAYMENT_ID is null&#xD;&#xA;AND PA.ORG_ID IS  NULL AND RID.PAYMENT_OPTION_VALUE = 'CHEK'&#xD;&#xA;GROUP BY PA.PERSON_ID,PBXR.PLAN_ID&#xD;&#xA;Union ALL&#xD;&#xA;SELECT &#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ISNULL(RID.GROSS_AMOUNT,0) ELSE 0 END) AS AMOUNT_PAID,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ISNULL(RID.STATE_TAX,0) ELSE 0 END) AS STATE_TAX,&#xD;&#xA;      PA.PERSON_ID ,&#xD;&#xA;      CASE WHEN PBXR.PLAN_ID=1 THEN 'IAP' ELSE 'PENSION' END AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;      'Y' AS WDRL_FLAG&#xD;&#xA;FROM SGT_REIMBURSEMENT_DETAILS RID&#xD;&#xA;INNER JOIN SGT_REPAYMENT_SCHEDULE RPS&#xD;&#xA;ON RID.REPAYMENT_SCHEDULE_ID=RPS.REPAYMENT_SCHEDULE_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RETRO&#xD;&#xA;ON RPS.PAYEE_ACCOUNT_RETRO_PAYMENT_ID=RETRO.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;ON RETRO.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON P ON P.PERSON_ID = PA.PERSON_ID --NEW&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA&#xD;&#xA;ON PBA.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) &#xD;&#xA;ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA;CROSS APPLY(&#xD;&#xA;    SELECT O.MPI_ORG_ID, O.ORG_ID, CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END STATE_CODE&#xD;&#xA;    FROM DBO.SGT_ORGANIZATION O&#xD;&#xA;    INNER JOIN DBO.SGS_CODE_VALUE CV ON CV.DATA1 = O.MPI_ORG_ID AND CV.CODE_ID = 52&#xD;&#xA;    WHERE 1=1&#xD;&#xA;        AND O.ORG_ID &gt; 1&#xD;&#xA;        AND CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END =&#xD;&#xA;            ISNULL(@STATE_CODE, CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END)&#xD;&#xA;) ST&#xD;&#xA;WHERE RID.POSTED_DATE between @START_DATE AND @END_DATE AND ((PBXR.PLAN_ID = 1 AND PBXR.BENEFIT_OPTION_VALUE &lt;&gt; 'LIFE') OR PBXR.PLAN_ID &lt;&gt; 1) &#xD;&#xA;AND&#xD;&#xA;(&#xD;&#xA; RID.REIMBURSEMENT_DETAILS_ID = &#xD;&#xA;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;SELECT TOP(1) SRD.REIMBURSEMENT_DETAILS_ID FROM SGT_PERSON_ADDRESS ADDR&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ADDRESS_CHKLIST CHK ON ADDR.ADDRESS_ID = CHK.ADDRESS_ID AND CHK.ADDRESS_TYPE_VALUE = 'MAIL'&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON PER ON ADDR.PERSON_ID = PER.PERSON_ID AND PER.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT PAYA ON PAYA.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_REIMBURSEMENT_DETAILS SRD ON SRD.REIMBURSEMENT_DETAILS_ID = RID.REIMBURSEMENT_DETAILS_ID&#xD;&#xA;&#x9;&#x9;&#x9;WHERE P.PERSON_ID = ADDR.PERSON_ID AND ADDR.ADDR_STATE_VALUE = ST.STATE_CODE AND RID.POSTED_DATE BETWEEN ADDR.START_DATE AND ISNULL(ADDR.END_DATE,'99991231')&#xD;&#xA;&#x9;&#x9;&#x9;UNION&#xD;&#xA;&#x9;&#x9;&#x9;SELECT TOP(1) SRD.REIMBURSEMENT_DETAILS_ID FROM SGT_PERSON_ADDRESS ADDR&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ADDRESS_CHKLIST CHK ON ADDR.ADDRESS_ID = CHK.ADDRESS_ID AND CHK.ADDRESS_TYPE_VALUE = 'MAIL'&#xD;&#xA;&#x9;&#x9;&#x9;LEFT OUTER JOIN SGT_PERSON_ADDRESS_HISTORY ah on ADDR.ADDRESS_ID = ah.ADDRESS_ID AND AH.END_DATE IS NOT NULL&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON PER ON ADDR.PERSON_ID = PER.PERSON_ID AND PER.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT PAYA ON PAYA.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_REIMBURSEMENT_DETAILS SRD ON SRD.REIMBURSEMENT_DETAILS_ID = RID.REIMBURSEMENT_DETAILS_ID&#xD;&#xA;&#x9;&#x9;&#x9;WHERE P.PERSON_ID = ADDR.PERSON_ID AND ADDR.ADDR_STATE_VALUE = ST.STATE_CODE AND RID.POSTED_DATE BETWEEN ah.START_DATE AND ISNULL(ah.END_DATE,'99991231')&#xD;&#xA;&#x9;&#x9;&#x9;AND RID.POSTED_DATE &lt; @GOLIVEDATE&#xD;&#xA;&#x9;) &#xD;&#xA;&#x9;&#x9;OR&#xD;&#xA;RID.REIMBURSEMENT_DETAILS_ID = (SELECT TOP(1) SRD.REIMBURSEMENT_DETAILS_ID FROM SGT_REIMBURSEMENT_DETAILS SRD &#xD;&#xA;        WHERE SRD.REIMBURSEMENT_DETAILS_ID = RID.REIMBURSEMENT_DETAILS_ID AND ISNULL(SRD.STATE_TAX,0) &gt; 0)&#xD;&#xA;)&#xD;&#xA;AND PA.ORG_ID IS  NULL  AND RID.PAYMENT_OPTION_VALUE = 'CHEK'&#xD;&#xA;GROUP BY PA.PERSON_ID,PBXR.PLAN_ID&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT &#xD;&#xA;       SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ISNULL(RID.GROSS_AMOUNT,0) ELSE 0 END) AS AMOUNT_PAID,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ISNULL(RID.STATE_TAX,0) ELSE 0 END) AS STATE_TAX,&#xD;&#xA;      PA.PERSON_ID ,&#xD;&#xA;      CASE WHEN PBXR.PLAN_ID=1 THEN 'IAP' ELSE 'PENSION' END AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;      'Y' AS WDRL_FLAG&#xD;&#xA;FROM SGT_REIMBURSEMENT_DETAILS RID&#xD;&#xA;INNER JOIN SGT_REPAYMENT_SCHEDULE RPS&#xD;&#xA;ON RID.REPAYMENT_SCHEDULE_ID=RPS.REPAYMENT_SCHEDULE_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;ON RPS.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON P ON P.PERSON_ID = PA.PERSON_ID --NEW&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA&#xD;&#xA;ON PBA.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) &#xD;&#xA;ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA;CROSS APPLY(&#xD;&#xA;    SELECT O.MPI_ORG_ID, O.ORG_ID, CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END STATE_CODE&#xD;&#xA;    FROM DBO.SGT_ORGANIZATION O&#xD;&#xA;    INNER JOIN DBO.SGS_CODE_VALUE CV ON CV.DATA1 = O.MPI_ORG_ID AND CV.CODE_ID = 52&#xD;&#xA;    WHERE 1=1&#xD;&#xA;        AND O.ORG_ID &gt; 1&#xD;&#xA;        AND CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END =&#xD;&#xA;            ISNULL(@STATE_CODE, CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END)&#xD;&#xA;) ST&#xD;&#xA;WHERE RID.POSTED_DATE between @START_DATE AND @END_DATE AND ((PBXR.PLAN_ID = 1 AND PBXR.BENEFIT_OPTION_VALUE &lt;&gt; 'LIFE') OR PBXR.PLAN_ID &lt;&gt; 1) &#xD;&#xA;AND&#xD;&#xA;(&#xD;&#xA; RID.REIMBURSEMENT_DETAILS_ID = &#xD;&#xA;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;SELECT TOP(1) SRD.REIMBURSEMENT_DETAILS_ID FROM SGT_PERSON_ADDRESS ADDR&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ADDRESS_CHKLIST CHK ON ADDR.ADDRESS_ID = CHK.ADDRESS_ID AND CHK.ADDRESS_TYPE_VALUE = 'MAIL'&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON PER ON ADDR.PERSON_ID = PER.PERSON_ID AND PER.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT PAYA ON PAYA.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_REIMBURSEMENT_DETAILS SRD ON SRD.REIMBURSEMENT_DETAILS_ID = RID.REIMBURSEMENT_DETAILS_ID&#xD;&#xA;&#x9;&#x9;&#x9;WHERE P.PERSON_ID = ADDR.PERSON_ID AND ADDR.ADDR_STATE_VALUE = ST.STATE_CODE AND RID.POSTED_DATE BETWEEN ADDR.START_DATE AND ISNULL(ADDR.END_DATE,'99991231')&#xD;&#xA;&#x9;&#x9;&#x9;UNION&#xD;&#xA;&#x9;&#x9;&#x9;SELECT TOP(1) SRD.REIMBURSEMENT_DETAILS_ID FROM SGT_PERSON_ADDRESS ADDR&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ADDRESS_CHKLIST CHK ON ADDR.ADDRESS_ID = CHK.ADDRESS_ID AND CHK.ADDRESS_TYPE_VALUE = 'MAIL'&#xD;&#xA;&#x9;&#x9;&#x9;LEFT OUTER JOIN SGT_PERSON_ADDRESS_HISTORY ah on ADDR.ADDRESS_ID = ah.ADDRESS_ID AND AH.END_DATE IS NOT NULL&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON PER ON ADDR.PERSON_ID = PER.PERSON_ID AND PER.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT PAYA ON PAYA.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_REIMBURSEMENT_DETAILS SRD ON SRD.REIMBURSEMENT_DETAILS_ID = RID.REIMBURSEMENT_DETAILS_ID&#xD;&#xA;&#x9;&#x9;&#x9;WHERE P.PERSON_ID = ADDR.PERSON_ID AND ADDR.ADDR_STATE_VALUE = ST.STATE_CODE AND RID.POSTED_DATE BETWEEN ah.START_DATE AND ISNULL(ah.END_DATE,'99991231')&#xD;&#xA;&#x9;&#x9;&#x9;AND RID.POSTED_DATE &lt; @GOLIVEDATE&#xD;&#xA;&#x9;) &#xD;&#xA;&#x9;&#x9;OR&#xD;&#xA;RID.REIMBURSEMENT_DETAILS_ID = (SELECT TOP(1) SRD.REIMBURSEMENT_DETAILS_ID FROM SGT_REIMBURSEMENT_DETAILS SRD &#xD;&#xA;        WHERE SRD.REIMBURSEMENT_DETAILS_ID = RID.REIMBURSEMENT_DETAILS_ID AND ISNULL(SRD.STATE_TAX,0) &gt; 0)&#xD;&#xA;)&#xD;&#xA;AND RPS.PAYEE_ACCOUNT_RETRO_PAYMENT_ID is null&#xD;&#xA;AND PA.ORG_ID IS  NULL AND RID.PAYMENT_OPTION_VALUE = 'CHEK'&#xD;&#xA;GROUP BY PA.PERSON_ID,PBXR.PLAN_ID&#xD;&#xA;)&#xD;&#xA;TEMP&#xD;&#xA;&#xD;&#xA;WHERE PLAN_IDENTIFIER_VALUE=@PLANIDENTIFIERVALUE&#xD;&#xA;AND AMOUNT_PAID&gt;0">
      <parameters>
        <parameter ID="@START_DATE" sfwDataType="DateTime" />
        <parameter ID="@END_DATE" sfwDataType="DateTime" />
        <parameter ID="@PLANIDENTIFIERVALUE" sfwDataType="string" />
        <parameter ID="@STATE_CODE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="DropTableFor1099r" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="IF OBJECT_ID('TEMP_PAYMENT_DETAILS_1099R') IS NOT NULL&#xD;&#xA; DROP TABLE TEMP_PAYMENT_DETAILS_1099R&#xD;&#xA; &#xD;&#xA;IF OBJECT_ID('TEMP_PAYMENT_DETAILS_CORRECTED_1099R') IS NOT NULL&#xD;&#xA; DROP TABLE TEMP_PAYMENT_DETAILS_CORRECTED_1099R">
      <parameters />
    </query>
    <query ID="CreateTableFor1099r" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="CREATE TABLE [DBO].[TEMP_PAYMENT_DETAILS_1099R](&#xD;&#xA;                [PAYMENT_DETAILS_1099R_ID] [INT] IDENTITY(1,1) NOT NULL,&#xD;&#xA;                [PAYEE_ACCOUNT_ID] [INT] NULL,&#xD;&#xA;                [PAYMENT_HISTORY_HEADER_ID] [INT] NULL,&#xD;&#xA;                [REIMBURSEMENT_DETAILS_ID] [INT] NULL,&#xD;&#xA;                [PLAN_ID] [INT] NULL,&#xD;&#xA;                [PERSON_ID] [INT] NULL,&#xD;&#xA;                [ORG_ID] [INT] NULL,&#xD;&#xA;                [PAYMENT_DATE] [DATETIME] NULL,&#xD;&#xA;                [ROLLOVER_PAYMENT_FLAG] [VARCHAR](1) NULL,&#xD;&#xA;                [GROSS_AMOUNT] [DECIMAL](38, 2) NULL,&#xD;&#xA;                [TAXABLE_AMOUNT] [DECIMAL](38, 2) NULL,&#xD;&#xA;                [CAPITAL_GAIN] [DECIMAL](38, 2) NULL,&#xD;&#xA;                [NON_TAXABLE_AMOUNT] [DECIMAL](38, 2) NULL,&#xD;&#xA;                [FED_TAX_AMOUNT] [DECIMAL](38, 2) NULL,&#xD;&#xA;                [STATE_TAX_AMOUNT] [DECIMAL](38, 2) NULL,&#xD;&#xA;                [NAME] [VARCHAR](153) NULL,&#xD;&#xA;                [AGE_ON_BENEFIT_BEGIN_DATE] [NUMERIC](18, 6) NULL,&#xD;&#xA;                [AGE_ON_PAYMENT_DATE] [NUMERIC](18, 6) NULL,&#xD;&#xA;                [DISTRIBUTION_CODE] [VARCHAR](2) NULL,&#xD;&#xA;                [SSN] [VARCHAR](256) NULL,&#xD;&#xA;                [AGE59_SPLIT_FLAG] [VARCHAR](1) NULL&#xD;&#xA;, [PAYMENT_CREATE_DATE] DATETIME NULL, [ADDRESS_ID] [INT] NULL, [ADDRESS_STATE] [VARCHAR](2) NULL&#xD;&#xA;) ON [PRIMARY]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;---------------------- QUERY 1   --------------------------------&#xD;&#xA;&#xD;&#xA;------------- QUERY TO GET POSITIVE AMOUNTS AND DATA FROM PAYMENT HISTORY ------------&#xD;&#xA;INSERT INTO TEMP_PAYMENT_DETAILS_1099R&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;                                PHH.PAYMENT_HISTORY_HEADER_ID ,&#xD;&#xA;                                NULL AS REIMBURSMENT_DETAILS_ID,&#xD;&#xA;                                PHH.PLAN_ID,&#xD;&#xA;                                PA.PERSON_ID,                                &#xD;&#xA;                                CASE WHEN PA.ORG_ID IS NOT NULL &#xD;&#xA;                                                                       THEN PA.ORG_ID &#xD;&#xA;                                                                       ELSE NULL &#xD;&#xA;                                                                       END &#xD;&#xA;                                    &#xD;&#xA;                                     AS ORG_ID,&#xD;&#xA;                                PHH.PAYMENT_DATE,&#xD;&#xA;                                PHD.ROLLOVER_FLAG AS ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;                                PHD.GROSS_AMOUNT,&#xD;&#xA;                                PHD.TAXABLE_AMOUNT,&#xD;&#xA;                                PHD.CAPITAL_GAIN,&#xD;&#xA;                                PHD.NON_TAXABLE_AMOUNT,&#xD;&#xA;                                PHD.FED_TAX_AMOUNT,&#xD;&#xA;                    PHD.STATE_TAX_AMOUNT,&#xD;&#xA;                                CASE WHEN PA.PERSON_ID IS NOT NULL &#xD;&#xA;                                     THEN&#xD;&#xA;                                         ISNULL(PER.FIRST_NAME,'') +' '+ &#xD;&#xA;                                                                 ISNULL(PER.LAST_NAME,'') +' ' &#xD;&#xA;                                                                &#xD;&#xA;                                                                 --ISNULL(PER.MIDDLE_NAME,'')                                                               &#xD;&#xA;                                                 ELSE O.ORG_NAME END &#xD;&#xA;                    AS NAME,&#xD;&#xA;                                                &#xD;&#xA;                                CASE WHEN PER.PERSON_ID IS NULL &#xD;&#xA;                                                                THEN 0 &#xD;&#xA;                                                                ELSE (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),PA.BENEFIT_BEGIN_DATE))/365.25 &#xD;&#xA;                                                 END &#xD;&#xA;                                AS AGE_ON_BENEFIT_BEGIN_DATE,&#xD;&#xA;                                                &#xD;&#xA;                                CASE WHEN PER.PERSON_ID IS NULL &#xD;&#xA;                                                                THEN 0 &#xD;&#xA;                                                                ELSE (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25&#xD;&#xA;                                                END &#xD;&#xA;                    AS AGE_ON_PAYMENT_DATE,&#xD;&#xA;                                                &#xD;&#xA;   CASE WHEN ((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DSBL' OR (BADSBL.BENEFIT_APPLICATION_ID IS NOT NULL AND BADSBL.DISABILITY_CONVERSION_DATE IS NOT NULL AND BADSBL.RETIREMENT_DATE&lt;=PHH.PAYMENT_DATE&#xD;&#xA;               AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT')&#xD;&#xA;               OR (BADSBL.BENEFIT_APPLICATION_ID IS NOT NULL AND  BADSBL.RETIREMENT_DATE&lt;=PHH.PAYMENT_DATE AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL')&#xD;&#xA;                                                      OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' AND ISNULL(DCH.IS_PARTICIPANT_DISABLED,'N') ='Y') OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL AND DRO.IS_PARTICIPANT_DISABLED_FLAG='Y')))--1099 2015&#xD;&#xA;                                                        AND PHD.ROLLOVER_FLAG ='N') THEN '3'&#xD;&#xA;                                                       &#xD;&#xA;                                                       &#xD;&#xA;                                                 WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DDPR' OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DDPT') &#xD;&#xA;                                                       THEN '4' + CASE WHEN (PBXR.BENEFIT_OPTION_VALUE = 'LUMP' AND dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH) &lt;= '01/01/1936')   &#xD;&#xA;                                                                       THEN 'A'&#xD;&#xA;                                                                       WHEN PHD.ROLLOVER_FLAG ='Y'&#xD;&#xA;                                                                       THEN 'G'&#xD;&#xA;                                                                       ELSE ''&#xD;&#xA;                                                                       END&#xD;&#xA;                                   &#xD;&#xA;                                     WHEN (((((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' AND BA.DRO_APPLICATION_ID IS NULL ) OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT') AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &gt;= 59.5)&#xD;&#xA;                    OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL)) AND DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE)/365.25 &gt;= 59.5))&#xD;&#xA;                                            AND PHD.ROLLOVER_FLAG ='N') &#xD;&#xA;                                                                    THEN '7' +  CASE WHEN (PBXR.BENEFIT_OPTION_VALUE = 'LUMP' AND  ((((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' AND BA.DRO_APPLICATION_ID IS NULL) OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT') AND dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH) &lt;= '01/01/1936') &#xD;&#xA;                                                                                          OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL)) AND dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH) &lt;= '01/01/1936')))&#xD;&#xA;                                                                               THEN 'A'&#xD;&#xA;                                                                               ELSE ''&#xD;&#xA;                                                                               END                                                                       &#xD;&#xA;                                                       &#xD;&#xA;                                                 WHEN (((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NULL AND PBXR.BENEFIT_OPTION_VALUE!='LUMP') AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &lt; 59.5)  &#xD;&#xA;                                                                                OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL AND PBXR.BENEFIT_OPTION_VALUE!='LUMP')) AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &lt; 59.5)&#xD;&#xA;                                                        OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND (SELECT COUNT(*)  FROM SGT_PAYEE_ACCOUNT B INNER JOIN SGT_PLAN_BENEFIT_XR A ON A.PLAN_BENEFIT_ID=B.PLAN_BENEFIT_ID&#xD;&#xA;                                                               WHERE B.PERSON_ID=PA.PERSON_ID AND B.PAYEE_ACCOUNT_ID!=PA.PAYEE_ACCOUNT_ID AND A.PLAN_ID = PBXR.PLAN_ID AND B.BENEFIT_ACCOUNT_TYPE_VALUE!=PA.BENEFIT_ACCOUNT_TYPE_VALUE AND B.BENEFIT_BEGIN_DATE&lt;=PA.BENEFIT_BEGIN_DATE AND B.BENEFIT_ACCOUNT_TYPE_VALUE in ('RTMT')) &gt; 0)) &#xD;&#xA;                                                        AND PHD.ROLLOVER_FLAG='N')&#xD;&#xA;                                                       THEN '2'&#xD;&#xA;                                                      &#xD;&#xA;                                                 WHEN PHD.ROLLOVER_FLAG='Y'      &#xD;&#xA;                                                      THEN 'G'&#xD;&#xA;                                                  &#xD;&#xA;                                                 WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND PBXR.BENEFIT_OPTION_VALUE='LUMP' AND PHD.ROLLOVER_FLAG='N' AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &lt; 59.5)     &#xD;&#xA;                                                       THEN '1'      &#xD;&#xA;                                                                &#xD;&#xA;                                                 ELSE 'ZZ'                                                     &#xD;&#xA;                                                 END &#xD;&#xA;                    AS DISTRIBUTION_CODE,                                         &#xD;&#xA;                                 CASE WHEN PER.PERSON_ID IS NULL AND O.ORG_ID IS NULL&#xD;&#xA;                                 THEN PARTI_PER.SSN &#xD;&#xA;                                 WHEN PER.PERSON_ID IS NULL THEN O.FEDERAL_ID ELSE PER.SSN END SSN,&#xD;&#xA;                                --O.FEDERAL_ID,&#xD;&#xA;                                CASE WHEN PER.PERSON_ID IS NULL &#xD;&#xA;                                     THEN 'N'&#xD;&#xA;                                ELSE CASE WHEN (CASE WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL))&#xD;&#xA;                                                                                                                THEN (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 ELSE (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 END) &lt; 59.5&#xD;&#xA;                                           THEN 'N'                    &#xD;&#xA;                                                       ELSE CASE WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DSBL'  &#xD;&#xA;                                                                 THEN 'N' &#xD;&#xA;                                                                                                     ELSE 'Y' &#xD;&#xA;                                                                                                     END &#xD;&#xA;                                           END &#xD;&#xA;                                     END&#xD;&#xA;                                AS AGE59_SPLIT_FLAG&#xD;&#xA;, PHH.CREATED_DATE AS [PAYMENT_CREATE_DATE], NULL [ADDRESS_ID], NULL AS [ADDRESS_STATE]&#xD;&#xA;FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;INNER JOIN &#xD;&#xA;(&#xD;&#xA;                SELECT PHD.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;                &#xD;&#xA;                                SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N'  &#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHD.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN ALLOW_ROLLOVER_CODE_VALUE = 'RRED' &#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHD.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS GROSS_AMOUNT,&#xD;&#xA;                                                &#xD;&#xA;                                SUM(CASE  WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N'  AND TAXABLE_ITEM_FLAG = 'Y' &#xD;&#xA;                                                      THEN &#xD;&#xA;                                                      CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET'&#xD;&#xA;                                                                       THEN 0.00&#xD;&#xA;                                                                       ELSE ISNULL(PHD.AMOUNT,0.0) &#xD;&#xA;                                                                       END&#xD;&#xA;                                                                  WHEN ALLOW_ROLLOVER_CODE_VALUE = 'RRED' AND TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;                                                                  THEN&#xD;&#xA;                                                                  ISNULL(PHD.AMOUNT,0.0) * PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;                                                                  ELSE 0 &#xD;&#xA;                                                                  END&#xD;&#xA;                                                )  AS TAXABLE_AMOUNT,&#xD;&#xA;                                                &#xD;&#xA;                                0.0    AS CAPITAL_GAIN, -- Remove &#xD;&#xA;                                &#xD;&#xA;                                SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N'  AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y' &#xD;&#xA;                                                     THEN &#xD;&#xA;                                                                 CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET'&#xD;&#xA;                                                                      THEN 0.00&#xD;&#xA;                                                                      ELSE ISNULL(PHD.AMOUNT,0.0) &#xD;&#xA;                                                                      END&#xD;&#xA;                                                     WHEN ALLOW_ROLLOVER_CODE_VALUE = 'RRED' AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y'&#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHD.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS NON_TAXABLE_AMOUNT,&#xD;&#xA;                                                &#xD;&#xA;                                SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX'&#xD;&#xA;                                                     THEN &#xD;&#xA;                                                                 ISNULL(PHD.AMOUNT,0.0) &#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS FED_TAX_AMOUNT,&#xD;&#xA;                                                &#xD;&#xA;                                SUM(CASE WHEN &#xD;&#xA;                                                                 PIT.ACH_CHECK_GROUP_VALUE = 'STTX'&#xD;&#xA;                                                     THEN &#xD;&#xA;                                                                 ISNULL(PHD.AMOUNT,0.0) &#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS STATE_TAX_AMOUNT,&#xD;&#xA;                                                &#xD;&#xA;                                CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET' &#xD;&#xA;                                                 THEN 'Y' &#xD;&#xA;                                                 ELSE 'N' &#xD;&#xA;                                                 END &#xD;&#xA;                                                 AS ROLLOVER_FLAG&#xD;&#xA;                &#xD;&#xA;                FROM SGT_PAYMENT_HISTORY_DETAIL PHD                                     &#xD;&#xA;                INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;                INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;                INNER JOIN SGT_PAYEE_ACCOUNT PA ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;                INNER JOIN SGT_PLAN_BENEFIT_XR PBXR ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA;                WHERE YEAR(PHH.PAYMENT_DATE) = @TAXYEAR&#xD;&#xA;                GROUP BY PHD.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;                CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET' THEN 'Y' ELSE 'N' END&#xD;&#xA;)AS PHD ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_PLAN_BENEFIT_XR PBXR ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBACC ON PBACC.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHDIS ON PHDIS.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND YEAR(SH.TRANSACTION_DATE) &lt;= @TAXYEAR&#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)            &#xD;&#xA;&#xD;&#xA;INNER JOIN SGT_PERSON PARTI_PER ON PARTI_PER.PERSON_ID = PBACC.PERSON_ID&#xD;&#xA;--LEFT OUTER JOIN (SELECT PLAN_ID,B.* FROM SGT_PAYEE_ACCOUNT B INNER JOIN SGT_PLAN_BENEFIT_XR A ON A.PLAN_BENEFIT_ID=B.PLAN_BENEFIT_ID) PA1 &#xD;&#xA;--                                                ON PA1.PERSON_ID=PA.PERSON_ID AND  PA1.PAYEE_ACCOUNT_ID!=PA.PAYEE_ACCOUNT_ID AND PA1.PLAN_ID = PBXR.PLAN_ID AND PA1.BENEFIT_ACCOUNT_TYPE_VALUE in ('RTMT', 'DSBL') AND ISNULL(PA1.RETIREE_INCR_FLAG,'N') = 'N'&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BADSBL ON BADSBL.PERSON_ID = PA.PERSON_ID AND BADSBL.BENEFIT_TYPE_VALUE='DSBL' AND BADSBL.APPLICATION_STATUS_VALUE='APPR'&#xD;&#xA;AND EXISTS(SELECT * FROM SGT_BENEFIT_APPLICATION_DETAIL DSBD INNER JOIN SGT_PLAN_BENEFIT_XR X ON X.PLAN_BENEFIT_ID = DSBD.PLAN_BENEFIT_ID&#xD;&#xA;   WHERE DSBD.BENEFIT_APPLICATION_ID = BADSBL.BENEFIT_APPLICATION_ID AND X.PLAN_ID = PHH.PLAN_ID)&#xD;&#xA; &#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_DETAIL BAD ON BAD.BENEFIT_APPLICATION_DETAIL_ID = PA.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA ON BAD.BENEFIT_APPLICATION_ID = BA.BENEFIT_APPLICATION_ID AND BA.APPLICATION_STATUS_VALUE='APPR'&#xD;&#xA;LEFT OUTER JOIN SGT_DRO_BENEFIT_DETAILS DBD ON DBD.DRO_BENEFIT_ID = PA.DRO_APPLICATION_DETAIL_ID&#xD;&#xA;LEFT OUTER JOIN SGT_DRO_APPLICATION DAPP ON DAPP.DRO_APPLICATION_ID = DBD.DRO_APPLICATION_ID AND DAPP.DRO_STATUS_VALUE='QLFD'&#xD;&#xA;LEFT OUTER JOIN SGT_DRO_APPLICATION DRO ON DRO.DRO_APPLICATION_ID=BA.DRO_APPLICATION_ID AND DRO.DRO_STATUS_VALUE='QLFD'&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN SGT_QDRO_CALCULATION_DETAIL DCD ON PA.DRO_CALCULATION_DETAIL_ID = DCD.QDRO_CALCULATION_DETAIL_ID -- 1099R 2015&#xD;&#xA;LEFT OUTER JOIN SGT_QDRO_CALCULATION_HEADER DCH ON DCD.QDRO_CALCULATION_HEADER_ID = DCH.QDRO_CALCULATION_HEADER_ID  AND DCH.STATUS_VALUE='APPR' -- 1099R 2015&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON PER ON PA.PERSON_ID = PER.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGT_ORGANIZATION O ON PHH.ORG_ID = O.ORG_ID&#xD;&#xA;&#xD;&#xA;WHERE YEAR(PHH.PAYMENT_DATE) = @TAXYEAR&#xD;&#xA;                AND ((PHDSH.DISTRIBUTION_STATUS_HISTORY_ID IS NOT NULL AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD'))&#xD;&#xA;      OR (PHDSH.DISTRIBUTION_STATUS_HISTORY_ID IS NULL AND PHDIS.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD')))&#xD;&#xA;                AND (PBXR.PLAN_ID IN (2,3,4,6,7,8,9) OR (PBXR.PLAN_ID = 1 AND PBXR.BENEFIT_OPTION_VALUE='LUMP'))&#xD;&#xA;                  AND NOT EXISTS(&#xD;&#xA;                     SELECT * FROM SGT_PAYMENT_HISTORY_DISTRIBUTION HD &#xD;&#xA;         INNER JOIN SGT_PAYMENT_HISTORY_HEADER HH ON HD.PAYMENT_HISTORY_HEADER_ID = HH.PAYMENT_HISTORY_HEADER_ID AND PHH.PAYEE_ACCOUNT_ID= HH.PAYEE_ACCOUNT_ID&#xD;&#xA;      WHERE HD.OLD_DISTRIBUTION_ID IS NULL AND PHDIS.OLD_DISTRIBUTION_ID IS NOT NULL AND HD.DISTRIBUTION_STATUS_VALUE = 'CDRE' &#xD;&#xA;      AND YEAR(HH.PAYMENT_DATE) &lt; @TAXYEAR &#xD;&#xA;      AND &#xD;&#xA;      NOT EXISTS&#xD;&#xA;      (&#xD;&#xA;      SELECT * FROM SGT_PAYMENT_HISTORY_DISTRIBUTION HD &#xD;&#xA;         INNER JOIN SGT_PAYMENT_HISTORY_HEADER HH ON HD.PAYMENT_HISTORY_HEADER_ID = HH.PAYMENT_HISTORY_HEADER_ID AND PHH.PAYEE_ACCOUNT_ID= HH.PAYEE_ACCOUNT_ID&#xD;&#xA;      WHERE HD.OLD_DISTRIBUTION_ID IS NULL AND PHDIS.OLD_DISTRIBUTION_ID IS NOT NULL AND HD.DISTRIBUTION_STATUS_VALUE = 'CDRE'&#xD;&#xA;       AND YEAR(HH.PAYMENT_DATE) = @TAXYEAR)&#xD;&#xA;      )&#xD;&#xA;      --1099R 2015&#xD;&#xA;     AND NOT EXISTS(&#xD;&#xA;     SELECT * FROM SGT_PAYMENT_HISTORY_DISTRIBUTION HD &#xD;&#xA;        INNER JOIN SGT_PAYMENT_HISTORY_HEADER HH ON HD.PAYMENT_HISTORY_HEADER_ID = HH.PAYMENT_HISTORY_HEADER_ID AND PHH.PAYEE_ACCOUNT_ID= HH.PAYEE_ACCOUNT_ID&#xD;&#xA;     INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY HDSH ON HDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;     (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE HH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND YEAR(SH.TRANSACTION_DATE) &lt;= @TAXYEAR&#xD;&#xA;     ORDER BY SH.TRANSACTION_DATE DESC)  &#xD;&#xA;        WHERE HD.OLD_DISTRIBUTION_ID = PHDIS.PAYMENT_HISTORY_DISTRIBUTION_ID AND YEAR(HH.PAYMENT_DATE) = @TAXYEAR AND PHDIS.DISTRIBUTION_STATUS_VALUE = 'RSUD'&#xD;&#xA;        AND HDSH.DISTRIBUTION_STATUS_VALUE = 'CNLD'&#xD;&#xA;        )&#xD;&#xA;&#xD;&#xA;                &#xD;&#xA;                                                &#xD;&#xA;---------------------- QUERY 2 --------------------------------&#xD;&#xA;&#xD;&#xA;------------- QUERY TO GET NEGATIVE AMOUNTS AND DATA FROM REIMBURSMENTS HAVE IT AT DETAILED LEVEL SO THAT LINK TABLE CAN BE CREATED ------------&#xD;&#xA;&#xD;&#xA;INSERT INTO TEMP_PAYMENT_DETAILS_1099R&#xD;&#xA;SELECT  DISTINCT RS.PAYEE_ACCOUNT_ID,&#xD;&#xA;                                NULL AS PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;                                RD.REIMBURSEMENT_DETAILS_ID,&#xD;&#xA;                                PBXR.PLAN_ID,&#xD;&#xA;                                &#xD;&#xA;                                pa.PERSON_ID,&#xD;&#xA;        NULL,                            &#xD;&#xA;                                RD.POSTED_DATE,&#xD;&#xA;                                'N' AS ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;                                &#xD;&#xA;                                RD.GROSS_AMOUNT AS GROSS_AMOUNT,&#xD;&#xA;                                                &#xD;&#xA;        RD.GROSS_AMOUNT AS TAXABLE_AMOUNT,&#xD;&#xA;                                                &#xD;&#xA;        0.0  AS CAPITAL_GAIN,&#xD;&#xA;        &#xD;&#xA;        0.0  AS NON_TAXABLE_AMOUNT,&#xD;&#xA;                                                &#xD;&#xA;                                RD.FED_TAX  AS FED_TAX_AMOUNT, -- NOTE : In the future we are going to have FED TAX Amt in the REimbursement Table which we need to fetch&#xD;&#xA;                                &#xD;&#xA;                                RD.STATE_TAX  AS STATE_TAX_AMOUNT, -- NOTE : In the future we are going to have STATE TAX Amt in the REimbursement Table which we need to fetch&#xD;&#xA;                                NULL,&#xD;&#xA;                                NULL,&#xD;&#xA;                                NULL,&#xD;&#xA;CASE        WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DSBL' OR (BADSBL.BENEFIT_APPLICATION_ID IS NOT NULL AND BADSBL.DISABILITY_CONVERSION_DATE IS NOT NULL AND BADSBL.RETIREMENT_DATE&lt;=RD.POSTED_DATE&#xD;&#xA;               AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT')&#xD;&#xA;               OR (BADSBL.BENEFIT_APPLICATION_ID IS NOT NULL AND  BADSBL.RETIREMENT_DATE&lt;= RD.POSTED_DATE AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL')&#xD;&#xA;                                                      OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' AND ISNULL(DCH.IS_PARTICIPANT_DISABLED,'N') ='Y') OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL AND DRO.IS_PARTICIPANT_DISABLED_FLAG='Y')))-- 1099R 2015&#xD;&#xA;                                                       THEN '3' -- IAP CASE PENDING HERE&#xD;&#xA;                                                       &#xD;&#xA;                                                       &#xD;&#xA;                                                 WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DDPR' OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DDPT') &#xD;&#xA;                                                       THEN '4' + CASE WHEN (PBXR.BENEFIT_OPTION_VALUE = 'LUMP' AND dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH) &lt;= '01/01/1936')   &#xD;&#xA;                                                                       THEN 'A'&#xD;&#xA;                                                                       ELSE ''&#xD;&#xA;                                                                       END&#xD;&#xA;                                   &#xD;&#xA;                                     WHEN(((((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' AND BA.DRO_APPLICATION_ID IS NULL ) OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT') AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),RD.POSTED_DATE))/365.25 &gt;= 59.5)&#xD;&#xA;                    OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL)) AND DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),RD.POSTED_DATE)/365.25 &gt;= 59.5))) &#xD;&#xA;                                                                    THEN '7' +  CASE WHEN (PBXR.BENEFIT_OPTION_VALUE = 'LUMP' AND  ((((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' AND BA.DRO_APPLICATION_ID IS NULL) OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT') AND dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH) &lt;= '01/01/1936') &#xD;&#xA;                                                                                          OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL)) AND dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH) &lt;= '01/01/1936')))&#xD;&#xA;                                                                               THEN 'A'&#xD;&#xA;                                                                               ELSE ''&#xD;&#xA;                                                                               END                                                                       &#xD;&#xA;&#xD;&#xA;                                                       &#xD;&#xA;                                                 WHEN ((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NULL AND PBXR.BENEFIT_OPTION_VALUE!='LUMP') AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),RD.POSTED_DATE))/365.25 &lt; 59.5)  &#xD;&#xA;                                                                                OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL AND PBXR.BENEFIT_OPTION_VALUE!='LUMP')) AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),RD.POSTED_DATE))/365.25 &lt; 59.5)&#xD;&#xA;                                                        OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND PA.PAYEE_ACCOUNT_ID IS NOT NULL AND PA.BENEFIT_BEGIN_DATE&lt;=PA.BENEFIT_BEGIN_DATE AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT'))&#xD;&#xA;                                                       THEN '2'&#xD;&#xA;                                                  &#xD;&#xA;                                                 WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND PBXR.BENEFIT_OPTION_VALUE='LUMP' AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),RD.POSTED_DATE))/365.25 &lt; 59.5)     &#xD;&#xA;                                                       THEN '1'      &#xD;&#xA;                                                                &#xD;&#xA;                                                 ELSE 'ZZ'                                                     &#xD;&#xA;                                                 END &#xD;&#xA;                    AS DISTRIBUTION_CODE,         &#xD;&#xA;                                NULL,&#xD;&#xA;                                CASE WHEN PER.PERSON_ID IS NULL &#xD;&#xA;                                     THEN 'N'&#xD;&#xA;                                ELSE CASE WHEN (CASE WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL))&#xD;&#xA;                                                                                                                THEN (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),RD.POSTED_DATE))/365.25 ELSE (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),RD.POSTED_DATE))/365.25 END) &lt; 59.5&#xD;&#xA;                                           THEN 'N'                    &#xD;&#xA;                                                       ELSE CASE WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DSBL'  &#xD;&#xA;                                                                 THEN 'N' &#xD;&#xA;                                                                                                     ELSE 'Y' &#xD;&#xA;                                                                                                     END &#xD;&#xA;                                           END &#xD;&#xA;                                     END&#xD;&#xA;                                AS AGE59_SPLIT_FLAG&#xD;&#xA;, NULL AS [PAYMENT_CREATE_DATE], NULL [ADDRESS_ID], NULL AS [ADDRESS_STATE]&#xD;&#xA;FROM SGT_REIMBURSEMENT_DETAILS RD &#xD;&#xA; INNER JOIN SGT_REPAYMENT_SCHEDULE RS ON RS.REPAYMENT_SCHEDULE_ID=RD.REPAYMENT_SCHEDULE_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA ON RS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PLAN_BENEFIT_XR PBXR ON PBXR.PLAN_BENEFIT_ID = PA.PLAN_BENEFIT_ID &#xD;&#xA;-- LEFT OUTER JOIN SGT_PAYEE_ACCOUNT PA1 ON PA1.PERSON_ID=PA.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_DETAIL BAD ON BAD.BENEFIT_APPLICATION_DETAIL_ID = PA.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBACC ON PBACC.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON PARTI_PER ON PARTI_PER.PERSON_ID = PBACC.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BADSBL ON BADSBL.PERSON_ID = PA.PERSON_ID AND BADSBL.BENEFIT_TYPE_VALUE='DSBL' AND BADSBL.APPLICATION_STATUS_VALUE='APPR'&#xD;&#xA;AND EXISTS(SELECT * FROM SGT_BENEFIT_APPLICATION_DETAIL DSBD INNER JOIN SGT_PLAN_BENEFIT_XR X ON X.PLAN_BENEFIT_ID = DSBD.PLAN_BENEFIT_ID&#xD;&#xA;   WHERE DSBD.BENEFIT_APPLICATION_ID = BADSBL.BENEFIT_APPLICATION_ID AND X.PLAN_ID = PBXR.PLAN_ID)&#xD;&#xA; &#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA ON BAD.BENEFIT_APPLICATION_ID = BA.BENEFIT_APPLICATION_ID AND BA.APPLICATION_STATUS_VALUE='APPR'&#xD;&#xA;LEFT OUTER JOIN SGT_DRO_BENEFIT_DETAILS DBD ON DBD.DRO_BENEFIT_ID = PA.DRO_APPLICATION_DETAIL_ID&#xD;&#xA;LEFT OUTER JOIN SGT_DRO_APPLICATION DAPP ON DAPP.DRO_APPLICATION_ID = DBD.DRO_APPLICATION_ID AND DAPP.DRO_STATUS_VALUE='QLFD'&#xD;&#xA;LEFT OUTER JOIN SGT_DRO_APPLICATION DRO ON DRO.DRO_APPLICATION_ID=BA.DRO_APPLICATION_ID AND DRO.DRO_STATUS_VALUE='QLFD'&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN SGT_QDRO_CALCULATION_DETAIL DCD ON PA.DRO_CALCULATION_DETAIL_ID = DCD.QDRO_CALCULATION_DETAIL_ID -- 1099R 2015&#xD;&#xA;LEFT OUTER JOIN SGT_QDRO_CALCULATION_HEADER DCH ON DCD.QDRO_CALCULATION_HEADER_ID = DCH.QDRO_CALCULATION_HEADER_ID  AND DCH.STATUS_VALUE='APPR' -- 1099R 2015&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON PER  ON PA.PERSON_ID = PER.PERSON_ID&#xD;&#xA;WHERE YEAR(RD.POSTED_DATE) = @TAXYEAR&#xD;&#xA;                  AND (PBXR.PLAN_ID IN (2,3,4,6,7,8,9) OR (PBXR.PLAN_ID = 1 AND PBXR.BENEFIT_OPTION_VALUE='LUMP')) &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;                &#xD;&#xA;--UPDATE TEMP_PAYMENT_DETAILS_1099R  &#xD;&#xA;--             SET TAXABLE_AMOUNT = ISNULL(TAXABLE_AMOUNT,0) - ISNULL(CAPITAL_GAIN,0)&#xD;&#xA;--WHERE ISNULL(TAXABLE_AMOUNT,0) &gt; 0 AND ISNULL(CAPITAL_GAIN,0) &lt;&gt; 0 &#xD;&#xA;&#xD;&#xA;----------------------- END OF QUERY 2 -------------&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;--------------------QUERY 3 MISMATCHING DISTRIBUTION CODE OF REIMBURSEMENT RECORD---------------------&#xD;&#xA;UPDATE A SET A.DISTRIBUTION_CODE = B.DISTRIBUTION_CODE , A.ROLLOVER_PAYMENT_FLAG = B.ROLLOVER_PAYMENT_FLAG ,&#xD;&#xA;A.TAXABLE_AMOUNT = CASE WHEN B.ROLLOVER_PAYMENT_FLAG = 'Y' THEN 0 ELSE A.TAXABLE_AMOUNT END&#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA; SELECT * FROM [TEMP_PAYMENT_DETAILS_1099R] WHERE REIMBURSEMENT_DETAILS_ID IS NOT NULL&#xD;&#xA;)A&#xD;&#xA;INNER JOIN &#xD;&#xA;(&#xD;&#xA; SELECT * FROM [TEMP_PAYMENT_DETAILS_1099R] WHERE REIMBURSEMENT_DETAILS_ID IS NULL&#xD;&#xA;)B ON A.PAYEE_ACCOUNT_ID = B.PAYEE_ACCOUNT_ID AND A.PLAN_ID = B.PLAN_ID AND ISNULL(B.GROSS_AMOUNT,0) &lt;&gt; 0&#xD;&#xA;WHERE NOT EXISTS(SELECT * FROM [TEMP_PAYMENT_DETAILS_1099R] Q &#xD;&#xA;  WHERE Q.REIMBURSEMENT_DETAILS_ID IS NULL AND Q.GROSS_AMOUNT &lt;&gt; 0 AND Q.DISTRIBUTION_CODE = A.DISTRIBUTION_CODE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND Q.PAYEE_ACCOUNT_ID = A.PAYEE_ACCOUNT_ID AND Q.PLAN_ID = A.PLAN_ID) &#xD;&#xA;AND B.PAYMENT_HISTORY_HEADER_ID = (SELECT TOP(1) Q.PAYMENT_HISTORY_HEADER_ID FROM [TEMP_PAYMENT_DETAILS_1099R] Q &#xD;&#xA;  WHERE Q.REIMBURSEMENT_DETAILS_ID IS NULL AND Q.GROSS_AMOUNT &lt;&gt; 0 AND Q.PAYEE_ACCOUNT_ID = A.PAYEE_ACCOUNT_ID AND Q.PLAN_ID = A.PLAN_ID ORDER BY Q.DISTRIBUTION_CODE) &#xD;&#xA;  &#xD;&#xA;-----------------QUERY 4 - UPDATING TAX STATE -----------------------------------&#xD;&#xA;&#xD;&#xA;--Updating State for which the state tax was withheld.&#xD;&#xA;UPDATE T SET ADDRESS_STATE = STS.TAX_STATE &#xD;&#xA;--SELECT T.ADDRESS_STATE, STS.TAX_STATE&#xD;&#xA;FROM [TEMP_PAYMENT_DETAILS_1099R] AS T&#xD;&#xA;INNER JOIN (&#xD;&#xA;&#x9;SELECT DISTINCT PHH.PAYMENT_HISTORY_HEADER_ID, PHD.VENDOR_ORG_ID, LEFT(ORG.ORG_NAME,2) AS TAX_STATE FROM SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;&#x9;INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID AND YEAR(PHH.PAYMENT_DATE)=2024 AND VENDOR_ORG_ID IS NOT NULL&#xD;&#xA;&#x9;INNER JOIN SGT_ORGANIZATION ORG ON PHD.VENDOR_ORG_ID = ORG.ORG_ID AND PHD.VENDOR_ORG_ID &gt; 1&#xD;&#xA;) STS ON T.PAYMENT_HISTORY_HEADER_ID = STS.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#xD;&#xA;--For those payment where state tax was not withheld, setting up state based on the valid address exists at time of payment was creatged. &#xD;&#xA;UPDATE T SET ADDRESS_ID = PERADDR.ADDRESS_ID, ADDRESS_STATE = PERADDR.ADDR_STATE_VALUE&#xD;&#xA;-- SELECT T.PERSON_ID, ADDRESS_ID = PERADDR.ADDRESS_ID, ADDRESS_STATE = PERADDR.ADDR_STATE_VALUE&#xD;&#xA;FROM [TEMP_PAYMENT_DETAILS_1099R] AS T&#xD;&#xA;INNER JOIN &#xD;&#xA;( SELECT P.PERSON_ID, PA1.ADDRESS_ID, PA1.ADDR_STATE_VALUE AS ADDR_STATE_VALUE, START_DATE, END_DATE&#xD;&#xA;  FROM SGT_PERSON P INNER JOIN SGT_PERSON_ADDRESS PA1 ON P.PERSON_ID  = PA1.PERSON_ID  &#xD;&#xA;  INNER JOIN SGT_PERSON_ADDRESS_CHKLIST PAC ON PA1.ADDRESS_ID=PAC.ADDRESS_ID&#xD;&#xA;  WHERE ADDR_COUNTRY_VALUE = '0001' AND (PAC.ADDRESS_TYPE_VALUE='MAIL' OR  PAC.ADDRESS_TYPE_VALUE IS NULL)&#xD;&#xA;) AS PERADDR ON T.PERSON_ID = PERADDR.PERSON_ID &#xD;&#xA;AND T.ADDRESS_STATE IS NULL&#xD;&#xA;AND PERADDR.START_DATE &lt;= T.PAYMENT_CREATE_DATE AND (PERADDR.END_DATE IS NULL OR PERADDR.END_DATE &gt;= T.PAYMENT_CREATE_DATE)&#xD;&#xA;&#xD;&#xA;--If no valid address exists then update last address as of payment date&#xD;&#xA;UPDATE T SET ADDRESS_ID = ADR.ADDRESS_ID, ADDRESS_STATE = ADR.ADDR_STATE_VALUE&#xD;&#xA;-- SELECT T.PERSON_ID, T.ADDRESS_ID, T.ADDRESS_STATE, ADR.ADDR_STATE_VALUE, ADR.ADDR_COUNTRY_VALUE, ADR.ADDR_COUNTRY_ID, ADR.FOREIGN_PROVINCE, ADR.FOREIGN_POSTAL_CODE&#xD;&#xA;FROM [TEMP_PAYMENT_DETAILS_1099R] AS T&#xD;&#xA;INNER JOIN OPUS.dbo.SGT_PERSON_ADDRESS ADR on T.PERSON_ID = ADR.PERSON_ID &#xD;&#xA;AND ADR.ADDRESS_ID = ( SELECT MAX(A.ADDRESS_ID) FROM SGT_PERSON_ADDRESS A &#xD;&#xA;&#x9;INNER JOIN OPUS.dbo.SGT_PERSON_ADDRESS_CHKLIST ACHK on A.ADDRESS_ID = ACHK.ADDRESS_ID AND (ACHK.ADDRESS_TYPE_VALUE = 'MAIL' OR ACHK.ADDRESS_TYPE_VALUE IS NULL)  &#xD;&#xA;&#x9;AND A.PERSON_ID = T.PERSON_ID AND A.START_DATE &lt;= T.PAYMENT_CREATE_DATE)&#xD;&#xA;WHERE &#xD;&#xA;ADDRESS_STATE IS NULL AND NOT EXISTS&#xD;&#xA;( SELECT P.PERSON_ID, A.ADDRESS_ID, A.ADDR_STATE_VALUE AS ADDR_STATE_VALUE, START_DATE, END_DATE&#xD;&#xA;  FROM SGT_PERSON P INNER JOIN SGT_PERSON_ADDRESS A ON P.PERSON_ID  = A.PERSON_ID  &#xD;&#xA;&#x9;INNER JOIN OPUS.dbo.SGT_PERSON_ADDRESS_CHKLIST ACHK on A.ADDRESS_ID = ACHK.ADDRESS_ID AND (ACHK.ADDRESS_TYPE_VALUE = 'MAIL' OR ACHK.ADDRESS_TYPE_VALUE IS NULL)  &#xD;&#xA;  WHERE A.PERSON_ID = T.PERSON_ID AND A.START_DATE &lt;= T.PAYMENT_CREATE_DATE AND (A.END_DATE IS NULL OR A.END_DATE &gt;= T.PAYMENT_CREATE_DATE)&#xD;&#xA;)&#xD;&#xA;AND ADR.ADDR_COUNTRY_VALUE = '0001'&#xD;&#xA;&#xD;&#xA;UPDATE A SET A.ADDRESS_STATE = B.ADDRESS_STATE&#xD;&#xA;--SELECT A.*, B.*&#xD;&#xA;FROM [TEMP_PAYMENT_DETAILS_1099R] A&#xD;&#xA;INNER JOIN (SELECT * FROM [TEMP_PAYMENT_DETAILS_1099R] WHERE REIMBURSEMENT_DETAILS_ID IS NULL) B &#xD;&#xA;&#x9;ON A.PAYEE_ACCOUNT_ID = B.PAYEE_ACCOUNT_ID AND A.PAYMENT_DATE = B.PAYMENT_DATE&#xD;&#xA;WHERE A.REIMBURSEMENT_DETAILS_ID IS NOT NULL &#xD;&#xA;AND A.PAYMENT_CREATE_DATE IS NULL AND A.ADDRESS_STATE IS NULL&#xD;&#xA;&#xD;&#xA;--FOR REMAINING REIMBURSEMENT RECORD WHERE PAYEE ACCOUNT AND PAYMENT DATE DID NOT MATCHED&#xD;&#xA;&#xD;&#xA;--For those payment where state tax was not withheld, setting up state based on the valid address exists at time of payment was creatged. &#xD;&#xA;UPDATE T SET ADDRESS_ID = PERADDR.ADDRESS_ID, ADDRESS_STATE = PERADDR.ADDR_STATE_VALUE&#xD;&#xA;-- SELECT T.PERSON_ID, ADDRESS_ID = PERADDR.ADDRESS_ID, ADDRESS_STATE = PERADDR.ADDR_STATE_VALUE&#xD;&#xA;FROM [TEMP_PAYMENT_DETAILS_1099R] AS T&#xD;&#xA;INNER JOIN &#xD;&#xA;( SELECT P.PERSON_ID, PA1.ADDRESS_ID, PA1.ADDR_STATE_VALUE AS ADDR_STATE_VALUE, START_DATE, END_DATE&#xD;&#xA;  FROM SGT_PERSON P INNER JOIN SGT_PERSON_ADDRESS PA1 ON P.PERSON_ID  = PA1.PERSON_ID  &#xD;&#xA;  INNER JOIN SGT_PERSON_ADDRESS_CHKLIST PAC ON PA1.ADDRESS_ID=PAC.ADDRESS_ID&#xD;&#xA;  WHERE ADDR_COUNTRY_VALUE = '0001' AND (PAC.ADDRESS_TYPE_VALUE='MAIL' OR  PAC.ADDRESS_TYPE_VALUE IS NULL)&#xD;&#xA;) AS PERADDR ON T.PERSON_ID = PERADDR.PERSON_ID &#xD;&#xA;AND T.ADDRESS_STATE IS NULL AND T.REIMBURSEMENT_DETAILS_ID IS NOT NULL &#xD;&#xA;AND PERADDR.START_DATE &lt;= T.PAYMENT_DATE AND (PERADDR.END_DATE IS NULL OR PERADDR.END_DATE &gt;= T.PAYMENT_DATE)&#xD;&#xA;&#xD;&#xA;--If no valid address exists then update last address as of payment date&#xD;&#xA;UPDATE T SET ADDRESS_ID = ADR.ADDRESS_ID, ADDRESS_STATE = ADR.ADDR_STATE_VALUE&#xD;&#xA;-- SELECT T.PERSON_ID, T.ADDRESS_ID, T.ADDRESS_STATE, ADR.ADDR_STATE_VALUE, ADR.ADDR_COUNTRY_VALUE, ADR.ADDR_COUNTRY_ID, ADR.FOREIGN_PROVINCE, ADR.FOREIGN_POSTAL_CODE&#xD;&#xA;FROM [TEMP_PAYMENT_DETAILS_1099R] AS T&#xD;&#xA;INNER JOIN OPUS.dbo.SGT_PERSON_ADDRESS ADR on T.PERSON_ID = ADR.PERSON_ID &#xD;&#xA;AND ADR.ADDRESS_ID = ( SELECT MAX(A.ADDRESS_ID) FROM SGT_PERSON_ADDRESS A &#xD;&#xA;&#x9;INNER JOIN OPUS.dbo.SGT_PERSON_ADDRESS_CHKLIST ACHK on A.ADDRESS_ID = ACHK.ADDRESS_ID AND (ACHK.ADDRESS_TYPE_VALUE = 'MAIL' OR ACHK.ADDRESS_TYPE_VALUE IS NULL)  &#xD;&#xA;&#x9;AND A.PERSON_ID = T.PERSON_ID AND A.START_DATE &lt;= T.PAYMENT_DATE)&#xD;&#xA;WHERE &#xD;&#xA;ADDRESS_STATE IS NULL AND T.REIMBURSEMENT_DETAILS_ID IS NOT NULL &#xD;&#xA;AND NOT EXISTS&#xD;&#xA;( SELECT P.PERSON_ID, A.ADDRESS_ID, A.ADDR_STATE_VALUE AS ADDR_STATE_VALUE, START_DATE, END_DATE&#xD;&#xA;  FROM SGT_PERSON P INNER JOIN SGT_PERSON_ADDRESS A ON P.PERSON_ID  = A.PERSON_ID  &#xD;&#xA;&#x9;INNER JOIN OPUS.dbo.SGT_PERSON_ADDRESS_CHKLIST ACHK on A.ADDRESS_ID = ACHK.ADDRESS_ID AND (ACHK.ADDRESS_TYPE_VALUE = 'MAIL' OR ACHK.ADDRESS_TYPE_VALUE IS NULL)  &#xD;&#xA;  WHERE A.PERSON_ID = T.PERSON_ID AND A.START_DATE &lt;= T.PAYMENT_DATE AND (A.END_DATE IS NULL OR A.END_DATE &gt;= T.PAYMENT_DATE)&#xD;&#xA;)&#xD;&#xA;AND ADR.ADDR_COUNTRY_VALUE = '0001'">
      <parameters>
        <parameter ID="@TAXYEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Create1099r" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="IF OBJECT_ID('TEMP_PAYMENT_DETAILS_1099R') IS NOT NULL&#xD;&#xA;BEGIN&#xD;&#xA; ---- Declaration Section ------------------------------&#xD;&#xA; DECLARE @DATEOF1099R DATETIME&#xD;&#xA; SET @DATEOF1099R =  CONVERT(DATETIME,CONVERT(VARCHAR,GETDATE(),101) ,110)&#xD;&#xA;&#xD;&#xA; SELECT PHH.PERSON_ID, PHH.ORG_ID, PHH.NAME, PHH.DISTRIBUTION_CODE, PHH.PLAN_ID, PHH.ADDRESS_STATE,&#xD;&#xA;    ISNULL(PHH.GROSS_AMOUNT,0)+ISNULL(BEN.GROSS_AMOUNT,0) AS GROSS_AMOUNT,&#xD;&#xA;    ISNULL(PHH.NON_TAXABLE_AMOUNT,0)+ISNULL(BEN.NON_TAXABLE_AMOUNT,0) AS NON_TAXABLE_AMOUNT,&#xD;&#xA;    ISNULL(PHH.CAPITAL_GAIN,0)+ISNULL(BEN.CAPITAL_GAIN,0) AS CAPITAL_GAIN,&#xD;&#xA;    ISNULL(PHH.TAXABLE_AMOUNT,0)+ISNULL(BEN.TAXABLE_AMOUNT,0) AS TAXABLE_AMOUNT,&#xD;&#xA;    ISNULL(PHH.FED_TAX_AMOUNT,0)+ISNULL(BEN.FED_TAX_AMOUNT,0) AS FED_TAX_AMOUNT,&#xD;&#xA;    ISNULL(PHH.STATE_TAX_AMOUNT,0)+ISNULL(BEN.STATE_TAX_AMOUNT,0) AS STATE_TAX_AMOUNT,&#xD;&#xA;    PHH.TAX_YEAR, PHH.ROLLOVER_PAYMENT_FLAG, PHH.AGE59_SPLIT_FLAG, PHH.SSN&#xD;&#xA; INTO  #TEMP&#xD;&#xA; FROM&#xD;&#xA; ( SELECT PERSON_ID, ORG_ID, NAME, DISTRIBUTION_CODE, PLAN_ID, ADDRESS_STATE,&#xD;&#xA;     SUM(ISNULL(GROSS_AMOUNT,0)) AS GROSS_AMOUNT,&#xD;&#xA;     SUM(ISNULL(NON_TAXABLE_AMOUNT,0)) AS NON_TAXABLE_AMOUNT,&#xD;&#xA;     SUM(ISNULL(CAPITAL_GAIN,0)) AS CAPITAL_GAIN,&#xD;&#xA;     SUM(ISNULL(TAXABLE_AMOUNT,0)) AS TAXABLE_AMOUNT,&#xD;&#xA;     SUM(ISNULL(FED_TAX_AMOUNT,0)) AS FED_TAX_AMOUNT,&#xD;&#xA;     SUM(ISNULL(STATE_TAX_AMOUNT,0)) AS STATE_TAX_AMOUNT,&#xD;&#xA;     YEAR(PAYMENT_DATE) AS TAX_YEAR, ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     CASE WHEN  LTRIM(RTRIM(DISTRIBUTION_CODE)) in ('1','2','7') THEN MIN(AGE59_SPLIT_FLAG) ELSE 'N' END AS AGE59_SPLIT_FLAG, SSN&#xD;&#xA;  FROM  TEMP_PAYMENT_DETAILS_1099R&#xD;&#xA;  WHERE  PAYMENT_HISTORY_HEADER_ID IS NOT NULL&#xD;&#xA;  GROUP BY PERSON_ID, ORG_ID, ROLLOVER_PAYMENT_FLAG, NAME, DISTRIBUTION_CODE, SSN, YEAR(PAYMENT_DATE), ROLLOVER_PAYMENT_FLAG,PLAN_ID , ADDRESS_STATE    &#xD;&#xA; )AS PHH&#xD;&#xA;&#xD;&#xA; LEFT OUTER JOIN&#xD;&#xA; ( SELECT PERSON_ID, ORG_ID, NAME, DISTRIBUTION_CODE,&#xD;&#xA;     SUM(ISNULL(GROSS_AMOUNT,0))*-1 AS GROSS_AMOUNT,&#xD;&#xA;     SUM(ISNULL(NON_TAXABLE_AMOUNT,0))*-1 AS NON_TAXABLE_AMOUNT,&#xD;&#xA;     SUM(ISNULL(CAPITAL_GAIN,0))*-1 AS CAPITAL_GAIN,&#xD;&#xA;     SUM(ISNULL(TAXABLE_AMOUNT,0))*-1 AS TAXABLE_AMOUNT,&#xD;&#xA;     SUM(ISNULL(FED_TAX_AMOUNT,0))*-1 AS FED_TAX_AMOUNT,&#xD;&#xA;     SUM(ISNULL(STATE_TAX_AMOUNT,0))*-1 AS STATE_TAX_AMOUNT,&#xD;&#xA;     YEAR(PAYMENT_DATE) AS TAX_YEAR, ADDRESS_STATE,&#xD;&#xA;     PLAN_ID, ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     CASE WHEN  LTRIM(RTRIM(DISTRIBUTION_CODE)) in ('1','2','7') THEN MIN(AGE59_SPLIT_FLAG) ELSE 'N' END AS AGE59_SPLIT_FLAG, SSN     &#xD;&#xA;  FROM  TEMP_PAYMENT_DETAILS_1099R&#xD;&#xA;  WHERE  REIMBURSEMENT_DETAILS_ID IS NOT NULL &#xD;&#xA;  GROUP BY PERSON_ID, ORG_ID, NAME, DISTRIBUTION_CODE, SSN, YEAR(PAYMENT_DATE), ROLLOVER_PAYMENT_FLAG, PLAN_ID, ADDRESS_STATE&#xD;&#xA; ) BEN ON PHH.ROLLOVER_PAYMENT_FLAG = BEN.ROLLOVER_PAYMENT_FLAG&#xD;&#xA;    AND PHH.DISTRIBUTION_CODE = BEN.DISTRIBUTION_CODE&#xD;&#xA;    AND PHH.AGE59_SPLIT_FLAG = BEN.AGE59_SPLIT_FLAG&#xD;&#xA;    AND PHH.PERSON_ID=BEN.PERSON_ID&#xD;&#xA;&#x9;and PHH.PLAN_ID = BEN.PLAN_ID&#xD;&#xA;&#x9;AND ISNULL(PHH.ADDRESS_STATE,'') = ISNULL(BEN.ADDRESS_STATE,'')&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  --QUERY TO CREATE 1099R&#xD;&#xA; INSERT INTO SGT_PAYMENT_1099R (TAX_YEAR, YEAR_END_PROCESS_REQUEST_ID,CORRECTED_FLAG, DISTRIBUTION_CODE, &#xD;&#xA;      OLD_PAYMENT_1099R_ID, DIST_PERCENTAGE, GROSS_BENEFIT_AMOUNT, TAXABLE_AMOUNT, NON_TAXABLE_AMOUNT,FEDERAL_ID,PAYER_STATE_NO, &#xD;&#xA;      PLAN_IDENTIFIER_VALUE,FED_TAX_AMOUNT, STATE_TAX_AMOUNT, PERSON_ID, ORG_ID, NAME, ADDR_LINE_1, ADDR_LINE_2, ADDR_CITY, &#xD;&#xA;      ADDR_STATE_ID, ADDR_STATE_VALUE, ADDR_COUNTRY_ID, ADDR_COUNTRY_VALUE, ADDR_ZIP_CODE, ADDR_ZIP_4_CODE, FOREIGN_PROVINCE, &#xD;&#xA;      FOREIGN_POSTAL_CODE, ROLLOVER_PAYMENT_FLAG, AGE59_SPLIT_FLAG, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ)    &#xD;&#xA;  SELECT * &#xD;&#xA;  FROM &#xD;&#xA;  (&#xD;&#xA;   SELECT  --T.PAYEE_ACCOUNT_ID,&#xD;&#xA;     T.TAX_YEAR,&#xD;&#xA;     @YEARENDPROCESSREQUESTID AS YEAR_END_PROCESS_REQUEST_ID,&#xD;&#xA;     'N' AS CORRECTED_FLAG,&#xD;&#xA;     T.DISTRIBUTION_CODE,&#xD;&#xA;     NULL AS OLD_PAYMENT_1099R_ID,&#xD;&#xA;     NULL AS DIST_PERCENTAGE,&#xD;&#xA;     SUM(T.GROSS_AMOUNT) AS GROSS_BENEFIT_AMOUNT,&#xD;&#xA;     SUM(T.TAXABLE_AMOUNT) AS TAXABLE_AMOUNT,&#xD;&#xA;     SUM(T.NON_TAXABLE_AMOUNT) AS NON_TAXABLE_AMOUNT,&#xD;&#xA;     CASE WHEN T.PLAN_ID=1 THEN @FEDERALIDIAP ELSE @FEDERALIDOTHER END AS FEDERAL_ID,&#xD;&#xA;     --CASE WHEN T.PLAN_ID=1 THEN @STATEIDIAP ELSE @STATEIDOTHER END AS PAYER_STATE_NO,&#xD;&#xA;     CASE WHEN T.PLAN_ID=1 THEN @STATEIDIAP &#xD;&#xA;&#x9;&#x9;WHEN T.PLAN_ID &gt; 1 AND T.ADDRESS_STATE = 'CA' THEN @STATEIDOTHER &#xD;&#xA;&#x9;&#x9;WHEN T.PLAN_ID &gt; 1 AND T.ADDRESS_STATE = 'GA' THEN 'GA/3608196-HQ' &#xD;&#xA;&#x9;&#x9;WHEN T.PLAN_ID &gt; 1 AND T.ADDRESS_STATE = 'NC' THEN 'NC/200007477'&#xD;&#xA;&#x9;&#x9;WHEN T.PLAN_ID &gt; 1 AND T.ADDRESS_STATE = 'OR' THEN 'OR/01875643-7'&#xD;&#xA;&#x9;&#x9;WHEN T.PLAN_ID &gt; 1 AND T.ADDRESS_STATE = 'VA' THEN 'VA/30-951810805F-001' &#xD;&#xA;&#x9;&#x9;ELSE '' END AS PAYER_STATE_NO,&#xD;&#xA;     CASE WHEN T.PLAN_ID=1 THEN 'IAP' ELSE 'PENSION' END AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;     --T.CAPITAL_GAIN,&#xD;&#xA;     SUM(T.FED_TAX_AMOUNT) AS FED_TAX_AMOUNT,&#xD;&#xA;     SUM(T.STATE_TAX_AMOUNT) AS STATE_TAX_AMOUNT,&#xD;&#xA;     --T.SSN,    &#xD;&#xA;     T.PERSON_ID,&#xD;&#xA;     T.ORG_ID,&#xD;&#xA;     T.[NAME],&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_1 ELSE OCA.ADDR_LINE_1 END AS ADDR_LINE_1, --NEED TO PUT THE  LOGIC OF GETTING THE ACTIVE MAILING ADDRESS&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_2 ELSE OCA.ADDR_LINE_2 END AS ADDR_LINE_2,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_CITY ELSE OCA.CITY END AS CITY,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_STATE_ID ELSE OCA.STATE_ID END AS STATE_ID,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_STATE_VALUE ELSE OCA.STATE_VALUE END AS STATE_VALUE,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_COUNTRY_ID ELSE OCA.COUNTRY_ID END AS COUNTRY_ID,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_COUNTRY_VALUE ELSE OCA.COUNTRY_VALUE END AS COUNTRY_VALUE,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_ZIP_CODE ELSE OCA.ZIP_CODE END AS ZIP_CODE,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_ZIP_4_CODE ELSE OCA.ZIP_4_CODE END AS ZIP_4_CODE,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.FOREIGN_PROVINCE ELSE OCA.FOREIGN_PROVINCE END AS FOREIGN_PROVINCE,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.FOREIGN_POSTAL_CODE ELSE OCA.FOREIGN_POSTAL_CODE END AS FOREIGN_POSTAL_CODE,&#xD;&#xA;     T.ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     CASE WHEN  LTRIM(RTRIM(DISTRIBUTION_CODE)) in ('1','2','7') THEN AGE59_SPLIT_FLAG ELSE 'N' END AS AGE59_SPLIT_FLAG,&#xD;&#xA;     'OPUS_1099R_PROCESS' AS CREATED_BY,&#xD;&#xA;     GETDATE() AS CREATED_DATE,&#xD;&#xA;     'OPUS_1099R_PROCESS' AS MODIFIED_BY,&#xD;&#xA;     GETDATE() AS MODIFIED_DATE,&#xD;&#xA;     0 AS UPDATE_SEQ     &#xD;&#xA;   FROM&#xD;&#xA;     #TEMP AS T&#xD;&#xA;     LEFT OUTER JOIN SGT_PERSON P  ON T.PERSON_ID = P.PERSON_ID&#xD;&#xA;     LEFT OUTER JOIN SGT_ORGANIZATION O  ON T.ORG_ID = O.ORG_ID&#xD;&#xA;     LEFT OUTER JOIN SGT_ORG_ADDRESS OCA  ON OCA.ORG_ID=O.ORG_ID and OCA.ADDRESS_TYPE_VALUE in ('MAIL','PYAM')&#xD;&#xA;     and OCA.START_DATE &lt;= @DATEOF1099R AND (OCA.END_DATE IS NULL OR OCA.END_DATE &gt;= @DATEOF1099R)   &#xD;&#xA;     LEFT OUTER JOIN &#xD;&#xA;     (&#xD;&#xA;     SELECT  P.PERSON_ID, &#xD;&#xA;                                 PA1.ADDR_LINE_1 AS ADDR_LINE_1,&#xD;&#xA;                                 PA1.ADDR_LINE_2 AS ADDR_LINE_2,&#xD;&#xA;         PA1.ADDR_CITY  AS ADDR_CITY,&#xD;&#xA;         PA1.ADDR_STATE_ID  AS ADDR_STATE_ID,&#xD;&#xA;         CASE WHEN PAC.ADDRESS_TYPE_VALUE='MAIL' OR PAC.ADDRESS_TYPE_VALUE IS NULL  then 1 ELSE 2 END AS ADDRESS_TYPE,&#xD;&#xA;         PA1.ADDR_STATE_VALUE AS ADDR_STATE_VALUE,&#xD;&#xA;            PA1.ADDR_COUNTRY_ID  AS ADDR_COUNTRY_ID,&#xD;&#xA;                                 PA1.ADDR_COUNTRY_VALUE  AS ADDR_COUNTRY_VALUE,&#xD;&#xA;                                 PA1.ADDR_ZIP_CODE AS ADDR_ZIP_CODE,&#xD;&#xA;                                 PA1.ADDR_ZIP_4_CODE  AS ADDR_ZIP_4_CODE,&#xD;&#xA;                                 PA1.FOREIGN_PROVINCE  AS FOREIGN_PROVINCE,&#xD;&#xA;                                 PA1.FOREIGN_POSTAL_CODE  AS FOREIGN_POSTAL_CODE&#xD;&#xA;                           FROM SGT_PERSON P &#xD;&#xA;                           LEFT OUTER JOIN SGT_PERSON_ADDRESS PA1   &#xD;&#xA;                           ON P.PERSON_ID  = PA1.PERSON_ID  &#xD;&#xA;                           --AND DBO.fn_Check_Date_Overlapping(PA1.START_DATE,PA1.END_DATE,'09/01/2012')=1&#xD;&#xA;                           AND PA1.START_DATE &lt;= @DATEOF1099R AND (PA1.END_DATE IS NULL OR PA1.END_DATE &gt;= @DATEOF1099R)&#xD;&#xA;                           LEFT OUTER JOIN SGT_PERSON_ADDRESS_CHKLIST PAC ON PA1.ADDRESS_ID=PAC.ADDRESS_ID&#xD;&#xA;                           WHERE  PAC.ADDRESS_TYPE_VALUE='MAIL' OR  PAC.ADDRESS_TYPE_VALUE IS NULL&#xD;&#xA;    ) AS PERADDR &#xD;&#xA;    ON PERADDR.PERSON_ID=T.PERSON_ID &#xD;&#xA;    GROUP BY T.TAX_YEAR,&#xD;&#xA;     T.DISTRIBUTION_CODE,&#xD;&#xA;     CASE WHEN T.PLAN_ID=1 THEN @FEDERALIDIAP ELSE @FEDERALIDOTHER END,&#xD;&#xA;     --CASE WHEN T.PLAN_ID=1 THEN @STATEIDIAP ELSE @STATEIDOTHER END,&#xD;&#xA;     CASE WHEN T.PLAN_ID=1 THEN @STATEIDIAP &#xD;&#xA;&#x9;&#x9;WHEN T.PLAN_ID &gt; 1 AND T.ADDRESS_STATE = 'CA' THEN @STATEIDOTHER &#xD;&#xA;&#x9;&#x9;WHEN T.PLAN_ID &gt; 1 AND T.ADDRESS_STATE = 'GA' THEN 'GA/3608196-HQ' &#xD;&#xA;&#x9;&#x9;WHEN T.PLAN_ID &gt; 1 AND T.ADDRESS_STATE = 'NC' THEN 'NC/200007477'&#xD;&#xA;&#x9;&#x9;WHEN T.PLAN_ID &gt; 1 AND T.ADDRESS_STATE = 'OR' THEN 'OR/01875643-7'&#xD;&#xA;&#x9;&#x9;WHEN T.PLAN_ID &gt; 1 AND T.ADDRESS_STATE = 'VA' THEN 'VA/30-951810805F-001' &#xD;&#xA;&#x9;&#x9;ELSE '' END,&#xD;&#xA;     CASE WHEN T.PLAN_ID=1 THEN 'IAP' ELSE 'PENSION' END,&#xD;&#xA;     T.PERSON_ID,&#xD;&#xA;     T.ORG_ID,&#xD;&#xA;     T.[NAME],&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_1 ELSE OCA.ADDR_LINE_1 END, --NEED TO PUT THE  LOGIC OF GETTING THE ACTIVE MAILING ADDRESS&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_2 ELSE OCA.ADDR_LINE_2 END ,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_CITY ELSE OCA.CITY END,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_STATE_ID ELSE OCA.STATE_ID END ,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_STATE_VALUE ELSE OCA.STATE_VALUE END ,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_COUNTRY_ID ELSE OCA.COUNTRY_ID END,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_COUNTRY_VALUE ELSE OCA.COUNTRY_VALUE END,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_ZIP_CODE ELSE OCA.ZIP_CODE END,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_ZIP_4_CODE ELSE OCA.ZIP_4_CODE END,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.FOREIGN_PROVINCE ELSE OCA.FOREIGN_PROVINCE END ,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.FOREIGN_POSTAL_CODE ELSE OCA.FOREIGN_POSTAL_CODE END,&#xD;&#xA;     T.ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     T.AGE59_SPLIT_FLAG&#xD;&#xA;  ) AS TEMPPORARY&#xD;&#xA;  ORDER BY CASE WHEN FOREIGN_PROVINCE IS NOT NULL then 'A' ELSE 'B' END, NAME  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;--CREATING THE LINK TABLE, ITS THE SOURCE OF 1099R TABLE&#xD;&#xA; INSERT INTO SGT_PAYMENT_1099R_HISTORY_LINK&#xD;&#xA; (PAYMENT_1099R_ID, PAYMENT_HISTORY_HEADER_ID,REIMBURSEMENT_DETAILS_ID, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ)&#xD;&#xA; SELECT  A.PAYMENT_1099R_ID,B.PAYMENT_HISTORY_HEADER_ID,B.REIMBURSEMENT_DETAILS_ID,&#xD;&#xA;    'OPUS_1099R_PROCESS' AS CREATED_BY, GETDATE() AS CREATED_DATE,&#xD;&#xA;    'OPUS_1099R_PROCESS' AS MODIFIED_BY, GETDATE() AS MODIFIED_DATE,0 AS UPDATE_SEQ&#xD;&#xA; FROM  SGT_PAYMENT_1099R A&#xD;&#xA; INNER JOIN TEMP_PAYMENT_DETAILS_1099R B&#xD;&#xA;   ON A.PAYEE_ACCOUNT_ID = B.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND A.ROLLOVER_PAYMENT_FLAG = B.ROLLOVER_PAYMENT_FLAG&#xD;&#xA;   AND A.DISTRIBUTION_CODE = B.DISTRIBUTION_CODE&#xD;&#xA;   AND A.AGE59_SPLIT_FLAG = B.AGE59_SPLIT_FLAG&#xD;&#xA; WHERE  A.TAX_YEAR = @TAXYEAR&#xD;&#xA; &#xD;&#xA; &#xD;&#xA;DROP TABLE #TEMP&#xD;&#xA;END">
      <parameters>
        <parameter ID="@FEDERALIDIAP" sfwDataType="string" />
        <parameter ID="@FEDERALIDOTHER" sfwDataType="string" />
        <parameter ID="@STATEIDIAP" sfwDataType="string" />
        <parameter ID="@STATEIDOTHER" sfwDataType="string" />
        <parameter ID="@TAXYEAR" sfwDataType="int" />
        <parameter ID="@YEARENDPROCESSREQUESTID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="rptCreate1099rDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT   CASE WHEN PAY1099R.PERSON_ID IS NULL THEN ISNULL(ORG.MPI_ORG_ID,'') ELSE ISNULL(P.MPI_PERSON_ID,'') END AS MPID_OrganizationID, &#xD;&#xA;CASE WHEN PAY1099R.PERSON_ID IS NULL THEN ISNULL(ORG.ORG_NAME,'') ELSE ISNULL(P.LAST_NAME,'')+' '+ISNULL(P.FIRST_NAME,'')+' '+ISNULL(P.MIDDLE_NAME,'') END AS PayeeName_OrganizationName, &#xD;&#xA;      PAY1099R.GROSS_BENEFIT_AMOUNT as Gross_Amount,&#xD;&#xA;    PAY1099R.TAXABLE_AMOUNT,&#xD;&#xA;    PAY1099R.FED_TAX_AMOUNT as Federal_Tax_Amount,&#xD;&#xA;    PAY1099R.NON_TAXABLE_AMOUNT,&#xD;&#xA;    PAY1099R.STATE_TAX_AMOUNT&#xD;&#xA;FROM   SGT_PAYMENT_1099R PAY1099R WITH(NOLOCK)&#xD;&#xA;  LEFT OUTER JOIN SGT_PERSON P &#xD;&#xA;                  ON PAY1099R.PERSON_ID=P.PERSON_ID&#xD;&#xA;        LEFT OUTER JOIN SGT_ORGANIZATION ORG &#xD;&#xA;                  ON PAY1099R.ORG_ID=ORG.ORG_ID&#xD;&#xA; &#xD;&#xA;WHERE   PAY1099R.TAX_YEAR = @TAXYEAR&#xD;&#xA;AND ((ISNULL(GROSS_BENEFIT_AMOUNT,0) &lt; 0) OR (ISNULL(GROSS_BENEFIT_AMOUNT,0) = 0 AND (PAY1099R.FED_TAX_AMOUNT + PAY1099R.STATE_TAX_AMOUNT) !=0))&#xD;&#xA;">
      <parameters>
        <parameter ID="@TAXYEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="rpt1099rForm" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT   PAY1099R.NAME,PAY1099R.NAME AS RECIPIENT_NAME,&#xD;&#xA;                UPPER(ISNULL(ADDR_LINE_1,'')) AS ADDR_LINE_1,   &#xD;&#xA;    UPPER(ISNULL(ADDR_LINE_2,'')) AS ADDR_LINE_2,&#xD;&#xA;    CASE&#x9;WHEN PAY1099R.ADDR_COUNTRY_VALUE IS NOT NULL AND PAY1099R.ADDR_COUNTRY_VALUE &lt;&gt; '0001' THEN RIGHT(REPLICATE(' ',40) + REVERSE(SUBSTRING(REVERSE(LTRIM(RTRIM(UPPER(ISNULL(ADDR_CITY,'')+' '+ ISNULL(CV1.DESCRIPTION,ISNULL(FOREIGN_PROVINCE,'')) +' '+ISNULL(FOREIGN_POSTAL_CODE,'')+ ','+ ISNULL(CV2.DESCRIPTION,''))))),12,40)),40)&#xD;&#xA;&#x9;&#x9;&#x9;ELSE UPPER(ISNULL(ADDR_CITY,'')) &#xD;&#xA;&#x9;&#x9;&#x9;END AS ADDR_CITY,&#xD;&#xA;    CASE&#x9;WHEN PAY1099R.ADDR_COUNTRY_VALUE IS NOT NULL AND PAY1099R.ADDR_COUNTRY_VALUE &lt;&gt; '0001' THEN REVERSE(SUBSTRING(REVERSE(LTRIM(RTRIM(UPPER(ISNULL(ADDR_CITY,'')+' '+ ISNULL(CV1.DESCRIPTION,ISNULL(FOREIGN_PROVINCE,'')) +' '+ISNULL(FOREIGN_POSTAL_CODE,'')+ ','+ ISNULL(CV2.DESCRIPTION,''))))),10,2))&#xD;&#xA;&#x9;&#x9;&#x9;ELSE UPPER(ISNULL(PAY1099R.ADDR_STATE_VALUE,'')) &#xD;&#xA;&#x9;&#x9;&#x9;END AS ADDR_STATE_VALUE,&#xD;&#xA;    CASE&#x9;WHEN PAY1099R.ADDR_COUNTRY_VALUE IS NOT NULL AND PAY1099R.ADDR_COUNTRY_VALUE &lt;&gt; '0001' THEN REVERSE(SUBSTRING(REVERSE(LTRIM(RTRIM(UPPER(ISNULL(ADDR_CITY,'')+' '+ ISNULL(CV1.DESCRIPTION,ISNULL(FOREIGN_PROVINCE,'')) +' '+ISNULL(FOREIGN_POSTAL_CODE,'')+ ','+ ISNULL(CV2.DESCRIPTION,''))))),1,9))&#xD;&#xA;&#x9;&#x9;&#x9;ELSE ISNULL(ADDR_ZIP_CODE,'') &#xD;&#xA;&#x9;&#x9;&#x9;END AS ADDR_ZIP_CODE,&#xD;&#xA;    UPPER(ISNULL(FOREIGN_PROVINCE,'')) + ' ' +ISNULL(FOREIGN_POSTAL_CODE,'') AS ADDR_LINE_3,&#xD;&#xA;    PAY1099R.FEDERAL_ID,&#xD;&#xA;    CASE&#x9;WHEN PAY1099R.ADDR_COUNTRY_VALUE IS NOT NULL AND PAY1099R.ADDR_COUNTRY_VALUE &lt;&gt; '0001' THEN REVERSE(SUBSTRING(REVERSE(LTRIM(RTRIM(UPPER(ISNULL(ADDR_CITY,'')+' '+ ISNULL(CV1.DESCRIPTION,ISNULL(FOREIGN_PROVINCE,'')) +' '+ISNULL(FOREIGN_POSTAL_CODE,'')+ ','+ ISNULL(CV2.DESCRIPTION,''))))),10,2))&#xD;&#xA;&#x9;&#x9;&#x9;ELSE UPPER(ISNULL(PAY1099R.ADDR_STATE_VALUE,'')) &#xD;&#xA;&#x9;&#x9;&#x9;END as addr_state,&#xD;&#xA;    PAY1099R.GROSS_BENEFIT_AMOUNT,&#xD;&#xA;    PAY1099R.TAXABLE_AMOUNT,&#xD;&#xA;    PAY1099R.FED_TAX_AMOUNT,PAY1099R.NON_TAXABLE_AMOUNT,&#xD;&#xA;    PAY1099R.DISTRIBUTION_CODE,&#xD;&#xA;    PAY1099R.STATE_TAX_AMOUNT,&#xD;&#xA;    PAY1099R.PAYER_STATE_NO,&#xD;&#xA;    PAY1099R.PAYEE_ACCOUNT_ID,&#xD;&#xA;    CASE WHEN PAY1099R.PERSON_ID IS NULL THEN '1'+ISNULL(ORG.FEDERAL_ID,'') ELSE '2'+ISNULL(DBO.fn_GET_DECRYPTED_TEXT(P.SSN),'') END AS RECIPIENTS_ID, &#xD;&#xA;    &#xD;&#xA;    NULL AS PAYEE_NAME, &#xD;&#xA;    NULL AS PAYEE_ADDR_LINE_1,   &#xD;&#xA;    NULL AS PAYEE_ADDR_LINE_2,&#xD;&#xA;    NULL AS PAYEE_ADDR_CITY,&#xD;&#xA;    NULL AS  PAYEE_ADDR_STATE_VALUE,&#xD;&#xA;    NULL AS PAYEE_ADDR_ZIP_CODE,&#xD;&#xA;    NULL AS PAYEE_ADDR_LINE_3,&#xD;&#xA;    PAY1099R.age59_split_flag,&#xD;&#xA;    PAY1099R.CORRECTED_FLAG,&#xD;&#xA;    PAY1099R.AGE59_SPLIT_FLAG,&#xD;&#xA;    PAY1099R.TAX_YEAR,&#xD;&#xA;    FOREIGN_PROVINCE,&#xD;&#xA;    PAY1099R.ADDR_COUNTRY_VALUE,&#xD;&#xA;    ISNULL(P.MPI_PERSON_ID,ORG.MPI_ORG_ID) AS MPI_PERSON_ID,&#xD;&#xA;&#x9;LEN(&#xD;&#xA;&#x9;CASE&#x9;WHEN PAY1099R.ADDR_COUNTRY_VALUE IS NOT NULL AND PAY1099R.ADDR_COUNTRY_VALUE &lt;&gt; '0001' THEN UPPER(ISNULL(ADDR_CITY,'')+' '+ ISNULL(CV1.DESCRIPTION,ISNULL(FOREIGN_PROVINCE,'')) +' '+ISNULL(FOREIGN_POSTAL_CODE,'')+ ','+ ISNULL(CV2.DESCRIPTION,''))&#xD;&#xA;&#x9;&#x9;&#x9;ELSE UPPER(ISNULL(ADDR_CITY,'')) &#xD;&#xA;&#x9;&#x9;&#x9;END +&#xD;&#xA;    CASE&#x9;WHEN PAY1099R.ADDR_COUNTRY_VALUE IS NOT NULL AND PAY1099R.ADDR_COUNTRY_VALUE &lt;&gt; '0001' THEN ''&#xD;&#xA;&#x9;&#x9;&#x9;ELSE UPPER(ISNULL(PAY1099R.ADDR_STATE_VALUE,'')) &#xD;&#xA;&#x9;&#x9;&#x9;END +&#xD;&#xA;    CASE&#x9;WHEN PAY1099R.ADDR_COUNTRY_VALUE IS NOT NULL AND PAY1099R.ADDR_COUNTRY_VALUE &lt;&gt; '0001' THEN ''&#xD;&#xA;&#x9;&#x9;&#x9;ELSE ISNULL(ADDR_ZIP_CODE,'') &#xD;&#xA;&#x9;&#x9;&#x9;END&#xD;&#xA;&#x9;  ) AS ADDR_LENGTH  &#xD;&#xA;    &#xD;&#xA;FROM   SGT_PAYMENT_1099R PAY1099R WITH(NOLOCK)&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON P ON PAY1099R.PERSON_ID=P.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGT_ORGANIZATION ORG ON PAY1099R.ORG_ID=ORG.ORG_ID&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE CV1 WITH(NOLOCK) ON PAY1099R.ADDR_STATE_ID = CV1.CODE_ID AND PAY1099R.ADDR_STATE_VALUE = CV1.CODE_VALUE&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE CV2 WITH(NOLOCK) ON PAY1099R.ADDR_COUNTRY_ID = CV2.CODE_ID AND PAY1099R.ADDR_COUNTRY_VALUE = CV2.CODE_VALUE&#xD;&#xA;WHERE   PAY1099R.TAX_YEAR = @TAXYEAR AND PAY1099R.PLAN_IDENTIFIER_VALUE=@PLANIDENTIFIERVALUE AND ISNULL(PAY1099R.CORRECTED_FLAG,'') &lt;&gt; 'Y'&#xD;&#xA;ORDER BY PAY1099R.PAYMENT_1099R_ID">
      <parameters>
        <parameter ID="@TAXYEAR" sfwDataType="int" />
        <parameter ID="@PLANIDENTIFIERVALUE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="DeleteNeg1099r" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DELETE &#xD;&#xA;FROM SGT_PAYMENT_1099R_HISTORY_LINK WHERE PAYMENT_1099R_ID IN &#xD;&#xA;(SELECT PAYMENT_1099R_ID FROM SGT_PAYMENT_1099R &#xD;&#xA;WHERE ISNULL(GROSS_BENEFIT_AMOUNT,0) &lt;= 0 AND TAX_YEAR = @TAXYEAR)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;DELETE &#xD;&#xA;FROM SGT_PAYMENT_1099R WHERE ISNULL(GROSS_BENEFIT_AMOUNT,0) &lt;= 0 AND TAX_YEAR = @TAXYEAR ">
      <parameters>
        <parameter ID="@TAXYEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetLastProceed1099rProcReq" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT TOP 1 * FROM SGT_YEAR_END_PROCESS_REQUEST &#xD;&#xA;WHERE STATUS_VALUE='CMPL' &#xD;&#xA;            AND YEAR=@TAXYEAR &#xD;&#xA;            AND YEAR_END_PROCESS_VALUE &#xD;&#xA;            IN ('A99R','C99R') ORDER BY   PROCESSED_DATE DESC">
      <parameters>
        <parameter ID="@TAXYEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CreateTempTblCorrected1099r" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;---------------CREATING TEMP TABLE FOR CORRECTED 1099R TO STORE PAYMENT DETAILS---------&#xD;&#xA;&#xD;&#xA;CREATE TABLE [DBO].[TEMP_PAYMENT_DETAILS_CORRECTED_1099R](&#xD;&#xA; [CORRECT_PAYMENT_DETAILS_1099R_ID] [INT] IDENTITY(1,1) NOT NULL,&#xD;&#xA; [PAYEE_ACCOUNT_ID] [INT] NULL,&#xD;&#xA; [PAYMENT_HISTORY_HEADER_ID] [INT] NULL,&#xD;&#xA; [REIMBURSEMENT_DETAILS_ID] [INT] NULL,&#xD;&#xA; [PLAN_ID] [INT] NULL,&#xD;&#xA; [PERSON_ID] [INT] NULL,&#xD;&#xA; [OLD_PERSON_ID] [INT] NULL,&#xD;&#xA; [ORG_ID] [INT] NULL,&#xD;&#xA; [PAYMENT_DATE] [DATETIME] NULL,&#xD;&#xA; [ROLLOVER_PAYMENT_FLAG] [VARCHAR](1) NULL,&#xD;&#xA; [GROSS_AMOUNT] [DECIMAL](38, 2) NULL,&#xD;&#xA; [TAXABLE_AMOUNT] [DECIMAL](38, 2) NULL,&#xD;&#xA; [CAPITAL_GAIN] [DECIMAL](38, 2) NULL,&#xD;&#xA; [NON_TAXABLE_AMOUNT] [DECIMAL](38, 2) NULL,&#xD;&#xA; [FED_TAX_AMOUNT] [DECIMAL](38, 2) NULL,&#xD;&#xA; [STATE_TAX_AMOUNT] [DECIMAL](38, 2) NULL,&#xD;&#xA; [NAME] [VARCHAR](153) NULL,&#xD;&#xA; [AGE_ON_BENEFIT_BEGIN_DATE] [NUMERIC](18, 6) NULL,&#xD;&#xA; [AGE_ON_PAYMENT_DATE] [NUMERIC](18, 6) NULL,&#xD;&#xA; [DISTRIBUTION_CODE] [VARCHAR](2) NULL,&#xD;&#xA; [SSN] [VARCHAR](256) NULL,&#xD;&#xA; [AGE59_SPLIT_FLAG] [VARCHAR](1) NULL,&#xD;&#xA; [IDENTIFIER_VALUE] [VARCHAR](4) NULL&#xD;&#xA;) ON [PRIMARY]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;---------------------- QUERY 1   Payments changed to 3 statuses after --------------------------------&#xD;&#xA;&#xD;&#xA;INSERT INTO TEMP_PAYMENT_DETAILS_CORRECTED_1099R&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT  PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;  PHH.PAYMENT_HISTORY_HEADER_ID ,&#xD;&#xA;  NULL AS REIMBURSMENT_DETAILS_ID,&#xD;&#xA;  PHH.PLAN_ID,&#xD;&#xA;  PA.PERSON_ID,&#xD;&#xA;  NULL,  &#xD;&#xA;  CASE WHEN PHD.ROLLOVER_FLAG = 'N' &#xD;&#xA;       THEN      &#xD;&#xA;      CASE WHEN PA.ORG_ID IS NOT NULL &#xD;&#xA;           THEN PA.ORG_ID &#xD;&#xA;           ELSE NULL &#xD;&#xA;           END &#xD;&#xA;       ELSE PHH.ORG_ID &#xD;&#xA;       END &#xD;&#xA;       AS ORG_ID,&#xD;&#xA;  PHH.PAYMENT_DATE,&#xD;&#xA;  PHD.ROLLOVER_FLAG AS ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;  PHD.GROSS_AMOUNT,&#xD;&#xA;  PHD.TAXABLE_AMOUNT,&#xD;&#xA;  PHD.CAPITAL_GAIN,&#xD;&#xA;  PHD.NON_TAXABLE_AMOUNT,&#xD;&#xA;  PHD.FED_TAX_AMOUNT,&#xD;&#xA;     PHD.STATE_TAX_AMOUNT,&#xD;&#xA;  CASE WHEN PA.PERSON_ID IS NOT NULL &#xD;&#xA;       THEN &#xD;&#xA;     ISNULL(PER.LAST_NAME,'') +' '+ &#xD;&#xA;     ISNULL(PER.FIRST_NAME,'') +' '+&#xD;&#xA;     ISNULL(PER.MIDDLE_NAME,'')      &#xD;&#xA;    ELSE O.ORG_NAME END &#xD;&#xA;     AS NAME,&#xD;&#xA;    &#xD;&#xA;  CASE WHEN PER.PERSON_ID IS NULL &#xD;&#xA;    THEN 0 &#xD;&#xA;    ELSE (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),PA.BENEFIT_BEGIN_DATE))/365.25 &#xD;&#xA;    END &#xD;&#xA;  AS AGE_ON_BENEFIT_BEGIN_DATE,&#xD;&#xA;    &#xD;&#xA;  CASE WHEN PER.PERSON_ID IS NULL &#xD;&#xA;    THEN 0 &#xD;&#xA;    ELSE (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25&#xD;&#xA;    END &#xD;&#xA;     AS AGE_ON_PAYMENT_DATE,&#xD;&#xA;    &#xD;&#xA;CASE    WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DSBL' OR (BADSBL.BENEFIT_APPLICATION_ID IS NOT NULL AND BADSBL.DISABILITY_CONVERSION_DATE IS NOT NULL AND BADSBL.RETIREMENT_DATE&lt;=PHH.PAYMENT_DATE )&#xD;&#xA;         OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' AND ISNULL(DCH.IS_PARTICIPANT_DISABLED,'N') ='Y') OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL AND DRO.IS_PARTICIPANT_DISABLED_FLAG='Y')))&#xD;&#xA;          THEN '3' -- IAP CASE PENDING HERE&#xD;&#xA;          &#xD;&#xA;          &#xD;&#xA;    WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DDPR' OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DDPT') &#xD;&#xA;          THEN '4' + CASE WHEN (PBXR.BENEFIT_OPTION_VALUE = 'LUMP' AND dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH) &lt;= '01/01/1936')   &#xD;&#xA;                          THEN 'A'&#xD;&#xA;                          WHEN PHD.ROLLOVER_FLAG ='Y'&#xD;&#xA;                          THEN 'G'&#xD;&#xA;                          ELSE ''&#xD;&#xA;                          END&#xD;&#xA;     &#xD;&#xA;       WHEN(((((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' AND BA.DRO_APPLICATION_ID IS NULL ) OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT') AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &gt;= 59.5)&#xD;&#xA;                    OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL)) AND DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE)/365.25 &gt;= 59.5))&#xD;&#xA;              AND PHD.ROLLOVER_FLAG ='N') &#xD;&#xA;        THEN '7' +  CASE WHEN (PBXR.BENEFIT_OPTION_VALUE = 'LUMP' AND  ((((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' AND BA.DRO_APPLICATION_ID IS NULL) OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT') AND dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH) &lt;= '01/01/1936') &#xD;&#xA;                              OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL)) AND dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH) &lt;= '01/01/1936')))&#xD;&#xA;                   THEN 'A'&#xD;&#xA;                   ELSE ''&#xD;&#xA;                   END                    &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;    WHEN (((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NULL AND PBXR.BENEFIT_OPTION_VALUE!='LUMP') AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &lt; 59.5)  &#xD;&#xA;     OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL AND PBXR.BENEFIT_OPTION_VALUE!='LUMP')) AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &lt; 59.5)&#xD;&#xA;           OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND PA1.PAYEE_ACCOUNT_ID IS NOT NULL AND PA1.BENEFIT_BEGIN_DATE&lt;=PA.BENEFIT_BEGIN_DATE AND PA1.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT')) &#xD;&#xA;           AND PHD.ROLLOVER_FLAG='N')&#xD;&#xA;          THEN '2'&#xD;&#xA;         &#xD;&#xA;    WHEN PHD.ROLLOVER_FLAG='Y'      &#xD;&#xA;         THEN 'G'&#xD;&#xA;     &#xD;&#xA;    WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND PBXR.BENEFIT_OPTION_VALUE='LUMP' AND PHD.ROLLOVER_FLAG='N' AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &lt; 59.5)     &#xD;&#xA;          THEN '1'      &#xD;&#xA;                   &#xD;&#xA;    ELSE 'ZZ'                                                     &#xD;&#xA;    END &#xD;&#xA;     AS DISTRIBUTION_CODE,    &#xD;&#xA;  PER.SSN,&#xD;&#xA;  CASE WHEN PER.PERSON_ID IS NULL &#xD;&#xA;       THEN 'N'&#xD;&#xA;       ELSE CASE WHEN (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &lt; 59.5&#xD;&#xA;              THEN 'N' &#xD;&#xA;           ELSE CASE WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA'  &#xD;&#xA;                     THEN 'N' &#xD;&#xA;            ELSE 'Y' &#xD;&#xA;            END &#xD;&#xA;              END &#xD;&#xA;       END&#xD;&#xA;  AS AGE59_SPLIT_FLAG,&#xD;&#xA;  'CHNG' AS IDENTIFIER_VALUE&#xD;&#xA;FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;  &#xD;&#xA;LEFT JOIN &#xD;&#xA;(&#xD;&#xA; SELECT PHD.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA; &#xD;&#xA;  SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N'  &#xD;&#xA;        THEN &#xD;&#xA;        ISNULL(PHD.AMOUNT,0.0)&#xD;&#xA;        WHEN ALLOW_ROLLOVER_CODE_VALUE = 'RRED' &#xD;&#xA;        THEN&#xD;&#xA;     ISNULL(PHD.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;        ELSE 0 &#xD;&#xA;        END&#xD;&#xA;   )  AS GROSS_AMOUNT,&#xD;&#xA;   &#xD;&#xA;  SUM(CASE  WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N'  AND TAXABLE_ITEM_FLAG = 'Y' &#xD;&#xA;         THEN &#xD;&#xA;         CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET'&#xD;&#xA;           THEN 0.00&#xD;&#xA;           ELSE ISNULL(PHD.AMOUNT,0.0) &#xD;&#xA;           END&#xD;&#xA;      WHEN ALLOW_ROLLOVER_CODE_VALUE = 'RRED' AND TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;      THEN&#xD;&#xA;      ISNULL(PHD.AMOUNT,0.0) * PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;      ELSE 0 &#xD;&#xA;      END&#xD;&#xA;   )  AS TAXABLE_AMOUNT,&#xD;&#xA;   &#xD;&#xA;  0.0    AS CAPITAL_GAIN, -- Remove &#xD;&#xA;  &#xD;&#xA;  SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N'  AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y' &#xD;&#xA;        THEN &#xD;&#xA;        CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET'&#xD;&#xA;           THEN 0.00&#xD;&#xA;           ELSE ISNULL(PHD.AMOUNT,0.0) &#xD;&#xA;           END&#xD;&#xA;        WHEN ALLOW_ROLLOVER_CODE_VALUE = 'RRED' AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y'&#xD;&#xA;        THEN&#xD;&#xA;     ISNULL(PHD.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;        ELSE 0 &#xD;&#xA;        END&#xD;&#xA;   )  AS NON_TAXABLE_AMOUNT,&#xD;&#xA;   &#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX'&#xD;&#xA;        THEN &#xD;&#xA;     ISNULL(PHD.AMOUNT,0.0) &#xD;&#xA;        ELSE 0 &#xD;&#xA;        END&#xD;&#xA;   )  AS FED_TAX_AMOUNT,&#xD;&#xA;   &#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;     PIT.ACH_CHECK_GROUP_VALUE = 'STTX'&#xD;&#xA;        THEN &#xD;&#xA;     ISNULL(PHD.AMOUNT,0.0) &#xD;&#xA;        ELSE 0 &#xD;&#xA;        END&#xD;&#xA;   )  AS STATE_TAX_AMOUNT,&#xD;&#xA;   &#xD;&#xA;  CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET' &#xD;&#xA;    THEN 'Y' &#xD;&#xA;    ELSE 'N' &#xD;&#xA;    END &#xD;&#xA;    AS ROLLOVER_FLAG&#xD;&#xA; &#xD;&#xA; FROM SGT_PAYMENT_HISTORY_DETAIL PHD    &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT PA ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PLAN_BENEFIT_XR PBXR ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA; WHERE YEAR(PHH.PAYMENT_DATE) = @TAXYEAR&#xD;&#xA; GROUP BY PHD.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA; CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET' THEN 'Y' ELSE 'N' END&#xD;&#xA;)AS PHD ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_PLAN_BENEFIT_XR PBXR ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBACC ON PBACC.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHDIS ON PHDIS.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN SGT_PERSON PARTI_PER ON PARTI_PER.PERSON_ID = PBACC.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN (SELECT PLAN_ID,B.* FROM SGT_PAYEE_ACCOUNT B INNER JOIN SGT_PLAN_BENEFIT_XR A ON A.PLAN_BENEFIT_ID=B.PLAN_BENEFIT_ID) PA1 &#xD;&#xA;   ON PA1.PERSON_ID=PA.PERSON_ID AND PA1.PAYEE_ACCOUNT_ID!=PA.PAYEE_ACCOUNT_ID AND PA1.PLAN_ID = PBXR.PLAN_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BADSBL ON BADSBL.PERSON_ID = PA.PERSON_ID AND BADSBL.BENEFIT_TYPE_VALUE='DSBL' AND BADSBL.APPLICATION_STATUS_VALUE='APRD'&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_DETAIL BAD ON BAD.BENEFIT_APPLICATION_DETAIL_ID = PA.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA ON BAD.BENEFIT_APPLICATION_ID = BA.BENEFIT_APPLICATION_ID AND BA.APPLICATION_STATUS_VALUE='APRD'&#xD;&#xA;LEFT OUTER JOIN SGT_DRO_BENEFIT_DETAILS DBD ON DBD.DRO_BENEFIT_ID = PA.DRO_APPLICATION_DETAIL_ID&#xD;&#xA;LEFT OUTER JOIN SGT_DRO_APPLICATION DAPP ON DAPP.DRO_APPLICATION_ID = DBD.DRO_APPLICATION_ID AND DAPP.DRO_STATUS_VALUE='QLFD'&#xD;&#xA;LEFT OUTER JOIN SGT_DRO_APPLICATION DRO ON DRO.DRO_APPLICATION_ID=BA.DRO_APPLICATION_ID AND DRO.DRO_STATUS_VALUE='QLFD'&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN SGT_QDRO_CALCULATION_DETAIL DCD ON PA.DRO_CALCULATION_DETAIL_ID = DCD.QDRO_CALCULATION_DETAIL_ID -- 1099R 2015&#xD;&#xA;LEFT OUTER JOIN SGT_QDRO_CALCULATION_HEADER DCH ON DCD.QDRO_CALCULATION_HEADER_ID = DCH.QDRO_CALCULATION_HEADER_ID  AND DCH.STATUS_VALUE='APPR' -- 1099R 2015&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON PER ON PA.PERSON_ID = PER.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGT_ORGANIZATION O ON PHH.ORG_ID = O.ORG_ID&#xD;&#xA;WHERE YEAR(PHH.PAYMENT_DATE) = @TAXYEAR AND &#xD;&#xA;PHDIS.DISTRIBUTION_STATUS_VALUE IN ('CNLD','CDRE','RCMD')&#xD;&#xA;AND (PBXR.PLAN_ID IN (2,3,4,6,7,8,9) OR (PBXR.PLAN_ID = 1 AND PBXR.BENEFIT_OPTION_VALUE='LUMP'))&#xD;&#xA;AND  @REFERENCE_DATE &lt; (SELECT TOP(1) TRANSACTION_DATE FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY P WHERE P.PAYMENT_HISTORY_DISTRIBUTION_ID = PHDIS.PAYMENT_HISTORY_DISTRIBUTION_ID ORDER BY TRANSACTION_DATE DESC)&#xD;&#xA; &#xD;&#xA; &#xD;&#xA;UNION  ALL&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT  PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;  PHH.PAYMENT_HISTORY_HEADER_ID ,&#xD;&#xA;  NULL AS REIMBURSMENT_DETAILS_ID,&#xD;&#xA;  PHH.PLAN_ID,&#xD;&#xA;  PA.PERSON_ID,&#xD;&#xA;  SSNM.OLD_PERSON_ID,  &#xD;&#xA;  CASE WHEN PHD.ROLLOVER_FLAG = 'N' &#xD;&#xA;       THEN      &#xD;&#xA;      CASE WHEN PA.ORG_ID IS NOT NULL &#xD;&#xA;           THEN PA.ORG_ID &#xD;&#xA;           ELSE NULL &#xD;&#xA;           END &#xD;&#xA;       ELSE PHH.ORG_ID &#xD;&#xA;       END &#xD;&#xA;       AS ORG_ID,&#xD;&#xA;  PHH.PAYMENT_DATE,&#xD;&#xA;  PHD.ROLLOVER_FLAG AS ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;  PHD.GROSS_AMOUNT,&#xD;&#xA;  PHD.TAXABLE_AMOUNT,&#xD;&#xA;  PHD.CAPITAL_GAIN,&#xD;&#xA;  PHD.NON_TAXABLE_AMOUNT,&#xD;&#xA;  PHD.FED_TAX_AMOUNT,&#xD;&#xA;     PHD.STATE_TAX_AMOUNT,&#xD;&#xA;  CASE WHEN PA.PERSON_ID IS NOT NULL &#xD;&#xA;       THEN &#xD;&#xA;           ISNULL(PER.FIRST_NAME,'') +' '+&#xD;&#xA;     ISNULL(PER.LAST_NAME,'') +' '&#xD;&#xA;     &#xD;&#xA;--     ISNULL(PER.MIDDLE_NAME,'')      &#xD;&#xA;    ELSE O.ORG_NAME END &#xD;&#xA;     AS NAME,&#xD;&#xA;    &#xD;&#xA;  CASE WHEN PER.PERSON_ID IS NULL &#xD;&#xA;    THEN 0 &#xD;&#xA;    ELSE (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),PA.BENEFIT_BEGIN_DATE))/365.25 &#xD;&#xA;    END &#xD;&#xA;  AS AGE_ON_BENEFIT_BEGIN_DATE,&#xD;&#xA;    &#xD;&#xA;  CASE WHEN PER.PERSON_ID IS NULL &#xD;&#xA;    THEN 0 &#xD;&#xA;    ELSE (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25&#xD;&#xA;    END &#xD;&#xA;     AS AGE_ON_PAYMENT_DATE,&#xD;&#xA;    &#xD;&#xA;CASE    WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DSBL' OR (BA.BENEFIT_APPLICATION_ID IS NOT NULL AND BA.DISABILITY_CONVERSION_DATE IS NOT NULL AND BA.RETIREMENT_DATE&lt;=PHH.PAYMENT_DATE )&#xD;&#xA;         OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' AND ISNULL(DCH.IS_PARTICIPANT_DISABLED,'N') ='Y') OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL AND DRO.IS_PARTICIPANT_DISABLED_FLAG='Y')))&#xD;&#xA;          THEN '3' -- IAP CASE PENDING HERE&#xD;&#xA;          &#xD;&#xA;          &#xD;&#xA;    WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DDPR' OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DDPT') &#xD;&#xA;          THEN '4' + CASE WHEN (PBXR.BENEFIT_OPTION_VALUE = 'LUMP' AND dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH) &lt;= '01/01/1936')   &#xD;&#xA;                          THEN 'A'&#xD;&#xA;                          WHEN PHD.ROLLOVER_FLAG ='Y'&#xD;&#xA;                          THEN 'G'&#xD;&#xA;                          ELSE ''&#xD;&#xA;                          END&#xD;&#xA;     &#xD;&#xA;       WHEN(((((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' AND BA.DRO_APPLICATION_ID IS NULL ) OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT') AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &gt;= 59.5)&#xD;&#xA;                    OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL)) AND DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE)/365.25 &gt;= 59.5))&#xD;&#xA;              AND PHD.ROLLOVER_FLAG ='N') &#xD;&#xA;        THEN '7' +  CASE WHEN (PBXR.BENEFIT_OPTION_VALUE = 'LUMP' AND  ((((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' AND BA.DRO_APPLICATION_ID IS NULL) OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT') AND dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH) &lt;= '01/01/1936') &#xD;&#xA;                              OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL)) AND dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH) &lt;= '01/01/1936')))&#xD;&#xA;                   THEN 'A'&#xD;&#xA;                   ELSE ''&#xD;&#xA;                   END                    &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;    WHEN (((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NULL AND PBXR.BENEFIT_OPTION_VALUE!='LUMP') AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &lt; 59.5)  &#xD;&#xA;     OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL AND PBXR.BENEFIT_OPTION_VALUE!='LUMP')) AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &lt; 59.5)&#xD;&#xA;           OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND PA1.PAYEE_ACCOUNT_ID IS NOT NULL AND PA1.BENEFIT_BEGIN_DATE&lt;=PA.BENEFIT_BEGIN_DATE AND PA1.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT')) &#xD;&#xA;           AND PHD.ROLLOVER_FLAG='N')&#xD;&#xA;          THEN '2'&#xD;&#xA;         &#xD;&#xA;    WHEN PHD.ROLLOVER_FLAG='Y'      &#xD;&#xA;         THEN 'G'&#xD;&#xA;     &#xD;&#xA;    WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND PBXR.BENEFIT_OPTION_VALUE='LUMP' AND PHD.ROLLOVER_FLAG='N' AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &lt; 59.5)     &#xD;&#xA;          THEN '1'      &#xD;&#xA;                   &#xD;&#xA;    ELSE 'ZZ'                                                     &#xD;&#xA;    END &#xD;&#xA;     AS DISTRIBUTION_CODE,    &#xD;&#xA;  PER.SSN,&#xD;&#xA;  CASE WHEN PER.PERSON_ID IS NULL &#xD;&#xA;       THEN 'N'&#xD;&#xA;       ELSE CASE WHEN (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &lt; 59.5&#xD;&#xA;              THEN 'N' &#xD;&#xA;           ELSE CASE WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA'  &#xD;&#xA;                     THEN 'N' &#xD;&#xA;            ELSE 'Y' &#xD;&#xA;            END &#xD;&#xA;              END &#xD;&#xA;       END&#xD;&#xA;  AS AGE59_SPLIT_FLAG,&#xD;&#xA;  'MERG' AS IDENTIFIER_VALUE&#xD;&#xA;FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;  &#xD;&#xA;INNER JOIN &#xD;&#xA;(&#xD;&#xA; SELECT PHD.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA; &#xD;&#xA;  SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N'  &#xD;&#xA;        THEN &#xD;&#xA;        ISNULL(PHD.AMOUNT,0.0)&#xD;&#xA;        WHEN ALLOW_ROLLOVER_CODE_VALUE = 'RRED' &#xD;&#xA;        THEN&#xD;&#xA;     ISNULL(PHD.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;        ELSE 0 &#xD;&#xA;        END&#xD;&#xA;   )  AS GROSS_AMOUNT,&#xD;&#xA;   &#xD;&#xA;  SUM(CASE  WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N'  AND TAXABLE_ITEM_FLAG = 'Y' &#xD;&#xA;         THEN &#xD;&#xA;         CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET'&#xD;&#xA;           THEN 0.00&#xD;&#xA;           ELSE ISNULL(PHD.AMOUNT,0.0) &#xD;&#xA;           END&#xD;&#xA;      WHEN ALLOW_ROLLOVER_CODE_VALUE = 'RRED' AND TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;      THEN&#xD;&#xA;      ISNULL(PHD.AMOUNT,0.0) * PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;      ELSE 0 &#xD;&#xA;      END&#xD;&#xA;   )  AS TAXABLE_AMOUNT,&#xD;&#xA;   &#xD;&#xA;  0.0    AS CAPITAL_GAIN, -- Remove &#xD;&#xA;  &#xD;&#xA;  SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N'  AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y' &#xD;&#xA;        THEN &#xD;&#xA;        CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET'&#xD;&#xA;           THEN 0.00&#xD;&#xA;           ELSE ISNULL(PHD.AMOUNT,0.0) &#xD;&#xA;           END&#xD;&#xA;        WHEN ALLOW_ROLLOVER_CODE_VALUE = 'RRED' AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y'&#xD;&#xA;        THEN&#xD;&#xA;     ISNULL(PHD.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;        ELSE 0 &#xD;&#xA;        END&#xD;&#xA;   )  AS NON_TAXABLE_AMOUNT,&#xD;&#xA;   &#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX'&#xD;&#xA;        THEN &#xD;&#xA;     ISNULL(PHD.AMOUNT,0.0) &#xD;&#xA;        ELSE 0 &#xD;&#xA;        END&#xD;&#xA;   )  AS FED_TAX_AMOUNT,&#xD;&#xA;   &#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;     PIT.ACH_CHECK_GROUP_VALUE = 'STTX'&#xD;&#xA;        THEN &#xD;&#xA;     ISNULL(PHD.AMOUNT,0.0) &#xD;&#xA;        ELSE 0 &#xD;&#xA;        END&#xD;&#xA;   )  AS STATE_TAX_AMOUNT,&#xD;&#xA;   &#xD;&#xA;  CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET' &#xD;&#xA;    THEN 'Y' &#xD;&#xA;    ELSE 'N' &#xD;&#xA;    END &#xD;&#xA;    AS ROLLOVER_FLAG&#xD;&#xA; &#xD;&#xA; FROM SGT_PAYMENT_HISTORY_DETAIL PHD    &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT PA ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PLAN_BENEFIT_XR PBXR ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA; WHERE YEAR(PHH.PAYMENT_DATE) = @TAXYEAR&#xD;&#xA; GROUP BY PHD.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA; CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET' THEN 'Y' ELSE 'N' END&#xD;&#xA;)AS PHD ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_PLAN_BENEFIT_XR PBXR ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBACC ON PBACC.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHDIS ON PHDIS.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN SGT_PERSON PARTI_PER ON PARTI_PER.PERSON_ID = PBACC.PERSON_ID&#xD;&#xA;INNER JOIN SGT_SSN_MERGE_HISTORY SSNM  ON SSNM.NEW_PERSON_ID = PA.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_1099R TAX ON TAX.PERSON_ID = SSNM.OLD_PERSON_ID&#xD;&#xA;LEFT OUTER JOIN (SELECT PLAN_ID,B.* FROM SGT_PAYEE_ACCOUNT B INNER JOIN SGT_PLAN_BENEFIT_XR A ON A.PLAN_BENEFIT_ID=B.PLAN_BENEFIT_ID) PA1 &#xD;&#xA;   ON PA1.PERSON_ID=PA.PERSON_ID AND PA1.PAYEE_ACCOUNT_ID!=PA.PAYEE_ACCOUNT_ID AND PA1.PLAN_ID = PBXR.PLAN_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_DETAIL BAD ON BAD.BENEFIT_APPLICATION_DETAIL_ID = PA.BENEFIT_APPLICATION_DETAIL_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA ON BAD.BENEFIT_APPLICATION_ID = BA.BENEFIT_APPLICATION_ID AND BA.APPLICATION_STATUS_VALUE='APRD' &#xD;&#xA;LEFT OUTER JOIN SGT_DRO_BENEFIT_DETAILS DBD ON DBD.DRO_BENEFIT_ID = PA.DRO_APPLICATION_DETAIL_ID&#xD;&#xA;LEFT OUTER JOIN SGT_DRO_APPLICATION DAPP ON DAPP.DRO_APPLICATION_ID = DBD.DRO_APPLICATION_ID AND DAPP.DRO_STATUS_VALUE='QLFD'&#xD;&#xA;LEFT OUTER JOIN SGT_DRO_APPLICATION DRO ON DRO.DRO_APPLICATION_ID=BA.DRO_APPLICATION_ID AND DRO.DRO_STATUS_VALUE='QLFD'&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN SGT_QDRO_CALCULATION_DETAIL DCD ON PA.DRO_CALCULATION_DETAIL_ID = DCD.QDRO_CALCULATION_DETAIL_ID -- 1099R 2015&#xD;&#xA;LEFT OUTER JOIN SGT_QDRO_CALCULATION_HEADER DCH ON DCD.QDRO_CALCULATION_HEADER_ID = DCH.QDRO_CALCULATION_HEADER_ID  AND DCH.STATUS_VALUE='APPR' -- 1099R 2015&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON PER ON PA.PERSON_ID = PER.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGT_ORGANIZATION O ON PHH.ORG_ID = O.ORG_ID&#xD;&#xA;WHERE YEAR(PHH.PAYMENT_DATE) = @TAXYEAR&#xD;&#xA;    AND PHDIS.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD')&#xD;&#xA; AND (PBXR.PLAN_ID IN (2,3,4,6,7,8,9) OR (PBXR.PLAN_ID = 1 AND PBXR.BENEFIT_OPTION_VALUE='LUMP'))&#xD;&#xA; AND  @REFERENCE_DATE &lt; SSNM.MERGE_DATE &#xD;&#xA;&#xD;&#xA; &#xD;&#xA;UNION ALL &#xD;&#xA;&#xD;&#xA;SELECT  PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;  PHH.PAYMENT_HISTORY_HEADER_ID ,&#xD;&#xA;  NULL AS REIMBURSMENT_DETAILS_ID,&#xD;&#xA;  PHH.PLAN_ID,&#xD;&#xA;  PA.PERSON_ID,&#xD;&#xA;  NULL,  &#xD;&#xA;  CASE WHEN PHD.ROLLOVER_FLAG = 'N' &#xD;&#xA;       THEN      &#xD;&#xA;      CASE WHEN PA.ORG_ID IS NOT NULL &#xD;&#xA;           THEN PA.ORG_ID &#xD;&#xA;           ELSE NULL &#xD;&#xA;           END &#xD;&#xA;       ELSE PHH.ORG_ID &#xD;&#xA;       END &#xD;&#xA;       AS ORG_ID,&#xD;&#xA;  PHH.PAYMENT_DATE,&#xD;&#xA;  PHD.ROLLOVER_FLAG AS ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;  PHD.GROSS_AMOUNT,&#xD;&#xA;  PHD.TAXABLE_AMOUNT,&#xD;&#xA;  PHD.CAPITAL_GAIN,&#xD;&#xA;  PHD.NON_TAXABLE_AMOUNT,&#xD;&#xA;  PHD.FED_TAX_AMOUNT,&#xD;&#xA;     PHD.STATE_TAX_AMOUNT,&#xD;&#xA;  CASE WHEN PA.PERSON_ID IS NOT NULL &#xD;&#xA;       THEN &#xD;&#xA;     ISNULL(PER.LAST_NAME,'') +' '+ &#xD;&#xA;     ISNULL(PER.FIRST_NAME,'') +' '+&#xD;&#xA;     ISNULL(PER.MIDDLE_NAME,'')      &#xD;&#xA;    ELSE O.ORG_NAME END &#xD;&#xA;     AS NAME,&#xD;&#xA;    &#xD;&#xA;  CASE WHEN PER.PERSON_ID IS NULL &#xD;&#xA;    THEN 0 &#xD;&#xA;    ELSE (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),PA.BENEFIT_BEGIN_DATE))/365.25 &#xD;&#xA;    END &#xD;&#xA;  AS AGE_ON_BENEFIT_BEGIN_DATE,&#xD;&#xA;    &#xD;&#xA;  CASE WHEN PER.PERSON_ID IS NULL &#xD;&#xA;    THEN 0 &#xD;&#xA;    ELSE (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25&#xD;&#xA;    END &#xD;&#xA;     AS AGE_ON_PAYMENT_DATE,&#xD;&#xA;    &#xD;&#xA;     CASE  WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DSBL' OR (BA.BENEFIT_APPLICATION_ID IS NOT NULL AND BA.DISABILITY_CONVERSION_DATE IS NOT NULL AND BA.RETIREMENT_DATE&lt;=PHH.PAYMENT_DATE )&#xD;&#xA;         OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' AND DAPP.IS_PARTICIPANT_DISABLED_FLAG='Y') OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL AND DRO.IS_PARTICIPANT_DISABLED_FLAG='Y')))&#xD;&#xA;          THEN '3' -- IAP CASE PENDING HERE&#xD;&#xA;          &#xD;&#xA;   WHEN (((((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' AND BA.DRO_APPLICATION_ID IS NULL) OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT') AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &gt;= 59.5)&#xD;&#xA;                    OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL)) AND DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE)/365.25 &gt;= 59.5))&#xD;&#xA;              AND PHD.ROLLOVER_FLAG ='N') &#xD;&#xA;        THEN '7' +  CASE WHEN (PBXR.BENEFIT_OPTION_VALUE = 'LUMP' AND  ((((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' AND BA.DRO_APPLICATION_ID IS NULL) OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT') AND dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH) &lt;= '01/01/1936') &#xD;&#xA;                              OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE='QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL)) AND dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH) &lt;= '01/01/1936')))&#xD;&#xA;                   THEN 'A'&#xD;&#xA;                   ELSE ''&#xD;&#xA;                   END  &#xD;&#xA;          &#xD;&#xA;    WHEN (((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NULL AND PBXR.BENEFIT_OPTION_VALUE!='LUMP') AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &lt; 59.5)  &#xD;&#xA;     OR ((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'QDRO' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND BA.DRO_APPLICATION_ID IS NOT NULL AND PBXR.BENEFIT_OPTION_VALUE!='LUMP')) AND (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &lt; 59.5)&#xD;&#xA;           OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' AND PA1.PAYEE_ACCOUNT_ID IS NOT NULL AND PA1.BENEFIT_BEGIN_DATE&lt;=PA.BENEFIT_BEGIN_DATE AND PA1.BENEFIT_ACCOUNT_TYPE_VALUE = 'RTMT'))&#xD;&#xA;           AND PHD.ROLLOVER_FLAG='N')&#xD;&#xA;          THEN '2'         &#xD;&#xA;         &#xD;&#xA;    WHEN PHD.ROLLOVER_FLAG='Y'      &#xD;&#xA;         THEN 'G'       &#xD;&#xA;                   &#xD;&#xA;    ELSE 'ZZ'                                                     &#xD;&#xA;    END &#xD;&#xA;     AS DISTRIBUTION_CODE,    &#xD;&#xA;  PER.SSN,&#xD;&#xA;  CASE WHEN PER.PERSON_ID IS NULL &#xD;&#xA;       THEN 'N'&#xD;&#xA;       ELSE CASE WHEN (DATEDIFF(D,dbo.fn_GET_DECRYPTED_VALUE(PARTI_PER.DATE_OF_BIRTH),PHH.PAYMENT_DATE))/365.25 &lt; 59.5&#xD;&#xA;              THEN 'N' &#xD;&#xA;           ELSE CASE WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA'  &#xD;&#xA;                     THEN 'N' &#xD;&#xA;            ELSE 'Y' &#xD;&#xA;            END &#xD;&#xA;              END &#xD;&#xA;       END&#xD;&#xA;  AS AGE59_SPLIT_FLAG,&#xD;&#xA;  'DSBL' AS IDENTIFIER_VALUE&#xD;&#xA;FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;  &#xD;&#xA;INNER JOIN &#xD;&#xA;(&#xD;&#xA; SELECT PHD.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA; &#xD;&#xA;  SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N'  &#xD;&#xA;        THEN &#xD;&#xA;        ISNULL(PHD.AMOUNT,0.0)&#xD;&#xA;        WHEN ALLOW_ROLLOVER_CODE_VALUE = 'RRED' &#xD;&#xA;        THEN&#xD;&#xA;     ISNULL(PHD.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;        ELSE 0 &#xD;&#xA;        END&#xD;&#xA;   )  AS GROSS_AMOUNT,&#xD;&#xA;   &#xD;&#xA;  SUM(CASE  WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N'  AND TAXABLE_ITEM_FLAG = 'Y' &#xD;&#xA;         THEN &#xD;&#xA;         CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET'&#xD;&#xA;           THEN 0.00&#xD;&#xA;           ELSE ISNULL(PHD.AMOUNT,0.0) &#xD;&#xA;           END&#xD;&#xA;      WHEN ALLOW_ROLLOVER_CODE_VALUE = 'RRED' AND TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;      THEN&#xD;&#xA;      ISNULL(PHD.AMOUNT,0.0) * PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;      ELSE 0 &#xD;&#xA;      END&#xD;&#xA;   )  AS TAXABLE_AMOUNT,&#xD;&#xA;   &#xD;&#xA;  0.0    AS CAPITAL_GAIN, -- Remove &#xD;&#xA;  &#xD;&#xA;  SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N'  AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y' &#xD;&#xA;        THEN &#xD;&#xA;        CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET'&#xD;&#xA;           THEN 0.00&#xD;&#xA;           ELSE ISNULL(PHD.AMOUNT,0.0) &#xD;&#xA;           END&#xD;&#xA;        WHEN ALLOW_ROLLOVER_CODE_VALUE = 'RRED' AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y'&#xD;&#xA;        THEN&#xD;&#xA;     ISNULL(PHD.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;        ELSE 0 &#xD;&#xA;        END&#xD;&#xA;   )  AS NON_TAXABLE_AMOUNT,&#xD;&#xA;   &#xD;&#xA;  SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX'&#xD;&#xA;        THEN &#xD;&#xA;     ISNULL(PHD.AMOUNT,0.0) &#xD;&#xA;        ELSE 0 &#xD;&#xA;        END&#xD;&#xA;   )  AS FED_TAX_AMOUNT,&#xD;&#xA;   &#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;     PIT.ACH_CHECK_GROUP_VALUE = 'STTX'&#xD;&#xA;        THEN &#xD;&#xA;     ISNULL(PHD.AMOUNT,0.0) &#xD;&#xA;        ELSE 0 &#xD;&#xA;        END&#xD;&#xA;   )  AS STATE_TAX_AMOUNT,&#xD;&#xA;   &#xD;&#xA;  CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET' &#xD;&#xA;    THEN 'Y' &#xD;&#xA;    ELSE 'N' &#xD;&#xA;    END &#xD;&#xA;    AS ROLLOVER_FLAG&#xD;&#xA; &#xD;&#xA; FROM SGT_PAYMENT_HISTORY_DETAIL PHD    &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT PA ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PLAN_BENEFIT_XR PBXR ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA; WHERE YEAR(PHH.PAYMENT_DATE) = @TAXYEAR&#xD;&#xA; GROUP BY PHD.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA; CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET' THEN 'Y' ELSE 'N' END&#xD;&#xA;)AS PHD ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_PLAN_BENEFIT_XR PBXR ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBACC ON PBACC.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHDIS ON PHDIS.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN SGT_PERSON PARTI_PER ON PARTI_PER.PERSON_ID = PBACC.PERSON_ID&#xD;&#xA;INNER JOIN (SELECT PLAN_ID,B.* FROM SGT_PAYEE_ACCOUNT B INNER JOIN SGT_PLAN_BENEFIT_XR A ON A.PLAN_BENEFIT_ID=B.PLAN_BENEFIT_ID) PA1 &#xD;&#xA;   ON PA1.PERSON_ID=PA.PERSON_ID AND PA1.PAYEE_ACCOUNT_ID!=PA.PAYEE_ACCOUNT_ID AND PA1.PLAN_ID = PBXR.PLAN_ID&#xD;&#xA;INNER JOIN SGT_BENEFIT_APPLICATION BA ON BA.PERSON_ID = PA.PERSON_ID AND BA.APPLICATION_STATUS_VALUE='APRD' AND BA.BENEFIT_TYPE_VALUE='DSBL' AND BA.DISABILITY_CONVERSION_DATE IS NOT NULL  &#xD;&#xA;LEFT OUTER JOIN SGT_DRO_BENEFIT_DETAILS DBD ON DBD.DRO_BENEFIT_ID = PA.DRO_APPLICATION_DETAIL_ID&#xD;&#xA;LEFT OUTER JOIN SGT_DRO_APPLICATION DAPP ON DAPP.DRO_APPLICATION_ID = DBD.DRO_APPLICATION_ID AND DAPP.DRO_STATUS_VALUE='QLFD'&#xD;&#xA;LEFT OUTER JOIN SGT_DRO_APPLICATION DRO ON DRO.DRO_APPLICATION_ID=BA.DRO_APPLICATION_ID AND DRO.DRO_STATUS_VALUE='QLFD'&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON PER ON PA.PERSON_ID = PER.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGT_ORGANIZATION O ON PHH.ORG_ID = O.ORG_ID&#xD;&#xA;WHERE YEAR(PHH.PAYMENT_DATE) = @TAXYEAR&#xD;&#xA;    AND PHDIS.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD')&#xD;&#xA; AND (PBXR.PLAN_ID IN (2,3,4,6,7,8,9) OR (PBXR.PLAN_ID = 1 AND PBXR.BENEFIT_OPTION_VALUE='LUMP'))&#xD;&#xA; AND  @REFERENCE_DATE &lt; BA.DISABILITY_CONVERSION_DATE&#xD;&#xA; AND YEAR(BA.RETIREMENT_DATE) &lt;= @TAXYEAR &#xD;&#xA; &#xD;&#xA;select * from [TEMP_PAYMENT_DETAILS_CORRECTED_1099R]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;">
      <parameters>
        <parameter ID="@TAXYEAR" sfwDataType="int" />
        <parameter ID="@REFERENCE_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetDataForCorrectedBatch" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql=" ---- Declaration Section ------------------------------&#xD;&#xA; DECLARE @DATEOF1099R DATETIME&#xD;&#xA; SET @DATEOF1099R =  CONVERT(DATETIME,CONVERT(VARCHAR,GETDATE(),101) ,110)&#xD;&#xA;&#xD;&#xA; SELECT  --PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;    ISNULL(PHH.PERSON_ID,0) AS PERSON_ID,&#xD;&#xA;    ISNULL(PHH.ORG_ID,0) AS ORG_ID,&#xD;&#xA;    PHH.NAME,&#xD;&#xA;    ISNULL(PHH.DISTRIBUTION_CODE,0) AS DISTRIBUTION_CODE,&#xD;&#xA;       ISNULL(PHH.PLAN_ID,0) AS PLAN_ID,&#xD;&#xA;    ISNULL(PHH.GROSS_AMOUNT,0) AS GROSS_AMOUNT,&#xD;&#xA;    ISNULL(PHH.NON_TAXABLE_AMOUNT,0) AS NON_TAXABLE_AMOUNT,&#xD;&#xA;    ISNULL(PHH.CAPITAL_GAIN,0) AS CAPITAL_GAIN,&#xD;&#xA;    ISNULL(PHH.TAXABLE_AMOUNT,0) AS TAXABLE_AMOUNT,&#xD;&#xA;    ISNULL(PHH.FED_TAX_AMOUNT,0) AS FED_TAX_AMOUNT,&#xD;&#xA;    ISNULL(PHH.STATE_TAX_AMOUNT,0) AS STATE_TAX_AMOUNT,&#xD;&#xA;    PHH.TAX_YEAR,&#xD;&#xA;    PHH.CHECK_AMOUNT,&#xD;&#xA;    PHH.FEDERAL_ID,&#xD;&#xA;    PHH.PAYER_STATE_NO,&#xD;&#xA;    PHH.PLAN_IDENTIFIER_VALUE,&#xD;&#xA;    PHH.ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;    PHH.AGE59_SPLIT_FLAG,&#xD;&#xA;    PHH.SSN,&#xD;&#xA;    PHH.IDENTIFIER_VALUE as IDENTIFIER_VALUE&#xD;&#xA; INTO  #TEMP&#xD;&#xA; FROM&#xD;&#xA; (&#xD;&#xA;  SELECT  --PAYEE_ACCOUNT_ID,&#xD;&#xA;              PERSON_ID,&#xD;&#xA;     ORG_ID,&#xD;&#xA;     NAME,&#xD;&#xA;     DISTRIBUTION_CODE,&#xD;&#xA;     PLAN_ID,&#xD;&#xA;     SUM(ISNULL(GROSS_AMOUNT,0)) AS GROSS_AMOUNT,&#xD;&#xA;     SUM(ISNULL(NON_TAXABLE_AMOUNT,0)) AS NON_TAXABLE_AMOUNT,&#xD;&#xA;     SUM(ISNULL(CAPITAL_GAIN,0)) AS CAPITAL_GAIN,&#xD;&#xA;     SUM(ISNULL(TAXABLE_AMOUNT,0)) AS TAXABLE_AMOUNT,&#xD;&#xA;     SUM(ISNULL(FED_TAX_AMOUNT,0)) AS FED_TAX_AMOUNT,&#xD;&#xA;     SUM(ISNULL(STATE_TAX_AMOUNT,0)) AS STATE_TAX_AMOUNT,&#xD;&#xA;     YEAR(PAYMENT_DATE) AS TAX_YEAR,&#xD;&#xA;     0 AS CHECK_AMOUNT,&#xD;&#xA;     CASE WHEN PLAN_ID=1 THEN @FEDERALIDIAP ELSE @FEDERALIDOTHER END AS FEDERAL_ID,&#xD;&#xA;     CASE WHEN PLAN_ID=1 THEN @STATEIDIAP ELSE @STATEIDOTHER END AS PAYER_STATE_NO,&#xD;&#xA;     CASE WHEN PLAN_ID=1 THEN 'IAP' ELSE 'PENSION' END AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     AGE59_SPLIT_FLAG,&#xD;&#xA;     SSN,&#xD;&#xA;     IDENTIFIER_VALUE&#xD;&#xA;  FROM  TEMP_PAYMENT_DETAILS_CORRECTED_1099R&#xD;&#xA;  WHERE  PAYMENT_HISTORY_HEADER_ID IS NOT NULL&#xD;&#xA;  GROUP BY PERSON_ID,&#xD;&#xA;     ORG_ID,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     NAME,&#xD;&#xA;     DISTRIBUTION_CODE,&#xD;&#xA;     SSN,&#xD;&#xA;     AGE59_SPLIT_FLAG,     &#xD;&#xA;     YEAR(PAYMENT_DATE),&#xD;&#xA;     --PAYEE_ACCOUNT_ID,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,IDENTIFIER_VALUE,&#xD;&#xA;      PLAN_ID   &#xD;&#xA; )AS PHH&#xD;&#xA;&#xD;&#xA; &#xD;&#xA;--select * from #TEMP&#xD;&#xA; &#xD;&#xA;  --QUERY TO CREATE 1099R&#xD;&#xA; &#xD;&#xA;  SELECT * &#xD;&#xA;  FROM &#xD;&#xA;  (&#xD;&#xA;   SELECT  --T.PAYEE_ACCOUNT_ID,&#xD;&#xA;     T.TAX_YEAR,&#xD;&#xA;     @YEARENDPROCESSREQUESTID AS YEAR_END_PROCESS_REQUEST_ID,&#xD;&#xA;     'N' AS CORRECTED_FLAG,&#xD;&#xA;     T.DISTRIBUTION_CODE,&#xD;&#xA;     NULL AS OLD_PAYMENT_1099R_ID,&#xD;&#xA;     NULL AS DIST_PERCENTAGE,&#xD;&#xA;     SUM(T.GROSS_AMOUNT) AS GROSS_BENEFIT_AMOUNT,&#xD;&#xA;     SUM(T.TAXABLE_AMOUNT) AS TAXABLE_AMOUNT,&#xD;&#xA;     SUM(T.NON_TAXABLE_AMOUNT) AS NON_TAXABLE_AMOUNT,&#xD;&#xA;     T.FEDERAL_ID AS FEDERAL_ID,&#xD;&#xA;     T.PAYER_STATE_NO AS PAYER_STATE_NO,&#xD;&#xA;     T.PLAN_IDENTIFIER_VALUE AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;     SUM(T.FED_TAX_AMOUNT) AS FED_TAX_AMOUNT,&#xD;&#xA;     SUM(T.STATE_TAX_AMOUNT) AS STATE_TAX_AMOUNT,   &#xD;&#xA;     T.PERSON_ID AS PERSON_ID,&#xD;&#xA;     T.ORG_ID AS ORG_ID,&#xD;&#xA;     T.[NAME] AS NAME,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_1 ELSE OCA.ADDR_LINE_1 END AS ADDR_LINE_1, --NEED TO PUT THE  LOGIC OF GETTING THE ACTIVE MAILING ADDRESS&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_2 ELSE OCA.ADDR_LINE_2 END AS ADDR_LINE_2,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_CITY ELSE OCA.CITY END AS CITY,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_STATE_ID ELSE OCA.STATE_ID END AS STATE_ID,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_STATE_VALUE ELSE OCA.STATE_VALUE END AS STATE_VALUE,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_COUNTRY_ID ELSE OCA.COUNTRY_ID END AS COUNTRY_ID,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_COUNTRY_VALUE ELSE OCA.COUNTRY_VALUE END AS COUNTRY_VALUE,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_ZIP_CODE ELSE OCA.ZIP_CODE END AS ZIP_CODE,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_ZIP_4_CODE ELSE OCA.ZIP_4_CODE END AS ZIP_4_CODE,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.FOREIGN_PROVINCE ELSE OCA.FOREIGN_PROVINCE END AS FOREIGN_PROVINCE,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.FOREIGN_POSTAL_CODE ELSE OCA.FOREIGN_POSTAL_CODE END AS FOREIGN_POSTAL_CODE,&#xD;&#xA;     T.ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     T.AGE59_SPLIT_FLAG,&#xD;&#xA;     T.IDENTIFIER_VALUE,&#xD;&#xA;     'OPUS_1099R_PROCESS' AS CREATED_BY,&#xD;&#xA;     GETDATE() AS CREATED_DATE,&#xD;&#xA;     'OPUS_1099R_PROCESS' AS MODIFIED_BY,&#xD;&#xA;     GETDATE() AS MODIFIED_DATE,&#xD;&#xA;     0 AS UPDATE_SEQ &#xD;&#xA;         &#xD;&#xA;   FROM&#xD;&#xA;     #TEMP AS T&#xD;&#xA;     LEFT OUTER JOIN SGT_PERSON P  ON T.PERSON_ID = P.PERSON_ID&#xD;&#xA;     LEFT OUTER JOIN SGT_ORGANIZATION O  ON T.ORG_ID = O.ORG_ID&#xD;&#xA;     LEFT OUTER JOIN SGT_ORG_ADDRESS OCA  ON OCA.ORG_ID=O.ORG_ID    &#xD;&#xA;     LEFT OUTER JOIN &#xD;&#xA;     (&#xD;&#xA;     SELECT  P.PERSON_ID, &#xD;&#xA;                                 PA1.ADDR_LINE_1 AS ADDR_LINE_1,&#xD;&#xA;                                 PA1.ADDR_LINE_2 AS ADDR_LINE_2,&#xD;&#xA;         PA1.ADDR_CITY  AS ADDR_CITY,&#xD;&#xA;         PA1.ADDR_STATE_ID  AS ADDR_STATE_ID,&#xD;&#xA;         CASE WHEN PAC.ADDRESS_TYPE_VALUE='MAIL' OR PAC.ADDRESS_TYPE_VALUE IS NULL  then 1 ELSE 2 END AS ADDRESS_TYPE,&#xD;&#xA;         PA1.ADDR_STATE_VALUE AS ADDR_STATE_VALUE,&#xD;&#xA;            PA1.ADDR_COUNTRY_ID  AS ADDR_COUNTRY_ID,&#xD;&#xA;                                 PA1.ADDR_COUNTRY_VALUE  AS ADDR_COUNTRY_VALUE,&#xD;&#xA;                                 PA1.ADDR_ZIP_CODE AS ADDR_ZIP_CODE,&#xD;&#xA;                                 PA1.ADDR_ZIP_4_CODE  AS ADDR_ZIP_4_CODE,&#xD;&#xA;                                 PA1.FOREIGN_PROVINCE  AS FOREIGN_PROVINCE,&#xD;&#xA;                                 PA1.FOREIGN_POSTAL_CODE  AS FOREIGN_POSTAL_CODE&#xD;&#xA;                           FROM SGT_PERSON P &#xD;&#xA;                           LEFT OUTER JOIN SGT_PERSON_ADDRESS PA1   &#xD;&#xA;                           ON P.PERSON_ID  = PA1.PERSON_ID  &#xD;&#xA;                           --AND DBO.fn_Check_Date_Overlapping(PA1.START_DATE,PA1.END_DATE,'09/01/2012')=1&#xD;&#xA;                           AND PA1.START_DATE &lt;= @DATEOF1099R AND (PA1.END_DATE IS NULL OR PA1.END_DATE &gt;= @DATEOF1099R)&#xD;&#xA;                           LEFT OUTER JOIN SGT_PERSON_ADDRESS_CHKLIST PAC ON PA1.ADDRESS_ID=PAC.ADDRESS_ID&#xD;&#xA;                           AND PAC.ADDRESS_TYPE_VALUE='MAIL'&#xD;&#xA;    ) AS PERADDR &#xD;&#xA;    ON PERADDR.PERSON_ID=T.PERSON_ID&#xD;&#xA;    GROUP BY T.TAX_YEAR,&#xD;&#xA;     T.DISTRIBUTION_CODE,&#xD;&#xA;     T.FEDERAL_ID,&#xD;&#xA;     T.PAYER_STATE_NO,&#xD;&#xA;     T.PLAN_IDENTIFIER_VALUE,&#xD;&#xA;     T.PERSON_ID,&#xD;&#xA;     T.ORG_ID,&#xD;&#xA;     T.[NAME],&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_1 ELSE OCA.ADDR_LINE_1 END, --NEED TO PUT THE  LOGIC OF GETTING THE ACTIVE MAILING ADDRESS&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_2 ELSE OCA.ADDR_LINE_2 END ,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_CITY ELSE OCA.CITY END,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_STATE_ID ELSE OCA.STATE_ID END ,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_STATE_VALUE ELSE OCA.STATE_VALUE END ,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_COUNTRY_ID ELSE OCA.COUNTRY_ID END,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_COUNTRY_VALUE ELSE OCA.COUNTRY_VALUE END,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_ZIP_CODE ELSE OCA.ZIP_CODE END,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_ZIP_4_CODE ELSE OCA.ZIP_4_CODE END,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.FOREIGN_PROVINCE ELSE OCA.FOREIGN_PROVINCE END ,&#xD;&#xA;     CASE WHEN T.PERSON_ID IS NOT NULL THEN PERADDR.FOREIGN_POSTAL_CODE ELSE OCA.FOREIGN_POSTAL_CODE END,&#xD;&#xA;     T.ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     T.AGE59_SPLIT_FLAG,&#xD;&#xA;     T.IDENTIFIER_VALUE     &#xD;&#xA;  ) AS TEMPPORARY&#xD;&#xA;  ORDER BY CASE WHEN FOREIGN_PROVINCE IS NOT NULL then 'A' ELSE 'B' END, NAME  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;drop table #TEMP">
      <parameters>
        <parameter ID="@FEDERALIDIAP" sfwDataType="string" />
        <parameter ID="@FEDERALIDOTHER" sfwDataType="string" />
        <parameter ID="@STATEIDIAP" sfwDataType="string" />
        <parameter ID="@STATEIDOTHER" sfwDataType="string" />
        <parameter ID="@YEARENDPROCESSREQUESTID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Get1099rDataForYear" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PAYMENT_1099R &#xD;&#xA;WHERE TAX_YEAR=@TAXYEAR">
      <parameters>
        <parameter ID="@TAXYEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="rpt1099rFormCorrected" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT   PAY1099R.NAME,PAY1099R.NAME AS RECIPIENT_NAME,&#xD;&#xA;                UPPER(ISNULL(ADDR_LINE_1,'')) AS ADDR_LINE_1,   &#xD;&#xA;    UPPER(ISNULL(ADDR_LINE_2,'')) AS ADDR_LINE_2,&#xD;&#xA;    UPPER(ISNULL(ADDR_CITY,'')) AS ADDR_CITY,&#xD;&#xA;    UPPER(ISNULL(PAY1099R.ADDR_STATE_VALUE,'')) AS ADDR_STATE_VALUE,&#xD;&#xA;    ISNULL(ADDR_ZIP_CODE,'') AS ADDR_ZIP_CODE,&#xD;&#xA;    UPPER(ISNULL(FOREIGN_PROVINCE,'')) + ' ' +ISNULL(FOREIGN_POSTAL_CODE,'') AS ADDR_LINE_3,&#xD;&#xA;    PAY1099R.FEDERAL_ID,&#xD;&#xA;    PAY1099R.ADDR_STATE_VALUE as addr_state,&#xD;&#xA;    PAY1099R.GROSS_BENEFIT_AMOUNT,&#xD;&#xA;    PAY1099R.TAXABLE_AMOUNT,&#xD;&#xA;    PAY1099R.FED_TAX_AMOUNT,PAY1099R.NON_TAXABLE_AMOUNT,&#xD;&#xA;    PAY1099R.DISTRIBUTION_CODE,&#xD;&#xA;    PAY1099R.STATE_TAX_AMOUNT,&#xD;&#xA;    PAY1099R.PAYER_STATE_NO,&#xD;&#xA;    PAY1099R.PAYEE_ACCOUNT_ID,&#xD;&#xA;    CASE WHEN PAY1099R.PERSON_ID IS NULL THEN '1'+ISNULL(ORG.FEDERAL_ID,'') ELSE '2'+ISNULL(DBO.fn_GET_DECRYPTED_TEXT(P.SSN),'') END AS RECIPIENTS_ID, &#xD;&#xA;    NULL AS PAYEE_NAME, &#xD;&#xA;    NULL AS PAYEE_ADDR_LINE_1,   &#xD;&#xA;    NULL AS PAYEE_ADDR_LINE_2,&#xD;&#xA;    NULL AS PAYEE_ADDR_CITY,&#xD;&#xA;    NULL AS  PAYEE_ADDR_STATE_VALUE,&#xD;&#xA;    NULL AS PAYEE_ADDR_ZIP_CODE,&#xD;&#xA;    NULL AS PAYEE_ADDR_LINE_3,&#xD;&#xA;    PAY1099R.age59_split_flag,&#xD;&#xA;    PAY1099R.CORRECTED_FLAG,&#xD;&#xA;    PAY1099R.AGE59_SPLIT_FLAG,&#xD;&#xA;    PAY1099R.TAX_YEAR,&#xD;&#xA;    FOREIGN_PROVINCE,&#xD;&#xA;    P.PERSON_ID,&#xD;&#xA;    ISNULL(P.MPI_PERSON_ID,ORG.MPI_ORG_ID) AS MPI_PERSON_ID&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;FROM   SGT_PAYMENT_1099R PAY1099R WITH(NOLOCK)&#xD;&#xA;     LEFT OUTER JOIN SGT_PERSON P &#xD;&#xA;                  ON PAY1099R.PERSON_ID=P.PERSON_ID&#xD;&#xA;        LEFT OUTER JOIN SGT_ORGANIZATION ORG &#xD;&#xA;                  ON PAY1099R.ORG_ID=ORG.ORG_ID&#xD;&#xA;     LEFT OUTER JOIN SGS_CODE_VALUE CV1 WITH(NOLOCK) &#xD;&#xA;   ON PAY1099R.ADDR_STATE_ID = CV1.CODE_ID &#xD;&#xA;   AND PAY1099R.ADDR_STATE_VALUE = CV1.CODE_VALUE&#xD;&#xA;WHERE   PAY1099R.TAX_YEAR = @TAXYEAR&#xD;&#xA;AND PAY1099R.PLAN_IDENTIFIER_VALUE=@PLANIDENTIFIERVALUE&#xD;&#xA;AND PAY1099R.CORRECTED_FLAG='Y'&#xD;&#xA;ORDER BY PAY1099R.PAYMENT_1099R_ID">
      <parameters>
        <parameter ID="@TAXYEAR" sfwDataType="int" />
        <parameter ID="@PLANIDENTIFIERVALUE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="PopulateExcessRefund" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="INSERT INTO SGT_EXCESS_REFUND&#xD;&#xA;       SELECT    PAY1099R.PAYEE_ACCOUNT_ID,&#xD;&#xA;                 PAY1099R.TAX_YEAR,&#xD;&#xA;                 (PAY1099R.FED_TAX_AMOUNT + PAY1099R.STATE_TAX_AMOUNT) AS REFUND_AMOUNT,&#xD;&#xA;                 '1099R_Batch' AS CREATED_BY, &#xD;&#xA;                 GETDATE() AS CREATED_DATE, &#xD;&#xA;                 '1099R_Batch' AS MODIFIED_BY, &#xD;&#xA;                 GETDATE() AS MODIFIED_DATE, &#xD;&#xA;                 0 AS UPDATE_SEQUENCE&#xD;&#xA;  FROM SGT_PAYMENT_1099R PAY1099R WITH(NOLOCK)&#xD;&#xA;  WHERE PAY1099R.TAX_YEAR = @TAX_YEAR AND ISNULL(GROSS_BENEFIT_AMOUNT,0) &lt;= 0&#xD;&#xA;        AND (PAY1099R.FED_TAX_AMOUNT + PAY1099R.STATE_TAX_AMOUNT) &gt; 0 ">
      <parameters>
        <parameter ID="@TAX_YEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetOrgForEdd" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT distinct&#xD;&#xA;* &#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;SELECT  &#xD;&#xA;        NULL AS  LAST_NAME,O.ORG_NAME AS  FIRST_NAME,NULL AS  MIDDLE_NAME,&#xD;&#xA;       TPA.ORG_ID AS PERSON_ID,ISNULL(PHH1.TAXWITHHOLDING_STATE, OA.STATE_VALUE) STATE_CODE,&#xD;&#xA;       CASE WHEN ISNULL(o.FEDERAL_ID, '') &lt;&gt; '' THEN (dbo.fn_GET_DECRYPTED_TEXT(o.FEDERAL_ID)) ELSE (dbo.fn_GET_DECRYPTED_TEXT(p.SSN)) END  as SSN,&#xD;&#xA;            SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;            AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' &#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR  ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) &#xD;&#xA;                                                     AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' &#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS GROSS_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' THEN (PHDE. AMOUNT) ELSE 0 END) AS STATE_TAX_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' THEN (PHDE. AMOUNT) ELSE 0 END) AS FED_TAX_AMOUNT,&#xD;&#xA;            @PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;            'N' AS WDRL_FLAG,&#xD;&#xA;             SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;            AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' AND PIT.TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR  ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) &#xD;&#xA;                                                     AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL'  AND PIT.TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS TAXABLE_AMOUNT,&#xD;&#xA;            Payment.MONTH1_EMPLOYEE AS MONTH1_EMPLOYEE,&#xD;&#xA;            Payment.MONTH2_EMPLOYEE AS MONTH2_EMPLOYEE,&#xD;&#xA;            Payment.MONTH3_EMPLOYEE AS MONTH3_EMPLOYEE          &#xD;&#xA;      FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE WITH(NOLOCK) ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE --BETWEEN @START_DATE AND @END_DATE &#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)&#xD;&#xA;      LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;       LEFT OUTER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT H.PAYEE_ACCOUNT_ID,D.OLD_DISTRIBUTION_ID,HD.DISTRIBUTION_STATUS_VALUE FROM SGT_PAYMENT_HISTORY_HEADER H&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION D WITH(NOLOCK) ON H.PAYMENT_HISTORY_HEADER_ID=D.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY HD ON HD.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE H.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE&#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)     &#xD;&#xA;  WHERE D.OLD_DISTRIBUTION_ID IS NOT NULL  AND HD.DISTRIBUTION_STATUS_VALUE IN ('CNLD','RCMD')    &#xD;&#xA;  )RS ON PHD.OLD_DISTRIBUTION_ID IS NULL AND PHH.PAYEE_ACCOUNT_ID = RS.PAYEE_ACCOUNT_ID AND PHDSH.DISTRIBUTION_STATUS_VALUE = 'RSUD' AND PHD.PAYMENT_HISTORY_DISTRIBUTION_ID = RS.OLD_DISTRIBUTION_ID&#xD;&#xA;      &#xD;&#xA;      LEFT OUTER JOIN SGS_CODE_VALUE CVACCOUNTTYPEVALUE WITH(NOLOCK)  ON PHD.ACCOUNT_TYPE_ID= CVACCOUNTTYPEVALUE.CODE_ID AND PHD.ACCOUNT_TYPE_VALUE = CVACCOUNTTYPEVALUE.CODE_VALUE&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  --AND TPA.ORG_ID=PHH.ORG_ID&#xD;&#xA;      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;      LEFT OUTER JOIN SGT_ORGANIZATION O WITH(NOLOCK) ON TPA.ORG_ID=O.ORG_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PERSON P WITH(NOLOCK) ON PBA.PERSON_ID=P.PERSON_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHDE.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) ON PBXR.PLAN_BENEFIT_ID=TPA.PLAN_BENEFIT_ID &#xD;&#xA;      LEFT OUTER JOIN &#xD;&#xA;                     (SELECT TPA.ORG_ID,&#xD;&#xA;                          SUM(CASE WHEN  PHH.PAYMENT_DATE BETWEEN @START_DATE AND DATEADD(MONTH,1,@START_DATE)-1  THEN 1 ELSE 0 END) AS MONTH1_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,1,@START_DATE)-1 AND DATEADD(MONTH,2,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH2_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,2,@START_DATE)-1 AND DATEADD(MONTH,3,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH3_EMPLOYEE     &#xD;&#xA;                          ,@PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE&#xD;&#xA;                          from SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;                      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  AND TPA.ORG_ID=PHH.ORG_ID&#xD;&#xA;                      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;                      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE --BETWEEN @START_DATE AND @END_DATE &#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)&#xD;&#xA;                      LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;                      WHERE &#xD;&#xA;                      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;                        OR&#xD;&#xA;                     (PHD.OLD_DISTRIBUTION_ID IS NOT NULL AND EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;                     --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;                     AND PHH.PAYMENT_DATE between @START_DATE AND @END_DATE)) &#xD;&#xA;                      AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1) or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;                      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD')&#xD;&#xA;                      GROUP BY TPA.ORG_ID)&#xD;&#xA;                       AS Payment&#xD;&#xA;      ON Payment.ORG_ID=TPA.ORG_ID &#xD;&#xA;      --AND  Payment.PLAN_IDENTIFIER_VALUE=@PLANIDENTIFIERVALUE  &#xD;&#xA;        CROSS APPLY(&#xD;&#xA;            SELECT O.MPI_ORG_ID, O.ORG_ID, CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END STATE_CODE&#xD;&#xA;            FROM DBO.SGT_ORGANIZATION O&#xD;&#xA;            INNER JOIN DBO.SGS_CODE_VALUE CV ON CV.DATA1 = O.MPI_ORG_ID AND CV.CODE_ID = 52&#xD;&#xA;            WHERE 1=1&#xD;&#xA;                AND O.ORG_ID &gt; 1&#xD;&#xA;                AND CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END =&#xD;&#xA;                    ISNULL(@STATE_CODE, CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END)&#xD;&#xA;        ) ST&#xD;&#xA;        OUTER APPLY(&#xD;&#xA;            SELECT TOP 1 WITH TIES OA.STATE_VALUE&#xD;&#xA;            FROM DBO.SGT_ORG_ADDRESS OA&#xD;&#xA;            WHERE 1=1&#xD;&#xA;                AND OA.ORG_ID = TPA.ORG_ID&#xD;&#xA;                AND PHH.PAYMENT_DATE BETWEEN OA.START_DATE AND ISNULL(OA.END_DATE, '12/31/9999')&#xD;&#xA;                AND OA.STATE_VALUE = ST.STATE_CODE&#xD;&#xA;            ORDER BY OA.START_DATE DESC&#xD;&#xA;        ) OA&#xD;&#xA;        OUTER APPLY(&#xD;&#xA;            SELECT TOP 1 WITH TIES ST.STATE_CODE TAXWITHHOLDING_STATE&#xD;&#xA;            FROM DBO.SGT_PAYMENT_HISTORY_DETAIL PHDI&#xD;&#xA;            INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PHDI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;            WHERE 1=1&#xD;&#xA;                AND PHDI.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                AND PIT.ACH_CHECK_GROUP_VALUE = 'STTX'&#xD;&#xA;                AND PHDI.VENDOR_ORG_ID = ST.ORG_ID&#xD;&#xA;           ORDER BY PHDI.PAYMENT_HISTORY_DETAIL_ID DESC&#xD;&#xA;        ) PHH1&#xD;&#xA;      WHERE &#xD;&#xA;      RS.PAYEE_ACCOUNT_ID IS NULL AND &#xD;&#xA;      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;      OR&#xD;&#xA;      (PHD.OLD_DISTRIBUTION_ID IS NOT NULL AND EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;      --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;      AND PHH.PAYMENT_DATE between @START_DATE AND @END_DATE))&#xD;&#xA;       and TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1 AND PBXR.BENEFIT_OPTION_VALUE &lt;&gt; 'LIFE') or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD')&#xD;&#xA;      AND TPA.ORG_ID IS Not NULL&#xD;&#xA;      AND ISNULL(PHH1.TAXWITHHOLDING_STATE, OA.STATE_VALUE) = ST.STATE_CODE&#xD;&#xA;GROUP BY tpa.PERSON_ID,O.ORG_NAME,O.FEDERAL_ID,Payment.MONTH1_EMPLOYEE,Payment.MONTH2_EMPLOYEE,Payment.MONTH3_EMPLOYEE&#xD;&#xA;,Payment.PLAN_IDENTIFIER_VALUE,TPA.ORG_ID,p.SSN,ISNULL(PHH1.TAXWITHHOLDING_STATE, OA.STATE_VALUE)&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT  &#xD;&#xA;        NULL AS  LAST_NAME,O.ORG_NAME AS  FIRST_NAME,NULL AS  MIDDLE_NAME,&#xD;&#xA;       TPA.ORG_ID AS PERSON_ID,ISNULL(PHH1.TAXWITHHOLDING_STATE, OA.STATE_VALUE) STATE_CODE,&#xD;&#xA;       CASE WHEN ISNULL(o.FEDERAL_ID, '') &lt;&gt; '' THEN (dbo.fn_GET_DECRYPTED_TEXT(o.FEDERAL_ID)) ELSE (dbo.fn_GET_DECRYPTED_TEXT(P.SSN)) END  as SSN,&#xD;&#xA;             SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;             AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE ='WDRL' &#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' &#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS GROSS_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ( PHDE.AMOUNT) ELSE 0 END) AS STATE_TAX_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ( PHDE.AMOUNT) ELSE 0 END) AS FED_TAX_AMOUNT,&#xD;&#xA;            @PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;            'Y' AS WDRL_FLAG,&#xD;&#xA;            SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;             AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE ='WDRL' AND PIT.TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) AND  &#xD;&#xA;                                                     TPA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' AND PIT.TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS TAXABLE_AMOUNT,&#xD;&#xA;            Payment.MONTH1_EMPLOYEE AS MONTH1_EMPLOYEE,&#xD;&#xA;            Payment.MONTH2_EMPLOYEE AS MONTH2_EMPLOYEE,&#xD;&#xA;            Payment.MONTH3_EMPLOYEE AS MONTH3_EMPLOYEE        &#xD;&#xA;      FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE WITH(NOLOCK) ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE --BETWEEN @START_DATE AND @END_DATE &#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)            &#xD;&#xA;      LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;       LEFT OUTER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT H.PAYEE_ACCOUNT_ID,D.OLD_DISTRIBUTION_ID,HD.DISTRIBUTION_STATUS_VALUE FROM SGT_PAYMENT_HISTORY_HEADER H&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION D WITH(NOLOCK) ON H.PAYMENT_HISTORY_HEADER_ID=D.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY HD ON HD.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE H.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE&#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)     &#xD;&#xA;  WHERE D.OLD_DISTRIBUTION_ID IS NOT NULL  AND HD.DISTRIBUTION_STATUS_VALUE IN ('CNLD','RCMD')    &#xD;&#xA;  )RS ON PHD.OLD_DISTRIBUTION_ID IS NULL AND PHH.PAYEE_ACCOUNT_ID = RS.PAYEE_ACCOUNT_ID AND PHDSH.DISTRIBUTION_STATUS_VALUE = 'RSUD' AND PHD.PAYMENT_HISTORY_DISTRIBUTION_ID = RS.OLD_DISTRIBUTION_ID&#xD;&#xA;      LEFT OUTER JOIN SGS_CODE_VALUE CVACCOUNTTYPEVALUE WITH(NOLOCK)  ON PHD.ACCOUNT_TYPE_ID= CVACCOUNTTYPEVALUE.CODE_ID AND PHD.ACCOUNT_TYPE_VALUE = CVACCOUNTTYPEVALUE.CODE_VALUE&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  AND TPA.ORG_ID=PHH.ORG_ID&#xD;&#xA;      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;      LEFT OUTER JOIN SGT_ORGANIZATION O WITH(NOLOCK) ON TPA.ORG_ID=O.ORG_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PERSON P WITH(NOLOCK) ON PBA.PERSON_ID=P.PERSON_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHDE.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) ON PBXR.PLAN_BENEFIT_ID=TPA.PLAN_BENEFIT_ID &#xD;&#xA;      LEFT OUTER JOIN &#xD;&#xA;                     (SELECT TPA.ORG_ID,&#xD;&#xA;                          SUM(CASE WHEN  PHH.PAYMENT_DATE BETWEEN @START_DATE AND DATEADD(MONTH,1,@START_DATE)-1  THEN 1 ELSE 0 END) AS MONTH1_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,1,@START_DATE)-1 AND DATEADD(MONTH,2,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH2_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,2,@START_DATE)-1 AND DATEADD(MONTH,3,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH3_EMPLOYEE     &#xD;&#xA;                          ,@PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE&#xD;&#xA;                          from SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;                      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  --AND TPA.ORG_ID=PHH.ORG_ID&#xD;&#xA;                      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;                      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;     (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE --BETWEEN @START_DATE AND @END_DATE &#xD;&#xA;     ORDER BY SH.TRANSACTION_DATE DESC)&#xD;&#xA;                      LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;                      WHERE &#xD;&#xA;                      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;                        OR&#xD;&#xA;                      (PHD.OLD_DISTRIBUTION_ID IS NULL and  EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;                      --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;                      AND PHH.PAYMENT_DATE  between @START_DATE AND @END_DATE))&#xD;&#xA;                      AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1) or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;                      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD')&#xD;&#xA;                      GROUP BY TPA.ORG_ID)&#xD;&#xA;                       AS Payment&#xD;&#xA;      ON Payment.ORG_ID=TPA.ORG_ID&#xD;&#xA;      AND  Payment.PLAN_IDENTIFIER_VALUE=@PLANIDENTIFIERVALUE&#xD;&#xA;        CROSS APPLY(&#xD;&#xA;            SELECT O.MPI_ORG_ID, O.ORG_ID, CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END STATE_CODE&#xD;&#xA;            FROM DBO.SGT_ORGANIZATION O&#xD;&#xA;            INNER JOIN DBO.SGS_CODE_VALUE CV ON CV.DATA1 = O.MPI_ORG_ID AND CV.CODE_ID = 52&#xD;&#xA;            WHERE 1=1&#xD;&#xA;                AND O.ORG_ID &gt; 1&#xD;&#xA;                AND CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END =&#xD;&#xA;                    ISNULL(@STATE_CODE, CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END)&#xD;&#xA;        ) ST&#xD;&#xA;        OUTER APPLY(&#xD;&#xA;            SELECT TOP 1 WITH TIES OA.STATE_VALUE&#xD;&#xA;            FROM DBO.SGT_ORG_ADDRESS OA&#xD;&#xA;            WHERE 1=1&#xD;&#xA;                AND OA.ORG_ID = TPA.ORG_ID&#xD;&#xA;                AND PHH.PAYMENT_DATE BETWEEN OA.START_DATE AND ISNULL(OA.END_DATE, '12/31/9999')&#xD;&#xA;                AND OA.STATE_VALUE = ST.STATE_CODE&#xD;&#xA;            ORDER BY OA.START_DATE DESC&#xD;&#xA;        ) OA&#xD;&#xA;        OUTER APPLY(&#xD;&#xA;            SELECT TOP 1 WITH TIES ST.STATE_CODE TAXWITHHOLDING_STATE&#xD;&#xA;            FROM DBO.SGT_PAYMENT_HISTORY_DETAIL PHDI&#xD;&#xA;            INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PHDI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;            WHERE 1=1&#xD;&#xA;                AND PHDI.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                AND PIT.ACH_CHECK_GROUP_VALUE = 'STTX'&#xD;&#xA;                AND PHDI.VENDOR_ORG_ID = ST.ORG_ID&#xD;&#xA;           ORDER BY PHDI.PAYMENT_HISTORY_DETAIL_ID DESC&#xD;&#xA;        ) PHH1&#xD;&#xA;      WHERE &#xD;&#xA;      RS.PAYEE_ACCOUNT_ID IS NULL AND&#xD;&#xA;      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;                        OR&#xD;&#xA;      (PHD.OLD_DISTRIBUTION_ID IS NULL and  EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;      --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;      AND PHH.PAYMENT_DATE between @START_DATE AND @END_DATE))&#xD;&#xA;      AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1 AND PBXR.BENEFIT_OPTION_VALUE &lt;&gt; 'LIFE') or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD')&#xD;&#xA;      AND TPA.ORG_ID IS Not NULL&#xD;&#xA;      AND ISNULL(PHH1.TAXWITHHOLDING_STATE, OA.STATE_VALUE) = ST.STATE_CODE&#xD;&#xA;GROUP BY tpa.PERSON_ID,o.ORG_NAME,O.FEDERAL_ID,Payment.MONTH1_EMPLOYEE,Payment.MONTH2_EMPLOYEE,Payment.MONTH3_EMPLOYEE&#xD;&#xA;,Payment.PLAN_IDENTIFIER_VALUE,TPA.ORG_ID,P.SSN,ISNULL(PHH1.TAXWITHHOLDING_STATE, OA.STATE_VALUE)&#xD;&#xA;) TEMP &#xD;&#xA;WHERE PLAN_IDENTIFIER_VALUE=@PLANIDENTIFIERVALUE">
      <parameters>
        <parameter ID="@START_DATE" sfwDataType="DateTime" />
        <parameter ID="@END_DATE" sfwDataType="DateTime" />
        <parameter ID="@PLANIDENTIFIERVALUE" sfwDataType="string" />
        <parameter ID="@STATE_CODE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetRepaymentWithOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;* &#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;SELECT &#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.GROSS_AMOUNT,0) ELSE 0 END) AS AMOUNT_PAID,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.STATE_TAX,0) ELSE 0 END) AS STATE_TAX,&#xD;&#xA;      PA.ORG_ID AS PERSON_ID ,&#xD;&#xA;      CASE WHEN PBXR.PLAN_ID=1 THEN 'IAP' ELSE 'PENSION' END AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;      'N' AS WDRL_FLAG&#xD;&#xA;FROM SGT_REIMBURSEMENT_DETAILS RID&#xD;&#xA;INNER JOIN SGT_REPAYMENT_SCHEDULE RPS&#xD;&#xA;ON RID.REPAYMENT_SCHEDULE_ID=RPS.REPAYMENT_SCHEDULE_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RETRO&#xD;&#xA;ON RPS.PAYEE_ACCOUNT_RETRO_PAYMENT_ID=RETRO.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;ON RETRO.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA&#xD;&#xA;ON PBA.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) &#xD;&#xA;ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA;WHERE RID.POSTED_DATE between @START_DATE AND @END_DATE &#xD;&#xA;AND PA.ORG_ID IS NOT NULL AND RID.PAYMENT_OPTION_VALUE = 'CHEK'&#xD;&#xA;GROUP BY PA.ORG_ID,PBXR.PLAN_ID&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT &#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.GROSS_AMOUNT,0) ELSE 0 END) AS AMOUNT_PAID,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.STATE_TAX,0) ELSE 0 END) AS STATE_TAX,&#xD;&#xA;      PA.ORG_ID ,&#xD;&#xA;      CASE WHEN PBXR.PLAN_ID=1 THEN 'IAP' ELSE 'PENSION' END AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;      'N' AS WDRL_FLAG&#xD;&#xA;FROM SGT_REIMBURSEMENT_DETAILS RID&#xD;&#xA;INNER JOIN SGT_REPAYMENT_SCHEDULE RPS&#xD;&#xA;ON RID.REPAYMENT_SCHEDULE_ID=RPS.REPAYMENT_SCHEDULE_ID&#xD;&#xA;&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;ON RPS.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA&#xD;&#xA;ON PBA.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) &#xD;&#xA;ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA;WHERE RID.POSTED_DATE between @START_DATE AND @END_DATE &#xD;&#xA;AND RPS.PAYEE_ACCOUNT_RETRO_PAYMENT_ID is null&#xD;&#xA;AND PA.ORG_ID IS NOT NULL AND RID.PAYMENT_OPTION_VALUE = 'CHEK'&#xD;&#xA;GROUP BY PA.ORG_ID,PBXR.PLAN_ID&#xD;&#xA;Union ALL&#xD;&#xA;SELECT &#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ISNULL(RID.GROSS_AMOUNT,0) ELSE 0 END) AS AMOUNT_PAID,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ISNULL(RID.STATE_TAX,0) ELSE 0 END) AS STATE_TAX,&#xD;&#xA;      PA.ORG_ID,&#xD;&#xA;      CASE WHEN PBXR.PLAN_ID=1 THEN 'IAP' ELSE 'PENSION' END AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;      'Y' AS WDRL_FLAG&#xD;&#xA;FROM SGT_REIMBURSEMENT_DETAILS RID&#xD;&#xA;INNER JOIN SGT_REPAYMENT_SCHEDULE RPS&#xD;&#xA;ON RID.REPAYMENT_SCHEDULE_ID=RPS.REPAYMENT_SCHEDULE_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RETRO&#xD;&#xA;ON RPS.PAYEE_ACCOUNT_RETRO_PAYMENT_ID=RETRO.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;ON RETRO.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA&#xD;&#xA;ON PBA.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) &#xD;&#xA;ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA;WHERE RID.POSTED_DATE between @START_DATE AND @END_DATE &#xD;&#xA;AND PA.ORG_ID IS NOT NULL AND RID.PAYMENT_OPTION_VALUE = 'CHEK'&#xD;&#xA;GROUP BY PA.ORG_ID,PBXR.PLAN_ID&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT &#xD;&#xA;       SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ISNULL(RID.GROSS_AMOUNT,0) ELSE 0 END) AS AMOUNT_PAID,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ISNULL(RID.STATE_TAX,0) ELSE 0 END) AS STATE_TAX,&#xD;&#xA;      PA.ORG_ID ,&#xD;&#xA;      CASE WHEN PBXR.PLAN_ID=1 THEN 'IAP' ELSE 'PENSION' END AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;      'Y' AS WDRL_FLAG&#xD;&#xA;FROM SGT_REIMBURSEMENT_DETAILS RID&#xD;&#xA;INNER JOIN SGT_REPAYMENT_SCHEDULE RPS&#xD;&#xA;ON RID.REPAYMENT_SCHEDULE_ID=RPS.REPAYMENT_SCHEDULE_ID&#xD;&#xA;&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;ON RPS.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA&#xD;&#xA;ON PBA.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) &#xD;&#xA;ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA;WHERE RID.POSTED_DATE between @START_DATE AND @END_DATE &#xD;&#xA;AND RPS.PAYEE_ACCOUNT_RETRO_PAYMENT_ID is null&#xD;&#xA;AND PA.ORG_ID IS NOT NULL AND RID.PAYMENT_OPTION_VALUE = 'CHEK'&#xD;&#xA;GROUP BY PA.ORG_ID,PBXR.PLAN_ID&#xD;&#xA;)&#xD;&#xA;TEMP&#xD;&#xA;&#xD;&#xA;WHERE PLAN_IDENTIFIER_VALUE=@PLANIDENTIFIERVALUE&#xD;&#xA;AND AMOUNT_PAID&gt;0">
      <parameters>
        <parameter ID="@START_DATE" sfwDataType="DateTime" />
        <parameter ID="@END_DATE" sfwDataType="DateTime" />
        <parameter ID="@PLANIDENTIFIERVALUE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetPersonsForEDDReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT B.MPI_PERSON_ID,LAST_NAME,FIRST_NAME,MIDDLE_NAME,B.PERSON_ID,@PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE,SSN,SUM(GROSS_AMOUNT) GROSS_AMOUNT,SUM(ISNULL(STATE_TAX_AMOUNT,0))  STATE_TAX_AMOUNT&#xD;&#xA;,SUM(FED_TAX_AMOUNT)  FED_TAX_AMOUNT,SUM(TAXABLE_AMOUNT)TAXABLE_AMOUNT,MONTH1_EMPLOYEE,MONTH2_EMPLOYEE,MONTH3_EMPLOYEE&#xD;&#xA;INTO #TEMP&#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA;SELECT distinct *&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;&#xD;&#xA;SELECT  &#xD;&#xA;          PHH.PAYMENT_HISTORY_HEADER_ID,P.MPI_PERSON_ID,P.LAST_NAME,P.FIRST_NAME,P.MIDDLE_NAME,tpa.PERSON_ID,ISNULL(DBO.fn_GET_DECRYPTED_TEXT(P.SSN),'I') as SSN,&#xD;&#xA;   SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;   AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' &#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' &#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS GROSS_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' THEN (PHDE.AMOUNT) ELSE 0 END) AS STATE_TAX_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' THEN (PHDE.AMOUNT) ELSE 0 END) AS FED_TAX_AMOUNT,&#xD;&#xA;            @PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;            'N' AS WDRL_FLAG,&#xD;&#xA;            SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;   AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' AND PIT.TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) AND &#xD;&#xA;                                                     TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' AND PIT.TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS TAXABLE_AMOUNT,&#xD;&#xA;            Payment.MONTH1_EMPLOYEE AS MONTH1_EMPLOYEE,&#xD;&#xA;            Payment.MONTH2_EMPLOYEE AS MONTH2_EMPLOYEE,&#xD;&#xA;            Payment.MONTH3_EMPLOYEE AS MONTH3_EMPLOYEE          &#xD;&#xA;      FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE WITH(NOLOCK) ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE--BETWEEN @START_DATE AND @END_DATE &#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)&#xD;&#xA;      LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;       LEFT OUTER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT H.PAYEE_ACCOUNT_ID,D.OLD_DISTRIBUTION_ID,HD.DISTRIBUTION_STATUS_VALUE FROM SGT_PAYMENT_HISTORY_HEADER H&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION D WITH(NOLOCK) ON H.PAYMENT_HISTORY_HEADER_ID=D.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY HD ON HD.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE H.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE&#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)     &#xD;&#xA;  WHERE D.OLD_DISTRIBUTION_ID IS NOT NULL  AND HD.DISTRIBUTION_STATUS_VALUE IN ('CNLD','RCMD')    &#xD;&#xA;  )RS ON PHD.OLD_DISTRIBUTION_ID IS NULL AND PHH.PAYEE_ACCOUNT_ID = RS.PAYEE_ACCOUNT_ID AND PHDSH.DISTRIBUTION_STATUS_VALUE = 'RSUD' AND PHD.PAYMENT_HISTORY_DISTRIBUTION_ID = RS.OLD_DISTRIBUTION_ID&#xD;&#xA;      --LEFT OUTER JOIN SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WITH(NOLOCK) ON OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID=OLD_HEADER.PAYMENT_HISTORY_HEADER_ID and OLD_HEADER.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;      --LEFT OUTER JOIN SGT_ORGANIZATION ORG WITH(NOLOCK) ON PHH.ORG_ID=ORG.ORG_ID&#xD;&#xA;      LEFT OUTER JOIN SGS_CODE_VALUE CVACCOUNTTYPEVALUE WITH(NOLOCK)  ON PHD.ACCOUNT_TYPE_ID= CVACCOUNTTYPEVALUE.CODE_ID AND PHD.ACCOUNT_TYPE_VALUE = CVACCOUNTTYPEVALUE.CODE_VALUE&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  --AND TPA.PERSON_ID=PHH.PERSON_ID&#xD;&#xA;      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;      LEFT OUTER JOIN SGT_PERSON P WITH(NOLOCK) ON tpa.PERSON_ID=P.PERSON_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHDE.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) ON PBXR.PLAN_BENEFIT_ID=TPA.PLAN_BENEFIT_ID &#xD;&#xA;      LEFT OUTER JOIN &#xD;&#xA;                     (SELECT TPA.PERSON_ID,&#xD;&#xA;                          SUM(CASE WHEN  PHH.PAYMENT_DATE BETWEEN @START_DATE AND DATEADD(MONTH,1,@START_DATE)-1  THEN 1 ELSE 0 END) AS MONTH1_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,1,@START_DATE)-1 AND DATEADD(MONTH,2,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH2_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,2,@START_DATE)-1 AND DATEADD(MONTH,3,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH3_EMPLOYEE     &#xD;&#xA;                          ,@PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE&#xD;&#xA;                          from SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;                      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  --AND TPA.PERSON_ID=PHH.PERSON_ID&#xD;&#xA;                      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;                      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;       (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE --BETWEEN @START_DATE AND @END_DATE &#xD;&#xA;       ORDER BY SH.TRANSACTION_DATE DESC)&#xD;&#xA;                      LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;                                --LEFT OUTER JOIN SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WITH(NOLOCK) ON OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID=OLD_HEADER.PAYMENT_HISTORY_HEADER_ID and OLD_HEADER.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;                      WHERE &#xD;&#xA;                      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;                        OR&#xD;&#xA;                     (PHD.OLD_DISTRIBUTION_ID IS NOT NULL AND EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;                       --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;                       AND PHH.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;                      ) &#xD;&#xA;                      AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1) or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;                      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD') &#xD;&#xA;                      GROUP BY TPA.PERSON_ID)&#xD;&#xA;                       AS Payment&#xD;&#xA;      ON Payment.PERSON_ID=TPA.PERSON_ID           &#xD;&#xA;      WHERE --P.SSN = '028700192' AND &#xD;&#xA;      RS.PAYEE_ACCOUNT_ID IS NULL AND&#xD;&#xA;      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;      OR&#xD;&#xA;      (PHD.OLD_DISTRIBUTION_ID IS NOT NULL AND EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;      --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;      AND PHH.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;                      )&#xD;&#xA;       and &#xD;&#xA;      TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1) or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD') AND  tpa.PERSON_ID IS NOT NULL &#xD;&#xA;GROUP BY tpa.PERSON_ID,P.LAST_NAME,P.FIRST_NAME,P.MIDDLE_NAME,P.SSN,Payment.MONTH1_EMPLOYEE,Payment.MONTH2_EMPLOYEE,Payment.MONTH3_EMPLOYEE&#xD;&#xA;,Payment.PLAN_IDENTIFIER_VALUE,P.MPI_PERSON_ID,PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT  &#xD;&#xA;            PHH.PAYMENT_HISTORY_HEADER_ID,P.MPI_PERSON_ID,P.LAST_NAME,P.FIRST_NAME,P.MIDDLE_NAME,tpa.PERSON_ID,ISNULL(DBO.fn_GET_DECRYPTED_TEXT(P.SSN),'I') as SSN,&#xD;&#xA;            SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56'))  &#xD;&#xA;            AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE ='WDRL' &#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' &#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS GROSS_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ( PHDE.AMOUNT) ELSE 0 END) AS STATE_TAX_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ( PHDE.AMOUNT) ELSE 0 END) AS FED_TAX_AMOUNT,&#xD;&#xA;            @PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;            'Y' AS WDRL_FLAG,&#xD;&#xA;            SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56'))  &#xD;&#xA;            AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE ='WDRL' AND TAXABLE_ITEM_FLAG ='Y'&#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) AND  &#xD;&#xA;                                                     TPA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' AND TAXABLE_ITEM_FLAG ='Y'&#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS TAXABLE_AMOUNT,&#xD;&#xA;            Payment.MONTH1_EMPLOYEE AS MONTH1_EMPLOYEE,&#xD;&#xA;            Payment.MONTH2_EMPLOYEE AS MONTH2_EMPLOYEE,&#xD;&#xA;            Payment.MONTH3_EMPLOYEE AS MONTH3_EMPLOYEE        &#xD;&#xA;      FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE WITH(NOLOCK) ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE  --BETWEEN @START_DATE AND @END_DATE &#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)            &#xD;&#xA;     LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;       LEFT OUTER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT H.PAYEE_ACCOUNT_ID,D.OLD_DISTRIBUTION_ID,HD.DISTRIBUTION_STATUS_VALUE FROM SGT_PAYMENT_HISTORY_HEADER H&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION D WITH(NOLOCK) ON H.PAYMENT_HISTORY_HEADER_ID=D.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY HD ON HD.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE H.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE&#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)     &#xD;&#xA;  WHERE D.OLD_DISTRIBUTION_ID IS NOT NULL  AND HD.DISTRIBUTION_STATUS_VALUE IN ('CNLD','RCMD')    &#xD;&#xA;  )RS ON PHD.OLD_DISTRIBUTION_ID IS NULL AND PHH.PAYEE_ACCOUNT_ID = RS.PAYEE_ACCOUNT_ID AND PHDSH.DISTRIBUTION_STATUS_VALUE = 'RSUD' AND PHD.PAYMENT_HISTORY_DISTRIBUTION_ID = RS.OLD_DISTRIBUTION_ID&#xD;&#xA;      --LEFT OUTER JOIN SGT_ORGANIZATION ORG WITH(NOLOCK) ON PHH.ORG_ID=ORG.ORG_ID&#xD;&#xA;      LEFT OUTER JOIN SGS_CODE_VALUE CVACCOUNTTYPEVALUE WITH(NOLOCK)  ON PHD.ACCOUNT_TYPE_ID= CVACCOUNTTYPEVALUE.CODE_ID AND PHD.ACCOUNT_TYPE_VALUE = CVACCOUNTTYPEVALUE.CODE_VALUE&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  --AND TPA.PERSON_ID=PHH.PERSON_ID&#xD;&#xA;      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;      LEFT OUTER JOIN SGT_PERSON P WITH(NOLOCK) ON tpa.PERSON_ID=P.PERSON_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHDE.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) ON PBXR.PLAN_BENEFIT_ID=TPA.PLAN_BENEFIT_ID &#xD;&#xA;      LEFT OUTER JOIN &#xD;&#xA;                     (SELECT TPA.PERSON_ID,&#xD;&#xA;                          SUM(CASE WHEN  PHH.PAYMENT_DATE BETWEEN @START_DATE AND DATEADD(MONTH,1,@START_DATE)-1  THEN 1 ELSE 0 END) AS MONTH1_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,1,@START_DATE)-1 AND DATEADD(MONTH,2,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH2_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,2,@START_DATE)-1 AND DATEADD(MONTH,3,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH3_EMPLOYEE     &#xD;&#xA;                          ,@PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE&#xD;&#xA;                          from SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;                      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  --AND TPA.PERSON_ID=PHH.PERSON_ID&#xD;&#xA;                      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;                      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;      (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE --BETWEEN @START_DATE AND @END_DATE &#xD;&#xA;      ORDER BY SH.TRANSACTION_DATE DESC)&#xD;&#xA;                      LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;                      WHERE &#xD;&#xA;                      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;                        OR&#xD;&#xA;                      (PHD.OLD_DISTRIBUTION_ID IS NOT NULL and  EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;                      --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;                      AND PHH.PAYMENT_DATE between @START_DATE AND @END_DATE))&#xD;&#xA;                      AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1) or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;                      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD')&#xD;&#xA;                      GROUP BY TPA.PERSON_ID )&#xD;&#xA;                       AS Payment&#xD;&#xA;      ON Payment.PERSON_ID=TPA.PERSON_ID&#xD;&#xA;      WHERE  --P.SSN = '028700192' AND&#xD;&#xA;      RS.PAYEE_ACCOUNT_ID IS NULL AND&#xD;&#xA;      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;                        OR&#xD;&#xA;      (PHD.OLD_DISTRIBUTION_ID IS NOT NULL and  EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;      --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;      AND PHH.PAYMENT_DATE between @START_DATE AND @END_DATE))&#xD;&#xA;      AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1) or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD')  AND  tpa.PERSON_ID IS NOT NULL &#xD;&#xA;GROUP BY tpa.PERSON_ID,P.LAST_NAME,P.FIRST_NAME,P.MIDDLE_NAME,P.SSN,Payment.MONTH1_EMPLOYEE,Payment.MONTH2_EMPLOYEE,Payment.MONTH3_EMPLOYEE&#xD;&#xA;,Payment.PLAN_IDENTIFIER_VALUE,P.MPI_PERSON_ID,PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;) TEMP&#xD;&#xA;&#xD;&#xA;WHERE PLAN_IDENTIFIER_VALUE=@PLANIDENTIFIERVALUE&#xD;&#xA;&#xD;&#xA;EXCEPT &#xD;&#xA;SELECT distinct *&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;&#xD;&#xA;SELECT  &#xD;&#xA;          PHH.PAYMENT_HISTORY_HEADER_ID,P.MPI_PERSON_ID,P.LAST_NAME,P.FIRST_NAME,P.MIDDLE_NAME,tpa.PERSON_ID,ISNULL(DBO.fn_GET_DECRYPTED_TEXT(P.SSN),'I') as SSN,&#xD;&#xA;   SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;   AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' &#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' &#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS GROSS_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' THEN (PHDE.AMOUNT) ELSE 0 END) AS STATE_TAX_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' THEN (PHDE.AMOUNT) ELSE 0 END) AS FED_TAX_AMOUNT,&#xD;&#xA;            @PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;            'N' AS WDRL_FLAG,&#xD;&#xA;            SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;   AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' AND TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) AND &#xD;&#xA;                                                     TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' AND TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS TAXABLE_AMOUNT,&#xD;&#xA;            Payment.MONTH1_EMPLOYEE AS MONTH1_EMPLOYEE,&#xD;&#xA;            Payment.MONTH2_EMPLOYEE AS MONTH2_EMPLOYEE,&#xD;&#xA;            Payment.MONTH3_EMPLOYEE AS MONTH3_EMPLOYEE          &#xD;&#xA;      FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE WITH(NOLOCK) ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE--BETWEEN @START_DATE AND @END_DATE &#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)&#xD;&#xA;      LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;       LEFT OUTER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT H.PAYEE_ACCOUNT_ID,D.OLD_DISTRIBUTION_ID,HD.DISTRIBUTION_STATUS_VALUE FROM SGT_PAYMENT_HISTORY_HEADER H&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION D WITH(NOLOCK) ON H.PAYMENT_HISTORY_HEADER_ID=D.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY HD ON HD.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE H.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE&#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)     &#xD;&#xA;  WHERE D.OLD_DISTRIBUTION_ID IS NOT NULL  AND HD.DISTRIBUTION_STATUS_VALUE IN ('CNLD','RCMD')    &#xD;&#xA;  )RS ON PHD.OLD_DISTRIBUTION_ID IS NULL AND PHH.PAYEE_ACCOUNT_ID = RS.PAYEE_ACCOUNT_ID AND PHDSH.DISTRIBUTION_STATUS_VALUE = 'RSUD' AND PHD.PAYMENT_HISTORY_DISTRIBUTION_ID = RS.OLD_DISTRIBUTION_ID&#xD;&#xA;      --LEFT OUTER JOIN SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WITH(NOLOCK) ON OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID=OLD_HEADER.PAYMENT_HISTORY_HEADER_ID and OLD_HEADER.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;      --LEFT OUTER JOIN SGT_ORGANIZATION ORG WITH(NOLOCK) ON PHH.ORG_ID=ORG.ORG_ID&#xD;&#xA;      LEFT OUTER JOIN SGS_CODE_VALUE CVACCOUNTTYPEVALUE WITH(NOLOCK)  ON PHD.ACCOUNT_TYPE_ID= CVACCOUNTTYPEVALUE.CODE_ID AND PHD.ACCOUNT_TYPE_VALUE = CVACCOUNTTYPEVALUE.CODE_VALUE&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  --AND TPA.PERSON_ID=PHH.PERSON_ID&#xD;&#xA;      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;      LEFT OUTER JOIN SGT_PERSON P WITH(NOLOCK) ON tpa.PERSON_ID=P.PERSON_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHDE.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) ON PBXR.PLAN_BENEFIT_ID=TPA.PLAN_BENEFIT_ID &#xD;&#xA;      LEFT OUTER JOIN &#xD;&#xA;                     (SELECT TPA.PERSON_ID,&#xD;&#xA;                          SUM(CASE WHEN  PHH.PAYMENT_DATE BETWEEN @START_DATE AND DATEADD(MONTH,1,@START_DATE)-1  THEN 1 ELSE 0 END) AS MONTH1_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,1,@START_DATE)-1 AND DATEADD(MONTH,2,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH2_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,2,@START_DATE)-1 AND DATEADD(MONTH,3,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH3_EMPLOYEE     &#xD;&#xA;                          ,@PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE&#xD;&#xA;                          from SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;                      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  --AND TPA.PERSON_ID=PHH.PERSON_ID&#xD;&#xA;                      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;                      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;       (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE --BETWEEN @START_DATE AND @END_DATE &#xD;&#xA;       ORDER BY SH.TRANSACTION_DATE DESC)&#xD;&#xA;                      LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;                                --LEFT OUTER JOIN SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WITH(NOLOCK) ON OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID=OLD_HEADER.PAYMENT_HISTORY_HEADER_ID and OLD_HEADER.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;                      WHERE &#xD;&#xA;                      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;                        OR&#xD;&#xA;                     (PHD.OLD_DISTRIBUTION_ID IS NOT NULL AND EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;                       --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;                       AND PHH.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;                      ) &#xD;&#xA;                      AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1) or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;                      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD') &#xD;&#xA;                      GROUP BY TPA.PERSON_ID)&#xD;&#xA;                       AS Payment&#xD;&#xA;      ON Payment.PERSON_ID=TPA.PERSON_ID     &#xD;&#xA;        CROSS APPLY(&#xD;&#xA;            SELECT O.MPI_ORG_ID, O.ORG_ID, CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END STATE_CODE&#xD;&#xA;            FROM DBO.SGT_ORGANIZATION O&#xD;&#xA;            INNER JOIN DBO.SGS_CODE_VALUE CV ON CV.DATA1 = O.MPI_ORG_ID AND CV.CODE_ID = 52&#xD;&#xA;            WHERE 1=1&#xD;&#xA;                AND O.ORG_ID &gt; 1&#xD;&#xA;        ) ST&#xD;&#xA;        OUTER APPLY(&#xD;&#xA;            SELECT TOP 1 WITH TIES PA.ADDR_STATE_VALUE&#xD;&#xA;            FROM DBO.SGT_PERSON_ADDRESS PA&#xD;&#xA;            WHERE 1=1&#xD;&#xA;                AND PA.PERSON_ID = TPA.PERSON_ID&#xD;&#xA;                AND PHH.PAYMENT_DATE BETWEEN PA.START_DATE AND ISNULL(PA.END_DATE, '12/31/9999')&#xD;&#xA;                AND PA.ADDR_STATE_VALUE = ST.STATE_CODE&#xD;&#xA;            ORDER BY PA.START_DATE DESC&#xD;&#xA;        ) PA&#xD;&#xA;        OUTER APPLY(&#xD;&#xA;            SELECT TOP 1 WITH TIES ST.STATE_CODE TAXWITHHOLDING_STATE&#xD;&#xA;            FROM DBO.SGT_PAYMENT_HISTORY_DETAIL PHDI&#xD;&#xA;            INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PHDI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;            WHERE 1=1&#xD;&#xA;                AND PHDI.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                AND PIT.ACH_CHECK_GROUP_VALUE = 'STTX'&#xD;&#xA;                AND PHDI.VENDOR_ORG_ID = ST.ORG_ID&#xD;&#xA;           ORDER BY PHDI.PAYMENT_HISTORY_DETAIL_ID DESC&#xD;&#xA;        ) PHH1&#xD;&#xA;      WHERE --P.SSN = '028700192' AND &#xD;&#xA;      RS.PAYEE_ACCOUNT_ID IS NULL AND&#xD;&#xA;      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;      OR&#xD;&#xA;      (PHD.OLD_DISTRIBUTION_ID IS NOT NULL AND EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;      --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;      AND PHH.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;                      )&#xD;&#xA;       and &#xD;&#xA;      TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1 AND PBXR.BENEFIT_OPTION_VALUE &lt;&gt; 'LIFE') or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD') AND  tpa.PERSON_ID IS NOT NULL &#xD;&#xA;      AND ISNULL(PHH1.TAXWITHHOLDING_STATE, PA.ADDR_STATE_VALUE) = ST.STATE_CODE&#xD;&#xA;GROUP BY tpa.PERSON_ID,P.LAST_NAME,P.FIRST_NAME,P.MIDDLE_NAME,P.SSN,Payment.MONTH1_EMPLOYEE,Payment.MONTH2_EMPLOYEE,Payment.MONTH3_EMPLOYEE&#xD;&#xA;,Payment.PLAN_IDENTIFIER_VALUE,P.MPI_PERSON_ID,PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT  &#xD;&#xA;            PHH.PAYMENT_HISTORY_HEADER_ID,P.MPI_PERSON_ID,P.LAST_NAME,P.FIRST_NAME,P.MIDDLE_NAME,tpa.PERSON_ID,ISNULL(DBO.fn_GET_DECRYPTED_TEXT(P.SSN),'I') as SSN,&#xD;&#xA;            SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56'))  &#xD;&#xA;            AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE ='WDRL' &#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' &#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS GROSS_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ( PHDE.AMOUNT) ELSE 0 END) AS STATE_TAX_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ( PHDE.AMOUNT) ELSE 0 END) AS FED_TAX_AMOUNT,&#xD;&#xA;            @PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;            'Y' AS WDRL_FLAG,&#xD;&#xA;            SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56'))  &#xD;&#xA;            AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE ='WDRL' AND TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) AND &#xD;&#xA;                                                     TPA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' AND TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS TAXABLE_AMOUNT,&#xD;&#xA;            Payment.MONTH1_EMPLOYEE AS MONTH1_EMPLOYEE,&#xD;&#xA;            Payment.MONTH2_EMPLOYEE AS MONTH2_EMPLOYEE,&#xD;&#xA;            Payment.MONTH3_EMPLOYEE AS MONTH3_EMPLOYEE        &#xD;&#xA;      FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE WITH(NOLOCK) ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE  --BETWEEN @START_DATE AND @END_DATE &#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)            &#xD;&#xA;     LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;       LEFT OUTER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT H.PAYEE_ACCOUNT_ID,D.OLD_DISTRIBUTION_ID,HD.DISTRIBUTION_STATUS_VALUE FROM SGT_PAYMENT_HISTORY_HEADER H&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION D WITH(NOLOCK) ON H.PAYMENT_HISTORY_HEADER_ID=D.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY HD ON HD.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE H.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE&#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)     &#xD;&#xA;  WHERE D.OLD_DISTRIBUTION_ID IS NOT NULL  AND HD.DISTRIBUTION_STATUS_VALUE IN ('CNLD','RCMD')    &#xD;&#xA;  )RS ON PHD.OLD_DISTRIBUTION_ID IS NULL AND PHH.PAYEE_ACCOUNT_ID = RS.PAYEE_ACCOUNT_ID AND PHDSH.DISTRIBUTION_STATUS_VALUE = 'RSUD' AND PHD.PAYMENT_HISTORY_DISTRIBUTION_ID = RS.OLD_DISTRIBUTION_ID&#xD;&#xA;      --LEFT OUTER JOIN SGT_ORGANIZATION ORG WITH(NOLOCK) ON PHH.ORG_ID=ORG.ORG_ID&#xD;&#xA;      LEFT OUTER JOIN SGS_CODE_VALUE CVACCOUNTTYPEVALUE WITH(NOLOCK)  ON PHD.ACCOUNT_TYPE_ID= CVACCOUNTTYPEVALUE.CODE_ID AND PHD.ACCOUNT_TYPE_VALUE = CVACCOUNTTYPEVALUE.CODE_VALUE&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  --AND TPA.PERSON_ID=PHH.PERSON_ID&#xD;&#xA;      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;      LEFT OUTER JOIN SGT_PERSON P WITH(NOLOCK) ON tpa.PERSON_ID=P.PERSON_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHDE.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) ON PBXR.PLAN_BENEFIT_ID=TPA.PLAN_BENEFIT_ID &#xD;&#xA;      LEFT OUTER JOIN &#xD;&#xA;                     (SELECT TPA.PERSON_ID,&#xD;&#xA;                          SUM(CASE WHEN  PHH.PAYMENT_DATE BETWEEN @START_DATE AND DATEADD(MONTH,1,@START_DATE)-1  THEN 1 ELSE 0 END) AS MONTH1_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,1,@START_DATE)-1 AND DATEADD(MONTH,2,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH2_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,2,@START_DATE)-1 AND DATEADD(MONTH,3,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH3_EMPLOYEE     &#xD;&#xA;                          ,@PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE&#xD;&#xA;                          from SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;                      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  --AND TPA.PERSON_ID=PHH.PERSON_ID&#xD;&#xA;                      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;                      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;      (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE --BETWEEN @START_DATE AND @END_DATE &#xD;&#xA;      ORDER BY SH.TRANSACTION_DATE DESC)&#xD;&#xA;                      LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;                      WHERE &#xD;&#xA;                      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;                        OR&#xD;&#xA;                      (PHD.OLD_DISTRIBUTION_ID IS NOT NULL and  EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;                      --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;                      AND PHH.PAYMENT_DATE between @START_DATE AND @END_DATE))&#xD;&#xA;                      AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1) or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;                      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD')&#xD;&#xA;                      GROUP BY TPA.PERSON_ID )&#xD;&#xA;                       AS Payment&#xD;&#xA;      ON Payment.PERSON_ID=TPA.PERSON_ID&#xD;&#xA;        CROSS APPLY(&#xD;&#xA;            SELECT O.MPI_ORG_ID, O.ORG_ID, CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END STATE_CODE&#xD;&#xA;            FROM DBO.SGT_ORGANIZATION O&#xD;&#xA;            INNER JOIN DBO.SGS_CODE_VALUE CV ON CV.DATA1 = O.MPI_ORG_ID AND CV.CODE_ID = 52&#xD;&#xA;            WHERE 1=1&#xD;&#xA;                AND O.ORG_ID &gt; 1&#xD;&#xA;        ) ST&#xD;&#xA;        OUTER APPLY(&#xD;&#xA;            SELECT TOP 1 WITH TIES PA.ADDR_STATE_VALUE&#xD;&#xA;            FROM DBO.SGT_PERSON_ADDRESS PA&#xD;&#xA;            WHERE 1=1&#xD;&#xA;                AND PA.PERSON_ID = TPA.PERSON_ID&#xD;&#xA;                AND PHH.PAYMENT_DATE BETWEEN PA.START_DATE AND ISNULL(PA.END_DATE, '12/31/9999')&#xD;&#xA;                AND PA.ADDR_STATE_VALUE = ST.STATE_CODE&#xD;&#xA;            ORDER BY PA.START_DATE DESC&#xD;&#xA;        ) PA&#xD;&#xA;        OUTER APPLY(&#xD;&#xA;            SELECT TOP 1 WITH TIES ST.STATE_CODE TAXWITHHOLDING_STATE&#xD;&#xA;            FROM DBO.SGT_PAYMENT_HISTORY_DETAIL PHDI&#xD;&#xA;            INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PHDI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;            WHERE 1=1&#xD;&#xA;                AND PHDI.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                AND PIT.ACH_CHECK_GROUP_VALUE = 'STTX'&#xD;&#xA;                AND PHDI.VENDOR_ORG_ID = ST.ORG_ID&#xD;&#xA;           ORDER BY PHDI.PAYMENT_HISTORY_DETAIL_ID DESC&#xD;&#xA;        ) PHH1&#xD;&#xA;      WHERE  --P.SSN = '028700192' AND&#xD;&#xA;      RS.PAYEE_ACCOUNT_ID IS NULL AND&#xD;&#xA;      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;                        OR&#xD;&#xA;      (PHD.OLD_DISTRIBUTION_ID IS NOT NULL and  EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;      --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;      AND PHH.PAYMENT_DATE between @START_DATE AND @END_DATE))&#xD;&#xA;      AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1 AND PBXR.BENEFIT_OPTION_VALUE &lt;&gt; 'LIFE') or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD')  AND  tpa.PERSON_ID IS NOT NULL &#xD;&#xA;      AND ISNULL(PHH1.TAXWITHHOLDING_STATE, PA.ADDR_STATE_VALUE) = ST.STATE_CODE&#xD;&#xA;GROUP BY tpa.PERSON_ID,P.LAST_NAME,P.FIRST_NAME,P.MIDDLE_NAME,P.SSN,Payment.MONTH1_EMPLOYEE,Payment.MONTH2_EMPLOYEE,Payment.MONTH3_EMPLOYEE&#xD;&#xA;,Payment.PLAN_IDENTIFIER_VALUE,P.MPI_PERSON_ID,PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;) TEMP&#xD;&#xA;&#xD;&#xA;WHERE PLAN_IDENTIFIER_VALUE=@PLANIDENTIFIERVALUE&#xD;&#xA;)B &#xD;&#xA;GROUP BY  B.MPI_PERSON_ID,LAST_NAME,FIRST_NAME,MIDDLE_NAME,B.PERSON_ID,SSN,MONTH1_EMPLOYEE,MONTH2_EMPLOYEE,MONTH3_EMPLOYEE HAVING SUM(GROSS_AMOUNT) &lt;&gt; 0&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT MPI_PERSON_ID,LAST_NAME,FIRST_NAME,MIDDLE_NAME,T.PERSON_ID,@PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE,SSN,SUM(ISNULL(GROSS_AMOUNT,0)) -SUM(ISNULL(C.AMOUNT_PAID,0)) AS GROSS_AMOUNT,&#xD;&#xA;SUM(ISNULL(STATE_TAX_AMOUNT,0)) - SUM(ISNULL(C.STATE_TAX,0)) AS STATE_TAX_AMOUNT&#xD;&#xA;,SUM(ISNULL(FED_TAX_AMOUNT,0)) - SUM(ISNULL(C.FED_TAX,0)) AS FED_TAX_AMOUNT ,SUM(ISNULL(TAXABLE_AMOUNT,0))- SUM(ISNULL(C.AMOUNT_PAID,0)) TAXABLE_AMOUNT,MONTH1_EMPLOYEE,MONTH2_EMPLOYEE,MONTH3_EMPLOYEE &#xD;&#xA;FROM #TEMP T&#xD;&#xA;LEFT OUTER JOIN&#xD;&#xA;(&#xD;&#xA;SELECT &#xD;&#xA;SUM(ISNULL(AMOUNT_PAID,0)) AS AMOUNT_PAID,&#xD;&#xA;SUM(ISNULL(STATE_TAX,0)) AS STATE_TAX,&#xD;&#xA;SUM(ISNULL(FED_TAX,0)) AS FED_TAX,&#xD;&#xA;PERSON_ID,&#xD;&#xA;PLAN_IDENTIFIER_VALUE&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;SELECT &#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.GROSS_AMOUNT,0) ELSE 0 END) AS AMOUNT_PAID,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.STATE_TAX,0) ELSE 0 END) AS STATE_TAX,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.FED_TAX,0) ELSE 0 END) AS FED_TAX,&#xD;&#xA;      PA.PERSON_ID ,&#xD;&#xA;      CASE WHEN PBXR.PLAN_ID=1 THEN 'IAP' ELSE 'PENSION' END AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;      'N' AS WDRL_FLAG&#xD;&#xA;FROM SGT_REIMBURSEMENT_DETAILS RID&#xD;&#xA;INNER JOIN SGT_REPAYMENT_SCHEDULE RPS&#xD;&#xA;ON RID.REPAYMENT_SCHEDULE_ID=RPS.REPAYMENT_SCHEDULE_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RETRO&#xD;&#xA;ON RPS.PAYEE_ACCOUNT_RETRO_PAYMENT_ID=RETRO.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;ON RETRO.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA&#xD;&#xA;ON PBA.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) &#xD;&#xA;ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA;WHERE RID.POSTED_DATE between @START_DATE AND @END_DATE &#xD;&#xA;AND PA.ORG_ID IS  NULL AND RID.PAYMENT_OPTION_VALUE = 'CHEK'&#xD;&#xA;GROUP BY PA.PERSON_ID,PBXR.PLAN_ID&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT &#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.GROSS_AMOUNT,0) ELSE 0 END) AS AMOUNT_PAID,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.STATE_TAX,0) ELSE 0 END) AS STATE_TAX,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.FED_TAX,0) ELSE 0 END) AS FED_TAX,&#xD;&#xA;      PA.PERSON_ID ,&#xD;&#xA;      CASE WHEN PBXR.PLAN_ID=1 THEN 'IAP' ELSE 'PENSION' END AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;      'N' AS WDRL_FLAG&#xD;&#xA;FROM SGT_REIMBURSEMENT_DETAILS RID&#xD;&#xA;INNER JOIN SGT_REPAYMENT_SCHEDULE RPS&#xD;&#xA;ON RID.REPAYMENT_SCHEDULE_ID=RPS.REPAYMENT_SCHEDULE_ID&#xD;&#xA;&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;ON RPS.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA&#xD;&#xA;ON PBA.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) &#xD;&#xA;ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA;WHERE RID.POSTED_DATE between @START_DATE AND @END_DATE &#xD;&#xA;AND RPS.PAYEE_ACCOUNT_RETRO_PAYMENT_ID is null&#xD;&#xA;AND PA.ORG_ID IS  NULL AND RID.PAYMENT_OPTION_VALUE = 'CHEK'&#xD;&#xA;GROUP BY PA.PERSON_ID,PBXR.PLAN_ID&#xD;&#xA;Union ALL&#xD;&#xA;SELECT &#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ISNULL(RID.GROSS_AMOUNT,0) ELSE 0 END) AS AMOUNT_PAID,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ISNULL(RID.STATE_TAX,0) ELSE 0 END) AS STATE_TAX,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.FED_TAX,0) ELSE 0 END) AS FED_TAX,&#xD;&#xA;      PA.PERSON_ID ,&#xD;&#xA;      CASE WHEN PBXR.PLAN_ID=1 THEN 'IAP' ELSE 'PENSION' END AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;      'Y' AS WDRL_FLAG&#xD;&#xA;FROM SGT_REIMBURSEMENT_DETAILS RID&#xD;&#xA;INNER JOIN SGT_REPAYMENT_SCHEDULE RPS&#xD;&#xA;ON RID.REPAYMENT_SCHEDULE_ID=RPS.REPAYMENT_SCHEDULE_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RETRO&#xD;&#xA;ON RPS.PAYEE_ACCOUNT_RETRO_PAYMENT_ID=RETRO.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;ON RETRO.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA&#xD;&#xA;ON PBA.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) &#xD;&#xA;ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA;WHERE RID.POSTED_DATE between @START_DATE AND @END_DATE &#xD;&#xA;AND PA.ORG_ID IS  NULL  AND RID.PAYMENT_OPTION_VALUE = 'CHEK'&#xD;&#xA;GROUP BY PA.PERSON_ID,PBXR.PLAN_ID&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT &#xD;&#xA;       SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ISNULL(RID.GROSS_AMOUNT,0) ELSE 0 END) AS AMOUNT_PAID,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ISNULL(RID.STATE_TAX,0) ELSE 0 END) AS STATE_TAX,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.FED_TAX,0) ELSE 0 END) AS FED_TAX,&#xD;&#xA;      PA.PERSON_ID ,&#xD;&#xA;      CASE WHEN PBXR.PLAN_ID=1 THEN 'IAP' ELSE 'PENSION' END AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;      'Y' AS WDRL_FLAG&#xD;&#xA;FROM SGT_REIMBURSEMENT_DETAILS RID&#xD;&#xA;INNER JOIN SGT_REPAYMENT_SCHEDULE RPS&#xD;&#xA;ON RID.REPAYMENT_SCHEDULE_ID=RPS.REPAYMENT_SCHEDULE_ID&#xD;&#xA;&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;ON RPS.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA&#xD;&#xA;ON PBA.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) &#xD;&#xA;ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA;WHERE RID.POSTED_DATE between @START_DATE AND @END_DATE &#xD;&#xA;AND RPS.PAYEE_ACCOUNT_RETRO_PAYMENT_ID is null&#xD;&#xA;AND PA.ORG_ID IS  NULL AND RID.PAYMENT_OPTION_VALUE = 'CHEK'&#xD;&#xA;GROUP BY PA.PERSON_ID,PBXR.PLAN_ID&#xD;&#xA;)&#xD;&#xA;TEMP&#xD;&#xA;&#xD;&#xA;WHERE PLAN_IDENTIFIER_VALUE=@PLANIDENTIFIERVALUE&#xD;&#xA;AND AMOUNT_PAID&gt;0&#xD;&#xA;GROUP BY PERSON_ID,&#xD;&#xA;PLAN_IDENTIFIER_VALUE&#xD;&#xA;EXCEPT&#xD;&#xA;SELECT &#xD;&#xA;SUM(ISNULL(AMOUNT_PAID,0)) AS AMOUNT_PAID,&#xD;&#xA;SUM(ISNULL(STATE_TAX,0)) AS STATE_TAX,&#xD;&#xA;SUM(ISNULL(FED_TAX,0)) AS FED_TAX,&#xD;&#xA;PERSON_ID,&#xD;&#xA;PLAN_IDENTIFIER_VALUE &#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;SELECT &#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.GROSS_AMOUNT,0) ELSE 0 END) AS AMOUNT_PAID,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.STATE_TAX,0) ELSE 0 END) AS STATE_TAX,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.FED_TAX,0) ELSE 0 END) AS FED_TAX,&#xD;&#xA;      PA.PERSON_ID ,&#xD;&#xA;      CASE WHEN PBXR.PLAN_ID=1 THEN 'IAP' ELSE 'PENSION' END AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;      'N' AS WDRL_FLAG&#xD;&#xA;FROM SGT_REIMBURSEMENT_DETAILS RID&#xD;&#xA;INNER JOIN SGT_REPAYMENT_SCHEDULE RPS&#xD;&#xA;ON RID.REPAYMENT_SCHEDULE_ID=RPS.REPAYMENT_SCHEDULE_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RETRO&#xD;&#xA;ON RPS.PAYEE_ACCOUNT_RETRO_PAYMENT_ID=RETRO.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;ON RETRO.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON P ON P.PERSON_ID = PA.PERSON_ID --NEW&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA&#xD;&#xA;ON PBA.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) &#xD;&#xA;ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA;CROSS APPLY(&#xD;&#xA;    SELECT O.MPI_ORG_ID, O.ORG_ID, CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END STATE_CODE&#xD;&#xA;    FROM DBO.SGT_ORGANIZATION O&#xD;&#xA;    INNER JOIN DBO.SGS_CODE_VALUE CV ON CV.DATA1 = O.MPI_ORG_ID AND CV.CODE_ID = 52&#xD;&#xA;    WHERE 1=1&#xD;&#xA;        AND O.ORG_ID &gt; 1&#xD;&#xA;) ST&#xD;&#xA;WHERE RID.POSTED_DATE between @START_DATE AND @END_DATE AND ((PBXR.PLAN_ID = 1 AND PBXR.BENEFIT_OPTION_VALUE &lt;&gt; 'LIFE') OR PBXR.PLAN_ID &lt;&gt; 1)&#xD;&#xA;AND&#xD;&#xA;(&#xD;&#xA; RID.REIMBURSEMENT_DETAILS_ID = &#xD;&#xA;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;SELECT TOP(1) SRD.REIMBURSEMENT_DETAILS_ID FROM SGT_PERSON_ADDRESS ADDR&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ADDRESS_CHKLIST CHK ON ADDR.ADDRESS_ID = CHK.ADDRESS_ID AND CHK.ADDRESS_TYPE_VALUE = 'MAIL'&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON PER ON ADDR.PERSON_ID = PER.PERSON_ID AND PER.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT PAYA ON PAYA.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_REIMBURSEMENT_DETAILS SRD ON SRD.REIMBURSEMENT_DETAILS_ID = RID.REIMBURSEMENT_DETAILS_ID&#xD;&#xA;&#x9;&#x9;&#x9;WHERE P.PERSON_ID = ADDR.PERSON_ID AND ADDR.ADDR_STATE_VALUE = ST.STATE_CODE AND RID.POSTED_DATE BETWEEN ADDR.START_DATE AND ISNULL(ADDR.END_DATE,'99991231')&#xD;&#xA;&#x9;) &#xD;&#xA;&#x9;&#x9;OR&#xD;&#xA;RID.REIMBURSEMENT_DETAILS_ID = (SELECT TOP(1) SRD.REIMBURSEMENT_DETAILS_ID FROM SGT_REIMBURSEMENT_DETAILS SRD &#xD;&#xA;        WHERE SRD.REIMBURSEMENT_DETAILS_ID = RID.REIMBURSEMENT_DETAILS_ID AND ISNULL(SRD.STATE_TAX,0) &gt; 0)&#xD;&#xA;)&#xD;&#xA;AND PA.ORG_ID IS  NULL AND RID.PAYMENT_OPTION_VALUE = 'CHEK'&#xD;&#xA;GROUP BY PA.PERSON_ID,PBXR.PLAN_ID&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT &#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.GROSS_AMOUNT,0) ELSE 0 END) AS AMOUNT_PAID,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.STATE_TAX,0) ELSE 0 END) AS STATE_TAX,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.FED_TAX,0) ELSE 0 END) AS FED_TAX,&#xD;&#xA;      PA.PERSON_ID ,&#xD;&#xA;      CASE WHEN PBXR.PLAN_ID=1 THEN 'IAP' ELSE 'PENSION' END AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;      'N' AS WDRL_FLAG&#xD;&#xA;FROM SGT_REIMBURSEMENT_DETAILS RID&#xD;&#xA;INNER JOIN SGT_REPAYMENT_SCHEDULE RPS&#xD;&#xA;ON RID.REPAYMENT_SCHEDULE_ID=RPS.REPAYMENT_SCHEDULE_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;ON RPS.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON P ON P.PERSON_ID = PA.PERSON_ID --NEW&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA&#xD;&#xA;ON PBA.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) &#xD;&#xA;ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA;CROSS APPLY(&#xD;&#xA;    SELECT O.MPI_ORG_ID, O.ORG_ID, CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END STATE_CODE&#xD;&#xA;    FROM DBO.SGT_ORGANIZATION O&#xD;&#xA;    INNER JOIN DBO.SGS_CODE_VALUE CV ON CV.DATA1 = O.MPI_ORG_ID AND CV.CODE_ID = 52&#xD;&#xA;    WHERE 1=1&#xD;&#xA;        AND O.ORG_ID &gt; 1&#xD;&#xA;) ST&#xD;&#xA;WHERE RID.POSTED_DATE between @START_DATE AND @END_DATE AND ((PBXR.PLAN_ID = 1 AND PBXR.BENEFIT_OPTION_VALUE &lt;&gt; 'LIFE') OR PBXR.PLAN_ID &lt;&gt; 1)&#xD;&#xA;AND&#xD;&#xA;(&#xD;&#xA; RID.REIMBURSEMENT_DETAILS_ID = &#xD;&#xA;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;SELECT TOP(1) SRD.REIMBURSEMENT_DETAILS_ID FROM SGT_PERSON_ADDRESS ADDR&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ADDRESS_CHKLIST CHK ON ADDR.ADDRESS_ID = CHK.ADDRESS_ID AND CHK.ADDRESS_TYPE_VALUE = 'MAIL'&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON PER ON ADDR.PERSON_ID = PER.PERSON_ID AND PER.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT PAYA ON PAYA.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_REIMBURSEMENT_DETAILS SRD ON SRD.REIMBURSEMENT_DETAILS_ID = RID.REIMBURSEMENT_DETAILS_ID&#xD;&#xA;&#x9;&#x9;&#x9;WHERE P.PERSON_ID = ADDR.PERSON_ID AND ADDR.ADDR_STATE_VALUE = ST.STATE_CODE AND RID.POSTED_DATE BETWEEN ADDR.START_DATE AND ISNULL(ADDR.END_DATE,'99991231')&#xD;&#xA;&#x9;) &#xD;&#xA;&#x9;&#x9;OR&#xD;&#xA;RID.REIMBURSEMENT_DETAILS_ID = (SELECT TOP(1) SRD.REIMBURSEMENT_DETAILS_ID FROM SGT_REIMBURSEMENT_DETAILS SRD &#xD;&#xA;        WHERE SRD.REIMBURSEMENT_DETAILS_ID = RID.REIMBURSEMENT_DETAILS_ID AND ISNULL(SRD.STATE_TAX,0) &gt; 0)&#xD;&#xA;)&#xD;&#xA;AND RPS.PAYEE_ACCOUNT_RETRO_PAYMENT_ID is null&#xD;&#xA;AND PA.ORG_ID IS  NULL AND RID.PAYMENT_OPTION_VALUE = 'CHEK'&#xD;&#xA;GROUP BY PA.PERSON_ID,PBXR.PLAN_ID&#xD;&#xA;Union ALL&#xD;&#xA;SELECT &#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ISNULL(RID.GROSS_AMOUNT,0) ELSE 0 END) AS AMOUNT_PAID,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ISNULL(RID.STATE_TAX,0) ELSE 0 END) AS STATE_TAX,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.FED_TAX,0) ELSE 0 END) AS FED_TAX,&#xD;&#xA;      PA.PERSON_ID ,&#xD;&#xA;      CASE WHEN PBXR.PLAN_ID=1 THEN 'IAP' ELSE 'PENSION' END AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;      'Y' AS WDRL_FLAG&#xD;&#xA;FROM SGT_REIMBURSEMENT_DETAILS RID&#xD;&#xA;INNER JOIN SGT_REPAYMENT_SCHEDULE RPS&#xD;&#xA;ON RID.REPAYMENT_SCHEDULE_ID=RPS.REPAYMENT_SCHEDULE_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RETRO&#xD;&#xA;ON RPS.PAYEE_ACCOUNT_RETRO_PAYMENT_ID=RETRO.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;ON RETRO.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON P ON P.PERSON_ID = PA.PERSON_ID --NEW&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA&#xD;&#xA;ON PBA.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) &#xD;&#xA;ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID &#xD;&#xA;CROSS APPLY(&#xD;&#xA;    SELECT O.MPI_ORG_ID, O.ORG_ID, CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END STATE_CODE&#xD;&#xA;    FROM DBO.SGT_ORGANIZATION O&#xD;&#xA;    INNER JOIN DBO.SGS_CODE_VALUE CV ON CV.DATA1 = O.MPI_ORG_ID AND CV.CODE_ID = 52&#xD;&#xA;    WHERE 1=1&#xD;&#xA;        AND O.ORG_ID &gt; 1&#xD;&#xA;) ST&#xD;&#xA;WHERE RID.POSTED_DATE between @START_DATE AND @END_DATE AND ((PBXR.PLAN_ID = 1 AND PBXR.BENEFIT_OPTION_VALUE &lt;&gt; 'LIFE') OR PBXR.PLAN_ID &lt;&gt; 1)&#xD;&#xA;AND&#xD;&#xA;(&#xD;&#xA; RID.REIMBURSEMENT_DETAILS_ID = &#xD;&#xA;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;SELECT TOP(1) SRD.REIMBURSEMENT_DETAILS_ID FROM SGT_PERSON_ADDRESS ADDR&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ADDRESS_CHKLIST CHK ON ADDR.ADDRESS_ID = CHK.ADDRESS_ID AND CHK.ADDRESS_TYPE_VALUE = 'MAIL'&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON PER ON ADDR.PERSON_ID = PER.PERSON_ID AND PER.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT PAYA ON PAYA.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_REIMBURSEMENT_DETAILS SRD ON SRD.REIMBURSEMENT_DETAILS_ID = RID.REIMBURSEMENT_DETAILS_ID&#xD;&#xA;&#x9;&#x9;&#x9;WHERE P.PERSON_ID = ADDR.PERSON_ID AND ADDR.ADDR_STATE_VALUE = ST.STATE_CODE AND RID.POSTED_DATE BETWEEN ADDR.START_DATE AND ISNULL(ADDR.END_DATE,'99991231')&#xD;&#xA;&#x9;) &#xD;&#xA;&#x9;&#x9;OR&#xD;&#xA;RID.REIMBURSEMENT_DETAILS_ID = (SELECT TOP(1) SRD.REIMBURSEMENT_DETAILS_ID FROM SGT_REIMBURSEMENT_DETAILS SRD &#xD;&#xA;        WHERE SRD.REIMBURSEMENT_DETAILS_ID = RID.REIMBURSEMENT_DETAILS_ID AND ISNULL(SRD.STATE_TAX,0) &gt; 0)&#xD;&#xA;)&#xD;&#xA;AND PA.ORG_ID IS  NULL  AND RID.PAYMENT_OPTION_VALUE = 'CHEK'&#xD;&#xA;GROUP BY PA.PERSON_ID,PBXR.PLAN_ID&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT &#xD;&#xA;       SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ISNULL(RID.GROSS_AMOUNT,0) ELSE 0 END) AS AMOUNT_PAID,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ISNULL(RID.STATE_TAX,0) ELSE 0 END) AS STATE_TAX,&#xD;&#xA;      SUM(CASE WHEN  PA.BENEFIT_ACCOUNT_TYPE_VALUE!='WDRL' THEN ISNULL(RID.FED_TAX,0) ELSE 0 END) AS FED_TAX,&#xD;&#xA;      PA.PERSON_ID ,&#xD;&#xA;      CASE WHEN PBXR.PLAN_ID=1 THEN 'IAP' ELSE 'PENSION' END AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;      'Y' AS WDRL_FLAG&#xD;&#xA;FROM SGT_REIMBURSEMENT_DETAILS RID&#xD;&#xA;INNER JOIN SGT_REPAYMENT_SCHEDULE RPS&#xD;&#xA;ON RID.REPAYMENT_SCHEDULE_ID=RPS.REPAYMENT_SCHEDULE_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;ON RPS.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON P ON P.PERSON_ID = PA.PERSON_ID --NEW&#xD;&#xA;INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA&#xD;&#xA;ON PBA.PAYEE_BENEFIT_ACCOUNT_ID=PA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) &#xD;&#xA;ON PBXR.PLAN_BENEFIT_ID=PA.PLAN_BENEFIT_ID&#xD;&#xA;CROSS APPLY(&#xD;&#xA;    SELECT O.MPI_ORG_ID, O.ORG_ID, CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END STATE_CODE&#xD;&#xA;    FROM DBO.SGT_ORGANIZATION O&#xD;&#xA;    INNER JOIN DBO.SGS_CODE_VALUE CV ON CV.DATA1 = O.MPI_ORG_ID AND CV.CODE_ID = 52&#xD;&#xA;    WHERE 1=1&#xD;&#xA;        AND O.ORG_ID &gt; 1&#xD;&#xA;) ST&#xD;&#xA;WHERE RID.POSTED_DATE between @START_DATE AND @END_DATE AND ((PBXR.PLAN_ID = 1 AND PBXR.BENEFIT_OPTION_VALUE &lt;&gt; 'LIFE') OR PBXR.PLAN_ID &lt;&gt; 1)&#xD;&#xA;AND&#xD;&#xA;(&#xD;&#xA; RID.REIMBURSEMENT_DETAILS_ID = &#xD;&#xA;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;SELECT TOP(1) SRD.REIMBURSEMENT_DETAILS_ID FROM SGT_PERSON_ADDRESS ADDR&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ADDRESS_CHKLIST CHK ON ADDR.ADDRESS_ID = CHK.ADDRESS_ID AND CHK.ADDRESS_TYPE_VALUE = 'MAIL'&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON PER ON ADDR.PERSON_ID = PER.PERSON_ID AND PER.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT PAYA ON PAYA.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_REIMBURSEMENT_DETAILS SRD ON SRD.REIMBURSEMENT_DETAILS_ID = RID.REIMBURSEMENT_DETAILS_ID&#xD;&#xA;&#x9;&#x9;&#x9;WHERE P.PERSON_ID = ADDR.PERSON_ID AND ADDR.ADDR_STATE_VALUE = ST.STATE_CODE AND RID.POSTED_DATE BETWEEN ADDR.START_DATE AND ISNULL(ADDR.END_DATE,'99991231')&#xD;&#xA;&#x9;) &#xD;&#xA;OR&#xD;&#xA;RID.REIMBURSEMENT_DETAILS_ID = (SELECT TOP(1) SRD.REIMBURSEMENT_DETAILS_ID FROM SGT_REIMBURSEMENT_DETAILS SRD &#xD;&#xA;        WHERE SRD.REIMBURSEMENT_DETAILS_ID = RID.REIMBURSEMENT_DETAILS_ID AND ISNULL(SRD.STATE_TAX,0) &gt; 0)&#xD;&#xA;)&#xD;&#xA;AND RPS.PAYEE_ACCOUNT_RETRO_PAYMENT_ID is null&#xD;&#xA;AND PA.ORG_ID IS  NULL AND RID.PAYMENT_OPTION_VALUE = 'CHEK'&#xD;&#xA;GROUP BY PA.PERSON_ID,PBXR.PLAN_ID&#xD;&#xA;)&#xD;&#xA;TEMP&#xD;&#xA;&#xD;&#xA;WHERE PLAN_IDENTIFIER_VALUE=@PLANIDENTIFIERVALUE&#xD;&#xA;AND AMOUNT_PAID&gt;0&#xD;&#xA;GROUP BY PERSON_ID,PLAN_IDENTIFIER_VALUE&#xD;&#xA;)C ON C.PERSON_ID = T.PERSON_ID&#xD;&#xA;GROUP BY  MPI_PERSON_ID,LAST_NAME,FIRST_NAME,MIDDLE_NAME,T.PERSON_ID,SSN,MONTH1_EMPLOYEE,MONTH2_EMPLOYEE,MONTH3_EMPLOYEE">
      <parameters>
        <parameter ID="@PLANIDENTIFIERVALUE" sfwDataType="string" />
        <parameter ID="@END_DATE" sfwDataType="DateTime" />
        <parameter ID="@START_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetOrgsForEDDReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT B.MPI_PERSON_ID,LAST_NAME,FIRST_NAME,MIDDLE_NAME,PERSON_ID,@PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE,SSN,SUM(GROSS_AMOUNT)GROSS_AMOUNT,SUM(STATE_TAX_AMOUNT)STATE_TAX_AMOUNT&#xD;&#xA;,SUM(FED_TAX_AMOUNT)FED_TAX_AMOUNT,SUM(TAXABLE_AMOUNT)TAXABLE_AMOUNT,MONTH1_EMPLOYEE,MONTH2_EMPLOYEE,MONTH3_EMPLOYEE FROM&#xD;&#xA;(&#xD;&#xA;SELECT distinct&#xD;&#xA;* &#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;SELECT  &#xD;&#xA;       PHH.PAYMENT_HISTORY_HEADER_ID,O.MPI_ORG_ID AS MPI_PERSON_ID,NULL AS  LAST_NAME,O.ORG_NAME AS  FIRST_NAME,NULL AS  MIDDLE_NAME,&#xD;&#xA;       TPA.ORG_ID AS PERSON_ID,&#xD;&#xA;       CASE WHEN ISNULL(o.FEDERAL_ID,0) &lt;&gt; 0 THEN (dbo.fn_GET_DECRYPTED_TEXT(o.FEDERAL_ID)) ELSE (dbo.fn_GET_DECRYPTED_TEXT(p.SSN)) END  as SSN,&#xD;&#xA;            SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;            AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' &#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR  ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) &#xD;&#xA;                                                     AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' &#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS GROSS_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' THEN (PHDE. AMOUNT) ELSE 0 END) AS STATE_TAX_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' THEN (PHDE. AMOUNT) ELSE 0 END) AS FED_TAX_AMOUNT,&#xD;&#xA;            @PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;            'N' AS WDRL_FLAG,&#xD;&#xA;             SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;            AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' AND TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR  ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) &#xD;&#xA;                                                     AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL'  AND TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS TAXABLE_AMOUNT,&#xD;&#xA;            Payment.MONTH1_EMPLOYEE AS MONTH1_EMPLOYEE,&#xD;&#xA;            Payment.MONTH2_EMPLOYEE AS MONTH2_EMPLOYEE,&#xD;&#xA;            Payment.MONTH3_EMPLOYEE AS MONTH3_EMPLOYEE          &#xD;&#xA;      FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE WITH(NOLOCK) ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE --BETWEEN @START_DATE AND @END_DATE &#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)&#xD;&#xA;      LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;       LEFT OUTER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT H.PAYEE_ACCOUNT_ID,D.OLD_DISTRIBUTION_ID,HD.DISTRIBUTION_STATUS_VALUE FROM SGT_PAYMENT_HISTORY_HEADER H&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION D WITH(NOLOCK) ON H.PAYMENT_HISTORY_HEADER_ID=D.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY HD ON HD.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE H.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE&#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)     &#xD;&#xA;  WHERE D.OLD_DISTRIBUTION_ID IS NOT NULL  AND HD.DISTRIBUTION_STATUS_VALUE IN ('CNLD','RCMD')    &#xD;&#xA;  )RS ON PHD.OLD_DISTRIBUTION_ID IS NULL AND PHH.PAYEE_ACCOUNT_ID = RS.PAYEE_ACCOUNT_ID AND PHDSH.DISTRIBUTION_STATUS_VALUE = 'RSUD' AND PHD.PAYMENT_HISTORY_DISTRIBUTION_ID = RS.OLD_DISTRIBUTION_ID&#xD;&#xA;      LEFT OUTER JOIN SGS_CODE_VALUE CVACCOUNTTYPEVALUE WITH(NOLOCK)  ON PHD.ACCOUNT_TYPE_ID= CVACCOUNTTYPEVALUE.CODE_ID AND PHD.ACCOUNT_TYPE_VALUE = CVACCOUNTTYPEVALUE.CODE_VALUE&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  --AND TPA.ORG_ID=PHH.ORG_ID&#xD;&#xA;      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;      LEFT OUTER JOIN SGT_ORGANIZATION O WITH(NOLOCK) ON TPA.ORG_ID=O.ORG_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PERSON P WITH(NOLOCK) ON PBA.PERSON_ID=P.PERSON_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHDE.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) ON PBXR.PLAN_BENEFIT_ID=TPA.PLAN_BENEFIT_ID &#xD;&#xA;      LEFT OUTER JOIN &#xD;&#xA;                     (SELECT TPA.ORG_ID,&#xD;&#xA;                          SUM(CASE WHEN  PHH.PAYMENT_DATE BETWEEN @START_DATE AND DATEADD(MONTH,1,@START_DATE)-1  THEN 1 ELSE 0 END) AS MONTH1_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,1,@START_DATE)-1 AND DATEADD(MONTH,2,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH2_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,2,@START_DATE)-1 AND DATEADD(MONTH,3,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH3_EMPLOYEE     &#xD;&#xA;                          ,@PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE&#xD;&#xA;                          from SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;                      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  AND TPA.ORG_ID=PHH.ORG_ID&#xD;&#xA;                      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;                      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE --BETWEEN @START_DATE AND @END_DATE &#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)&#xD;&#xA;                      LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;                      WHERE &#xD;&#xA;                      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;                        OR&#xD;&#xA;                     (PHD.OLD_DISTRIBUTION_ID IS NOT NULL AND EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;                     --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;                     AND PHH.PAYMENT_DATE between @START_DATE AND @END_DATE)) &#xD;&#xA;                      AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1) or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;                      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD')&#xD;&#xA;                      GROUP BY TPA.ORG_ID)&#xD;&#xA;                       AS Payment&#xD;&#xA;      ON Payment.ORG_ID=TPA.ORG_ID &#xD;&#xA;      --AND  Payment.PLAN_IDENTIFIER_VALUE=@PLANIDENTIFIERVALUE             &#xD;&#xA;      WHERE &#xD;&#xA;      RS.PAYEE_ACCOUNT_ID IS NULL AND&#xD;&#xA;      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;      OR&#xD;&#xA;      (PHD.OLD_DISTRIBUTION_ID IS NOT NULL AND EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;      --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;      AND PHH.PAYMENT_DATE between @START_DATE AND @END_DATE))&#xD;&#xA;       and TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1) or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD')&#xD;&#xA;      AND TPA.ORG_ID IS Not NULL&#xD;&#xA;GROUP BY tpa.PERSON_ID,O.ORG_NAME,O.FEDERAL_ID,Payment.MONTH1_EMPLOYEE,Payment.MONTH2_EMPLOYEE,Payment.MONTH3_EMPLOYEE&#xD;&#xA;,Payment.PLAN_IDENTIFIER_VALUE,TPA.ORG_ID,p.SSN,O.MPI_ORG_ID,PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT  &#xD;&#xA;       PHH.PAYMENT_HISTORY_HEADER_ID,O.MPI_ORG_ID AS MPI_PERSON_ID, NULL AS  LAST_NAME,O.ORG_NAME AS  FIRST_NAME,NULL AS  MIDDLE_NAME,&#xD;&#xA;       TPA.ORG_ID AS PERSON_ID,&#xD;&#xA;       CASE WHEN ISNULL(o.FEDERAL_ID,0) &lt;&gt; 0 THEN (dbo.fn_GET_DECRYPTED_TEXT(o.FEDERAL_ID)) ELSE (dbo.fn_GET_DECRYPTED_TEXT(P.SSN)) END  as SSN,&#xD;&#xA;             SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;             AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE ='WDRL' &#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' &#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS GROSS_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ( PHDE.AMOUNT) ELSE 0 END) AS STATE_TAX_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ( PHDE.AMOUNT) ELSE 0 END) AS FED_TAX_AMOUNT,&#xD;&#xA;            @PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;            'Y' AS WDRL_FLAG,&#xD;&#xA;             SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;             AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE ='WDRL' AND TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) AND &#xD;&#xA;                                                     TPA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' AND TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS TAXABLE_AMOUNT,&#xD;&#xA;            Payment.MONTH1_EMPLOYEE AS MONTH1_EMPLOYEE,&#xD;&#xA;            Payment.MONTH2_EMPLOYEE AS MONTH2_EMPLOYEE,&#xD;&#xA;            Payment.MONTH3_EMPLOYEE AS MONTH3_EMPLOYEE        &#xD;&#xA;      FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE WITH(NOLOCK) ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE --BETWEEN @START_DATE AND @END_DATE &#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)            &#xD;&#xA;      LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;       LEFT OUTER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT H.PAYEE_ACCOUNT_ID,D.OLD_DISTRIBUTION_ID,HD.DISTRIBUTION_STATUS_VALUE FROM SGT_PAYMENT_HISTORY_HEADER H&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION D WITH(NOLOCK) ON H.PAYMENT_HISTORY_HEADER_ID=D.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY HD ON HD.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE H.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE&#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)     &#xD;&#xA;  WHERE D.OLD_DISTRIBUTION_ID IS NOT NULL  AND HD.DISTRIBUTION_STATUS_VALUE IN ('CNLD','RCMD')    &#xD;&#xA;  )RS ON PHD.OLD_DISTRIBUTION_ID IS NULL AND PHH.PAYEE_ACCOUNT_ID = RS.PAYEE_ACCOUNT_ID AND PHDSH.DISTRIBUTION_STATUS_VALUE = 'RSUD' AND PHD.PAYMENT_HISTORY_DISTRIBUTION_ID = RS.OLD_DISTRIBUTION_ID&#xD;&#xA;      LEFT OUTER JOIN SGS_CODE_VALUE CVACCOUNTTYPEVALUE WITH(NOLOCK)  ON PHD.ACCOUNT_TYPE_ID= CVACCOUNTTYPEVALUE.CODE_ID AND PHD.ACCOUNT_TYPE_VALUE = CVACCOUNTTYPEVALUE.CODE_VALUE&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  AND TPA.ORG_ID=PHH.ORG_ID&#xD;&#xA;      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;      LEFT OUTER JOIN SGT_ORGANIZATION O WITH(NOLOCK) ON TPA.ORG_ID=O.ORG_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PERSON P WITH(NOLOCK) ON PBA.PERSON_ID=P.PERSON_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHDE.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) ON PBXR.PLAN_BENEFIT_ID=TPA.PLAN_BENEFIT_ID &#xD;&#xA;      LEFT OUTER JOIN &#xD;&#xA;                     (SELECT TPA.ORG_ID,&#xD;&#xA;                          SUM(CASE WHEN  PHH.PAYMENT_DATE BETWEEN @START_DATE AND DATEADD(MONTH,1,@START_DATE)-1  THEN 1 ELSE 0 END) AS MONTH1_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,1,@START_DATE)-1 AND DATEADD(MONTH,2,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH2_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,2,@START_DATE)-1 AND DATEADD(MONTH,3,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH3_EMPLOYEE     &#xD;&#xA;                          ,@PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE&#xD;&#xA;                          from SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;                      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  --AND TPA.ORG_ID=PHH.ORG_ID&#xD;&#xA;                      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;                      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;     (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE --BETWEEN @START_DATE AND @END_DATE &#xD;&#xA;     ORDER BY SH.TRANSACTION_DATE DESC)&#xD;&#xA;                      LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;                      WHERE &#xD;&#xA;                      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;                        OR&#xD;&#xA;                      (PHD.OLD_DISTRIBUTION_ID IS NULL and  EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;                      --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;                      AND PHH.PAYMENT_DATE  between @START_DATE AND @END_DATE))&#xD;&#xA;                      AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1) or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;                      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD')&#xD;&#xA;                      GROUP BY TPA.ORG_ID)&#xD;&#xA;                       AS Payment&#xD;&#xA;      ON Payment.ORG_ID=TPA.ORG_ID&#xD;&#xA;      AND  Payment.PLAN_IDENTIFIER_VALUE=@PLANIDENTIFIERVALUE&#xD;&#xA;      WHERE &#xD;&#xA;      RS.PAYEE_ACCOUNT_ID IS NULL AND&#xD;&#xA;      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;                        OR&#xD;&#xA;      (PHD.OLD_DISTRIBUTION_ID IS NULL and  EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;      --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;      AND PHH.PAYMENT_DATE between @START_DATE AND @END_DATE))&#xD;&#xA;      AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1) or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD')&#xD;&#xA;      AND TPA.ORG_ID IS Not NULL&#xD;&#xA;GROUP BY tpa.PERSON_ID,o.ORG_NAME,O.FEDERAL_ID,Payment.MONTH1_EMPLOYEE,Payment.MONTH2_EMPLOYEE,Payment.MONTH3_EMPLOYEE&#xD;&#xA;,Payment.PLAN_IDENTIFIER_VALUE,TPA.ORG_ID,P.SSN,O.MPI_ORG_ID,PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;) TEMP &#xD;&#xA;&#xD;&#xA;WHERE PLAN_IDENTIFIER_VALUE=@PLANIDENTIFIERVALUE&#xD;&#xA;EXCEPT&#xD;&#xA;SELECT distinct&#xD;&#xA;* &#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;SELECT  &#xD;&#xA;        PHH.PAYMENT_HISTORY_HEADER_ID,O.MPI_ORG_ID AS MPI_PERSON_ID,NULL AS  LAST_NAME,O.ORG_NAME AS  FIRST_NAME,NULL AS  MIDDLE_NAME,&#xD;&#xA;       TPA.ORG_ID AS PERSON_ID,&#xD;&#xA;       CASE WHEN ISNULL(o.FEDERAL_ID,0) &lt;&gt; 0 THEN (dbo.fn_GET_DECRYPTED_TEXT(o.FEDERAL_ID)) ELSE (dbo.fn_GET_DECRYPTED_TEXT(p.SSN)) END  as SSN,&#xD;&#xA;            SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;            AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' &#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR  ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) &#xD;&#xA;                                                     AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' &#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS GROSS_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' THEN (PHDE. AMOUNT) ELSE 0 END) AS STATE_TAX_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' THEN (PHDE. AMOUNT) ELSE 0 END) AS FED_TAX_AMOUNT,&#xD;&#xA;            @PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;            'N' AS WDRL_FLAG,&#xD;&#xA;             SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;            AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' AND TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR  ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) &#xD;&#xA;                                                     AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' AND TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS TAXABLE_AMOUNT,&#xD;&#xA;            Payment.MONTH1_EMPLOYEE AS MONTH1_EMPLOYEE,&#xD;&#xA;            Payment.MONTH2_EMPLOYEE AS MONTH2_EMPLOYEE,&#xD;&#xA;            Payment.MONTH3_EMPLOYEE AS MONTH3_EMPLOYEE          &#xD;&#xA;      FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE WITH(NOLOCK) ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE --BETWEEN @START_DATE AND @END_DATE &#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)&#xD;&#xA;      LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;       LEFT OUTER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT H.PAYEE_ACCOUNT_ID,D.OLD_DISTRIBUTION_ID,HD.DISTRIBUTION_STATUS_VALUE FROM SGT_PAYMENT_HISTORY_HEADER H&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION D WITH(NOLOCK) ON H.PAYMENT_HISTORY_HEADER_ID=D.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY HD ON HD.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE H.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE&#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)     &#xD;&#xA;  WHERE D.OLD_DISTRIBUTION_ID IS NOT NULL  AND HD.DISTRIBUTION_STATUS_VALUE IN ('CNLD','RCMD')    &#xD;&#xA;  )RS ON PHD.OLD_DISTRIBUTION_ID IS NULL AND PHH.PAYEE_ACCOUNT_ID = RS.PAYEE_ACCOUNT_ID AND PHDSH.DISTRIBUTION_STATUS_VALUE = 'RSUD' AND PHD.PAYMENT_HISTORY_DISTRIBUTION_ID = RS.OLD_DISTRIBUTION_ID&#xD;&#xA;      LEFT OUTER JOIN SGS_CODE_VALUE CVACCOUNTTYPEVALUE WITH(NOLOCK)  ON PHD.ACCOUNT_TYPE_ID= CVACCOUNTTYPEVALUE.CODE_ID AND PHD.ACCOUNT_TYPE_VALUE = CVACCOUNTTYPEVALUE.CODE_VALUE&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  --AND TPA.ORG_ID=PHH.ORG_ID&#xD;&#xA;      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;      LEFT OUTER JOIN SGT_ORGANIZATION O WITH(NOLOCK) ON TPA.ORG_ID=O.ORG_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PERSON P WITH(NOLOCK) ON PBA.PERSON_ID=P.PERSON_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHDE.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) ON PBXR.PLAN_BENEFIT_ID=TPA.PLAN_BENEFIT_ID &#xD;&#xA;      LEFT OUTER JOIN &#xD;&#xA;                     (SELECT TPA.ORG_ID,&#xD;&#xA;                          SUM(CASE WHEN  PHH.PAYMENT_DATE BETWEEN @START_DATE AND DATEADD(MONTH,1,@START_DATE)-1  THEN 1 ELSE 0 END) AS MONTH1_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,1,@START_DATE)-1 AND DATEADD(MONTH,2,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH2_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,2,@START_DATE)-1 AND DATEADD(MONTH,3,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH3_EMPLOYEE     &#xD;&#xA;                          ,@PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE&#xD;&#xA;                          from SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;                      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  AND TPA.ORG_ID=PHH.ORG_ID&#xD;&#xA;                      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;                      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE --BETWEEN @START_DATE AND @END_DATE &#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)&#xD;&#xA;                      LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;                      WHERE &#xD;&#xA;                      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;                        OR&#xD;&#xA;                     (PHD.OLD_DISTRIBUTION_ID IS NOT NULL AND EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;                     --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;                     AND PHH.PAYMENT_DATE between @START_DATE AND @END_DATE)) &#xD;&#xA;                      AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1) or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;                      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD')&#xD;&#xA;                      GROUP BY TPA.ORG_ID)&#xD;&#xA;                       AS Payment&#xD;&#xA;      ON Payment.ORG_ID=TPA.ORG_ID &#xD;&#xA;      --AND  Payment.PLAN_IDENTIFIER_VALUE=@PLANIDENTIFIERVALUE   &#xD;&#xA;        CROSS APPLY(&#xD;&#xA;            SELECT O.MPI_ORG_ID, O.ORG_ID, CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END STATE_CODE&#xD;&#xA;            FROM DBO.SGT_ORGANIZATION O&#xD;&#xA;            INNER JOIN DBO.SGS_CODE_VALUE CV ON CV.DATA1 = O.MPI_ORG_ID AND CV.CODE_ID = 52&#xD;&#xA;            WHERE 1=1&#xD;&#xA;                AND O.ORG_ID &gt; 1&#xD;&#xA;        ) ST&#xD;&#xA;        OUTER APPLY(&#xD;&#xA;            SELECT TOP 1 WITH TIES PA.ADDR_STATE_VALUE&#xD;&#xA;            FROM DBO.SGT_PERSON_ADDRESS PA&#xD;&#xA;            WHERE 1=1&#xD;&#xA;                AND PA.PERSON_ID = TPA.PERSON_ID&#xD;&#xA;                AND PHH.PAYMENT_DATE BETWEEN PA.START_DATE AND ISNULL(PA.END_DATE, '12/31/9999')&#xD;&#xA;                AND PA.ADDR_STATE_VALUE = ST.STATE_CODE&#xD;&#xA;            ORDER BY PA.START_DATE DESC&#xD;&#xA;        ) PA&#xD;&#xA;        OUTER APPLY(&#xD;&#xA;            SELECT TOP 1 WITH TIES ST.STATE_CODE TAXWITHHOLDING_STATE&#xD;&#xA;            FROM DBO.SGT_PAYMENT_HISTORY_DETAIL PHDI&#xD;&#xA;            INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PHDI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;            WHERE 1=1&#xD;&#xA;                AND PHDI.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                AND PIT.ACH_CHECK_GROUP_VALUE = 'STTX'&#xD;&#xA;                AND PHDI.VENDOR_ORG_ID = ST.ORG_ID&#xD;&#xA;           ORDER BY PHDI.PAYMENT_HISTORY_DETAIL_ID DESC&#xD;&#xA;        ) PHH1&#xD;&#xA;      WHERE RS.PAYEE_ACCOUNT_ID IS NULL AND&#xD;&#xA;      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;      OR&#xD;&#xA;      (PHD.OLD_DISTRIBUTION_ID IS NOT NULL AND EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;      --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;      AND PHH.PAYMENT_DATE between @START_DATE AND @END_DATE))&#xD;&#xA;       and TPA.BENEFIT_ACCOUNT_TYPE_VALUE&lt;&gt;'WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1 AND PBXR.BENEFIT_OPTION_VALUE &lt;&gt; 'LIFE') or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD')&#xD;&#xA;      AND TPA.ORG_ID IS Not NULL&#xD;&#xA;      AND ISNULL(PHH1.TAXWITHHOLDING_STATE, PA.ADDR_STATE_VALUE) = ST.STATE_CODE&#xD;&#xA;GROUP BY tpa.PERSON_ID,O.ORG_NAME,O.FEDERAL_ID,Payment.MONTH1_EMPLOYEE,Payment.MONTH2_EMPLOYEE,Payment.MONTH3_EMPLOYEE&#xD;&#xA;,Payment.PLAN_IDENTIFIER_VALUE,TPA.ORG_ID,p.SSN,O.MPI_ORG_ID,PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT  &#xD;&#xA;       PHH.PAYMENT_HISTORY_HEADER_ID,O.MPI_ORG_ID AS MPI_PERSON_ID, NULL AS  LAST_NAME,O.ORG_NAME AS  FIRST_NAME,NULL AS  MIDDLE_NAME,&#xD;&#xA;       TPA.ORG_ID AS PERSON_ID,&#xD;&#xA;       CASE WHEN ISNULL(o.FEDERAL_ID,0) &lt;&gt; 0 THEN (dbo.fn_GET_DECRYPTED_TEXT(o.FEDERAL_ID)) ELSE (dbo.fn_GET_DECRYPTED_TEXT(P.SSN)) END  as SSN,&#xD;&#xA;             SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;             AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE ='WDRL' &#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' &#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS GROSS_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'STTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ( PHDE.AMOUNT) ELSE 0 END) AS STATE_TAX_AMOUNT,&#xD;&#xA;            SUM(CASE WHEN PIT.ACH_CHECK_GROUP_VALUE = 'FDTX' AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' THEN ( PHDE.AMOUNT) ELSE 0 END) AS FED_TAX_AMOUNT,&#xD;&#xA;            @PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE,&#xD;&#xA;            'Y' AS WDRL_FLAG,&#xD;&#xA;            SUM(CASE WHEN PIT.ITEM_TYPE_DIRECTION = 1 AND ((PAYMENT_1099R_FLAG = 'Y' AND VENDOR_FLAG= 'N') OR ITEM_TYPE_CODE IN ('ITEM46','ITEM47','ITEM45','ITEM56')) &#xD;&#xA;             AND  TPA.BENEFIT_ACCOUNT_TYPE_VALUE ='WDRL' AND TAXABLE_ITEM_FLAG ='Y'&#xD;&#xA;                                                     THEN &#xD;&#xA;                                                     ISNULL(PHDE.AMOUNT,0.0)&#xD;&#xA;                                                     WHEN (ALLOW_ROLLOVER_CODE_VALUE = 'RRED' OR ITEM_TYPE_CODE IN ('ITEM53','ITEM41','ITEM42','ITEM43','ITEM44')) AND&#xD;&#xA;                                                     TPA.BENEFIT_ACCOUNT_TYPE_VALUE = 'WDRL' AND TAXABLE_ITEM_FLAG ='Y'&#xD;&#xA;                                                     THEN&#xD;&#xA;                                                                ISNULL(PHDE.AMOUNT,0.0) *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;                                                     ELSE 0 &#xD;&#xA;                                                     END&#xD;&#xA;                                                )  AS TAXABLE_AMOUNT,&#xD;&#xA;            Payment.MONTH1_EMPLOYEE AS MONTH1_EMPLOYEE,&#xD;&#xA;            Payment.MONTH2_EMPLOYEE AS MONTH2_EMPLOYEE,&#xD;&#xA;            Payment.MONTH3_EMPLOYEE AS MONTH3_EMPLOYEE        &#xD;&#xA;      FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHDE WITH(NOLOCK) ON PHDE.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE --BETWEEN @START_DATE AND @END_DATE &#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)            &#xD;&#xA;      LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;       LEFT OUTER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT H.PAYEE_ACCOUNT_ID,D.OLD_DISTRIBUTION_ID,HD.DISTRIBUTION_STATUS_VALUE FROM SGT_PAYMENT_HISTORY_HEADER H&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION D WITH(NOLOCK) ON H.PAYMENT_HISTORY_HEADER_ID=D.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY HD ON HD.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;  (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE H.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE&#xD;&#xA;  ORDER BY SH.TRANSACTION_DATE DESC)     &#xD;&#xA;  WHERE D.OLD_DISTRIBUTION_ID IS NOT NULL  AND HD.DISTRIBUTION_STATUS_VALUE IN ('CNLD','RCMD')    &#xD;&#xA;  )RS ON PHD.OLD_DISTRIBUTION_ID IS NULL AND PHH.PAYEE_ACCOUNT_ID = RS.PAYEE_ACCOUNT_ID AND PHDSH.DISTRIBUTION_STATUS_VALUE = 'RSUD' AND PHD.PAYMENT_HISTORY_DISTRIBUTION_ID = RS.OLD_DISTRIBUTION_ID&#xD;&#xA;      LEFT OUTER JOIN SGS_CODE_VALUE CVACCOUNTTYPEVALUE WITH(NOLOCK)  ON PHD.ACCOUNT_TYPE_ID= CVACCOUNTTYPEVALUE.CODE_ID AND PHD.ACCOUNT_TYPE_VALUE = CVACCOUNTTYPEVALUE.CODE_VALUE&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  AND TPA.ORG_ID=PHH.ORG_ID&#xD;&#xA;      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;      LEFT OUTER JOIN SGT_ORGANIZATION O WITH(NOLOCK) ON TPA.ORG_ID=O.ORG_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PERSON P WITH(NOLOCK) ON PBA.PERSON_ID=P.PERSON_ID&#xD;&#xA;      INNER JOIN  SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHDE.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;      LEFT OUTER JOIN SGT_PLAN_BENEFIT_XR PBXR WITH(NOLOCK) ON PBXR.PLAN_BENEFIT_ID=TPA.PLAN_BENEFIT_ID &#xD;&#xA;      LEFT OUTER JOIN &#xD;&#xA;                     (SELECT TPA.ORG_ID,&#xD;&#xA;                          SUM(CASE WHEN  PHH.PAYMENT_DATE BETWEEN @START_DATE AND DATEADD(MONTH,1,@START_DATE)-1  THEN 1 ELSE 0 END) AS MONTH1_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,1,@START_DATE)-1 AND DATEADD(MONTH,2,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH2_EMPLOYEE,&#xD;&#xA;                          SUM(CASE WHEN PHH.PAYMENT_DATE BETWEEN DATEADD(MONTH,2,@START_DATE)-1 AND DATEADD(MONTH,3,@START_DATE)-1 THEN 1 ELSE 0 END) AS MONTH3_EMPLOYEE     &#xD;&#xA;                          ,@PLANIDENTIFIERVALUE AS PLAN_IDENTIFIER_VALUE&#xD;&#xA;                          from SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;                      INNER JOIN SGT_PAYEE_ACCOUNT TPA WITH(NOLOCK) ON TPA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID  --AND TPA.ORG_ID=PHH.ORG_ID&#xD;&#xA;                      INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT PBA WITH(NOLOCK) ON TPA.PAYEE_BENEFIT_ACCOUNT_ID=PBA.PAYEE_BENEFIT_ACCOUNT_ID  &#xD;&#xA;                      INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID=PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                      INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH ON PHDSH.DISTRIBUTION_STATUS_HISTORY_ID = &#xD;&#xA;     (SELECT TOP(1)SH.DISTRIBUTION_STATUS_HISTORY_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY SH WHERE PHH.PAYMENT_HISTORY_HEADER_ID = SH.PAYMENT_HISTORY_HEADER_ID AND SH.TRANSACTION_DATE &lt;= @END_DATE --BETWEEN @START_DATE AND @END_DATE &#xD;&#xA;     ORDER BY SH.TRANSACTION_DATE DESC)&#xD;&#xA;                      LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLD_DISTRIBUTION WITH(NOLOCK) ON PHD.OLD_DISTRIBUTION_ID is not null and PHD.OLD_DISTRIBUTION_ID=OLD_DISTRIBUTION.PAYMENT_HISTORY_DISTRIBUTION_ID &#xD;&#xA;                      WHERE &#xD;&#xA;                      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;                        OR&#xD;&#xA;                      (PHD.OLD_DISTRIBUTION_ID IS NULL and  EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;                      --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;                      AND PHH.PAYMENT_DATE  between @START_DATE AND @END_DATE))&#xD;&#xA;                      AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1) or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;                      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD')&#xD;&#xA;                      GROUP BY TPA.ORG_ID)&#xD;&#xA;                       AS Payment&#xD;&#xA;      ON Payment.ORG_ID=TPA.ORG_ID&#xD;&#xA;      AND  Payment.PLAN_IDENTIFIER_VALUE=@PLANIDENTIFIERVALUE&#xD;&#xA;        CROSS APPLY(&#xD;&#xA;            SELECT O.MPI_ORG_ID, O.ORG_ID, CASE WHEN CV.CODE_VALUE = 'STAT' THEN 'CA' ELSE SUBSTRING(CV.CODE_VALUE, 1, 2) END STATE_CODE&#xD;&#xA;            FROM DBO.SGT_ORGANIZATION O&#xD;&#xA;            INNER JOIN DBO.SGS_CODE_VALUE CV ON CV.DATA1 = O.MPI_ORG_ID AND CV.CODE_ID = 52&#xD;&#xA;            WHERE 1=1&#xD;&#xA;                AND O.ORG_ID &gt; 1&#xD;&#xA;        ) ST&#xD;&#xA;        OUTER APPLY(&#xD;&#xA;            SELECT TOP 1 WITH TIES PA.ADDR_STATE_VALUE&#xD;&#xA;            FROM DBO.SGT_PERSON_ADDRESS PA&#xD;&#xA;            WHERE 1=1&#xD;&#xA;                AND PA.PERSON_ID = TPA.PERSON_ID&#xD;&#xA;                AND PHH.PAYMENT_DATE BETWEEN PA.START_DATE AND ISNULL(PA.END_DATE, '12/31/9999')&#xD;&#xA;                AND PA.ADDR_STATE_VALUE = ST.STATE_CODE&#xD;&#xA;            ORDER BY PA.START_DATE DESC&#xD;&#xA;        ) PA&#xD;&#xA;        OUTER APPLY(&#xD;&#xA;            SELECT TOP 1 WITH TIES ST.STATE_CODE TAXWITHHOLDING_STATE&#xD;&#xA;            FROM DBO.SGT_PAYMENT_HISTORY_DETAIL PHDI&#xD;&#xA;            INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PHDI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;            WHERE 1=1&#xD;&#xA;                AND PHDI.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;                AND PIT.ACH_CHECK_GROUP_VALUE = 'STTX'&#xD;&#xA;                AND PHDI.VENDOR_ORG_ID = ST.ORG_ID&#xD;&#xA;           ORDER BY PHDI.PAYMENT_HISTORY_DETAIL_ID DESC&#xD;&#xA;        ) PHH1&#xD;&#xA;      WHERE &#xD;&#xA;      RS.PAYEE_ACCOUNT_ID IS NULL AND&#xD;&#xA;      ((PHH.PAYMENT_DATE between @START_DATE AND @END_DATE  AND PHD.OLD_DISTRIBUTION_ID IS NULL)&#xD;&#xA;                        OR&#xD;&#xA;      (PHD.OLD_DISTRIBUTION_ID IS NULL and  EXISTS(SELECT * FROM SGT_PAYMENT_HISTORY_HEADER OLD_HEADER WHERE OLD_HEADER.PAYMENT_HISTORY_HEADER_ID = OLD_DISTRIBUTION.PAYMENT_HISTORY_HEADER_ID AND  OLD_HEADER.PAYMENT_DATE between @START_DATE AND @END_DATE)&#xD;&#xA;      --AND PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CLRD','OUTS') &#xD;&#xA;      AND PHH.PAYMENT_DATE between @START_DATE AND @END_DATE))&#xD;&#xA;      AND TPA.BENEFIT_ACCOUNT_TYPE_VALUE='WDRL' and ((@PLANIDENTIFIERVALUE = 'IAP' and PHH.PLAN_ID =1  AND PBXR.BENEFIT_OPTION_VALUE &lt;&gt; 'LIFE') or (@PLANIDENTIFIERVALUE = 'PENSION' and PHH.PLAN_ID &lt;&gt; 1))&#xD;&#xA;      AND PHDSH.DISTRIBUTION_STATUS_VALUE NOT IN ('CNLD','CDRE','RCMD')&#xD;&#xA;      AND TPA.ORG_ID IS Not NULL&#xD;&#xA;      AND ISNULL(PHH1.TAXWITHHOLDING_STATE, PA.ADDR_STATE_VALUE) = ST.STATE_CODE&#xD;&#xA;GROUP BY tpa.PERSON_ID,o.ORG_NAME,O.FEDERAL_ID,Payment.MONTH1_EMPLOYEE,Payment.MONTH2_EMPLOYEE,Payment.MONTH3_EMPLOYEE&#xD;&#xA;,Payment.PLAN_IDENTIFIER_VALUE,TPA.ORG_ID,P.SSN,O.MPI_ORG_ID,PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;) TEMP &#xD;&#xA;&#xD;&#xA;WHERE PLAN_IDENTIFIER_VALUE=@PLANIDENTIFIERVALUE&#xD;&#xA;)B GROUP BY  B.MPI_PERSON_ID,LAST_NAME,FIRST_NAME,MIDDLE_NAME,PERSON_ID,SSN,MONTH1_EMPLOYEE,MONTH2_EMPLOYEE,MONTH3_EMPLOYEE">
      <parameters>
        <parameter ID="@PLANIDENTIFIERVALUE" sfwDataType="string" />
        <parameter ID="@END_DATE" sfwDataType="DateTime" />
        <parameter ID="@START_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="rpt1099RCForm" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql=" SELECT   PAY1099R.NAME,PAY1099R.NAME AS RECIPIENT_NAME,&#xD;&#xA;                UPPER(ISNULL(ADDR_LINE_1,'')) AS ADDR_LINE_1,   &#xD;&#xA;    UPPER(ISNULL(ADDR_LINE_2,'')) AS ADDR_LINE_2,&#xD;&#xA;    CASE&#x9;WHEN PAY1099R.ADDR_COUNTRY_VALUE IS NOT NULL AND PAY1099R.ADDR_COUNTRY_VALUE &lt;&gt; '0001' THEN RIGHT(REPLICATE(' ',40) + REVERSE(SUBSTRING(REVERSE(LTRIM(RTRIM(UPPER(ISNULL(ADDR_CITY,'')+' '+ ISNULL(CV1.DESCRIPTION,ISNULL(FOREIGN_PROVINCE,'')) +' '+ISNULL(FOREIGN_POSTAL_CODE,'')+ ','+ ISNULL(CV2.DESCRIPTION,''))))),12,40)),40)&#xD;&#xA;&#x9;&#x9;&#x9;ELSE UPPER(ISNULL(ADDR_CITY,'')) &#xD;&#xA;&#x9;&#x9;&#x9;END AS ADDR_CITY,&#xD;&#xA;    CASE&#x9;WHEN PAY1099R.ADDR_COUNTRY_VALUE IS NOT NULL AND PAY1099R.ADDR_COUNTRY_VALUE &lt;&gt; '0001' THEN REVERSE(SUBSTRING(REVERSE(LTRIM(RTRIM(UPPER(ISNULL(ADDR_CITY,'')+' '+ ISNULL(CV1.DESCRIPTION,ISNULL(FOREIGN_PROVINCE,'')) +' '+ISNULL(FOREIGN_POSTAL_CODE,'')+ ','+ ISNULL(CV2.DESCRIPTION,''))))),10,2))&#xD;&#xA;&#x9;&#x9;&#x9;ELSE UPPER(ISNULL(PAY1099R.ADDR_STATE_VALUE,'')) &#xD;&#xA;&#x9;&#x9;&#x9;END AS ADDR_STATE_VALUE,&#xD;&#xA;    CASE&#x9;WHEN PAY1099R.ADDR_COUNTRY_VALUE IS NOT NULL AND PAY1099R.ADDR_COUNTRY_VALUE &lt;&gt; '0001' THEN REVERSE(SUBSTRING(REVERSE(LTRIM(RTRIM(UPPER(ISNULL(ADDR_CITY,'')+' '+ ISNULL(CV1.DESCRIPTION,ISNULL(FOREIGN_PROVINCE,'')) +' '+ISNULL(FOREIGN_POSTAL_CODE,'')+ ','+ ISNULL(CV2.DESCRIPTION,''))))),1,9))&#xD;&#xA;&#x9;&#x9;&#x9;ELSE ISNULL(ADDR_ZIP_CODE,'') &#xD;&#xA;&#x9;&#x9;&#x9;END AS ADDR_ZIP_CODE,&#xD;&#xA;    UPPER(ISNULL(FOREIGN_PROVINCE,'')) + ' ' +ISNULL(FOREIGN_POSTAL_CODE,'') AS ADDR_LINE_3,&#xD;&#xA;    PAY1099R.FEDERAL_ID,&#xD;&#xA;    CASE&#x9;WHEN PAY1099R.ADDR_COUNTRY_VALUE IS NOT NULL AND PAY1099R.ADDR_COUNTRY_VALUE &lt;&gt; '0001' THEN REVERSE(SUBSTRING(REVERSE(LTRIM(RTRIM(UPPER(ISNULL(ADDR_CITY,'')+' '+ ISNULL(CV1.DESCRIPTION,ISNULL(FOREIGN_PROVINCE,'')) +' '+ISNULL(FOREIGN_POSTAL_CODE,'')+ ','+ ISNULL(CV2.DESCRIPTION,''))))),10,2))&#xD;&#xA;&#x9;&#x9;&#x9;ELSE UPPER(ISNULL(PAY1099R.ADDR_STATE_VALUE,'')) &#xD;&#xA;&#x9;&#x9;&#x9;END as addr_state,&#xD;&#xA;    PAY1099R.GROSS_BENEFIT_AMOUNT,&#xD;&#xA;    PAY1099R.TAXABLE_AMOUNT,&#xD;&#xA;    PAY1099R.FED_TAX_AMOUNT,PAY1099R.NON_TAXABLE_AMOUNT,&#xD;&#xA;    PAY1099R.DISTRIBUTION_CODE,&#xD;&#xA;    PAY1099R.STATE_TAX_AMOUNT,&#xD;&#xA;    PAY1099R.PAYER_STATE_NO,&#xD;&#xA;    PAY1099R.PAYEE_ACCOUNT_ID,&#xD;&#xA;    CASE WHEN PAY1099R.PERSON_ID IS NULL THEN '1'+ISNULL(ORG.FEDERAL_ID,'') ELSE '2'+ISNULL(DBO.fn_GET_DECRYPTED_TEXT(P.SSN),'') END AS RECIPIENTS_ID, &#xD;&#xA;    &#xD;&#xA;    NULL AS PAYEE_NAME, &#xD;&#xA;    NULL AS PAYEE_ADDR_LINE_1,   &#xD;&#xA;    NULL AS PAYEE_ADDR_LINE_2,&#xD;&#xA;    NULL AS PAYEE_ADDR_CITY,&#xD;&#xA;    NULL AS  PAYEE_ADDR_STATE_VALUE,&#xD;&#xA;    NULL AS PAYEE_ADDR_ZIP_CODE,&#xD;&#xA;    NULL AS PAYEE_ADDR_LINE_3,&#xD;&#xA;    PAY1099R.age59_split_flag,&#xD;&#xA;    PAY1099R.CORRECTED_FLAG,&#xD;&#xA;    PAY1099R.AGE59_SPLIT_FLAG,&#xD;&#xA;    PAY1099R.TAX_YEAR,&#xD;&#xA;    FOREIGN_PROVINCE,&#xD;&#xA;    PAY1099R.ADDR_COUNTRY_VALUE,&#xD;&#xA;    ISNULL(P.MPI_PERSON_ID,ORG.MPI_ORG_ID) AS MPI_PERSON_ID,&#xD;&#xA;&#x9;LEN(&#xD;&#xA;&#x9;CASE&#x9;WHEN PAY1099R.ADDR_COUNTRY_VALUE IS NOT NULL AND PAY1099R.ADDR_COUNTRY_VALUE &lt;&gt; '0001' THEN UPPER(ISNULL(ADDR_CITY,'')+' '+ ISNULL(CV1.DESCRIPTION,ISNULL(FOREIGN_PROVINCE,'')) +' '+ISNULL(FOREIGN_POSTAL_CODE,'')+ ','+ ISNULL(CV2.DESCRIPTION,''))&#xD;&#xA;&#x9;&#x9;&#x9;ELSE UPPER(ISNULL(ADDR_CITY,'')) &#xD;&#xA;&#x9;&#x9;&#x9;END +&#xD;&#xA;    CASE&#x9;WHEN PAY1099R.ADDR_COUNTRY_VALUE IS NOT NULL AND PAY1099R.ADDR_COUNTRY_VALUE &lt;&gt; '0001' THEN ''&#xD;&#xA;&#x9;&#x9;&#x9;ELSE UPPER(ISNULL(PAY1099R.ADDR_STATE_VALUE,'')) &#xD;&#xA;&#x9;&#x9;&#x9;END +&#xD;&#xA;    CASE&#x9;WHEN PAY1099R.ADDR_COUNTRY_VALUE IS NOT NULL AND PAY1099R.ADDR_COUNTRY_VALUE &lt;&gt; '0001' THEN ''&#xD;&#xA;&#x9;&#x9;&#x9;ELSE ISNULL(ADDR_ZIP_CODE,'') &#xD;&#xA;&#x9;&#x9;&#x9;END&#xD;&#xA;&#x9;  ) AS ADDR_LENGTH  &#xD;&#xA;    &#xD;&#xA;FROM   SGT_PAYMENT_1099R PAY1099R WITH(NOLOCK)&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON P ON PAY1099R.PERSON_ID=P.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGT_ORGANIZATION ORG ON PAY1099R.ORG_ID=ORG.ORG_ID&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE CV1 WITH(NOLOCK) ON PAY1099R.ADDR_STATE_ID = CV1.CODE_ID AND PAY1099R.ADDR_STATE_VALUE = CV1.CODE_VALUE&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE CV2 WITH(NOLOCK) ON PAY1099R.ADDR_COUNTRY_ID = CV2.CODE_ID AND PAY1099R.ADDR_COUNTRY_VALUE = CV2.CODE_VALUE&#xD;&#xA;WHERE   PAY1099R.TAX_YEAR = @TAXYEAR AND PAY1099R.PLAN_IDENTIFIER_VALUE=@PLANIDENTIFIERVALUE AND PAY1099R.CORRECTED_FLAG = 'Y' AND PAY1099R.MODIFIED_DATE &gt;= @CORRECTION_START_DATE&#xD;&#xA;ORDER BY PAY1099R.PAYMENT_1099R_ID">
      <parameters>
        <parameter ID="@TAXYEAR" sfwDataType="int" />
        <parameter ID="@PLANIDENTIFIERVALUE" sfwDataType="string" />
        <parameter ID="@CORRECTION_START_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
  </queries>
  <attributes>
    <attribute sfwValue="payment_1099r_id" sfwType="Column" sfwKeyNo="1" sfwIsIdentity="True" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="Payment1099rId" sfwIsSequence="False" sfwCaption="ID" />
    <attribute sfwValue="payee_account_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="PayeeAccountId" sfwIsSequence="False" sfwCaption="Payee Account Id" />
    <attribute sfwValue="year_end_process_request_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="YearEndProcessRequestId" sfwIsSequence="False" sfwCaption="Year End Process Request Id" />
    <attribute sfwValue="tax_year" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="TaxYear" sfwIsSequence="False" sfwCaption="Tax Year" />
    <attribute sfwValue="corrected_flag" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="1" sfwIsNull="False" ID="CorrectedFlag" sfwIsSequence="False" sfwCaption="Corrected Flag" />
    <attribute sfwValue="total_distribution_flag" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="1" sfwIsNull="True" ID="TotalDistributionFlag" sfwIsSequence="False" sfwCaption="Total Distribution Flag" />
    <attribute sfwValue="distribution_code" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="char" sfwLength="2" sfwIsNull="False" ID="DistributionCode" sfwIsSequence="False" sfwCaption="Distribution Code" />
    <attribute sfwValue="old_payment_1099r_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="OldPayment1099rId" sfwIsSequence="False" sfwCaption="Old Payment 1099r Id" />
    <attribute sfwValue="dist_percentage" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="DistPercentage" sfwIsSequence="False" sfwCaption="Dist Percentage" />
    <attribute sfwValue="gross_benefit_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="GrossBenefitAmount" sfwIsSequence="False" sfwCaption="Gross Benefit Amount" />
    <attribute sfwValue="taxable_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="TaxableAmount" sfwIsSequence="False" sfwCaption="Taxable Amount" />
    <attribute sfwValue="non_taxable_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="NonTaxableAmount" sfwIsSequence="False" sfwCaption="Non Taxable Amount" />
    <attribute sfwValue="fed_tax_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="FedTaxAmount" sfwIsSequence="False" sfwCaption="Fed Tax Amount" />
    <attribute sfwValue="state_tax_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="StateTaxAmount" sfwIsSequence="False" sfwCaption="State Tax Amount" />
    <attribute sfwValue="non_taxable_beg_bal_tax_year" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="NonTaxableBegBalTaxYear" sfwIsSequence="False" sfwCaption="Non Taxable Beg Bal Tax Year" />
    <attribute sfwValue="federal_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="char" sfwLength="9" sfwIsNull="True" ID="FederalId" sfwIsSequence="False" sfwCaption="Federal Id" />
    <attribute sfwValue="person_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="PersonId" sfwIsSequence="False" sfwCaption="Person Id" />
    <attribute sfwValue="org_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="OrgId" sfwIsSequence="False" sfwCaption="Org Id" />
    <attribute sfwValue="name" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="Name" sfwIsSequence="False" sfwCaption="Name" />
    <attribute sfwValue="addr_line_1" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="60" sfwIsNull="True" ID="AddrLine1" sfwIsSequence="False" sfwCaption="Addr Line 1" />
    <attribute sfwValue="addr_line_2" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="60" sfwIsNull="True" ID="AddrLine2" sfwIsSequence="False" sfwCaption="Addr Line 2" />
    <attribute sfwValue="addr_city" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="True" ID="AddrCity" sfwIsSequence="False" sfwCaption="Addr City" />
    <attribute sfwType="Description" ID="AddrStateDescription" sfwCaption="Addr State" sfwValue="addr_state_description" />
    <attribute sfwValue="addr_state_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="AddrStateId" sfwCodeID="150" sfwIsSequence="False" sfwCaption="Addr State" />
    <attribute sfwValue="addr_state_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="AddrStateValue" sfwIsSequence="False" sfwCaption="Addr State" />
    <attribute sfwType="Description" ID="AddrCountryDescription" sfwCaption="Addr Country" sfwValue="addr_country_description" />
    <attribute sfwValue="addr_country_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="AddrCountryId" sfwCodeID="151" sfwIsSequence="False" sfwCaption="Addr Country" />
    <attribute sfwValue="addr_country_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="AddrCountryValue" sfwIsSequence="False" sfwCaption="Addr Country" />
    <attribute sfwValue="addr_zip_code" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="5" sfwIsNull="True" ID="AddrZipCode" sfwIsSequence="False" sfwCaption="Addr Zip Code" />
    <attribute sfwValue="addr_zip_4_code" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="AddrZip4Code" sfwIsSequence="False" sfwCaption="Addr Zip 4 Code" />
    <attribute sfwValue="foreign_province" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="256" sfwIsNull="True" ID="ForeignProvince" sfwIsSequence="False" sfwCaption="Foreign Province" />
    <attribute sfwValue="foreign_postal_code" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="256" sfwIsNull="True" ID="ForeignPostalCode" sfwIsSequence="False" sfwCaption="Foreign Postal Code" />
    <attribute sfwValue="rollover_payment_flag" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="1" sfwIsNull="False" ID="RolloverPaymentFlag" sfwIsSequence="False" sfwCaption="Rollover Payment Flag" />
    <attribute sfwValue="age59_split_flag" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="1" sfwIsNull="False" ID="Age59SplitFlag" sfwIsSequence="False" sfwCaption="Age59 Split Flag" />
    <attribute sfwValue="resend_flag" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="1" sfwIsNull="True" ID="ResendFlag" sfwIsSequence="False" sfwCaption="Resend Flag" />
    <attribute sfwValue="created_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="CreatedBy" sfwIsSequence="False" sfwCaption="Created By" />
    <attribute sfwValue="created_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="CreatedDate" sfwIsSequence="False" sfwCaption="Created Date" />
    <attribute sfwValue="modified_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="ModifiedBy" sfwIsSequence="False" sfwCaption="Modified By" />
    <attribute sfwValue="modified_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="ModifiedDate" sfwIsSequence="False" sfwCaption="Modified Date" />
    <attribute sfwValue="update_seq" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="UpdateSeq" sfwIsSequence="False" sfwCaption="Update Seq" />
    <attribute sfwValue="payer_state_no" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="20" sfwIsNull="True" ID="PayerStateNo" sfwIsSequence="False" sfwCaption="Payer State No" />
    <attribute sfwValue="plan_identifier_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="20" sfwIsNull="True" ID="PlanIdentifierValue" sfwIsSequence="False" sfwCaption="Plan Identifier Value" />
  </attributes>
  <constraint />
  <methods />
  <lifecycle />
  <objectmethods />
  <ExtraFields />
</entity>