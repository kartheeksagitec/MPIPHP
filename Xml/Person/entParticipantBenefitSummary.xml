<entity ID="entParticipantBenefitSummary" sfwMainCDO="icdoParticipantBenefitSummary" sfwType="BusinessRule" sfwActive="True" sfwStatus="Review" sfwObjectID="busParticipantBenefitSummary" sfwTableName="sgt_participant_benefit_summary" sfwView="False" sfwDataObjectID="doParticipantBenefitSummary">
  <queries>
    <query ID="LookUp" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from sgt_participant_benefit_summary ">
      <parameters />
    </query>
    <query ID="GetParticipantsForBenefitSummaryBatch" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="TRUNCATE TABLE  SGT_PARTICIPANT_BENEFIT_SUMMARY&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;IF @FLAG = 0&#xD;&#xA;BEGIN &#xD;&#xA; SELECT DISTINCT SP.MPI_PERSON_ID,SP.PERSON_ID,SP.SSN  &#xD;&#xA; FROM&#xD;&#xA; (&#xD;&#xA;  --select distinct h.ssn from eadb..report r&#xD;&#xA;  --inner join eadb..hours h on r.reportid = h.reportid&#xD;&#xA;  --where Convert(date,r.processdate) &gt;= Convert(date,@given_date) and &#xD;&#xA;  --r.status = 0 &#xD;&#xA;  &#xD;&#xA;  select distinct sp.SSN from [Pillars].[dbo].[MPI_WorkHistory] wh with(Nolock)&#xD;&#xA;  Inner Join OPUS.dbo.SGT_PERSON sp on wh.MPIPersonId = sp.MPI_PERSON_ID where CONVERT(date, wh.Processed) &gt;= Convert(date,@given_date) and &#xD;&#xA;  wh.HoursStatus = 0 &#xD;&#xA;  union&#xD;&#xA; -- select distinct mkey AS SSN from eadb..CPASPre95_11222011 where Convert(date,created_date) &gt;= Convert(date,@given_date)&#xD;&#xA;&#xD;&#xA; select distinct sp.SSN  AS mkey  from [Pillars].[dbo].[MPI_WorkHistory] wh with(Nolock)&#xD;&#xA;  Inner Join OPUS.dbo.SGT_PERSON sp on wh.MPIPersonId = sp.MPI_PERSON_ID where CONVERT(date, wh.LastModifiedDate) &gt;= Convert(date,@given_date) &#xD;&#xA;  union&#xD;&#xA;  --select distinct ssn from EADB.dbo.HPTransactions where CONVERT(date,datereceived) &gt;= Convert(date,@given_date)&#xD;&#xA; &#xD;&#xA; select distinct sp.SSN    from [Pillars].[dbo].[MPI_WorkHistory] wh with(Nolock)&#xD;&#xA;  Inner Join OPUS.dbo.SGT_PERSON sp on wh.MPIPersonId = sp.MPI_PERSON_ID where CONVERT(date, wh.received) &gt;= Convert(date,@given_date) &#xD;&#xA;&#xD;&#xA;  union&#xD;&#xA;  select distinct SP.SSN from SGT_PERSON sp&#xD;&#xA;  inner join SGT_PERSON_ACCOUNT spa on sp.PERSON_ID = spa.PERSON_ID and spa.PLAN_ID &lt;&gt; 9 and spa.STATUS_VALUE &lt;&gt; 'RETR'&#xD;&#xA;  inner join SGT_PERSON_ACCOUNT_ELIGIBILITY e on spa.PERSON_ACCOUNT_ID = e.PERSON_ACCOUNT_ID&#xD;&#xA;  where SP.DATE_OF_DEATH IS NULL AND Convert(date,e.MODIFIED_DATE) &gt;= Convert(date,@given_date) and e.MODIFIED_BY not like '%BATCH_78%'&#xD;&#xA;  union&#xD;&#xA;  select distinct SP.SSN from SGT_PERSON sp&#xD;&#xA;  inner join SGT_PERSON_ACCOUNT spa on sp.PERSON_ID = spa.PERSON_ID and spa.PLAN_ID not in (1,2,9) and spa.STATUS_VALUE &lt;&gt; 'RETR'&#xD;&#xA;  inner join SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION e on spa.PERSON_ACCOUNT_ID = e.PERSON_ACCOUNT_ID&#xD;&#xA;  where SP.DATE_OF_DEATH IS NULL AND Convert(date,e.MODIFIED_DATE) &gt;= Convert(date,@given_date) and e.MODIFIED_BY not like '%BATCH_78%'&#xD;&#xA; )EA_HOURS&#xD;&#xA; INNER JOIN SGT_PERSON SP ON SP.SSN = EA_HOURS.SSN&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT SPA ON SP.PERSON_ID = SPA.PERSON_ID&#xD;&#xA; WHERE SPA.PLAN_ID &lt;&gt; 9 AND SPA.PERSON_ID IS NOT NULL &#xD;&#xA;END&#xD;&#xA;ELSE&#xD;&#xA;BEGIN&#xD;&#xA; SELECT DISTINCT SP.MPI_PERSON_ID,SP.PERSON_ID,SP.SSN  &#xD;&#xA; FROM SGT_PERSON SP&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT SPA ON SP.PERSON_ID = SPA.PERSON_ID AND SPA.PLAN_ID &lt;&gt; 9&#xD;&#xA; WHERE SPA.PERSON_ID IS NOT NULL  and SP.SSN IN (SELECT SSN FROM TEMP_TABLE_FOR_ANNUAL_BATCHES)&#xD;&#xA;END">
      <parameters>
        <parameter ID="@given_date" sfwDataType="DateTime" />
        <parameter ID="@FLAG" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LastBatchProcessedDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT TOP 1 * FROM SGT_PARTICIPANT_BENEFIT_SUMMARY_BATCH_RUN_DETAIL &#xD;&#xA;WHERE BATCH_STATUS_FLAG = 'Y' and IMPORT_STATUS_FLAG = 'Y'&#xD;&#xA;ORDER BY LAST_RUN_DATE DESC&#xD;&#xA;&#xD;&#xA;">
      <parameters />
    </query>
    <query ID="GetOPUSChangesForSummaryBatch" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @LASTPAYMENTDATE DATETIME&#xD;&#xA;DECLARE @PAYMENTDATE DATETIME&#xD;&#xA;&#xD;&#xA;-- Get Last Payment Date&#xD;&#xA;SELECT TOP 1 @LASTPAYMENTDATE = SPS.PAYMENT_DATE&#xD;&#xA;FROM SGT_PAYMENT_SCHEDULE SPS WITH(NOLOCK)&#xD;&#xA;WHERE SCHEDULE_TYPE_VALUE = 'MTLY' AND STATUS_VALUE = 'PRCD'&#xD;&#xA;ORDER BY SPS.PAYMENT_DATE DESC&#xD;&#xA;&#xD;&#xA;-- Set next benefit payment date&#xD;&#xA;SET @PAYMENTDATE = DATEADD(M,1,@LASTPAYMENTDATE)&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PARTICIPANT_BENEFIT_SUMMARY&#xD;&#xA;SELECT DATA.PERSON_ID, DATA.MPI_PERSON_ID, DATA.PLAN_ID, PL.PLAN_NAME AS PLAN_NAME, CS.DESCRIPTION AS PLAN_STATUS, 0 AS PENSION_HOURS, 0 AS QUALIFIED_YEARS&#xD;&#xA;,CASE WHEN DATA.PLAN_ID &lt;&gt; 1 THEN '0' ELSE 'n/a' END AS PENSION_CREDIT&#xD;&#xA;,NULL AS VESTED_DATE&#xD;&#xA;,CASE WHEN DATA.PLAN_ID = 2 THEN '0' ELSE 'n/a' END AS HEALTH_HOURS&#xD;&#xA;,CASE WHEN DATA.PLAN_ID = 2 THEN '0' ELSE 'n/a' END AS HEALTH_YEARS&#xD;&#xA;,CASE WHEN DATA.PLAN_ID &lt;&gt; 1 THEN CONVERT(VARCHAR(20),SUM(ISNULL(DATA.MONTHLY_AMOUNT,0))) ELSE 'n/a' END AS MONTHLY_BENEFIT&#xD;&#xA;,CASE WHEN DATA.PLAN_ID IN (1,7,8) THEN CONVERT(VARCHAR(20),SUM(ISNULL(DATA.IAP_BALANCE_AMOUNT,0) + ISNULL(DATA.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0) + ISNULL(DATA.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0))) ELSE 'n/a' END AS IAP_BALANCE&#xD;&#xA;,CASE WHEN DATA.PLAN_ID IN (1,7,8) THEN CONVERT(VARCHAR(20),MAX(DATA.ALLOCATION_AS_OF_YR_END)) ELSE 'n/a' END AS ALLOCATION_AS_OF_YR_END&#xD;&#xA;,1 AS UPDATE_BENEFITS, @userid AS CREATED_BY, GETDATE() AS CREATED_DATE, @userid AS MODIFIED_BY, GETDATE() AS MODIFIED_DATE, 0 AS UPDATE_SEQ&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;--If IAP Balance Amount is updated&#xD;&#xA; SELECT SP.PERSON_ID, SP.MPI_PERSON_ID, 1 AS PLAN_ID, SUM(ISNULL(RC.IAP_BALANCE_AMOUNT,0)) AS IAP_BALANCE_AMOUNT, 0 AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT, 0 AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,&#xD;&#xA; MAX(RC.COMPUTATIONAL_YEAR) AS ALLOCATION_AS_OF_YR_END,  0 AS MONTHLY_AMOUNT&#xD;&#xA; FROM SGT_PERSON SP&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT SPA ON SP.PERSON_ID = SPA.PERSON_ID&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION RC ON RC.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID&#xD;&#xA; INNER JOIN (SELECT DISTINCT PERSON_ACCOUNT_ID FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION Q &#xD;&#xA;&#x9;&#x9;&#x9; WHERE ISNULL(Q.IAP_BALANCE_AMOUNT,0) &lt;&gt; 0 AND Q.MODIFIED_DATE &gt;= @given_date) ABA ON SPA.PERSON_ACCOUNT_ID = ABA.PERSON_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PARTICIPANT_BENEFIT_SUMMARY PBS ON SP.PERSON_ID = PBS.PERSON_ID&#xD;&#xA; WHERE SPA.PLAN_ID = 1 AND SP.DATE_OF_DEATH IS NULL AND ISNULL(RC.IAP_BALANCE_AMOUNT,0) &lt;&gt; 0 AND PBS.PERSON_ID IS NULL &#xD;&#xA; GROUP BY SP.MPI_PERSON_ID,SP.PERSON_ID,SP.SSN&#xD;&#xA;&#xD;&#xA; UNION &#xD;&#xA;--If L52 Spc.Account or L52 Monthly Amount is updated&#xD;&#xA; SELECT SP.PERSON_ID, SP.MPI_PERSON_ID, 7 AS PLAN_ID, 0 AS IAP_BALANCE_AMOUNT, SUM(ISNULL(IAP.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0)) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT, 0 AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,&#xD;&#xA; MAX(IAP.COMPUTATIONAL_YEAR) AS ALLOCATION_AS_OF_YR_END,&#xD;&#xA; CASE WHEN PAL52.STATUS_VALUE = 'RETR' THEN MONTHLY.MONTHLY_AMOUNT ELSE FROZEN.LOCAL_FROZEN_BENEFIT_AMOUNT END AS MONTHLY_AMOUNT&#xD;&#xA; FROM SGT_PERSON SP&#xD;&#xA; LEFT OUTER JOIN SGT_PERSON_ACCOUNT SPA ON SP.PERSON_ID = SPA.PERSON_ID AND SPA.PLAN_ID = 1&#xD;&#xA; LEFT OUTER JOIN &#xD;&#xA; (&#x9;  SELECT rc.PERSON_ACCOUNT_ID,SUM(ISNULL(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0)) AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,MAX(COMPUTATIONAL_YEAR) AS COMPUTATIONAL_YEAR&#xD;&#xA;&#x9;  FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION RC &#xD;&#xA;&#x9;  INNER JOIN (SELECT DISTINCT PERSON_ACCOUNT_ID FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION Q WHERE ISNULL(Q.LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0) &lt;&gt; 0 AND Q.MODIFIED_DATE &gt;= @given_date) ABA ON RC.PERSON_ACCOUNT_ID = ABA.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;  WHERE ISNULL(LOCAL52_SPECIAL_ACCT_BAL_AMOUNT,0) &lt;&gt; 0&#xD;&#xA;&#x9;  GROUP BY rc.PERSON_ACCOUNT_ID&#xD;&#xA; ) IAP ON SPA.PERSON_ACCOUNT_ID = IAP.PERSON_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PERSON_ACCOUNT PAL52 ON SP.PERSON_ID = PAL52.PERSON_ID AND PAL52.PLAN_ID = 7&#xD;&#xA; LEFT OUTER JOIN&#xD;&#xA; (&#x9;  SELECT SP.PERSON_ID,&#xD;&#xA;&#x9;  ISNULL(SUM(CASE WHEN (ITEM_TYPE_DIRECTION = 1 OR ALLOW_ROLLOVER_CODE_VALUE = 'RRED') AND REISSUE_ITEMS_FLAG = 'N' THEN (SPAPIT.AMOUNT * PIT.ITEM_TYPE_DIRECTION) ELSE 0 END),0.00) AS MONTHLY_AMOUNT&#xD;&#xA;&#x9;  FROM SGT_PAYEE_ACCOUNT SPA WITH(NOLOCK)&#xD;&#xA;&#x9;  INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT SPBA WITH(NOLOCK) ON SPBA.PAYEE_BENEFIT_ACCOUNT_ID = SPA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;&#x9;  INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE SPAPIT WITH(NOLOCK) ON SPAPIT.PAYEE_ACCOUNT_ID = SPA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PIT.PAYMENT_ITEM_TYPE_ID = SPAPIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;&#x9;  INNER JOIN SGT_PLAN_BENEFIT_XR PBXR ON PBXR.PLAN_BENEFIT_ID = SPA.PLAN_BENEFIT_ID AND PBXR.PLAN_ID = 7&#xD;&#xA;&#x9;  INNER JOIN SGT_PERSON SP ON SP.PERSON_ID = SPA.PERSON_ID&#xD;&#xA;&#x9;  INNER JOIN (SELECT DISTINCT PAYEE_ACCOUNT_ID FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE Q WHERE Q.MODIFIED_DATE &gt;= @given_date) ABA ON SPA.PAYEE_ACCOUNT_ID = ABA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;  INNER JOIN SGT_PERSON_ACCOUNT PA ON PA.PERSON_ID = SP.PERSON_ID AND PA.PLAN_ID = PBXR.PLAN_ID AND PA.STATUS_VALUE = 'RETR'&#xD;&#xA;&#x9;  WHERE (SELECT TOP 1 Q.STATUS_VALUE FROM SGT_PAYEE_ACCOUNT_STATUS Q WITH(NOLOCK) WHERE Q.PAYEE_ACCOUNT_ID = SPA.PAYEE_ACCOUNT_ID ORDER BY Q.STATUS_EFFECTIVE_DATE DESC) NOT IN  ('CMPL', 'CNCL')&#xD;&#xA;&#x9;  AND ISNULL(SPA.RETIREE_INCR_FLAG,'N') = 'N' AND SP.DATE_OF_DEATH IS NULL&#xD;&#xA;&#x9;  AND SPAPIT.START_DATE &lt;= @PAYMENTDATE AND (SPAPIT.END_DATE IS NULL OR SPAPIT.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;&#x9;  AND PBXR.BENEFIT_OPTION_VALUE &lt;&gt; 'LUMP' AND SPAPIT.PAYMENT_ITEM_TYPE_ID IN (1,2)&#xD;&#xA;&#x9;  AND SPA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RTMT','DSBL') &#xD;&#xA;&#x9;  GROUP BY SP.PERSON_ID,SP.MPI_PERSON_ID,PBXR.PLAN_ID&#xD;&#xA; ) MONTHLY ON SP.PERSON_ID = MONTHLY.PERSON_ID AND PAL52.STATUS_VALUE = 'RETR'&#xD;&#xA; LEFT OUTER JOIN&#xD;&#xA; (&#x9;  SELECT SPA.PERSON_ACCOUNT_ID,SUM(ISNULL(LOCAL_FROZEN_BENEFIT_AMOUNT,0)) AS LOCAL_FROZEN_BENEFIT_AMOUNT FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION RC&#xD;&#xA;&#x9;  INNER JOIN SGT_PERSON_ACCOUNT SPA ON RC.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID AND SPA.PLAN_ID = 7&#xD;&#xA;&#x9;  WHERE ISNULL(LOCAL_FROZEN_BENEFIT_AMOUNT,0) &lt;&gt; 0 AND STATUS_VALUE &lt;&gt; 'RETR'&#xD;&#xA;&#x9;  GROUP BY SPA.PERSON_ACCOUNT_ID&#xD;&#xA; ) FROZEN ON PAL52.PERSON_ACCOUNT_ID = FROZEN.PERSON_ACCOUNT_ID AND PAL52.STATUS_VALUE &lt;&gt; 'RETR'&#xD;&#xA; LEFT OUTER JOIN SGT_PARTICIPANT_BENEFIT_SUMMARY PBS ON SP.PERSON_ID = PBS.PERSON_ID&#xD;&#xA; WHERE SP.DATE_OF_DEATH IS NULL  AND PBS.PERSON_ID IS NULL AND (IAP.PERSON_ACCOUNT_ID IS NOT NULL OR MONTHLY.PERSON_ID IS NOT NULL)&#xD;&#xA; GROUP BY SP.MPI_PERSON_ID,SP.PERSON_ID,SP.SSN,PAL52.STATUS_VALUE,MONTHLY.MONTHLY_AMOUNT , FROZEN.LOCAL_FROZEN_BENEFIT_AMOUNT&#xD;&#xA; &#xD;&#xA; UNION&#xD;&#xA;--If 161 Spc.Account or L52 Monthly Amount is updated&#xD;&#xA; SELECT SP.PERSON_ID, SP.MPI_PERSON_ID, 8 AS PLAN_ID, 0 AS IAP_BALANCE_AMOUNT, 0 AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT, SUM(ISNULL(IAP.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0)) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,&#xD;&#xA; MAX(IAP.COMPUTATIONAL_YEAR) AS ALLOCATION_AS_OF_YR_END,&#xD;&#xA; CASE WHEN PAL161.STATUS_VALUE = 'RETR' THEN MONTHLY.MONTHLY_AMOUNT ELSE FROZEN.LOCAL_FROZEN_BENEFIT_AMOUNT END AS MONTHLY_AMOUNT&#xD;&#xA; FROM SGT_PERSON SP&#xD;&#xA; LEFT OUTER JOIN SGT_PERSON_ACCOUNT SPA ON SP.PERSON_ID = SPA.PERSON_ID AND SPA.PLAN_ID = 1&#xD;&#xA; LEFT OUTER JOIN &#xD;&#xA; (&#x9;  SELECT rc.PERSON_ACCOUNT_ID,SUM(ISNULL(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0)) AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,MAX(COMPUTATIONAL_YEAR) AS COMPUTATIONAL_YEAR&#xD;&#xA;&#x9;  FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION RC &#xD;&#xA;&#x9;  INNER JOIN (SELECT DISTINCT PERSON_ACCOUNT_ID FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION Q WHERE ISNULL(Q.LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0) &lt;&gt; 0 AND Q.MODIFIED_DATE &gt;= @given_date) ABA ON RC.PERSON_ACCOUNT_ID = ABA.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;  WHERE ISNULL(LOCAL161_SPECIAL_ACCT_BAL_AMOUNT,0) &lt;&gt; 0&#xD;&#xA;&#x9;  GROUP BY rc.PERSON_ACCOUNT_ID&#xD;&#xA; ) IAP ON SPA.PERSON_ACCOUNT_ID = IAP.PERSON_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PERSON_ACCOUNT PAL161 ON SP.PERSON_ID = PAL161.PERSON_ID AND PAL161.PLAN_ID = 8&#xD;&#xA; LEFT OUTER JOIN&#xD;&#xA; (&#x9;  SELECT SP.PERSON_ID,&#xD;&#xA;&#x9;  ISNULL(SUM(CASE WHEN (ITEM_TYPE_DIRECTION = 1 OR ALLOW_ROLLOVER_CODE_VALUE = 'RRED') AND REISSUE_ITEMS_FLAG = 'N' THEN (SPAPIT.AMOUNT * PIT.ITEM_TYPE_DIRECTION) ELSE 0 END),0.00) AS MONTHLY_AMOUNT&#xD;&#xA;&#x9;  FROM SGT_PAYEE_ACCOUNT SPA WITH(NOLOCK)&#xD;&#xA;&#x9;  INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT SPBA WITH(NOLOCK) ON SPBA.PAYEE_BENEFIT_ACCOUNT_ID = SPA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;&#x9;  INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE SPAPIT WITH(NOLOCK) ON SPAPIT.PAYEE_ACCOUNT_ID = SPA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PIT.PAYMENT_ITEM_TYPE_ID = SPAPIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;&#x9;  INNER JOIN SGT_PLAN_BENEFIT_XR PBXR ON PBXR.PLAN_BENEFIT_ID = SPA.PLAN_BENEFIT_ID AND PBXR.PLAN_ID = 8&#xD;&#xA;&#x9;  INNER JOIN SGT_PERSON SP ON SP.PERSON_ID = SPA.PERSON_ID&#xD;&#xA;&#x9;  INNER JOIN (SELECT DISTINCT PAYEE_ACCOUNT_ID FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE Q WHERE Q.MODIFIED_DATE &gt;= @given_date) ABA ON SPA.PAYEE_ACCOUNT_ID = ABA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;  INNER JOIN SGT_PERSON_ACCOUNT PA ON PA.PERSON_ID = SP.PERSON_ID AND PA.PLAN_ID = PBXR.PLAN_ID AND PA.STATUS_VALUE = 'RETR'&#xD;&#xA;&#x9;  WHERE (SELECT TOP 1 Q.STATUS_VALUE FROM SGT_PAYEE_ACCOUNT_STATUS Q WITH(NOLOCK) WHERE Q.PAYEE_ACCOUNT_ID = SPA.PAYEE_ACCOUNT_ID ORDER BY Q.STATUS_EFFECTIVE_DATE DESC) NOT IN  ('CMPL', 'CNCL')&#xD;&#xA;&#x9;  AND ISNULL(SPA.RETIREE_INCR_FLAG,'N') = 'N' AND SP.DATE_OF_DEATH IS NULL&#xD;&#xA;&#x9;  AND SPAPIT.START_DATE &lt;= @PAYMENTDATE AND (SPAPIT.END_DATE IS NULL OR SPAPIT.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;&#x9;  AND PBXR.BENEFIT_OPTION_VALUE &lt;&gt; 'LUMP' AND SPAPIT.PAYMENT_ITEM_TYPE_ID IN (1,2)&#xD;&#xA;&#x9;  AND SPA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RTMT','DSBL') &#xD;&#xA;&#x9;  GROUP BY SP.PERSON_ID,SP.MPI_PERSON_ID,PBXR.PLAN_ID&#xD;&#xA; ) MONTHLY ON SP.PERSON_ID = MONTHLY.PERSON_ID AND PAL161.STATUS_VALUE = 'RETR'&#xD;&#xA; LEFT OUTER JOIN&#xD;&#xA; (&#x9;  SELECT SPA.PERSON_ACCOUNT_ID,SUM(ISNULL(LOCAL_FROZEN_BENEFIT_AMOUNT,0)) AS LOCAL_FROZEN_BENEFIT_AMOUNT FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION RC&#xD;&#xA;&#x9;  INNER JOIN SGT_PERSON_ACCOUNT SPA ON RC.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID AND SPA.PLAN_ID = 8&#xD;&#xA;&#x9;  WHERE ISNULL(LOCAL_FROZEN_BENEFIT_AMOUNT,0) &lt;&gt; 0 AND STATUS_VALUE &lt;&gt; 'RETR'&#xD;&#xA;&#x9;  GROUP BY SPA.PERSON_ACCOUNT_ID&#xD;&#xA; ) FROZEN ON PAL161.PERSON_ACCOUNT_ID = FROZEN.PERSON_ACCOUNT_ID AND PAL161.STATUS_VALUE &lt;&gt; 'RETR'&#xD;&#xA; LEFT OUTER JOIN SGT_PARTICIPANT_BENEFIT_SUMMARY PBS ON SP.PERSON_ID = PBS.PERSON_ID&#xD;&#xA; WHERE SP.DATE_OF_DEATH IS NULL  AND PBS.PERSON_ID IS NULL AND (IAP.PERSON_ACCOUNT_ID IS NOT NULL OR MONTHLY.PERSON_ID IS NOT NULL)&#xD;&#xA; GROUP BY SP.MPI_PERSON_ID,SP.PERSON_ID,SP.SSN,PAL161.STATUS_VALUE,MONTHLY.MONTHLY_AMOUNT , FROZEN.LOCAL_FROZEN_BENEFIT_AMOUNT&#xD;&#xA;&#xD;&#xA; UNION &#xD;&#xA; --If Monthly Amount is updated for MPI or Local other than 52 and 161.&#xD;&#xA;&#x9; SELECT SP.PERSON_ID, SP.MPI_PERSON_ID, PBXR.PLAN_ID AS PLAN_ID, 0 AS IAP_BALANCE_AMOUNT, 0 AS LOCAL52_SPECIAL_ACCT_BAL_AMOUNT, 0 AS LOCAL161_SPECIAL_ACCT_BAL_AMOUNT, 0 AS ALLOCATION_AS_OF_YR_END,&#xD;&#xA;&#x9;&#x9;ISNULL(SUM(CASE WHEN (ITEM_TYPE_DIRECTION = 1 OR ALLOW_ROLLOVER_CODE_VALUE = 'RRED') AND REISSUE_ITEMS_FLAG = 'N' THEN (SPAPIT.AMOUNT * PIT.ITEM_TYPE_DIRECTION) ELSE 0 END),0.00) AS MONTHLY_AMOUNT&#xD;&#xA;&#x9; FROM SGT_PAYEE_ACCOUNT SPA WITH(NOLOCK)&#xD;&#xA;&#x9; INNER JOIN SGT_PAYEE_BENEFIT_ACCOUNT SPBA WITH(NOLOCK) ON SPBA.PAYEE_BENEFIT_ACCOUNT_ID = SPA.PAYEE_BENEFIT_ACCOUNT_ID&#xD;&#xA;&#x9; INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE SPAPIT WITH(NOLOCK) ON SPAPIT.PAYEE_ACCOUNT_ID = SPA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PIT.PAYMENT_ITEM_TYPE_ID = SPAPIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;&#x9; INNER JOIN SGT_PLAN_BENEFIT_XR PBXR ON PBXR.PLAN_BENEFIT_ID = SPA.PLAN_BENEFIT_ID AND PBXR.PLAN_ID NOT IN (1,7,8)&#xD;&#xA;&#x9; INNER JOIN SGT_PERSON SP ON SP.PERSON_ID = SPA.PERSON_ID&#xD;&#xA;&#x9; INNER JOIN (SELECT DISTINCT PAYEE_ACCOUNT_ID FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE Q WHERE Q.MODIFIED_DATE &gt;= @given_date) ABA ON SPA.PAYEE_ACCOUNT_ID = ABA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9; LEFT OUTER JOIN SGT_PARTICIPANT_BENEFIT_SUMMARY PBS ON SP.PERSON_ID = PBS.PERSON_ID&#xD;&#xA;&#x9; WHERE (SELECT TOP 1 Q.STATUS_VALUE FROM SGT_PAYEE_ACCOUNT_STATUS Q WITH(NOLOCK) WHERE Q.PAYEE_ACCOUNT_ID = SPA.PAYEE_ACCOUNT_ID ORDER BY Q.STATUS_EFFECTIVE_DATE DESC) NOT IN  ('CMPL', 'CNCL')&#xD;&#xA;&#x9; AND ISNULL(SPA.RETIREE_INCR_FLAG,'N') = 'N' AND PBS.PERSON_ID IS NULL AND SP.DATE_OF_DEATH IS NULL&#xD;&#xA;&#x9; AND SPAPIT.START_DATE &lt;= @PAYMENTDATE AND (SPAPIT.END_DATE IS NULL OR SPAPIT.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;     AND PBXR.BENEFIT_OPTION_VALUE &lt;&gt; 'LUMP' AND SPAPIT.PAYMENT_ITEM_TYPE_ID IN (1,2)&#xD;&#xA;&#x9; AND SPA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RTMT','DSBL')&#xD;&#xA;&#x9; GROUP BY SP.PERSON_ID,SP.MPI_PERSON_ID,PBXR.PLAN_ID&#xD;&#xA;) DATA&#xD;&#xA;INNER JOIN SGT_PLAN PL ON PL.PLAN_ID = DATA.PLAN_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT SPA ON SPA.PERSON_ID = DATA.PERSON_ID AND SPA.PLAN_ID = DATA.PLAN_ID&#xD;&#xA;INNER JOIN SGS_CODE_VALUE CS ON CS.CODE_ID = SPA.STATUS_ID AND CS.CODE_VALUE = SPA.STATUS_VALUE &#xD;&#xA;GROUP BY  DATA.PERSON_ID, DATA.MPI_PERSON_ID, DATA.PLAN_ID, PL.PLAN_NAME, CS.DESCRIPTION&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT COUNT(DISTINCT PERSON_ID) FROM SGT_PARTICIPANT_BENEFIT_SUMMARY WHERE UPDATE_BENEFIT=1">
      <parameters>
        <parameter ID="@userid" sfwDataType="string" />
        <parameter ID="@given_date" sfwDataType="DateTime" />
      </parameters>
    </query>
  </queries>
  <attributes>
    <attribute sfwValue="participant_benefit_summary_id" sfwType="Column" sfwKeyNo="1" sfwIsIdentity="True" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="ParticipantBenefitSummaryId" sfwCaption="ID" />
    <attribute sfwValue="person_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="PersonId" sfwCaption="Person Id" />
    <attribute sfwValue="mpi_person_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="10" sfwIsNull="False" ID="MpiPersonId" sfwCaption="Mpi Person Id" />
    <attribute sfwValue="plan_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="PlanId" sfwCaption="Plan Id" />
    <attribute sfwValue="plan_name" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="True" ID="PlanName" sfwCaption="Plan Name" />
    <attribute sfwValue="plan_status" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="10" sfwIsNull="True" ID="PlanStatus" sfwCaption="Plan Status" />
    <attribute sfwValue="pension_hours" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="numeric" sfwLength="11,2" sfwIsNull="True" ID="PensionHours" sfwCaption="Pension Hours" />
    <attribute sfwValue="qualified_years" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="QualifiedYears" sfwCaption="Qualified Years" />
    <attribute sfwValue="pension_credit" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="True" ID="PensionCredit" sfwCaption="Pension Credit" />
    <attribute sfwValue="vested_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="VestedDate" sfwCaption="Vested Date" />
    <attribute sfwValue="health_hours" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="True" ID="HealthHours" sfwCaption="Health Hours" />
    <attribute sfwValue="health_years" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="True" ID="HealthYears" sfwCaption="Health Years" />
    <attribute sfwValue="monthly_benefit" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="True" ID="MonthlyBenefit" sfwCaption="Monthly Benefit" />
    <attribute sfwValue="iap_balance" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="True" ID="IapBalance" sfwCaption="Iap Balance" />
    <attribute sfwValue="allocation_as_of_yr_end" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="True" ID="AllocationAsOfYrEnd" sfwCaption="Allocation As Of Yr End" />
    <attribute sfwValue="update_benefit" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="UpdateBenefit" sfwCaption="Update Benefit" />
    <attribute sfwValue="created_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="CreatedBy" sfwCaption="Created By" />
    <attribute sfwValue="created_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="CreatedDate" sfwCaption="Created Date" />
    <attribute sfwValue="modified_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="ModifiedBy" sfwCaption="Modified By" />
    <attribute sfwValue="modified_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="ModifiedDate" sfwCaption="Modified Date" />
    <attribute sfwValue="update_seq" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="UpdateSeq" sfwCaption="Update Seq" />
  </attributes>
  <constraint />
  <rules />
  <initialload />
  <softerror />
  <harderror />
  <validatedelete />
  <delete />
  <groupslist />
  <checklist />
  <methods />
  <lifecycle />
  <objectmethods />
  <ExtraFields />
</entity>